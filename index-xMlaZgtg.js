var Gr=Object.defineProperty;var Wr=(Q,se,de)=>se in Q?Gr(Q,se,{enumerable:!0,configurable:!0,writable:!0,value:de}):Q[se]=de;var N=(Q,se,de)=>(Wr(Q,typeof se!="symbol"?se+"":se,de),de),yr=(Q,se,de)=>{if(!se.has(Q))throw TypeError("Cannot "+de)};var B=(Q,se,de)=>(yr(Q,se,"read from private field"),de?de.call(Q):se.get(Q)),G=(Q,se,de)=>{if(se.has(Q))throw TypeError("Cannot add the same private member more than once");se instanceof WeakSet?se.add(Q):se.set(Q,de)},W=(Q,se,de,Dt)=>(yr(Q,se,"write to private field"),Dt?Dt.call(Q,de):se.set(Q,de),de);var Ot=(Q,se,de,Dt)=>({set _(gr){W(Q,se,gr,de)},get _(){return B(Q,se,Dt)}}),pe=(Q,se,de)=>(yr(Q,se,"access private method"),de);import{r as requireCryptoBrowserify,b as browser$1$1,a as require$$0,p as pDefer$1,g as getDefaultExportFromCjs,c as pushable,d as pushableV,e as commonjsGlobal,f as commonjsRequire,i as isElectron_1,T as Type$3,h as encodeErrPrefix$3,j as fromString$x,k as asU8A$3,l as encodeCustom$3,m as decode$2t,n as decodeErrPrefix$3,o as Token$3,q as decodeCodePointsArray$3,s as encode$1T,t as decode$2u,u as toString$D,v as fromString$y,w as timeoutAbortController,x as getAugmentedNamespace,P as PQueue$1,y as equals$R,z as concat$8,A as enumeration$2,B as message$2,C as encodeMessage$2,D as decodeMessage$3,E as forge$6,F as code$j,G as EventEmitter$3,H as global,I as compare$4,L as Level,J as allocUnsafe$g,K as forgePbkdf2,M as forgeUtil,N as dagCBOR,O as asUint8Array$9,Q as eventsExports,R as retimer,S as forge$7,U as isBrowser$2,V as isNode,W as isElectronMain,X as isWebWorker$1,Y as isElectronRenderer,Z as isReactNative$2,_ as requireBrowser$1,$ as __vitePreload,__tla as __tla_0}from"./index-wr59-EDT.js";import{d as debug$1,__tla as __tla_1}from"./browser-PGHVSA1T.js";let AbortError$b,CustomEvent,EventEmitter$1,P2PWebRTCDirect,Uint8ArrayList,WebRTCInitiator,abortableSource$7,getProtocol$9,lookup,WebRTCReceiver,errcode,symbol,globalFetch,P2PWebRTCStar,isName$1,symbol$6,index,logger$3,multiaddr$9,noise,peerIdFromString$1,randomBytes$2,symbol$7,webSockets,__tla=Promise.all([(()=>{try{return __tla_0}catch{}})(),(()=>{try{return __tla_1}catch{}})()]).then(async()=>{var Q,se,de,Dt,gr,xr,Et,lt,zt,Ht,Lr,st,Br,Ur,wt,dt,Kt,qt,Fr,it,rt,_t,vt,ht,Gt,St,Wt,et,Ct,Je,Xt,tt,Tt,at,Yt,sr,Tr,ir,Ar,ar,Rr,cr,Ir,ur,Pr,At,hr,Qt,mr,Zt,Dr,Rt,pr,lr,kr,It,fr,jr,nt,Er,Vr,zr,Pt,ft,Jt,er,Hr,ut,Kr,kt,gt,tr,rr,qr,ot,yt,$t;function _mergeNamespaces(t,e){for(var r=0;r<e.length;r++){const n=e[r];if(typeof n!="string"&&!Array.isArray(n)){for(const o in n)if(o!=="default"&&!(o in t)){const a=Object.getOwnPropertyDescriptor(n,o);a&&Object.defineProperty(t,o,a.get?a:{enumerable:!0,get:()=>n[o]})}}}return Object.freeze(Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}))}let AbortError$c=(Q=class extends Error{constructor(r="The operation was aborted"){super(r);N(this,"code");N(this,"type");this.code=Q.code,this.type=Q.type}},N(Q,"code","ABORT_ERR"),N(Q,"type","aborted"),Q),CodeError$4=class extends Error{constructor(e,r,n){super(e);N(this,"code");N(this,"props");this.code=r,this.name=n?.name??"CodeError",this.props=n??{}}};function base$y(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$y=base$y,_brrp__multiformats_scope_baseX$u=src$y;const coerce$v=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")};let Encoder$y=class{constructor(t,e,r){this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$y=class{constructor(t,e,r){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$z(this,t)}},ComposedDecoder$v=class{constructor(t){this.decoders=t}or(t){return or$z(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$z=(t,e)=>new ComposedDecoder$v({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});let Codec$v=class{constructor(t,e,r,n){this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$y(t,e,r),this.decoder=new Decoder$y(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};const from$I=({name:t,prefix:e,encode:r,decode:n})=>new Codec$v(t,e,r,n),baseX$u=({prefix:t,name:e,alphabet:r})=>{const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$u(r,e);return from$I({prefix:t,name:e,encode:n,decode:a=>coerce$v(o(a))})},decode$2s=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode$1S=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648$v=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from$I({prefix:e,name:t,encode(o){return encode$1S(o,n,r)},decode(o){return decode$2s(o,n,r,t)}}),base58btc$s=baseX$u({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"});baseX$u({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});const base32$I=rfc4648$v({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5});rfc4648$v({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),rfc4648$v({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),rfc4648$v({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),rfc4648$v({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),rfc4648$v({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),rfc4648$v({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),rfc4648$v({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),rfc4648$v({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});const base64$D=rfc4648$v({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6});rfc4648$v({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),rfc4648$v({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),rfc4648$v({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),debug$1.formatters.b=t=>t==null?"undefined":base58btc$s.baseEncode(t),debug$1.formatters.t=t=>t==null?"undefined":base32$I.baseEncode(t),debug$1.formatters.m=t=>t==null?"undefined":base64$D.baseEncode(t),debug$1.formatters.p=t=>t==null?"undefined":t.toString(),debug$1.formatters.c=t=>t==null?"undefined":t.toString(),debug$1.formatters.k=t=>t==null?"undefined":t.toString(),debug$1.formatters.a=t=>t==null?"undefined":t.toString();function createDisabledLogger$2(t){const e=()=>{};return e.enabled=!1,e.color="",e.diff=0,e.log=()=>{},e.namespace=t,e.destroy=()=>!0,e.extend=()=>e,e}logger$3=function(t){let e=createDisabledLogger$2(`${t}:trace`);return debug$1.enabled(`${t}:trace`)&&debug$1.names.map(r=>r.toString()).find(r=>r.includes(":trace"))!=null&&(e=debug$1(`${t}:trace`)),Object.assign(debug$1(t),{error:debug$1(`${t}:error`),trace:e})},AbortError$b=class extends Error{constructor(t,e){super(t??"The operation was aborted"),this.type="aborted",this.code=e??"ABORT_ERR"}};function getIterator(t){if(t!=null){if(typeof t[Symbol.iterator]=="function")return t[Symbol.iterator]();if(typeof t[Symbol.asyncIterator]=="function")return t[Symbol.asyncIterator]();if(typeof t.next=="function")return t}throw new Error("argument is not an iterator or iterable")}abortableSource$7=function(t,e,r){const n=r??{},o=getIterator(t);async function*a(){let c;const u=()=>{c?.()};for(e.addEventListener("abort",u);;){let l;try{if(e.aborted){const{abortMessage:p,abortCode:g}=n;throw new AbortError$b(p,g)}const f=new Promise((p,g)=>{c=()=>{const{abortMessage:$,abortCode:_}=n;g(new AbortError$b($,_))}});l=await Promise.race([f,o.next()]),c=null}catch(f){e.removeEventListener("abort",u);const p=f.type==="aborted"&&e.aborted;if(p&&n.onAbort!=null&&n.onAbort(t),typeof o.return=="function")try{const g=o.return();g instanceof Promise&&g.catch($=>{n.onReturnError!=null&&n.onReturnError($)})}catch(g){n.onReturnError!=null&&n.onReturnError(g)}if(p&&n.returnOnAbort===!0)return;throw f}if(l.done===!0)break;yield l.value}e.removeEventListener("abort",u)}return a()};function anySignal$6(t){const e=new globalThis.AbortController;function r(){e.abort();for(const a of t)a?.removeEventListener!=null&&a.removeEventListener("abort",r)}for(const a of t){if(a?.aborted===!0){r();break}a?.addEventListener!=null&&a.addEventListener("abort",r)}function n(){for(const a of t)a?.removeEventListener!=null&&a.removeEventListener("abort",r)}const o=e.signal;return o.clear=n,o}var RateLimiterAbstract_1=class{constructor(t={}){this.points=t.points,this.duration=t.duration,this.blockDuration=t.blockDuration,this.execEvenly=t.execEvenly,this.execEvenlyMinDelayMs=t.execEvenlyMinDelayMs,this.keyPrefix=t.keyPrefix}get points(){return this._points}set points(t){this._points=t>=0?t:4}get duration(){return this._duration}set duration(t){this._duration=typeof t>"u"?1:t}get msDuration(){return this.duration*1e3}get blockDuration(){return this._blockDuration}set blockDuration(t){this._blockDuration=typeof t>"u"?0:t}get msBlockDuration(){return this.blockDuration*1e3}get execEvenly(){return this._execEvenly}set execEvenly(t){this._execEvenly=typeof t>"u"?!1:!!t}get execEvenlyMinDelayMs(){return this._execEvenlyMinDelayMs}set execEvenlyMinDelayMs(t){this._execEvenlyMinDelayMs=typeof t>"u"?Math.ceil(this.msDuration/this.points):t}get keyPrefix(){return this._keyPrefix}set keyPrefix(t){if(typeof t>"u"&&(t="rlflx"),typeof t!="string")throw new Error("keyPrefix must be string");this._keyPrefix=t}_getKeySecDuration(t={}){return t&&t.customDuration>=0?t.customDuration:this.duration}getKey(t){return this.keyPrefix.length>0?`${this.keyPrefix}:${t}`:t}parseKey(t){return t.substring(this.keyPrefix.length)}consume(){throw new Error("You have to implement the method 'consume'!")}penalty(){throw new Error("You have to implement the method 'penalty'!")}reward(){throw new Error("You have to implement the method 'reward'!")}get(){throw new Error("You have to implement the method 'get'!")}set(){throw new Error("You have to implement the method 'set'!")}block(){throw new Error("You have to implement the method 'block'!")}delete(){throw new Error("You have to implement the method 'delete'!")}},BlockedKeys_1$1=class{constructor(){this._keys={},this._addedKeysAmount=0}collectExpired(){const t=Date.now();Object.keys(this._keys).forEach(e=>{this._keys[e]<=t&&delete this._keys[e]}),this._addedKeysAmount=Object.keys(this._keys).length}add(t,e){this.addMs(t,e*1e3)}addMs(t,e){this._keys[t]=Date.now()+e,this._addedKeysAmount++,this._addedKeysAmount>999&&this.collectExpired()}msBeforeExpire(t){const e=this._keys[t];if(e&&e>=Date.now()){this.collectExpired();const r=Date.now();return e>=r?e-r:0}return 0}delete(t){t?delete this._keys[t]:Object.keys(this._keys).forEach(e=>{delete this._keys[e]})}};const BlockedKeys$1=BlockedKeys_1$1;var BlockedKeys_1=BlockedKeys$1,RateLimiterRes_1=class{constructor(t,e,r,n){this.remainingPoints=typeof t>"u"?0:t,this.msBeforeNext=typeof e>"u"?0:e,this.consumedPoints=typeof r>"u"?0:r,this.isFirstInDuration=typeof n>"u"?!1:n}get msBeforeNext(){return this._msBeforeNext}set msBeforeNext(t){return this._msBeforeNext=t,this}get remainingPoints(){return this._remainingPoints}set remainingPoints(t){return this._remainingPoints=t,this}get consumedPoints(){return this._consumedPoints}set consumedPoints(t){return this._consumedPoints=t,this}get isFirstInDuration(){return this._isFirstInDuration}set isFirstInDuration(t){this._isFirstInDuration=!!t}_getDecoratedProperties(){return{remainingPoints:this.remainingPoints,msBeforeNext:this.msBeforeNext,consumedPoints:this.consumedPoints,isFirstInDuration:this.isFirstInDuration}}[Symbol.for("nodejs.util.inspect.custom")](){return this._getDecoratedProperties()}toString(){return JSON.stringify(this._getDecoratedProperties())}toJSON(){return this._getDecoratedProperties()}};const RateLimiterAbstract$3=RateLimiterAbstract_1,BlockedKeys=BlockedKeys_1,RateLimiterRes$b=RateLimiterRes_1;var RateLimiterStoreAbstract_1=class extends RateLimiterAbstract$3{constructor(t={}){super(t),this.inMemoryBlockOnConsumed=t.inMemoryBlockOnConsumed||t.inmemoryBlockOnConsumed,this.inMemoryBlockDuration=t.inMemoryBlockDuration||t.inmemoryBlockDuration,this.insuranceLimiter=t.insuranceLimiter,this._inMemoryBlockedKeys=new BlockedKeys}get client(){return this._client}set client(t){if(typeof t>"u")throw new Error("storeClient is not set");this._client=t}_afterConsume(t,e,r,n,o,a={}){const c=this._getRateLimiterRes(r,n,o);if(this.inMemoryBlockOnConsumed>0&&!(this.inMemoryBlockDuration>0)&&c.consumedPoints>=this.inMemoryBlockOnConsumed)return this._inMemoryBlockedKeys.addMs(r,c.msBeforeNext),c.consumedPoints>this.points?e(c):t(c);if(c.consumedPoints>this.points){let u=Promise.resolve();this.blockDuration>0&&c.consumedPoints<=this.points+n&&(c.msBeforeNext=this.msBlockDuration,u=this._block(r,c.consumedPoints,this.msBlockDuration,a)),this.inMemoryBlockOnConsumed>0&&c.consumedPoints>=this.inMemoryBlockOnConsumed&&(this._inMemoryBlockedKeys.add(r,this.inMemoryBlockDuration),c.msBeforeNext=this.msInMemoryBlockDuration),u.then(()=>{e(c)}).catch(l=>{e(l)})}else if(this.execEvenly&&c.msBeforeNext>0&&!c.isFirstInDuration){let u=Math.ceil(c.msBeforeNext/(c.remainingPoints+2));u<this.execEvenlyMinDelayMs&&(u=c.consumedPoints*this.execEvenlyMinDelayMs),setTimeout(t,u,c)}else t(c)}_handleError(t,e,r,n,o,a=!1,c={}){this.insuranceLimiter instanceof RateLimiterAbstract$3?this.insuranceLimiter[e](o,a,c).then(u=>{r(u)}).catch(u=>{n(u)}):n(t)}get _inmemoryBlockedKeys(){return this._inMemoryBlockedKeys}getInmemoryBlockMsBeforeExpire(t){return this.getInMemoryBlockMsBeforeExpire(t)}get inmemoryBlockOnConsumed(){return this.inMemoryBlockOnConsumed}set inmemoryBlockOnConsumed(t){this.inMemoryBlockOnConsumed=t}get inmemoryBlockDuration(){return this.inMemoryBlockDuration}set inmemoryBlockDuration(t){this.inMemoryBlockDuration=t}get msInmemoryBlockDuration(){return this.inMemoryBlockDuration*1e3}getInMemoryBlockMsBeforeExpire(t){return this.inMemoryBlockOnConsumed>0?this._inMemoryBlockedKeys.msBeforeExpire(t):0}get inMemoryBlockOnConsumed(){return this._inMemoryBlockOnConsumed}set inMemoryBlockOnConsumed(t){if(this._inMemoryBlockOnConsumed=t?parseInt(t):0,this.inMemoryBlockOnConsumed>0&&this.points>this.inMemoryBlockOnConsumed)throw new Error('inMemoryBlockOnConsumed option must be greater or equal "points" option')}get inMemoryBlockDuration(){return this._inMemoryBlockDuration}set inMemoryBlockDuration(t){if(this._inMemoryBlockDuration=t?parseInt(t):0,this.inMemoryBlockDuration>0&&this.inMemoryBlockOnConsumed===0)throw new Error("inMemoryBlockOnConsumed option must be set up")}get msInMemoryBlockDuration(){return this._inMemoryBlockDuration*1e3}get insuranceLimiter(){return this._insuranceLimiter}set insuranceLimiter(t){if(typeof t<"u"&&!(t instanceof RateLimiterAbstract$3))throw new Error("insuranceLimiter must be instance of RateLimiterAbstract");this._insuranceLimiter=t,this._insuranceLimiter&&(this._insuranceLimiter.blockDuration=this.blockDuration,this._insuranceLimiter.execEvenly=this.execEvenly)}block(t,e,r={}){const n=e*1e3;return this._block(this.getKey(t),this.points+1,n,r)}set(t,e,r,n={}){const o=(r>=0?r:this.duration)*1e3;return this._block(this.getKey(t),e,o,n)}consume(t,e=1,r={}){return new Promise((n,o)=>{const a=this.getKey(t),c=this.getInMemoryBlockMsBeforeExpire(a);if(c>0)return o(new RateLimiterRes$b(0,c));this._upsert(a,e,this._getKeySecDuration(r)*1e3,!1,r).then(u=>{this._afterConsume(n,o,a,e,u)}).catch(u=>{this._handleError(u,"consume",n,o,t,e,r)})})}penalty(t,e=1,r={}){const n=this.getKey(t);return new Promise((o,a)=>{this._upsert(n,e,this._getKeySecDuration(r)*1e3,!1,r).then(c=>{o(this._getRateLimiterRes(n,e,c))}).catch(c=>{this._handleError(c,"penalty",o,a,t,e,r)})})}reward(t,e=1,r={}){const n=this.getKey(t);return new Promise((o,a)=>{this._upsert(n,-e,this._getKeySecDuration(r)*1e3,!1,r).then(c=>{o(this._getRateLimiterRes(n,-e,c))}).catch(c=>{this._handleError(c,"reward",o,a,t,e,r)})})}get(t,e={}){const r=this.getKey(t);return new Promise((n,o)=>{this._get(r,e).then(a=>{n(a===null||typeof a>"u"?null:this._getRateLimiterRes(r,0,a))}).catch(a=>{this._handleError(a,"get",n,o,t,e)})})}delete(t,e={}){const r=this.getKey(t);return new Promise((n,o)=>{this._delete(r,e).then(a=>{this._inMemoryBlockedKeys.delete(r),n(a)}).catch(a=>{this._handleError(a,"delete",n,o,t,e)})})}deleteInMemoryBlockedAll(){this._inMemoryBlockedKeys.delete()}_getRateLimiterRes(t,e,r){throw new Error("You have to implement the method '_getRateLimiterRes'!")}_block(t,e,r,n={}){return new Promise((o,a)=>{this._upsert(t,e,r,!0,n).then(()=>{o(new RateLimiterRes$b(0,r>0?r:-1,e))}).catch(c=>{this._handleError(c,"block",o,a,this.parseKey(t),r/1e3,n)})})}_get(t,e={}){throw new Error("You have to implement the method '_get'!")}_delete(t,e={}){throw new Error("You have to implement the method '_delete'!")}_upsert(t,e,r,n=!1,o={}){throw new Error("You have to implement the method '_upsert'!")}};const RateLimiterStoreAbstract$4=RateLimiterStoreAbstract_1,RateLimiterRes$a=RateLimiterRes_1,incrTtlLuaScript="redis.call('set', KEYS[1], 0, 'EX', ARGV[2], 'NX') local consumed = redis.call('incrby', KEYS[1], ARGV[1]) local ttl = redis.call('pttl', KEYS[1]) if ttl == -1 then   redis.call('expire', KEYS[1], ARGV[2])   ttl = 1000 * ARGV[2] end return {consumed, ttl} ";let RateLimiterRedis$1=class extends RateLimiterStoreAbstract$4{constructor(t){super(t),t.redis?this.client=t.redis:this.client=t.storeClient,this._rejectIfRedisNotReady=!!t.rejectIfRedisNotReady,typeof this.client.defineCommand=="function"&&this.client.defineCommand("rlflxIncr",{numberOfKeys:1,lua:incrTtlLuaScript})}_isRedisReady(){return this._rejectIfRedisNotReady?!(this.client.status&&this.client.status!=="ready"||typeof this.client.isReady=="function"&&!this.client.isReady()):!0}_getRateLimiterRes(t,e,r){let[n,o]=r;Array.isArray(n)&&([,n]=n,[,o]=o);const a=new RateLimiterRes$a;return a.consumedPoints=parseInt(n),a.isFirstInDuration=a.consumedPoints===e,a.remainingPoints=Math.max(this.points-a.consumedPoints,0),a.msBeforeNext=o,a}_upsert(t,e,r,n=!1){return new Promise((o,a)=>{if(!this._isRedisReady())return a(new Error("Redis connection is not ready"));const c=Math.floor(r/1e3),u=this.client.multi();if(n)c>0?u.set(t,e,"EX",c):u.set(t,e),u.pttl(t).exec((l,f)=>l?a(l):o(f));else if(c>0){const l=function(f,p){return f?a(f):o(p)};typeof this.client.rlflxIncr=="function"?this.client.rlflxIncr(t,e,c,l):this.client.eval(incrTtlLuaScript,1,t,e,c,l)}else u.incrby(t,e).pttl(t).exec((l,f)=>l?a(l):o(f))})}_get(t){return new Promise((e,r)=>{if(!this._isRedisReady())return r(new Error("Redis connection is not ready"));this.client.multi().get(t).pttl(t).exec((n,o)=>{if(n)r(n);else{const[a]=o;if(a===null)return e(null);e(o)}})})}_delete(t){return new Promise((e,r)=>{this.client.del(t,(n,o)=>{n?r(n):e(o>0)})})}};var RateLimiterRedis_1=RateLimiterRedis$1;const RateLimiterStoreAbstract$3=RateLimiterStoreAbstract_1,RateLimiterRes$9=RateLimiterRes_1;function getDriverVersion(t){try{const e=t.client?t.client:t,{version:r}=e.topology.s.options.metadata.driver,n=r.split(".").map(o=>parseInt(o));return{major:n[0],feature:n[1],patch:n[2]}}catch{return{major:0,feature:0,patch:0}}}let RateLimiterMongo$1=class _r extends RateLimiterStoreAbstract$3{constructor(e){super(e),this.dbName=e.dbName,this.tableName=e.tableName,this.indexKeyPrefix=e.indexKeyPrefix,e.mongo?this.client=e.mongo:this.client=e.storeClient,typeof this.client.then=="function"?this.client.then(r=>{this.client=r,this._initCollection(),this._driverVersion=getDriverVersion(this.client)}):(this._initCollection(),this._driverVersion=getDriverVersion(this.client))}get dbName(){return this._dbName}set dbName(e){this._dbName=typeof e>"u"?_r.getDbName():e}static getDbName(){return"node-rate-limiter-flexible"}get tableName(){return this._tableName}set tableName(e){this._tableName=typeof e>"u"?this.keyPrefix:e}get client(){return this._client}set client(e){if(typeof e>"u")throw new Error("mongo is not set");this._client=e}get indexKeyPrefix(){return this._indexKeyPrefix}set indexKeyPrefix(e){this._indexKeyPrefix=e||{}}_initCollection(){const e=(typeof this.client.db=="function"?this.client.db(this.dbName):this.client).collection(this.tableName);e.createIndex({expire:-1},{expireAfterSeconds:0}),e.createIndex(Object.assign({},this.indexKeyPrefix,{key:1}),{unique:!0}),this._collection=e}_getRateLimiterRes(e,r,n){const o=new RateLimiterRes$9;let a;return typeof n.value>"u"?a=n:a=n.value,o.isFirstInDuration=a.points===r,o.consumedPoints=a.points,o.remainingPoints=Math.max(this.points-o.consumedPoints,0),o.msBeforeNext=a.expire!==null?Math.max(new Date(a.expire).getTime()-Date.now(),0):-1,o}_upsert(e,r,n,o=!1,a={}){if(!this._collection)return Promise.reject(Error("Mongo connection is not established"));const c=a.attrs||{};let u,l;o?(u={key:e},u=Object.assign(u,c),l={$set:{key:e,points:r,expire:n>0?new Date(Date.now()+n):null}},l.$set=Object.assign(l.$set,c)):(u={$or:[{expire:{$gt:new Date}},{expire:{$eq:null}}],key:e},u=Object.assign(u,c),l={$setOnInsert:{key:e,expire:n>0?new Date(Date.now()+n):null},$inc:{points:r}},l.$setOnInsert=Object.assign(l.$setOnInsert,c));const f={upsert:!0};return this._driverVersion.major>=4||this._driverVersion.major===3&&this._driverVersion.feature>=7||this._driverVersion.feature>=6&&this._driverVersion.patch>=7?f.returnDocument="after":f.returnOriginal=!1,new Promise((p,g)=>{this._collection.findOneAndUpdate(u,l,f).then($=>{p($)}).catch($=>{if($&&$.code===11e3){const _=Object.assign({$or:[{expire:{$lte:new Date}},{expire:{$eq:null}}],key:e},c),b={$set:Object.assign({key:e,points:r,expire:n>0?new Date(Date.now()+n):null},c)};this._collection.findOneAndUpdate(_,b,f).then(D=>{p(D)}).catch(D=>{D&&D.code===11e3?this._upsert(e,r,n,o).then(v=>p(v)).catch(v=>g(v)):g(D)})}else g($)})})}_get(e,r={}){if(!this._collection)return Promise.reject(Error("Mongo connection is not established"));const n=r.attrs||{},o=Object.assign({key:e,$or:[{expire:{$gt:new Date}},{expire:{$eq:null}}]},n);return this._collection.findOne(o)}_delete(e,r={}){if(!this._collection)return Promise.reject(Error("Mongo connection is not established"));const n=r.attrs||{},o=Object.assign({key:e},n);return this._collection.deleteOne(o).then(a=>a.deletedCount>0)}};var RateLimiterMongo_1=RateLimiterMongo$1;const RateLimiterStoreAbstract$2=RateLimiterStoreAbstract_1,RateLimiterRes$8=RateLimiterRes_1;let RateLimiterMySQL$1=class extends RateLimiterStoreAbstract$2{constructor(t,e=null){super(t),this.client=t.storeClient,this.clientType=t.storeType,this.dbName=t.dbName,this.tableName=t.tableName,this.clearExpiredByTimeout=t.clearExpiredByTimeout,this.tableCreated=t.tableCreated,this.tableCreated?(this.clearExpiredByTimeout&&this._clearExpiredHourAgo(),typeof e=="function"&&e()):this._createDbAndTable().then(()=>{this.tableCreated=!0,this.clearExpiredByTimeout&&this._clearExpiredHourAgo(),typeof e=="function"&&e()}).catch(r=>{if(typeof e=="function")e(r);else throw r})}clearExpired(t){return new Promise(e=>{this._getConnection().then(r=>{r.query("DELETE FROM ??.?? WHERE expire < ?",[this.dbName,this.tableName,t],()=>{this._releaseConnection(r),e()})}).catch(()=>{e()})})}_clearExpiredHourAgo(){this._clearExpiredTimeoutId&&clearTimeout(this._clearExpiredTimeoutId),this._clearExpiredTimeoutId=setTimeout(()=>{this.clearExpired(Date.now()-36e5).then(()=>{this._clearExpiredHourAgo()})},3e5),this._clearExpiredTimeoutId.unref()}_getConnection(){switch(this.clientType){case"pool":return new Promise((t,e)=>{this.client.getConnection((r,n)=>{if(r)return e(r);t(n)})});case"sequelize":return this.client.connectionManager.getConnection();case"knex":return this.client.client.acquireConnection();default:return Promise.resolve(this.client)}}_releaseConnection(t){switch(this.clientType){case"pool":return t.release();case"sequelize":return this.client.connectionManager.releaseConnection(t);case"knex":return this.client.client.releaseConnection(t);default:return!0}}_createDbAndTable(){return new Promise((t,e)=>{this._getConnection().then(r=>{r.query(`CREATE DATABASE IF NOT EXISTS \`${this.dbName}\`;`,n=>{if(n)return this._releaseConnection(r),e(n);r.query(this._getCreateTableStmt(),o=>{if(o)return this._releaseConnection(r),e(o);this._releaseConnection(r),t()})})}).catch(r=>{e(r)})})}_getCreateTableStmt(){return`CREATE TABLE IF NOT EXISTS \`${this.dbName}\`.\`${this.tableName}\` (\`key\` VARCHAR(255) CHARACTER SET utf8 NOT NULL,\`points\` INT(9) NOT NULL default 0,\`expire\` BIGINT UNSIGNED,PRIMARY KEY (\`key\`)) ENGINE = INNODB;`}get clientType(){return this._clientType}set clientType(t){if(typeof t>"u")if(this.client.constructor.name==="Connection")t="connection";else if(this.client.constructor.name==="Pool")t="pool";else if(this.client.constructor.name==="Sequelize")t="sequelize";else throw new Error("storeType is not defined");this._clientType=t.toLowerCase()}get dbName(){return this._dbName}set dbName(t){this._dbName=typeof t>"u"?"rtlmtrflx":t}get tableName(){return this._tableName}set tableName(t){this._tableName=typeof t>"u"?this.keyPrefix:t}get tableCreated(){return this._tableCreated}set tableCreated(t){this._tableCreated=typeof t>"u"?!1:!!t}get clearExpiredByTimeout(){return this._clearExpiredByTimeout}set clearExpiredByTimeout(t){this._clearExpiredByTimeout=typeof t>"u"?!0:!!t}_getRateLimiterRes(t,e,r){const n=new RateLimiterRes$8,[o]=r;return n.isFirstInDuration=e===o.points,n.consumedPoints=n.isFirstInDuration?e:o.points,n.remainingPoints=Math.max(this.points-n.consumedPoints,0),n.msBeforeNext=o.expire?Math.max(o.expire-Date.now(),0):-1,n}_upsertTransaction(t,e,r,n,o){return new Promise((a,c)=>{t.query("BEGIN",u=>{if(u)return t.rollback(),c(u);const l=Date.now(),f=n>0?l+n:null;let p,g;o?(p=`INSERT INTO ??.?? VALUES (?, ?, ?)
          ON DUPLICATE KEY UPDATE 
            points = ?, 
            expire = ?;`,g=[this.dbName,this.tableName,e,r,f,r,f]):(p=`INSERT INTO ??.?? VALUES (?, ?, ?)
          ON DUPLICATE KEY UPDATE 
            points = IF(expire <= ?, ?, points + (?)), 
            expire = IF(expire <= ?, ?, expire);`,g=[this.dbName,this.tableName,e,r,f,l,r,r,l,f]),t.query(p,g,$=>{if($)return t.rollback(),c($);t.query("SELECT points, expire FROM ??.?? WHERE `key` = ?;",[this.dbName,this.tableName,e],(_,b)=>{if(_)return t.rollback(),c(_);t.query("COMMIT",D=>{if(D)return t.rollback(),c(D);a(b)})})})})})}_upsert(t,e,r,n=!1){return this.tableCreated?new Promise((o,a)=>{this._getConnection().then(c=>{this._upsertTransaction(c,t,e,r,n).then(u=>{o(u),this._releaseConnection(c)}).catch(u=>{a(u),this._releaseConnection(c)})}).catch(c=>{a(c)})}):Promise.reject(Error("Table is not created yet"))}_get(t){return this.tableCreated?new Promise((e,r)=>{this._getConnection().then(n=>{n.query("SELECT points, expire FROM ??.?? WHERE `key` = ? AND (`expire` > ? OR `expire` IS NULL)",[this.dbName,this.tableName,t,Date.now()],(o,a)=>{o?r(o):a.length===0?e(null):e(a),this._releaseConnection(n)})}).catch(n=>{r(n)})}):Promise.reject(Error("Table is not created yet"))}_delete(t){return this.tableCreated?new Promise((e,r)=>{this._getConnection().then(n=>{n.query("DELETE FROM ??.?? WHERE `key` = ?",[this.dbName,this.tableName,t],(o,a)=>{o?r(o):e(a.affectedRows>0),this._releaseConnection(n)})}).catch(n=>{r(n)})}):Promise.reject(Error("Table is not created yet"))}};var RateLimiterMySQL_1=RateLimiterMySQL$1;const RateLimiterStoreAbstract$1=RateLimiterStoreAbstract_1,RateLimiterRes$7=RateLimiterRes_1;let RateLimiterPostgres$1=class extends RateLimiterStoreAbstract$1{constructor(t,e=null){super(t),this.client=t.storeClient,this.clientType=t.storeType,this.tableName=t.tableName,this.clearExpiredByTimeout=t.clearExpiredByTimeout,this.tableCreated=t.tableCreated,this.tableCreated?typeof e=="function"&&e():this._createTable().then(()=>{this.tableCreated=!0,this.clearExpiredByTimeout&&this._clearExpiredHourAgo(),typeof e=="function"&&e()}).catch(r=>{if(typeof e=="function")e(r);else throw r})}clearExpired(t){return new Promise(e=>{const r={name:"rlflx-clear-expired",text:`DELETE FROM ${this.tableName} WHERE expire < $1`,values:[t]};this._query(r).then(()=>{e()}).catch(()=>{e()})})}_clearExpiredHourAgo(){this._clearExpiredTimeoutId&&clearTimeout(this._clearExpiredTimeoutId),this._clearExpiredTimeoutId=setTimeout(()=>{this.clearExpired(Date.now()-36e5).then(()=>{this._clearExpiredHourAgo()})},3e5),this._clearExpiredTimeoutId.unref()}_getConnection(){switch(this.clientType){case"pool":return Promise.resolve(this.client);case"sequelize":return this.client.connectionManager.getConnection();case"knex":return this.client.client.acquireConnection();case"typeorm":return Promise.resolve(this.client.driver.master);default:return Promise.resolve(this.client)}}_releaseConnection(t){switch(this.clientType){case"pool":return!0;case"sequelize":return this.client.connectionManager.releaseConnection(t);case"knex":return this.client.client.releaseConnection(t);case"typeorm":return!0;default:return!0}}_createTable(){return new Promise((t,e)=>{this._query({text:this._getCreateTableStmt()}).then(()=>{t()}).catch(r=>{r.code==="23505"?t():e(r)})})}_getCreateTableStmt(){return`CREATE TABLE IF NOT EXISTS ${this.tableName} ( 
      key varchar(255) PRIMARY KEY,
      points integer NOT NULL DEFAULT 0,
      expire bigint
    );`}get clientType(){return this._clientType}set clientType(t){const e=this.client.constructor.name;if(typeof t>"u")if(e==="Client")t="client";else if(e==="Pool"||e==="BoundPool")t="pool";else if(e==="Sequelize")t="sequelize";else throw new Error("storeType is not defined");this._clientType=t.toLowerCase()}get tableName(){return this._tableName}set tableName(t){this._tableName=typeof t>"u"?this.keyPrefix:t}get tableCreated(){return this._tableCreated}set tableCreated(t){this._tableCreated=typeof t>"u"?!1:!!t}get clearExpiredByTimeout(){return this._clearExpiredByTimeout}set clearExpiredByTimeout(t){this._clearExpiredByTimeout=typeof t>"u"?!0:!!t}_getRateLimiterRes(t,e,r){const n=new RateLimiterRes$7,o=r.rows[0];return n.isFirstInDuration=e===o.points,n.consumedPoints=n.isFirstInDuration?e:o.points,n.remainingPoints=Math.max(this.points-n.consumedPoints,0),n.msBeforeNext=o.expire?Math.max(o.expire-Date.now(),0):-1,n}_query(t){const e={name:`${this.tableName.toLowerCase()}:${t.name}`,text:t.text,values:t.values};return new Promise((r,n)=>{this._getConnection().then(o=>{o.query(e).then(a=>{r(a),this._releaseConnection(o)}).catch(a=>{n(a),this._releaseConnection(o)})}).catch(o=>{n(o)})})}_upsert(t,e,r,n=!1){if(!this.tableCreated)return Promise.reject(Error("Table is not created yet"));const o=r>0?Date.now()+r:null,a=n?" $3 ":` CASE
             WHEN ${this.tableName}.expire <= $4 THEN $3
             ELSE ${this.tableName}.expire
            END `;return this._query({name:n?"rlflx-upsert-force":"rlflx-upsert",text:`
            INSERT INTO ${this.tableName} VALUES ($1, $2, $3)
              ON CONFLICT(key) DO UPDATE SET
                points = CASE
                          WHEN (${this.tableName}.expire <= $4 OR 1=${n?1:0}) THEN $2
                          ELSE ${this.tableName}.points + ($2)
                         END,
                expire = ${a}
            RETURNING points, expire;`,values:[t,e,o,Date.now()]})}_get(t){return this.tableCreated?new Promise((e,r)=>{this._query({name:"rlflx-get",text:`
            SELECT points, expire FROM ${this.tableName} WHERE key = $1 AND (expire > $2 OR expire IS NULL);`,values:[t,Date.now()]}).then(n=>{n.rowCount===0&&(n=null),e(n)}).catch(n=>{r(n)})}):Promise.reject(Error("Table is not created yet"))}_delete(t){return this.tableCreated?this._query({name:"rlflx-delete",text:`DELETE FROM ${this.tableName} WHERE key = $1`,values:[t]}).then(e=>e.rowCount>0):Promise.reject(Error("Table is not created yet"))}};var RateLimiterPostgres_1=RateLimiterPostgres$1,Record_1=class{constructor(t,e,r=null){this.value=t,this.expiresAt=e,this.timeoutId=r}get value(){return this._value}set value(t){this._value=parseInt(t)}get expiresAt(){return this._expiresAt}set expiresAt(t){!(t instanceof Date)&&Number.isInteger(t)&&(t=new Date(t)),this._expiresAt=t}get timeoutId(){return this._timeoutId}set timeoutId(t){this._timeoutId=t}};const Record$2=Record_1,RateLimiterRes$6=RateLimiterRes_1;var MemoryStorage_1=class{constructor(){this._storage={}}incrby(t,e,r){if(this._storage[t]){const n=this._storage[t].expiresAt?this._storage[t].expiresAt.getTime()-new Date().getTime():-1;return n!==0?(this._storage[t].value=this._storage[t].value+e,new RateLimiterRes$6(0,n,this._storage[t].value,!1)):this.set(t,e,r)}return this.set(t,e,r)}set(t,e,r){const n=r*1e3;return this._storage[t]&&this._storage[t].timeoutId&&clearTimeout(this._storage[t].timeoutId),this._storage[t]=new Record$2(e,n>0?new Date(Date.now()+n):null),n>0&&(this._storage[t].timeoutId=setTimeout(()=>{delete this._storage[t]},n),this._storage[t].timeoutId.unref&&this._storage[t].timeoutId.unref()),new RateLimiterRes$6(0,n===0?-1:n,this._storage[t].value,!0)}get(t){if(this._storage[t]){const e=this._storage[t].expiresAt?this._storage[t].expiresAt.getTime()-new Date().getTime():-1;return new RateLimiterRes$6(0,e,this._storage[t].value,!1)}return null}delete(t){return this._storage[t]?(this._storage[t].timeoutId&&clearTimeout(this._storage[t].timeoutId),delete this._storage[t],!0):!1}};const RateLimiterAbstract$2=RateLimiterAbstract_1,MemoryStorage=MemoryStorage_1,RateLimiterRes$5=RateLimiterRes_1;let RateLimiterMemory$2=class extends RateLimiterAbstract$2{constructor(t={}){super(t),this._memoryStorage=new MemoryStorage}consume(t,e=1,r={}){return new Promise((n,o)=>{const a=this.getKey(t),c=this._getKeySecDuration(r);let u=this._memoryStorage.incrby(a,e,c);if(u.remainingPoints=Math.max(this.points-u.consumedPoints,0),u.consumedPoints>this.points)this.blockDuration>0&&u.consumedPoints<=this.points+e&&(u=this._memoryStorage.set(a,u.consumedPoints,this.blockDuration)),o(u);else if(this.execEvenly&&u.msBeforeNext>0&&!u.isFirstInDuration){let l=Math.ceil(u.msBeforeNext/(u.remainingPoints+2));l<this.execEvenlyMinDelayMs&&(l=u.consumedPoints*this.execEvenlyMinDelayMs),setTimeout(n,l,u)}else n(u)})}penalty(t,e=1,r={}){const n=this.getKey(t);return new Promise(o=>{const a=this._getKeySecDuration(r),c=this._memoryStorage.incrby(n,e,a);c.remainingPoints=Math.max(this.points-c.consumedPoints,0),o(c)})}reward(t,e=1,r={}){const n=this.getKey(t);return new Promise(o=>{const a=this._getKeySecDuration(r),c=this._memoryStorage.incrby(n,-e,a);c.remainingPoints=Math.max(this.points-c.consumedPoints,0),o(c)})}block(t,e){const r=e*1e3,n=this.points+1;return this._memoryStorage.set(this.getKey(t),n,e),Promise.resolve(new RateLimiterRes$5(0,r===0?-1:r,n))}set(t,e,r){const n=(r>=0?r:this.duration)*1e3;return this._memoryStorage.set(this.getKey(t),e,r),Promise.resolve(new RateLimiterRes$5(0,n===0?-1:n,e))}get(t){const e=this._memoryStorage.get(this.getKey(t));return e!==null&&(e.remainingPoints=Math.max(this.points-e.consumedPoints,0)),Promise.resolve(e)}delete(t){return Promise.resolve(this._memoryStorage.delete(this.getKey(t)))}};var RateLimiterMemory_1=RateLimiterMemory$2;const cluster=require$$0,crypto$3=requireCryptoBrowserify(),RateLimiterAbstract$1=RateLimiterAbstract_1,RateLimiterMemory$1=RateLimiterMemory_1,RateLimiterRes$4=RateLimiterRes_1,channel="rate_limiter_flexible";let masterInstance=null;const masterSendToWorker=function(t,e,r,n){let o;n===null||n===!0||n===!1?o=n:o={remainingPoints:n.remainingPoints,msBeforeNext:n.msBeforeNext,consumedPoints:n.consumedPoints,isFirstInDuration:n.isFirstInDuration},t.send({channel,keyPrefix:e.keyPrefix,promiseId:e.promiseId,type:r,data:o})},workerWaitInit=function(t){setTimeout(()=>{this._initiated?browser$1$1.send(t):typeof this._promises[t.promiseId]<"u"&&workerWaitInit.call(this,t)},30)},workerSendToMaster=function(t,e,r,n,o){const a={channel,keyPrefix:this.keyPrefix,func:t,promiseId:e,data:{key:r,arg:n,opts:o}};this._initiated?browser$1$1.send(a):workerWaitInit.call(this,a)},masterProcessMsg=function(t,e){if(!e||e.channel!==channel||typeof this._rateLimiters[e.keyPrefix]>"u")return!1;let r;switch(e.func){case"consume":r=this._rateLimiters[e.keyPrefix].consume(e.data.key,e.data.arg,e.data.opts);break;case"penalty":r=this._rateLimiters[e.keyPrefix].penalty(e.data.key,e.data.arg,e.data.opts);break;case"reward":r=this._rateLimiters[e.keyPrefix].reward(e.data.key,e.data.arg,e.data.opts);break;case"block":r=this._rateLimiters[e.keyPrefix].block(e.data.key,e.data.arg,e.data.opts);break;case"get":r=this._rateLimiters[e.keyPrefix].get(e.data.key,e.data.opts);break;case"delete":r=this._rateLimiters[e.keyPrefix].delete(e.data.key,e.data.opts);break;default:return!1}r&&r.then(n=>{masterSendToWorker(t,e,"resolve",n)}).catch(n=>{masterSendToWorker(t,e,"reject",n)})},workerProcessMsg=function(t){if(!t||t.channel!==channel||t.keyPrefix!==this.keyPrefix)return!1;if(this._promises[t.promiseId]){clearTimeout(this._promises[t.promiseId].timeoutId);let e;switch(t.data===null||t.data===!0||t.data===!1?e=t.data:e=new RateLimiterRes$4(t.data.remainingPoints,t.data.msBeforeNext,t.data.consumedPoints,t.data.isFirstInDuration),t.type){case"resolve":this._promises[t.promiseId].resolve(e);break;case"reject":this._promises[t.promiseId].reject(e);break;default:throw new Error(`RateLimiterCluster: no such message type '${t.type}'`)}delete this._promises[t.promiseId]}},getOpts=function(){return{points:this.points,duration:this.duration,blockDuration:this.blockDuration,execEvenly:this.execEvenly,execEvenlyMinDelayMs:this.execEvenlyMinDelayMs,keyPrefix:this.keyPrefix}},savePromise=function(t,e){const r=browser$1$1.hrtime();let n=r[0].toString()+r[1].toString();return typeof this._promises[n]<"u"&&(n+=crypto$3.randomBytes(12).toString("base64")),this._promises[n]={resolve:t,reject:e,timeoutId:setTimeout(()=>{delete this._promises[n],e(new Error("RateLimiterCluster timeout: no answer from master in time"))},this.timeoutMs)},n};let RateLimiterClusterMaster$1=class{constructor(){if(masterInstance)return masterInstance;this._rateLimiters={},cluster.setMaxListeners(0),cluster.on("message",(t,e)=>{e&&e.channel===channel&&e.type==="init"?(typeof this._rateLimiters[e.opts.keyPrefix]>"u"&&(this._rateLimiters[e.opts.keyPrefix]=new RateLimiterMemory$1(e.opts)),t.send({channel,type:"init",keyPrefix:e.opts.keyPrefix})):masterProcessMsg.call(this,t,e)}),masterInstance=this}},RateLimiterClusterMasterPM2$1=class{constructor(t){if(masterInstance)return masterInstance;this._rateLimiters={},t.launchBus((e,r)=>{r.on("process:msg",n=>{const o=n.raw;if(o&&o.channel===channel&&o.type==="init")typeof this._rateLimiters[o.opts.keyPrefix]>"u"&&(this._rateLimiters[o.opts.keyPrefix]=new RateLimiterMemory$1(o.opts)),t.sendDataToProcessId(n.process.pm_id,{data:{},topic:channel,channel,type:"init",keyPrefix:o.opts.keyPrefix},(a,c)=>{a&&console.log(a,c)});else{const a={send:c=>{const u=c;u.topic=channel,typeof u.data>"u"&&(u.data={}),t.sendDataToProcessId(n.process.pm_id,u,(l,f)=>{l&&console.log(l,f)})}};masterProcessMsg.call(this,a,o)}})}),masterInstance=this}};class RateLimiterClusterWorker extends RateLimiterAbstract$1{get timeoutMs(){return this._timeoutMs}set timeoutMs(e){this._timeoutMs=typeof e>"u"?5e3:Math.abs(parseInt(e))}constructor(e={}){super(e),browser$1$1.setMaxListeners(0),this.timeoutMs=e.timeoutMs,this._initiated=!1,browser$1$1.on("message",r=>{r&&r.channel===channel&&r.type==="init"&&r.keyPrefix===this.keyPrefix?this._initiated=!0:workerProcessMsg.call(this,r)}),browser$1$1.send({channel,type:"init",opts:getOpts.call(this)}),this._promises={}}consume(e,r=1,n={}){return new Promise((o,a)=>{const c=savePromise.call(this,o,a);workerSendToMaster.call(this,"consume",c,e,r,n)})}penalty(e,r=1,n={}){return new Promise((o,a)=>{const c=savePromise.call(this,o,a);workerSendToMaster.call(this,"penalty",c,e,r,n)})}reward(e,r=1,n={}){return new Promise((o,a)=>{const c=savePromise.call(this,o,a);workerSendToMaster.call(this,"reward",c,e,r,n)})}block(e,r,n={}){return new Promise((o,a)=>{const c=savePromise.call(this,o,a);workerSendToMaster.call(this,"block",c,e,r,n)})}get(e,r={}){return new Promise((n,o)=>{const a=savePromise.call(this,n,o);workerSendToMaster.call(this,"get",a,e,r)})}delete(e,r={}){return new Promise((n,o)=>{const a=savePromise.call(this,n,o);workerSendToMaster.call(this,"delete",a,e,r)})}}var RateLimiterCluster$1={RateLimiterClusterMaster:RateLimiterClusterMaster$1,RateLimiterClusterMasterPM2:RateLimiterClusterMasterPM2$1,RateLimiterCluster:RateLimiterClusterWorker};const RateLimiterStoreAbstract=RateLimiterStoreAbstract_1,RateLimiterRes$3=RateLimiterRes_1;let RateLimiterMemcache$1=class extends RateLimiterStoreAbstract{constructor(t){super(t),this.client=t.storeClient}_getRateLimiterRes(t,e,r){const n=new RateLimiterRes$3;return n.consumedPoints=parseInt(r.consumedPoints),n.isFirstInDuration=r.consumedPoints===e,n.remainingPoints=Math.max(this.points-n.consumedPoints,0),n.msBeforeNext=r.msBeforeNext,n}_upsert(t,e,r,n=!1,o={}){return new Promise((a,c)=>{const u=Date.now(),l=Math.floor(r/1e3);n?this.client.set(t,e,l,f=>{f?c(f):this.client.set(`${t}_expire`,l>0?u+l*1e3:-1,l,()=>{const p={consumedPoints:e,msBeforeNext:l>0?l*1e3:-1};a(p)})}):this.client.incr(t,e,(f,p)=>{f||p===!1?this.client.add(t,e,l,(g,$)=>{if(g||!$)if(typeof o.attemptNumber>"u"||o.attemptNumber<3){const _=Object.assign({},o);_.attemptNumber=_.attemptNumber?_.attemptNumber+1:1,this._upsert(t,e,r,n,_).then(b=>a(b)).catch(b=>c(b))}else c(new Error("Can not add key"));else this.client.add(`${t}_expire`,l>0?u+l*1e3:-1,l,()=>{const _={consumedPoints:e,msBeforeNext:l>0?l*1e3:-1};a(_)})}):this.client.get(`${t}_expire`,(g,$)=>{if(g)c(g);else{const _=$===!1?0:$,b={consumedPoints:p,msBeforeNext:_>=0?Math.max(_-u,0):-1};a(b)}})})})}_get(t){return new Promise((e,r)=>{const n=Date.now();this.client.get(t,(o,a)=>{a?this.client.get(`${t}_expire`,(c,u)=>{if(c)r(c);else{const l=u===!1?0:u,f={consumedPoints:a,msBeforeNext:l>=0?Math.max(l-n,0):-1};e(f)}}):e(null)})})}_delete(t){return new Promise((e,r)=>{this.client.del(t,(n,o)=>{n?r(n):o===!1?e(o):this.client.del(`${t}_expire`,a=>{a?r(a):e(o)})})})}};var RateLimiterMemcache_1=RateLimiterMemcache$1;const RateLimiterRes$2=RateLimiterRes_1;var RLWrapperBlackAndWhite_1=class{constructor(t={}){this.limiter=t.limiter,this.blackList=t.blackList,this.whiteList=t.whiteList,this.isBlackListed=t.isBlackListed,this.isWhiteListed=t.isWhiteListed,this.runActionAnyway=t.runActionAnyway}get limiter(){return this._limiter}set limiter(t){if(typeof t>"u")throw new Error("limiter is not set");this._limiter=t}get runActionAnyway(){return this._runActionAnyway}set runActionAnyway(t){this._runActionAnyway=typeof t>"u"?!1:t}get blackList(){return this._blackList}set blackList(t){this._blackList=Array.isArray(t)?t:[]}get isBlackListed(){return this._isBlackListed}set isBlackListed(t){if(typeof t>"u"&&(t=()=>!1),typeof t!="function")throw new Error("isBlackListed must be function");this._isBlackListed=t}get whiteList(){return this._whiteList}set whiteList(t){this._whiteList=Array.isArray(t)?t:[]}get isWhiteListed(){return this._isWhiteListed}set isWhiteListed(t){if(typeof t>"u"&&(t=()=>!1),typeof t!="function")throw new Error("isWhiteListed must be function");this._isWhiteListed=t}isBlackListedSomewhere(t){return this.blackList.indexOf(t)>=0||this.isBlackListed(t)}isWhiteListedSomewhere(t){return this.whiteList.indexOf(t)>=0||this.isWhiteListed(t)}getBlackRes(){return new RateLimiterRes$2(0,Number.MAX_SAFE_INTEGER,0,!1)}getWhiteRes(){return new RateLimiterRes$2(Number.MAX_SAFE_INTEGER,0,0,!1)}rejectBlack(){return Promise.reject(this.getBlackRes())}resolveBlack(){return Promise.resolve(this.getBlackRes())}resolveWhite(){return Promise.resolve(this.getWhiteRes())}consume(t,e=1){let r;return this.isWhiteListedSomewhere(t)?r=this.resolveWhite():this.isBlackListedSomewhere(t)&&(r=this.rejectBlack()),typeof r>"u"?this.limiter.consume(t,e):(this.runActionAnyway&&this.limiter.consume(t,e).catch(()=>{}),r)}block(t,e){let r;return this.isWhiteListedSomewhere(t)?r=this.resolveWhite():this.isBlackListedSomewhere(t)&&(r=this.resolveBlack()),typeof r>"u"?this.limiter.block(t,e):(this.runActionAnyway&&this.limiter.block(t,e).catch(()=>{}),r)}penalty(t,e){let r;return this.isWhiteListedSomewhere(t)?r=this.resolveWhite():this.isBlackListedSomewhere(t)&&(r=this.resolveBlack()),typeof r>"u"?this.limiter.penalty(t,e):(this.runActionAnyway&&this.limiter.penalty(t,e).catch(()=>{}),r)}reward(t,e){let r;return this.isWhiteListedSomewhere(t)?r=this.resolveWhite():this.isBlackListedSomewhere(t)&&(r=this.resolveBlack()),typeof r>"u"?this.limiter.reward(t,e):(this.runActionAnyway&&this.limiter.reward(t,e).catch(()=>{}),r)}get(t){let e;return this.isWhiteListedSomewhere(t)?e=this.resolveWhite():this.isBlackListedSomewhere(t)&&(e=this.resolveBlack()),typeof e>"u"||this.runActionAnyway?this.limiter.get(t):e}delete(t){return this.limiter.delete(t)}};const RateLimiterAbstract=RateLimiterAbstract_1;var RateLimiterUnion_1=class{constructor(...t){if(t.length<1)throw new Error("RateLimiterUnion: at least one limiter have to be passed");t.forEach(e=>{if(!(e instanceof RateLimiterAbstract))throw new Error("RateLimiterUnion: all limiters have to be instance of RateLimiterAbstract")}),this._limiters=t}consume(t,e=1){return new Promise((r,n)=>{const o=[];this._limiters.forEach(a=>{o.push(a.consume(t,e).catch(c=>({rejected:!0,rej:c})))}),Promise.all(o).then(a=>{const c={};let u=!1;a.forEach(l=>{l.rejected===!0&&(u=!0)});for(let l=0;l<a.length;l++)u&&a[l].rejected===!0?c[this._limiters[l].keyPrefix]=a[l].rej:u||(c[this._limiters[l].keyPrefix]=a[l]);u?n(c):r(c)})})}},RateLimiterQueueError_1=class extends Error{constructor(t,e){super(),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="CustomError",this.message=t,e&&(this.extra=e)}};const RateLimiterQueueError=RateLimiterQueueError_1,MAX_QUEUE_SIZE=4294967295,KEY_DEFAULT="limiter";var RateLimiterQueue_1=class{constructor(t,e={maxQueueSize:MAX_QUEUE_SIZE}){this._queueLimiters={KEY_DEFAULT:new RateLimiterQueueInternal(t,e)},this._limiterFlexible=t,this._maxQueueSize=e.maxQueueSize}getTokensRemaining(t=KEY_DEFAULT){return this._queueLimiters[t]?this._queueLimiters[t].getTokensRemaining():Promise.resolve(this._limiterFlexible.points)}removeTokens(t,e=KEY_DEFAULT){return this._queueLimiters[e]||(this._queueLimiters[e]=new RateLimiterQueueInternal(this._limiterFlexible,{key:e,maxQueueSize:this._maxQueueSize})),this._queueLimiters[e].removeTokens(t)}};class RateLimiterQueueInternal{constructor(e,r={maxQueueSize:MAX_QUEUE_SIZE,key:KEY_DEFAULT}){this._key=r.key,this._waitTimeout=null,this._queue=[],this._limiterFlexible=e,this._maxQueueSize=r.maxQueueSize}getTokensRemaining(){return this._limiterFlexible.get(this._key).then(e=>e!==null?e.remainingPoints:this._limiterFlexible.points)}removeTokens(e){const r=this;return new Promise((n,o)=>{if(e>r._limiterFlexible.points){o(new RateLimiterQueueError(`Requested tokens ${e} exceeds maximum ${r._limiterFlexible.points} tokens per interval`));return}r._queue.length>0?r._queueRequest.call(r,n,o,e):r._limiterFlexible.consume(r._key,e).then(a=>{n(a.remainingPoints)}).catch(a=>{a instanceof Error?o(a):(r._queueRequest.call(r,n,o,e),r._waitTimeout===null&&(r._waitTimeout=setTimeout(r._processFIFO.bind(r),a.msBeforeNext)))})})}_queueRequest(e,r,n){const o=this;o._queue.length<o._maxQueueSize?o._queue.push({resolve:e,reject:r,tokens:n}):r(new RateLimiterQueueError(`Number of requests reached it's maximum ${o._maxQueueSize}`))}_processFIFO(){const e=this;if(e._waitTimeout!==null&&(clearTimeout(e._waitTimeout),e._waitTimeout=null),e._queue.length===0)return;const r=e._queue.shift();e._limiterFlexible.consume(e._key,r.tokens).then(n=>{r.resolve(n.remainingPoints),e._processFIFO.call(e)}).catch(n=>{n instanceof Error?(r.reject(n),e._processFIFO.call(e)):(e._queue.unshift(r),e._waitTimeout===null&&(e._waitTimeout=setTimeout(e._processFIFO.bind(e),n.msBeforeNext)))})}}const RateLimiterRes$1=RateLimiterRes_1;var BurstyRateLimiter_1=class{constructor(t,e){this._rateLimiter=t,this._burstLimiter=e}_combineRes(t,e){return t?new RateLimiterRes$1(t.remainingPoints,Math.min(t.msBeforeNext,e?e.msBeforeNext:0),t.consumedPoints,t.isFirstInDuration):null}consume(t,e=1,r={}){return this._rateLimiter.consume(t,e,r).catch(n=>n instanceof RateLimiterRes$1?this._burstLimiter.consume(t,e,r).then(o=>Promise.resolve(this._combineRes(n,o))).catch(o=>o instanceof RateLimiterRes$1?Promise.reject(this._combineRes(n,o)):Promise.reject(o)):Promise.reject(n))}get(t){return Promise.all([this._rateLimiter.get(t),this._burstLimiter.get(t)]).then(([e,r])=>this._combineRes(e,r))}get points(){return this._rateLimiter.points}};const RateLimiterRedis=RateLimiterRedis_1,RateLimiterMongo=RateLimiterMongo_1,RateLimiterMySQL=RateLimiterMySQL_1,RateLimiterPostgres=RateLimiterPostgres_1,{RateLimiterClusterMaster,RateLimiterClusterMasterPM2,RateLimiterCluster}=RateLimiterCluster$1,RateLimiterMemory=RateLimiterMemory_1,RateLimiterMemcache=RateLimiterMemcache_1,RLWrapperBlackAndWhite=RLWrapperBlackAndWhite_1,RateLimiterUnion=RateLimiterUnion_1,RateLimiterQueue=RateLimiterQueue_1,BurstyRateLimiter=BurstyRateLimiter_1,RateLimiterRes=RateLimiterRes_1;var rateLimiterFlexible={RateLimiterRedis,RateLimiterMongo,RateLimiterMySQL,RateLimiterPostgres,RateLimiterMemory,RateLimiterMemcache,RateLimiterClusterMaster,RateLimiterClusterMasterPM2,RateLimiterCluster,RLWrapperBlackAndWhite,RateLimiterUnion,RateLimiterQueue,BurstyRateLimiter,RateLimiterRes};function asUint8Array$8(t){return globalThis.Buffer!=null?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):t}function allocUnsafe$f(t=0){return globalThis.Buffer?.allocUnsafe!=null?asUint8Array$8(globalThis.Buffer.allocUnsafe(t)):new Uint8Array(t)}function base$x(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$x=base$x,_brrp__multiformats_scope_baseX$t=src$x;const coerce$u=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")},fromString$w=t=>new TextEncoder().encode(t),toString$C=t=>new TextDecoder().decode(t);let Encoder$x=class{constructor(t,e,r){this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$x=class{constructor(t,e,r){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$y(this,t)}},ComposedDecoder$u=class{constructor(t){this.decoders=t}or(t){return or$y(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$y=(t,e)=>new ComposedDecoder$u({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});let Codec$u=class{constructor(t,e,r,n){this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$x(t,e,r),this.decoder=new Decoder$x(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};const from$H=({name:t,prefix:e,encode:r,decode:n})=>new Codec$u(t,e,r,n),baseX$t=({prefix:t,name:e,alphabet:r})=>{const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$t(r,e);return from$H({prefix:t,name:e,encode:n,decode:a=>coerce$u(o(a))})},decode$2r=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode$1R=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648$u=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from$H({prefix:e,name:t,encode(o){return encode$1R(o,n,r)},decode(o){return decode$2r(o,n,r,t)}}),base10$w=baseX$t({prefix:"9",name:"base10",alphabet:"0123456789"}),base10$x=Object.freeze(Object.defineProperty({__proto__:null,base10:base10$w},Symbol.toStringTag,{value:"Module"})),base16$w=rfc4648$u({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),base16upper$g=rfc4648$u({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),base16$x=Object.freeze(Object.defineProperty({__proto__:null,base16:base16$w,base16upper:base16upper$g},Symbol.toStringTag,{value:"Module"})),base2$w=rfc4648$u({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),base2$x=Object.freeze(Object.defineProperty({__proto__:null,base2:base2$w},Symbol.toStringTag,{value:"Module"})),alphabet$h=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),alphabetBytesToChars$g=alphabet$h.reduce((t,e,r)=>(t[r]=e,t),[]),alphabetCharsToBytes$g=alphabet$h.reduce((t,e,r)=>(t[e.codePointAt(0)]=r,t),[]);function encode$1Q(t){return t.reduce((e,r)=>(e+=alphabetBytesToChars$g[r],e),"")}function decode$2q(t){const e=[];for(const r of t){const n=alphabetCharsToBytes$g[r.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${r}`);e.push(n)}return new Uint8Array(e)}const base256emoji$w=from$H({prefix:"\u{1F680}",name:"base256emoji",encode:encode$1Q,decode:decode$2q}),base256emoji$x=Object.freeze(Object.defineProperty({__proto__:null,base256emoji:base256emoji$w},Symbol.toStringTag,{value:"Module"})),base32$G=rfc4648$u({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),base32upper$h=rfc4648$u({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),base32pad$h=rfc4648$u({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),base32padupper$g=rfc4648$u({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),base32hex$g=rfc4648$u({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),base32hexupper$g=rfc4648$u({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),base32hexpad$g=rfc4648$u({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),base32hexpadupper$g=rfc4648$u({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),base32z$g=rfc4648$u({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),base32$H=Object.freeze(Object.defineProperty({__proto__:null,base32:base32$G,base32hex:base32hex$g,base32hexpad:base32hexpad$g,base32hexpadupper:base32hexpadupper$g,base32hexupper:base32hexupper$g,base32pad:base32pad$h,base32padupper:base32padupper$g,base32upper:base32upper$h,base32z:base32z$g},Symbol.toStringTag,{value:"Module"})),base36$w=baseX$t({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),base36upper$g=baseX$t({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),base36$x=Object.freeze(Object.defineProperty({__proto__:null,base36:base36$w,base36upper:base36upper$g},Symbol.toStringTag,{value:"Module"})),base58btc$r=baseX$t({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),base58flickr$g=baseX$t({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),base58$g=Object.freeze(Object.defineProperty({__proto__:null,base58btc:base58btc$r,base58flickr:base58flickr$g},Symbol.toStringTag,{value:"Module"})),base64$B=rfc4648$u({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),base64pad$g=rfc4648$u({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),base64url$h=rfc4648$u({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),base64urlpad$g=rfc4648$u({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),base64$C=Object.freeze(Object.defineProperty({__proto__:null,base64:base64$B,base64pad:base64pad$g,base64url:base64url$h,base64urlpad:base64urlpad$g},Symbol.toStringTag,{value:"Module"})),base8$w=rfc4648$u({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),base8$x=Object.freeze(Object.defineProperty({__proto__:null,base8:base8$w},Symbol.toStringTag,{value:"Module"})),identity$q=from$H({prefix:"\0",name:"identity",encode:t=>toString$C(t),decode:t=>fromString$w(t)}),identityBase$g=Object.freeze(Object.defineProperty({__proto__:null,identity:identity$q},Symbol.toStringTag,{value:"Module"}));new TextEncoder,new TextDecoder;const bases$g={...identityBase$g,...base2$x,...base8$x,...base10$x,...base16$x,...base32$H,...base36$x,...base58$g,...base64$C,...base256emoji$x};function createCodec$6(t,e,r,n){return{name:t,prefix:e,encoder:{name:t,prefix:e,encode:r},decoder:{decode:n}}}const string$4=createCodec$6("utf8","u",t=>"u"+new TextDecoder("utf8").decode(t),t=>new TextEncoder().encode(t.substring(1))),ascii$4=createCodec$6("ascii","a",t=>{let e="a";for(let r=0;r<t.length;r++)e+=String.fromCharCode(t[r]);return e},t=>{t=t.substring(1);const e=allocUnsafe$f(t.length);for(let r=0;r<t.length;r++)e[r]=t.charCodeAt(r);return e}),BASES$4={utf8:string$4,"utf-8":string$4,hex:bases$g.base16,latin1:ascii$4,ascii:ascii$4,binary:ascii$4,...bases$g};function fromString$v(t,e="utf8"){const r=BASES$4[e];if(r==null)throw new Error(`Unsupported encoding "${e}"`);return(e==="utf8"||e==="utf-8")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?asUint8Array$8(globalThis.Buffer.from(t,"utf-8")):r.decoder.decode(`${r.prefix}${t}`)}function toString$B(t,e="utf8"){const r=BASES$4[e];if(r==null)throw new Error(`Unsupported encoding "${e}"`);return(e==="utf8"||e==="utf-8")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?globalThis.Buffer.from(t.buffer,t.byteOffset,t.byteLength).toString("utf8"):r.encoder.encode(t).substring(1)}function asUint8Array$7(t){return globalThis.Buffer!=null?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):t}function alloc$3(t=0){return globalThis.Buffer?.alloc!=null?asUint8Array$7(globalThis.Buffer.alloc(t)):new Uint8Array(t)}function allocUnsafe$e(t=0){return globalThis.Buffer?.allocUnsafe!=null?asUint8Array$7(globalThis.Buffer.allocUnsafe(t)):new Uint8Array(t)}function concat$7(t,e){if(globalThis.Buffer!=null)return asUint8Array$7(globalThis.Buffer.concat(t,e));e==null&&(e=t.reduce((o,a)=>o+a.length,0));const r=allocUnsafe$e(e);let n=0;for(const o of t)r.set(o,n),n+=o.length;return asUint8Array$7(r)}function equals$Q(t,e){if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0}const symbol$i=Symbol.for("@achingbrain/uint8arraylist");function findBufAndOffset(t,e){if(e==null||e<0)throw new RangeError("index is out of bounds");let r=0;for(const n of t){const o=r+n.byteLength;if(e<o)return{buf:n,index:e-r};r=o}throw new RangeError("index is out of bounds")}function isUint8ArrayList(t){return!!t?.[symbol$i]}Uint8ArrayList=class{constructor(...t){N(this,"bufs");N(this,"length");N(this,se,!0);this.bufs=[],this.length=0,t.length>0&&this.appendAll(t)}*[(se=symbol$i,Symbol.iterator)](){yield*this.bufs}get byteLength(){return this.length}append(...t){this.appendAll(t)}appendAll(t){let e=0;for(const r of t)if(r instanceof Uint8Array)e+=r.byteLength,this.bufs.push(r);else if(isUint8ArrayList(r))e+=r.byteLength,this.bufs.push(...r.bufs);else throw new Error("Could not append value, must be an Uint8Array or a Uint8ArrayList");this.length+=e}prepend(...t){this.prependAll(t)}prependAll(t){let e=0;for(const r of t.reverse())if(r instanceof Uint8Array)e+=r.byteLength,this.bufs.unshift(r);else if(isUint8ArrayList(r))e+=r.byteLength,this.bufs.unshift(...r.bufs);else throw new Error("Could not prepend value, must be an Uint8Array or a Uint8ArrayList");this.length+=e}get(t){const e=findBufAndOffset(this.bufs,t);return e.buf[e.index]}set(t,e){const r=findBufAndOffset(this.bufs,t);r.buf[r.index]=e}write(t,e=0){if(t instanceof Uint8Array)for(let r=0;r<t.length;r++)this.set(e+r,t[r]);else if(isUint8ArrayList(t))for(let r=0;r<t.length;r++)this.set(e+r,t.get(r));else throw new Error("Could not write value, must be an Uint8Array or a Uint8ArrayList")}consume(t){if(t=Math.trunc(t),!(Number.isNaN(t)||t<=0)){if(t===this.byteLength){this.bufs=[],this.length=0;return}for(;this.bufs.length>0;)if(t>=this.bufs[0].byteLength)t-=this.bufs[0].byteLength,this.length-=this.bufs[0].byteLength,this.bufs.shift();else{this.bufs[0]=this.bufs[0].subarray(t),this.length-=t;break}}}slice(t,e){const{bufs:r,length:n}=this._subList(t,e);return concat$7(r,n)}subarray(t,e){const{bufs:r,length:n}=this._subList(t,e);return r.length===1?r[0]:concat$7(r,n)}sublist(t,e){const{bufs:r,length:n}=this._subList(t,e),o=new Uint8ArrayList;return o.length=n,o.bufs=[...r],o}_subList(t,e){if(t=t??0,e=e??this.length,t<0&&(t=this.length+t),e<0&&(e=this.length+e),t<0||e>this.length)throw new RangeError("index is out of bounds");if(t===e)return{bufs:[],length:0};if(t===0&&e===this.length)return{bufs:this.bufs,length:this.length};const r=[];let n=0;for(let o=0;o<this.bufs.length;o++){const a=this.bufs[o],c=n,u=c+a.byteLength;if(n=u,t>=u)continue;const l=t>=c&&t<u,f=e>c&&e<=u;if(l&&f){if(t===c&&e===u){r.push(a);break}const p=t-c;r.push(a.subarray(p,p+(e-t)));break}if(l){if(t===0){r.push(a);continue}r.push(a.subarray(t-c));continue}if(f){if(e===u){r.push(a);break}r.push(a.subarray(0,e-c));break}r.push(a)}return{bufs:r,length:e-t}}indexOf(t,e=0){if(!isUint8ArrayList(t)&&!(t instanceof Uint8Array))throw new TypeError('The "value" argument must be a Uint8ArrayList or Uint8Array');const r=t instanceof Uint8Array?t:t.subarray();if(e=Number(e??0),isNaN(e)&&(e=0),e<0&&(e=this.length+e),e<0&&(e=0),t.length===0)return e>this.length?this.length:e;const n=r.byteLength;if(n===0)throw new TypeError("search must be at least 1 byte long");const o=256,a=new Int32Array(o);for(let p=0;p<o;p++)a[p]=-1;for(let p=0;p<n;p++)a[r[p]]=p;const c=a,u=this.byteLength-r.byteLength,l=r.byteLength-1;let f;for(let p=e;p<=u;p+=f){f=0;for(let g=l;g>=0;g--){const $=this.get(p+g);if(r[g]!==$){f=Math.max(1,g-c[$]);break}}if(f===0)return p}return-1}getInt8(t){const e=this.subarray(t,t+1);return new DataView(e.buffer,e.byteOffset,e.byteLength).getInt8(0)}setInt8(t,e){const r=allocUnsafe$e(1);new DataView(r.buffer,r.byteOffset,r.byteLength).setInt8(0,e),this.write(r,t)}getInt16(t,e){const r=this.subarray(t,t+2);return new DataView(r.buffer,r.byteOffset,r.byteLength).getInt16(0,e)}setInt16(t,e,r){const n=alloc$3(2);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt16(0,e,r),this.write(n,t)}getInt32(t,e){const r=this.subarray(t,t+4);return new DataView(r.buffer,r.byteOffset,r.byteLength).getInt32(0,e)}setInt32(t,e,r){const n=alloc$3(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt32(0,e,r),this.write(n,t)}getBigInt64(t,e){const r=this.subarray(t,t+8);return new DataView(r.buffer,r.byteOffset,r.byteLength).getBigInt64(0,e)}setBigInt64(t,e,r){const n=alloc$3(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setBigInt64(0,e,r),this.write(n,t)}getUint8(t){const e=this.subarray(t,t+1);return new DataView(e.buffer,e.byteOffset,e.byteLength).getUint8(0)}setUint8(t,e){const r=allocUnsafe$e(1);new DataView(r.buffer,r.byteOffset,r.byteLength).setUint8(0,e),this.write(r,t)}getUint16(t,e){const r=this.subarray(t,t+2);return new DataView(r.buffer,r.byteOffset,r.byteLength).getUint16(0,e)}setUint16(t,e,r){const n=alloc$3(2);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint16(0,e,r),this.write(n,t)}getUint32(t,e){const r=this.subarray(t,t+4);return new DataView(r.buffer,r.byteOffset,r.byteLength).getUint32(0,e)}setUint32(t,e,r){const n=alloc$3(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint32(0,e,r),this.write(n,t)}getBigUint64(t,e){const r=this.subarray(t,t+8);return new DataView(r.buffer,r.byteOffset,r.byteLength).getBigUint64(0,e)}setBigUint64(t,e,r){const n=alloc$3(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setBigUint64(0,e,r),this.write(n,t)}getFloat32(t,e){const r=this.subarray(t,t+4);return new DataView(r.buffer,r.byteOffset,r.byteLength).getFloat32(0,e)}setFloat32(t,e,r){const n=alloc$3(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setFloat32(0,e,r),this.write(n,t)}getFloat64(t,e){const r=this.subarray(t,t+8);return new DataView(r.buffer,r.byteOffset,r.byteLength).getFloat64(0,e)}setFloat64(t,e,r){const n=alloc$3(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setFloat64(0,e,r),this.write(n,t)}equals(t){if(t==null||!(t instanceof Uint8ArrayList)||t.bufs.length!==this.bufs.length)return!1;for(let e=0;e<this.bufs.length;e++)if(!equals$Q(this.bufs[e],t.bufs[e]))return!1;return!0}static fromUint8Arrays(t,e){const r=new Uint8ArrayList;return r.bufs=t,e==null&&(e=t.reduce((n,o)=>n+o.byteLength,0)),r.length=e,r}};var MessageTypes$1;(function(t){t[t.NEW_STREAM=0]="NEW_STREAM",t[t.MESSAGE_RECEIVER=1]="MESSAGE_RECEIVER",t[t.MESSAGE_INITIATOR=2]="MESSAGE_INITIATOR",t[t.CLOSE_RECEIVER=3]="CLOSE_RECEIVER",t[t.CLOSE_INITIATOR=4]="CLOSE_INITIATOR",t[t.RESET_RECEIVER=5]="RESET_RECEIVER",t[t.RESET_INITIATOR=6]="RESET_INITIATOR"})(MessageTypes$1||(MessageTypes$1={}));const MessageTypeNames$1=Object.freeze({0:"NEW_STREAM",1:"MESSAGE_RECEIVER",2:"MESSAGE_INITIATOR",3:"CLOSE_RECEIVER",4:"CLOSE_INITIATOR",5:"RESET_RECEIVER",6:"RESET_INITIATOR"}),InitiatorMessageTypes$1=Object.freeze({NEW_STREAM:MessageTypes$1.NEW_STREAM,MESSAGE:MessageTypes$1.MESSAGE_INITIATOR,CLOSE:MessageTypes$1.CLOSE_INITIATOR,RESET:MessageTypes$1.RESET_INITIATOR}),ReceiverMessageTypes$1=Object.freeze({MESSAGE:MessageTypes$1.MESSAGE_RECEIVER,CLOSE:MessageTypes$1.CLOSE_RECEIVER,RESET:MessageTypes$1.RESET_RECEIVER}),MAX_MSG_SIZE$1=1<<20,MAX_MSG_QUEUE_SIZE$1=4<<20;let Decoder$w=class{constructor(t=MAX_MSG_SIZE$1,e=MAX_MSG_QUEUE_SIZE$1){N(this,"_buffer");N(this,"_headerInfo");N(this,"_maxMessageSize");N(this,"_maxUnprocessedMessageQueueSize");this._buffer=new Uint8ArrayList,this._headerInfo=null,this._maxMessageSize=t,this._maxUnprocessedMessageQueueSize=e}write(t){if(t==null||t.length===0)return[];if(this._buffer.append(t),this._buffer.byteLength>this._maxUnprocessedMessageQueueSize)throw Object.assign(new Error("unprocessed message queue size too large!"),{code:"ERR_MSG_QUEUE_TOO_BIG"});const e=[];for(;this._buffer.length!==0;){if(this._headerInfo==null)try{this._headerInfo=this._decodeHeader(this._buffer)}catch(u){if(u.code==="ERR_MSG_TOO_BIG")throw u;break}const{id:r,type:n,length:o,offset:a}=this._headerInfo;if(this._buffer.length-a<o)break;const c={id:r,type:n};(n===MessageTypes$1.NEW_STREAM||n===MessageTypes$1.MESSAGE_INITIATOR||n===MessageTypes$1.MESSAGE_RECEIVER)&&(c.data=this._buffer.sublist(a,a+o)),e.push(c),this._buffer.consume(a+o),this._headerInfo=null}return e}_decodeHeader(t){const{value:e,offset:r}=readVarInt$1(t),{value:n,offset:o}=readVarInt$1(t,r),a=e&7;if(MessageTypeNames$1[a]==null)throw new Error(`Invalid type received: ${a}`);if(n>this._maxMessageSize)throw Object.assign(new Error("message size too large!"),{code:"ERR_MSG_TOO_BIG"});return{id:e>>3,type:a,offset:r+o,length:n}}};const MSB$D=128,REST$D=127;function readVarInt$1(t,e=0){let r=0,n=0,o=e,a;const c=t.length;do{if(o>=c||n>49)throw e=0,new RangeError("Could not decode varint");a=t.get(o++),r+=n<28?(a&REST$D)<<n:(a&REST$D)*Math.pow(2,n),n+=7}while(a>=MSB$D);return e=o-e,{value:r,offset:e}}function isAsyncIterable$8(t){return t[Symbol.asyncIterator]!=null}const DEFAULT_BATCH_SIZE$1=1024*1024,DEFAULT_SERIALIZE$1=(t,e)=>{e.append(t)};function batchedBytes$1(t,e){return isAsyncIterable$8(t)?async function*(){let r=new Uint8ArrayList,n=!1,o=pDefer$1(),a=Number(e?.size??DEFAULT_BATCH_SIZE$1);if((isNaN(a)||a===0||a<0)&&(a=DEFAULT_BATCH_SIZE$1),a!==Math.round(a))throw new Error("Batch size must be an integer");const c=e?.yieldAfter??0,u=e?.serialize??DEFAULT_SERIALIZE$1;for(Promise.resolve().then(async()=>{try{let l;for await(const f of t){if(u(f,r),r.byteLength>=a){clearTimeout(l),o.resolve();continue}l=setTimeout(()=>{o.resolve()},c)}clearTimeout(l),o.resolve()}catch(l){o.reject(l)}finally{n=!0}});!n;)if(await o.promise,o=pDefer$1(),r.byteLength>0){const l=r;r=new Uint8ArrayList,yield l.subarray()}}():function*(){const r=new Uint8ArrayList;let n=Number(e?.size??DEFAULT_BATCH_SIZE$1);if((isNaN(n)||n===0||n<0)&&(n=DEFAULT_BATCH_SIZE$1),n!==Math.round(n))throw new Error("Batch size must be an integer");const o=e?.serialize??DEFAULT_SERIALIZE$1;for(const a of t)o(a,r),r.byteLength>=n&&(yield r.subarray(0,n),r.consume(n));r.byteLength>0&&(yield r.subarray())}()}var encode_1$u=encode$1P,MSB$C=128,REST$C=127,MSBALL$u=~REST$C,INT$u=Math.pow(2,31);function encode$1P(t,e,r){if(Number.MAX_SAFE_INTEGER&&t>Number.MAX_SAFE_INTEGER)throw encode$1P.bytes=0,new RangeError("Could not encode varint");e=e||[],r=r||0;for(var n=r;t>=INT$u;)e[r++]=t&255|MSB$C,t/=128;for(;t&MSBALL$u;)e[r++]=t&255|MSB$C,t>>>=7;return e[r]=t|0,encode$1P.bytes=r-n+1,e}var decode$2p=read$v,MSB$B=128,REST$B=127;function read$v(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u||o>49)throw read$v.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$B)<<o:(c&REST$B)*Math.pow(2,o),o+=7}while(c>=MSB$B);return read$v.bytes=a-n,r}var N1$A=Math.pow(2,7),N2$A=Math.pow(2,14),N3$A=Math.pow(2,21),N4$A=Math.pow(2,28),N5$A=Math.pow(2,35),N6$A=Math.pow(2,42),N7$A=Math.pow(2,49),N8$v=Math.pow(2,56),N9$v=Math.pow(2,63),length$w=function(t){return t<N1$A?1:t<N2$A?2:t<N3$A?3:t<N4$A?4:t<N5$A?5:t<N6$A?6:t<N7$A?7:t<N8$v?8:t<N9$v?9:10},varint$v={encode:encode_1$u,decode:decode$2p,encodingLength:length$w};const varint$w=getDefaultExportFromCjs(varint$v);function allocUnsafe$d(t){return new Uint8Array(t)}const POOL_SIZE$1=10*1024;let Encoder$w=class{constructor(){N(this,"_pool");N(this,"_poolOffset");this._pool=allocUnsafe$d(POOL_SIZE$1),this._poolOffset=0}write(t,e){const r=this._pool;let n=this._poolOffset;varint$w.encode(t.id<<3|t.type,r,n),n+=varint$w.encode.bytes??0,(t.type===MessageTypes$1.NEW_STREAM||t.type===MessageTypes$1.MESSAGE_INITIATOR||t.type===MessageTypes$1.MESSAGE_RECEIVER)&&t.data!=null?varint$w.encode(t.data.length,r,n):varint$w.encode(0,r,n),n+=varint$w.encode.bytes??0;const o=r.subarray(this._poolOffset,n);POOL_SIZE$1-n<100?(this._pool=allocUnsafe$d(POOL_SIZE$1),this._poolOffset=0):this._poolOffset=n,e.append(o),(t.type===MessageTypes$1.NEW_STREAM||t.type===MessageTypes$1.MESSAGE_INITIATOR||t.type===MessageTypes$1.MESSAGE_RECEIVER)&&t.data!=null&&e.append(t.data)}};const encoder$1=new Encoder$w;async function*encode$1O(t,e=0){if(e==null||e===0){for await(const r of t){const n=new Uint8ArrayList;for(const o of r)encoder$1.write(o,n);yield n.subarray()}return}yield*batchedBytes$1(t,{size:e,serialize:(r,n)=>{for(const o of r)encoder$1.write(o,n)}})}const log$1H=logger$3("libp2p:stream"),ERR_STREAM_RESET$1="ERR_STREAM_RESET",ERR_STREAM_ABORT$1="ERR_STREAM_ABORT",ERR_SINK_ENDED$1="ERR_SINK_ENDED",ERR_DOUBLE_SINK$1="ERR_DOUBLE_SINK";function isPromise(t){return t!=null&&typeof t.then=="function"}class AbstractStream{constructor(e){N(this,"id");N(this,"stat");N(this,"metadata");N(this,"source");N(this,"abortController");N(this,"resetController");N(this,"closeController");N(this,"sourceEnded");N(this,"sinkEnded");N(this,"sinkSunk");N(this,"endErr");N(this,"streamSource");N(this,"onEnd");N(this,"maxDataSize");this.abortController=new AbortController,this.resetController=new AbortController,this.closeController=new AbortController,this.sourceEnded=!1,this.sinkEnded=!1,this.sinkSunk=!1,this.id=e.id,this.metadata=e.metadata??{},this.stat={direction:e.direction,timeline:{open:Date.now()}},this.maxDataSize=e.maxDataSize,this.onEnd=e.onEnd,this.source=this.streamSource=pushable({onEnd:()=>{if(this.stat.timeline.reset!==null){const r=this.sendCloseRead();isPromise(r)&&r.catch(n=>{log$1H.error("error while sending close read",n)})}this.onSourceEnd()}}),this.sink=this.sink.bind(this)}onSourceEnd(e){this.sourceEnded||(this.stat.timeline.closeRead=Date.now(),this.sourceEnded=!0,log$1H.trace("%s stream %s source end - err: %o",this.stat.direction,this.id,e),e!=null&&this.endErr==null&&(this.endErr=e),this.sinkEnded&&(this.stat.timeline.close=Date.now(),this.onEnd!=null&&this.onEnd(this.endErr)))}onSinkEnd(e){this.sinkEnded||(this.stat.timeline.closeWrite=Date.now(),this.sinkEnded=!0,log$1H.trace("%s stream %s sink end - err: %o",this.stat.direction,this.id,e),e!=null&&this.endErr==null&&(this.endErr=e),this.sourceEnded&&(this.stat.timeline.close=Date.now(),this.onEnd!=null&&this.onEnd(this.endErr)))}close(){log$1H.trace("%s stream %s close",this.stat.direction,this.id),this.closeRead(),this.closeWrite()}closeRead(){log$1H.trace("%s stream %s closeRead",this.stat.direction,this.id),!this.sourceEnded&&this.streamSource.end()}closeWrite(){if(log$1H.trace("%s stream %s closeWrite",this.stat.direction,this.id),!this.sinkEnded){this.closeController.abort();try{const e=this.sendCloseWrite();isPromise(e)&&e.catch(r=>{log$1H.error("error while sending close write",r)})}catch(e){log$1H.trace("%s stream %s error sending close",this.stat.direction,this.id,e)}this.onSinkEnd()}}abort(e){log$1H.trace("%s stream %s abort",this.stat.direction,this.id,e),this.streamSource.end(e),this.abortController.abort(),this.onSinkEnd(e)}reset(){const e=new CodeError$4("stream reset",ERR_STREAM_RESET$1);this.resetController.abort(),this.streamSource.end(e),this.onSinkEnd(e)}async sink(e){if(this.sinkSunk)throw new CodeError$4("sink already called on stream",ERR_DOUBLE_SINK$1);if(this.sinkSunk=!0,this.sinkEnded)throw new CodeError$4("stream closed for writing",ERR_SINK_ENDED$1);const r=anySignal$6([this.abortController.signal,this.resetController.signal,this.closeController.signal]);try{if(e=abortableSource$7(e,r),this.stat.direction==="outbound"){const n=this.sendNewStream();isPromise(n)&&await n}for await(let n of e)for(;n.length>0;){if(n.length<=this.maxDataSize){const a=this.sendData(n instanceof Uint8Array?new Uint8ArrayList(n):n);isPromise(a)&&await a;break}n=n instanceof Uint8Array?new Uint8ArrayList(n):n;const o=this.sendData(n.sublist(0,this.maxDataSize));isPromise(o)&&await o,n.consume(this.maxDataSize)}}catch(n){if(n.type==="aborted"&&n.message==="The operation was aborted"){if(this.closeController.signal.aborted)return;this.resetController.signal.aborted&&(n.message="stream reset",n.code=ERR_STREAM_RESET$1),this.abortController.signal.aborted&&(n.message="stream aborted",n.code=ERR_STREAM_ABORT$1)}if(n.code===ERR_STREAM_RESET$1)log$1H.trace("%s stream %s reset",this.stat.direction,this.id);else{log$1H.trace("%s stream %s error",this.stat.direction,this.id,n);try{const o=this.sendReset();isPromise(o)&&await o,this.stat.timeline.reset=Date.now()}catch(o){log$1H.trace("%s stream %s error sending reset",this.stat.direction,this.id,o)}}throw this.streamSource.end(n),this.onSinkEnd(n),n}finally{r.clear()}try{const n=this.sendCloseWrite();isPromise(n)&&await n}catch(n){log$1H.trace("%s stream %s error sending close",this.stat.direction,this.id,n)}this.onSinkEnd()}sourcePush(e){this.streamSource.push(e)}sourceReadableLength(){return this.streamSource.readableLength}}class MplexStream extends AbstractStream{constructor(r){super(r);N(this,"name");N(this,"streamId");N(this,"send");N(this,"types");this.types=r.direction==="outbound"?InitiatorMessageTypes$1:ReceiverMessageTypes$1,this.send=r.send,this.name=r.name,this.streamId=r.streamId}sendNewStream(){this.send({id:this.streamId,type:InitiatorMessageTypes$1.NEW_STREAM,data:new Uint8ArrayList(fromString$v(this.name))})}sendData(r){this.send({id:this.streamId,type:this.types.MESSAGE,data:r})}sendReset(){this.send({id:this.streamId,type:this.types.RESET})}sendCloseWrite(){this.send({id:this.streamId,type:this.types.CLOSE})}sendCloseRead(){}}function createStream$1(t){const{id:e,name:r,send:n,onEnd:o,type:a="initiator",maxMsgSize:c=MAX_MSG_SIZE$1}=t;return new MplexStream({id:a==="initiator"?`i${e}`:`r${e}`,streamId:e,name:`${r??e}`,direction:a==="initiator"?"outbound":"inbound",maxDataSize:c,onEnd:o,send:n})}const log$1G=logger$3("libp2p:mplex"),MAX_STREAMS_INBOUND_STREAMS_PER_CONNECTION$1=1024,MAX_STREAMS_OUTBOUND_STREAMS_PER_CONNECTION$1=1024,MAX_STREAM_BUFFER_SIZE$1=1024*1024*4,DISCONNECT_THRESHOLD$1=5;function printMessage$1(t){const e={...t,type:`${MessageTypeNames$1[t.type]} (${t.type})`};return t.type===MessageTypes$1.NEW_STREAM&&(e.data=toString$B(t.data instanceof Uint8Array?t.data:t.data.subarray())),(t.type===MessageTypes$1.MESSAGE_INITIATOR||t.type===MessageTypes$1.MESSAGE_RECEIVER)&&(e.data=toString$B(t.data instanceof Uint8Array?t.data:t.data.subarray(),"base16")),e}let MplexStreamMuxer$1=class{constructor(t){N(this,"protocol","/mplex/6.7.0");N(this,"sink");N(this,"source");N(this,"_streamId");N(this,"_streams");N(this,"_init");N(this,"_source");N(this,"closeController");N(this,"rateLimiter");t=t??{},this._streamId=0,this._streams={initiators:new Map,receivers:new Map},this._init=t,this.sink=this._createSink();const e=this._createSource();this._source=e,this.source=e,this.closeController=new AbortController,this.rateLimiter=new rateLimiterFlexible.RateLimiterMemory({points:t.disconnectThreshold??DISCONNECT_THRESHOLD$1,duration:1})}get streams(){const t=[];for(const e of this._streams.initiators.values())t.push(e);for(const e of this._streams.receivers.values())t.push(e);return t}newStream(t){if(this.closeController.signal.aborted)throw new Error("Muxer already closed");const e=this._streamId++;t=t==null?e.toString():t.toString();const r=this._streams.initiators;return this._newStream({id:e,name:t,type:"initiator",registry:r})}close(t){this.closeController.signal.aborted||(t!=null?this.streams.forEach(e=>{e.abort(t)}):this.streams.forEach(e=>{e.close()}),this.closeController.abort())}_newReceiverStream(t){const{id:e,name:r}=t,n=this._streams.receivers;return this._newStream({id:e,name:r,type:"receiver",registry:n})}_newStream(t){const{id:e,name:r,type:n,registry:o}=t;if(log$1G("new %s stream %s",n,e),n==="initiator"&&this._streams.initiators.size===(this._init.maxOutboundStreams??MAX_STREAMS_OUTBOUND_STREAMS_PER_CONNECTION$1))throw new CodeError$4("Too many outbound streams open","ERR_TOO_MANY_OUTBOUND_STREAMS");if(o.has(e))throw new Error(`${n} stream ${e} already exists!`);const a=createStream$1({id:e,name:r,send:c=>{log$1G.enabled&&log$1G.trace("%s stream %s send",n,e,printMessage$1(c)),this._source.push(c)},type:n,onEnd:()=>{log$1G("%s stream with id %s and protocol %s ended",n,e,a.stat.protocol),o.delete(e),this._init.onStreamEnd!=null&&this._init.onStreamEnd(a)},maxMsgSize:this._init.maxMsgSize});return o.set(e,a),a}_createSink(){return async t=>{const e=anySignal$6([this.closeController.signal,this._init.signal]);try{t=abortableSource$7(t,e);const r=new Decoder$w(this._init.maxMsgSize,this._init.maxUnprocessedMessageQueueSize);for await(const n of t)for(const o of r.write(n))await this._handleIncoming(o);this._source.end()}catch(r){log$1G("error in sink",r),this._source.end(r)}finally{e.clear()}}}_createSource(){const t=pushableV({objectMode:!0,onEnd:e=>{this.close(e)}});return Object.assign(encode$1O(t,this._init.minSendBytes),{push:t.push,end:t.end,return:t.return})}async _handleIncoming(t){const{id:e,type:r}=t;if(log$1G.enabled&&log$1G.trace("incoming message",printMessage$1(t)),t.type===MessageTypes$1.NEW_STREAM){if(this._streams.receivers.size===(this._init.maxInboundStreams??MAX_STREAMS_INBOUND_STREAMS_PER_CONNECTION$1)){log$1G("too many inbound streams open"),this._source.push({id:e,type:MessageTypes$1.RESET_RECEIVER});try{await this.rateLimiter.consume("new-stream",1)}catch{log$1G("rate limit hit when opening too many new streams over the inbound stream limit - closing remote connection"),this._source.end(new Error("Too many open streams"));return}return}const a=this._newReceiverStream({id:e,name:toString$B(t.data instanceof Uint8Array?t.data:t.data.subarray())});this._init.onIncomingStream!=null&&this._init.onIncomingStream(a);return}const n=((r&1)===1?this._streams.initiators:this._streams.receivers).get(e);if(n==null){log$1G("missing stream %s for message type %s",e,MessageTypeNames$1[r]);return}const o=this._init.maxStreamBufferSize??MAX_STREAM_BUFFER_SIZE$1;switch(r){case MessageTypes$1.MESSAGE_INITIATOR:case MessageTypes$1.MESSAGE_RECEIVER:if(n.sourceReadableLength()>o){this._source.push({id:t.id,type:r===MessageTypes$1.MESSAGE_INITIATOR?MessageTypes$1.RESET_RECEIVER:MessageTypes$1.RESET_INITIATOR});const a=new CodeError$4("Input buffer full - increase Mplex maxBufferSize to accommodate slow consumers","ERR_STREAM_INPUT_BUFFER_FULL");n.abort(a);return}n.sourcePush(t.data);break;case MessageTypes$1.CLOSE_INITIATOR:case MessageTypes$1.CLOSE_RECEIVER:n.closeRead();break;case MessageTypes$1.RESET_INITIATOR:case MessageTypes$1.RESET_RECEIVER:n.reset();break;default:log$1G("unknown message type %s",r)}}},Mplex$1=class{constructor(t={}){N(this,"protocol","/mplex/6.7.0");N(this,"_init");this._init=t}createStreamMuxer(t={}){return new MplexStreamMuxer$1({...t,...this._init})}};function mplex$1(t={}){return()=>new Mplex$1(t)}var isPlainObj=t=>{if(Object.prototype.toString.call(t)!=="[object Object]")return!1;const e=Object.getPrototypeOf(t);return e===null||e===Object.prototype};const isOptionObject=isPlainObj,{hasOwnProperty}=Object.prototype,{propertyIsEnumerable}=Object,defineProperty=(t,e,r)=>Object.defineProperty(t,e,{value:r,writable:!0,enumerable:!0,configurable:!0}),globalThis$1=commonjsGlobal,defaultMergeOptions={concatArrays:!1,ignoreUndefined:!1},getEnumerableOwnPropertyKeys=t=>{const e=[];for(const r in t)hasOwnProperty.call(t,r)&&e.push(r);if(Object.getOwnPropertySymbols){const r=Object.getOwnPropertySymbols(t);for(const n of r)propertyIsEnumerable.call(t,n)&&e.push(n)}return e};function clone(t){return Array.isArray(t)?cloneArray(t):isOptionObject(t)?cloneOptionObject(t):t}function cloneArray(t){const e=t.slice(0,0);return getEnumerableOwnPropertyKeys(t).forEach(r=>{defineProperty(e,r,clone(t[r]))}),e}function cloneOptionObject(t){const e=Object.getPrototypeOf(t)===null?Object.create(null):{};return getEnumerableOwnPropertyKeys(t).forEach(r=>{defineProperty(e,r,clone(t[r]))}),e}const mergeKeys=(t,e,r,n)=>(r.forEach(o=>{typeof e[o]>"u"&&n.ignoreUndefined||(o in t&&t[o]!==Object.getPrototypeOf(t)?defineProperty(t,o,merge$4(t[o],e[o],n)):defineProperty(t,o,clone(e[o])))}),t),concatArrays=(t,e,r)=>{let n=t.slice(0,0),o=0;return[t,e].forEach(a=>{const c=[];for(let u=0;u<a.length;u++)hasOwnProperty.call(a,u)&&(c.push(String(u)),a===t?defineProperty(n,o++,a[u]):defineProperty(n,o++,clone(a[u])));n=mergeKeys(n,a,getEnumerableOwnPropertyKeys(a).filter(u=>!c.includes(u)),r)}),n};function merge$4(t,e,r){return r.concatArrays&&Array.isArray(t)&&Array.isArray(e)?concatArrays(t,e,r):!isOptionObject(e)||!isOptionObject(t)?clone(e):mergeKeys(t,e,getEnumerableOwnPropertyKeys(e),r)}var mergeOptions$g=function(...t){const e=merge$4(clone(defaultMergeOptions),this!==globalThis$1&&this||{},defaultMergeOptions);let r={_:{}};for(const n of t)if(n!==void 0){if(!isOptionObject(n))throw new TypeError("`"+n+"` is not an Option Object");r=merge$4(r,{_:n},e)}return r._};const mergeOptions$h=getDefaultExportFromCjs(mergeOptions$g),mergeOptions$f=Object.freeze(Object.defineProperty({__proto__:null,default:mergeOptions$h},Symbol.toStringTag,{value:"Module"}));var define_process_env_default={};const isElectron=isElectron_1,IS_ENV_WITH_DOM=typeof window=="object"&&typeof document=="object"&&document.nodeType===9,IS_ELECTRON=isElectron(),IS_BROWSER=IS_ENV_WITH_DOM&&!IS_ELECTRON,IS_ELECTRON_MAIN=IS_ELECTRON&&!IS_ENV_WITH_DOM,IS_ELECTRON_RENDERER=IS_ELECTRON&&IS_ENV_WITH_DOM,IS_NODE=typeof commonjsRequire=="function"&&typeof browser$1$1<"u"&&typeof browser$1$1.release<"u"&&browser$1$1.release.name==="node"&&!IS_ELECTRON,IS_WEBWORKER=typeof importScripts=="function"&&typeof self<"u"&&typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope,IS_TEST=typeof browser$1$1<"u"&&typeof define_process_env_default<"u"&&!1,IS_REACT_NATIVE=typeof navigator<"u"&&navigator.product==="ReactNative";var env={isTest:IS_TEST,isElectron:IS_ELECTRON,isElectronMain:IS_ELECTRON_MAIN,isElectronRenderer:IS_ELECTRON_RENDERER,isNode:IS_NODE,isBrowser:IS_BROWSER,isWebWorker:IS_WEBWORKER,isEnvWithDom:IS_ENV_WITH_DOM,isReactNative:IS_REACT_NATIVE};function assign$1(t,e){for(const r in e)Object.defineProperty(t,r,{value:e[r],enumerable:!0,configurable:!0});return t}function createError(t,e,r){if(!t||typeof t=="string")throw new TypeError("Please pass an Error to err-code");r||(r={}),typeof e=="object"&&(r=e,e=""),e&&(r.code=e);try{return assign$1(t,r)}catch{r.message=t.message,r.stack=t.stack;const n=function(){};return n.prototype=Object.create(Object.getPrototypeOf(t)),assign$1(new n,r)}}var errCode=createError;errcode=getDefaultExportFromCjs(errCode);var indexMinimal$1={},minimal$3={},aspromise=asPromise;function asPromise(t,e){for(var r=new Array(arguments.length-1),n=0,o=2,a=!0;o<arguments.length;)r[n++]=arguments[o++];return new Promise(function(c,u){r[n]=function(l){if(a)if(a=!1,l)u(l);else{for(var f=new Array(arguments.length-1),p=0;p<f.length;)f[p++]=arguments[p];c.apply(null,f)}};try{t.apply(e||null,r)}catch(l){a&&(a=!1,u(l))}})}var base64$A={};(function(t){var e=t;e.length=function(c){var u=c.length;if(!u)return 0;for(var l=0;--u%4>1&&c.charAt(u)==="=";)++l;return Math.ceil(c.length*3)/4-l};for(var r=new Array(64),n=new Array(123),o=0;o<64;)n[r[o]=o<26?o+65:o<52?o+71:o<62?o-4:o-59|43]=o++;e.encode=function(c,u,l){for(var f=null,p=[],g=0,$=0,_;u<l;){var b=c[u++];switch($){case 0:p[g++]=r[b>>2],_=(b&3)<<4,$=1;break;case 1:p[g++]=r[_|b>>4],_=(b&15)<<2,$=2;break;case 2:p[g++]=r[_|b>>6],p[g++]=r[b&63],$=0;break}g>8191&&((f||(f=[])).push(String.fromCharCode.apply(String,p)),g=0)}return $&&(p[g++]=r[_],p[g++]=61,$===1&&(p[g++]=61)),f?(g&&f.push(String.fromCharCode.apply(String,p.slice(0,g))),f.join("")):String.fromCharCode.apply(String,p.slice(0,g))};var a="invalid encoding";e.decode=function(c,u,l){for(var f=l,p=0,g,$=0;$<c.length;){var _=c.charCodeAt($++);if(_===61&&p>1)break;if((_=n[_])===void 0)throw Error(a);switch(p){case 0:g=_,p=1;break;case 1:u[l++]=g<<2|(_&48)>>4,g=_,p=2;break;case 2:u[l++]=(g&15)<<4|(_&60)>>2,g=_,p=3;break;case 3:u[l++]=(g&3)<<6|_,p=0;break}}if(p===1)throw Error(a);return l-f},e.test=function(c){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(c)}})(base64$A);var eventemitter=EventEmitter$2;function EventEmitter$2(){this._listeners={}}EventEmitter$2.prototype.on=function(t,e,r){return(this._listeners[t]||(this._listeners[t]=[])).push({fn:e,ctx:r||this}),this},EventEmitter$2.prototype.off=function(t,e){if(t===void 0)this._listeners={};else if(e===void 0)this._listeners[t]=[];else for(var r=this._listeners[t],n=0;n<r.length;)r[n].fn===e?r.splice(n,1):++n;return this},EventEmitter$2.prototype.emit=function(t){var e=this._listeners[t];if(e){for(var r=[],n=1;n<arguments.length;)r.push(arguments[n++]);for(n=0;n<e.length;)e[n].fn.apply(e[n++].ctx,r)}return this};var float=factory(factory);function factory(t){return typeof Float32Array<"u"?function(){var e=new Float32Array([-0]),r=new Uint8Array(e.buffer),n=r[3]===128;function o(l,f,p){e[0]=l,f[p]=r[0],f[p+1]=r[1],f[p+2]=r[2],f[p+3]=r[3]}function a(l,f,p){e[0]=l,f[p]=r[3],f[p+1]=r[2],f[p+2]=r[1],f[p+3]=r[0]}t.writeFloatLE=n?o:a,t.writeFloatBE=n?a:o;function c(l,f){return r[0]=l[f],r[1]=l[f+1],r[2]=l[f+2],r[3]=l[f+3],e[0]}function u(l,f){return r[3]=l[f],r[2]=l[f+1],r[1]=l[f+2],r[0]=l[f+3],e[0]}t.readFloatLE=n?c:u,t.readFloatBE=n?u:c}():function(){function e(n,o,a,c){var u=o<0?1:0;if(u&&(o=-o),o===0)n(1/o>0?0:2147483648,a,c);else if(isNaN(o))n(2143289344,a,c);else if(o>3402823466385289e23)n((u<<31|2139095040)>>>0,a,c);else if(o<11754943508222875e-54)n((u<<31|Math.round(o/1401298464324817e-60))>>>0,a,c);else{var l=Math.floor(Math.log(o)/Math.LN2),f=Math.round(o*Math.pow(2,-l)*8388608)&8388607;n((u<<31|l+127<<23|f)>>>0,a,c)}}t.writeFloatLE=e.bind(null,writeUintLE$1),t.writeFloatBE=e.bind(null,writeUintBE$1);function r(n,o,a){var c=n(o,a),u=(c>>31)*2+1,l=c>>>23&255,f=c&8388607;return l===255?f?NaN:u*(1/0):l===0?u*1401298464324817e-60*f:u*Math.pow(2,l-150)*(f+8388608)}t.readFloatLE=r.bind(null,readUintLE$1),t.readFloatBE=r.bind(null,readUintBE$1)}(),typeof Float64Array<"u"?function(){var e=new Float64Array([-0]),r=new Uint8Array(e.buffer),n=r[7]===128;function o(l,f,p){e[0]=l,f[p]=r[0],f[p+1]=r[1],f[p+2]=r[2],f[p+3]=r[3],f[p+4]=r[4],f[p+5]=r[5],f[p+6]=r[6],f[p+7]=r[7]}function a(l,f,p){e[0]=l,f[p]=r[7],f[p+1]=r[6],f[p+2]=r[5],f[p+3]=r[4],f[p+4]=r[3],f[p+5]=r[2],f[p+6]=r[1],f[p+7]=r[0]}t.writeDoubleLE=n?o:a,t.writeDoubleBE=n?a:o;function c(l,f){return r[0]=l[f],r[1]=l[f+1],r[2]=l[f+2],r[3]=l[f+3],r[4]=l[f+4],r[5]=l[f+5],r[6]=l[f+6],r[7]=l[f+7],e[0]}function u(l,f){return r[7]=l[f],r[6]=l[f+1],r[5]=l[f+2],r[4]=l[f+3],r[3]=l[f+4],r[2]=l[f+5],r[1]=l[f+6],r[0]=l[f+7],e[0]}t.readDoubleLE=n?c:u,t.readDoubleBE=n?u:c}():function(){function e(n,o,a,c,u,l){var f=c<0?1:0;if(f&&(c=-c),c===0)n(0,u,l+o),n(1/c>0?0:2147483648,u,l+a);else if(isNaN(c))n(0,u,l+o),n(2146959360,u,l+a);else if(c>17976931348623157e292)n(0,u,l+o),n((f<<31|2146435072)>>>0,u,l+a);else{var p;if(c<22250738585072014e-324)p=c/5e-324,n(p>>>0,u,l+o),n((f<<31|p/4294967296)>>>0,u,l+a);else{var g=Math.floor(Math.log(c)/Math.LN2);g===1024&&(g=1023),p=c*Math.pow(2,-g),n(p*4503599627370496>>>0,u,l+o),n((f<<31|g+1023<<20|p*1048576&1048575)>>>0,u,l+a)}}}t.writeDoubleLE=e.bind(null,writeUintLE$1,0,4),t.writeDoubleBE=e.bind(null,writeUintBE$1,4,0);function r(n,o,a,c,u){var l=n(c,u+o),f=n(c,u+a),p=(f>>31)*2+1,g=f>>>20&2047,$=4294967296*(f&1048575)+l;return g===2047?$?NaN:p*(1/0):g===0?p*5e-324*$:p*Math.pow(2,g-1075)*($+4503599627370496)}t.readDoubleLE=r.bind(null,readUintLE$1,0,4),t.readDoubleBE=r.bind(null,readUintBE$1,4,0)}(),t}function writeUintLE$1(t,e,r){e[r]=t&255,e[r+1]=t>>>8&255,e[r+2]=t>>>16&255,e[r+3]=t>>>24}function writeUintBE$1(t,e,r){e[r]=t>>>24,e[r+1]=t>>>16&255,e[r+2]=t>>>8&255,e[r+3]=t&255}function readUintLE$1(t,e){return(t[e]|t[e+1]<<8|t[e+2]<<16|t[e+3]<<24)>>>0}function readUintBE$1(t,e){return(t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3])>>>0}var inquire_1=inquire;function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(t){}return null}var utf8$2={};(function(t){var e=t;e.length=function(r){for(var n=0,o=0,a=0;a<r.length;++a)o=r.charCodeAt(a),o<128?n+=1:o<2048?n+=2:(o&64512)===55296&&(r.charCodeAt(a+1)&64512)===56320?(++a,n+=4):n+=3;return n},e.read=function(r,n,o){var a=o-n;if(a<1)return"";for(var c=null,u=[],l=0,f;n<o;)f=r[n++],f<128?u[l++]=f:f>191&&f<224?u[l++]=(f&31)<<6|r[n++]&63:f>239&&f<365?(f=((f&7)<<18|(r[n++]&63)<<12|(r[n++]&63)<<6|r[n++]&63)-65536,u[l++]=55296+(f>>10),u[l++]=56320+(f&1023)):u[l++]=(f&15)<<12|(r[n++]&63)<<6|r[n++]&63,l>8191&&((c||(c=[])).push(String.fromCharCode.apply(String,u)),l=0);return c?(l&&c.push(String.fromCharCode.apply(String,u.slice(0,l))),c.join("")):String.fromCharCode.apply(String,u.slice(0,l))},e.write=function(r,n,o){for(var a=o,c,u,l=0;l<r.length;++l)c=r.charCodeAt(l),c<128?n[o++]=c:c<2048?(n[o++]=c>>6|192,n[o++]=c&63|128):(c&64512)===55296&&((u=r.charCodeAt(l+1))&64512)===56320?(c=65536+((c&1023)<<10)+(u&1023),++l,n[o++]=c>>18|240,n[o++]=c>>12&63|128,n[o++]=c>>6&63|128,n[o++]=c&63|128):(n[o++]=c>>12|224,n[o++]=c>>6&63|128,n[o++]=c&63|128);return o-a}})(utf8$2);var pool_1=pool;function pool(t,e,r){var n=r||8192,o=n>>>1,a=null,c=n;return function(u){if(u<1||u>o)return t(u);c+u>n&&(a=t(n),c=0);var l=e.call(a,c,c+=u);return c&7&&(c=(c|7)+1),l}}var longbits$1,hasRequiredLongbits$1;function requireLongbits$1(){if(hasRequiredLongbits$1)return longbits$1;hasRequiredLongbits$1=1,longbits$1=e;var t=requireMinimal$2();function e(a,c){this.lo=a>>>0,this.hi=c>>>0}var r=e.zero=new e(0,0);r.toNumber=function(){return 0},r.zzEncode=r.zzDecode=function(){return this},r.length=function(){return 1};var n=e.zeroHash="\0\0\0\0\0\0\0\0";e.fromNumber=function(a){if(a===0)return r;var c=a<0;c&&(a=-a);var u=a>>>0,l=(a-u)/4294967296>>>0;return c&&(l=~l>>>0,u=~u>>>0,++u>4294967295&&(u=0,++l>4294967295&&(l=0))),new e(u,l)},e.from=function(a){if(typeof a=="number")return e.fromNumber(a);if(t.isString(a))if(t.Long)a=t.Long.fromString(a);else return e.fromNumber(parseInt(a,10));return a.low||a.high?new e(a.low>>>0,a.high>>>0):r},e.prototype.toNumber=function(a){if(!a&&this.hi>>>31){var c=~this.lo+1>>>0,u=~this.hi>>>0;return c||(u=u+1>>>0),-(c+u*4294967296)}return this.lo+this.hi*4294967296},e.prototype.toLong=function(a){return t.Long?new t.Long(this.lo|0,this.hi|0,!!a):{low:this.lo|0,high:this.hi|0,unsigned:!!a}};var o=String.prototype.charCodeAt;return e.fromHash=function(a){return a===n?r:new e((o.call(a,0)|o.call(a,1)<<8|o.call(a,2)<<16|o.call(a,3)<<24)>>>0,(o.call(a,4)|o.call(a,5)<<8|o.call(a,6)<<16|o.call(a,7)<<24)>>>0)},e.prototype.toHash=function(){return String.fromCharCode(this.lo&255,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,this.hi&255,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)},e.prototype.zzEncode=function(){var a=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^a)>>>0,this.lo=(this.lo<<1^a)>>>0,this},e.prototype.zzDecode=function(){var a=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^a)>>>0,this.hi=(this.hi>>>1^a)>>>0,this},e.prototype.length=function(){var a=this.lo,c=(this.lo>>>28|this.hi<<4)>>>0,u=this.hi>>>24;return u===0?c===0?a<16384?a<128?1:2:a<2097152?3:4:c<16384?c<128?5:6:c<2097152?7:8:u<128?9:10},longbits$1}var hasRequiredMinimal$2;function requireMinimal$2(){return hasRequiredMinimal$2||(hasRequiredMinimal$2=1,function(t){var e=t;e.asPromise=aspromise,e.base64=base64$A,e.EventEmitter=eventemitter,e.float=float,e.inquire=inquire_1,e.utf8=utf8$2,e.pool=pool_1,e.LongBits=requireLongbits$1(),e.isNode=!!(typeof commonjsGlobal<"u"&&commonjsGlobal&&commonjsGlobal.process&&commonjsGlobal.process.versions&&commonjsGlobal.process.versions.node),e.global=e.isNode&&commonjsGlobal||typeof window<"u"&&window||typeof self<"u"&&self||commonjsGlobal,e.emptyArray=Object.freeze?Object.freeze([]):[],e.emptyObject=Object.freeze?Object.freeze({}):{},e.isInteger=Number.isInteger||function(o){return typeof o=="number"&&isFinite(o)&&Math.floor(o)===o},e.isString=function(o){return typeof o=="string"||o instanceof String},e.isObject=function(o){return o&&typeof o=="object"},e.isset=e.isSet=function(o,a){var c=o[a];return c!=null&&o.hasOwnProperty(a)?typeof c!="object"||(Array.isArray(c)?c.length:Object.keys(c).length)>0:!1},e.Buffer=function(){try{var o=e.inquire("buffer").Buffer;return o.prototype.utf8Write?o:null}catch{return null}}(),e._Buffer_from=null,e._Buffer_allocUnsafe=null,e.newBuffer=function(o){return typeof o=="number"?e.Buffer?e._Buffer_allocUnsafe(o):new e.Array(o):e.Buffer?e._Buffer_from(o):typeof Uint8Array>"u"?o:new Uint8Array(o)},e.Array=typeof Uint8Array<"u"?Uint8Array:Array,e.Long=e.global.dcodeIO&&e.global.dcodeIO.Long||e.global.Long||e.inquire("long"),e.key2Re=/^true|false|0|1$/,e.key32Re=/^-?(?:0|[1-9][0-9]*)$/,e.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/,e.longToHash=function(o){return o?e.LongBits.from(o).toHash():e.LongBits.zeroHash},e.longFromHash=function(o,a){var c=e.LongBits.fromHash(o);return e.Long?e.Long.fromBits(c.lo,c.hi,a):c.toNumber(!!a)};function r(o,a,c){for(var u=Object.keys(a),l=0;l<u.length;++l)(o[u[l]]===void 0||!c)&&(o[u[l]]=a[u[l]]);return o}e.merge=r,e.lcFirst=function(o){return o.charAt(0).toLowerCase()+o.substring(1)};function n(o){function a(c,u){if(!(this instanceof a))return new a(c,u);Object.defineProperty(this,"message",{get:function(){return c}}),Error.captureStackTrace?Error.captureStackTrace(this,a):Object.defineProperty(this,"stack",{value:new Error().stack||""}),u&&r(this,u)}return a.prototype=Object.create(Error.prototype,{constructor:{value:a,writable:!0,enumerable:!1,configurable:!0},name:{get:function(){return o},set:void 0,enumerable:!1,configurable:!0},toString:{value:function(){return this.name+": "+this.message},writable:!0,enumerable:!1,configurable:!0}}),a}e.newError=n,e.ProtocolError=n("ProtocolError"),e.oneOfGetter=function(o){for(var a={},c=0;c<o.length;++c)a[o[c]]=1;return function(){for(var u=Object.keys(this),l=u.length-1;l>-1;--l)if(a[u[l]]===1&&this[u[l]]!==void 0&&this[u[l]]!==null)return u[l]}},e.oneOfSetter=function(o){return function(a){for(var c=0;c<o.length;++c)o[c]!==a&&delete this[o[c]]}},e.toJSONOptions={longs:String,enums:String,bytes:String,json:!0},e._configure=function(){var o=e.Buffer;if(!o){e._Buffer_from=e._Buffer_allocUnsafe=null;return}e._Buffer_from=o.from!==Uint8Array.from&&o.from||function(a,c){return new o(a,c)},e._Buffer_allocUnsafe=o.allocUnsafe||function(a){return new o(a)}}}(minimal$3)),minimal$3}var writer$3=Writer$1,util$5=requireMinimal$2(),BufferWriter$1,LongBits$2=util$5.LongBits,base64$z=util$5.base64,utf8$1=util$5.utf8;function Op(t,e,r){this.fn=t,this.len=e,this.next=void 0,this.val=r}function noop$4(){}function State(t){this.head=t.head,this.tail=t.tail,this.len=t.len,this.next=t.states}function Writer$1(){this.len=0,this.head=new Op(noop$4,0,0),this.tail=this.head,this.states=null}var create$B=function t(){return util$5.Buffer?function(){return(Writer$1.create=function(){return new BufferWriter$1})()}:function(){return new Writer$1}};Writer$1.create=create$B(),Writer$1.alloc=function t(e){return new util$5.Array(e)},util$5.Array!==Array&&(Writer$1.alloc=util$5.pool(Writer$1.alloc,util$5.Array.prototype.subarray)),Writer$1.prototype._push=function t(e,r,n){return this.tail=this.tail.next=new Op(e,r,n),this.len+=r,this};function writeByte(t,e,r){e[r]=t&255}function writeVarint32(t,e,r){for(;t>127;)e[r++]=t&127|128,t>>>=7;e[r]=t}function VarintOp(t,e){this.len=t,this.next=void 0,this.val=e}VarintOp.prototype=Object.create(Op.prototype),VarintOp.prototype.fn=writeVarint32,Writer$1.prototype.uint32=function t(e){return this.len+=(this.tail=this.tail.next=new VarintOp((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this},Writer$1.prototype.int32=function t(e){return e<0?this._push(writeVarint64,10,LongBits$2.fromNumber(e)):this.uint32(e)},Writer$1.prototype.sint32=function t(e){return this.uint32((e<<1^e>>31)>>>0)};function writeVarint64(t,e,r){for(;t.hi;)e[r++]=t.lo&127|128,t.lo=(t.lo>>>7|t.hi<<25)>>>0,t.hi>>>=7;for(;t.lo>127;)e[r++]=t.lo&127|128,t.lo=t.lo>>>7;e[r++]=t.lo}Writer$1.prototype.uint64=function t(e){var r=LongBits$2.from(e);return this._push(writeVarint64,r.length(),r)},Writer$1.prototype.int64=Writer$1.prototype.uint64,Writer$1.prototype.sint64=function t(e){var r=LongBits$2.from(e).zzEncode();return this._push(writeVarint64,r.length(),r)},Writer$1.prototype.bool=function t(e){return this._push(writeByte,1,e?1:0)};function writeFixed32(t,e,r){e[r]=t&255,e[r+1]=t>>>8&255,e[r+2]=t>>>16&255,e[r+3]=t>>>24}Writer$1.prototype.fixed32=function t(e){return this._push(writeFixed32,4,e>>>0)},Writer$1.prototype.sfixed32=Writer$1.prototype.fixed32,Writer$1.prototype.fixed64=function t(e){var r=LongBits$2.from(e);return this._push(writeFixed32,4,r.lo)._push(writeFixed32,4,r.hi)},Writer$1.prototype.sfixed64=Writer$1.prototype.fixed64,Writer$1.prototype.float=function t(e){return this._push(util$5.float.writeFloatLE,4,e)},Writer$1.prototype.double=function t(e){return this._push(util$5.float.writeDoubleLE,8,e)};var writeBytes=util$5.Array.prototype.set?function t(e,r,n){r.set(e,n)}:function t(e,r,n){for(var o=0;o<e.length;++o)r[n+o]=e[o]};Writer$1.prototype.bytes=function t(e){var r=e.length>>>0;if(!r)return this._push(writeByte,1,0);if(util$5.isString(e)){var n=Writer$1.alloc(r=base64$z.length(e));base64$z.decode(e,n,0),e=n}return this.uint32(r)._push(writeBytes,r,e)},Writer$1.prototype.string=function t(e){var r=utf8$1.length(e);return r?this.uint32(r)._push(utf8$1.write,r,e):this._push(writeByte,1,0)},Writer$1.prototype.fork=function t(){return this.states=new State(this),this.head=this.tail=new Op(noop$4,0,0),this.len=0,this},Writer$1.prototype.reset=function t(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new Op(noop$4,0,0),this.len=0),this},Writer$1.prototype.ldelim=function t(){var e=this.head,r=this.tail,n=this.len;return this.reset().uint32(n),n&&(this.tail.next=e.next,this.tail=r,this.len+=n),this},Writer$1.prototype.finish=function t(){for(var e=this.head.next,r=this.constructor.alloc(this.len),n=0;e;)e.fn(e.val,r,n),n+=e.len,e=e.next;return r},Writer$1._configure=function(t){BufferWriter$1=t,Writer$1.create=create$B(),BufferWriter$1._configure()};const WriterClass=getDefaultExportFromCjs(writer$3);var writer_buffer$1=BufferWriter,Writer=writer$3;(BufferWriter.prototype=Object.create(Writer.prototype)).constructor=BufferWriter;var util$4=requireMinimal$2();function BufferWriter(){Writer.call(this)}BufferWriter._configure=function(){BufferWriter.alloc=util$4._Buffer_allocUnsafe,BufferWriter.writeBytesBuffer=util$4.Buffer&&util$4.Buffer.prototype instanceof Uint8Array&&util$4.Buffer.prototype.set.name==="set"?function(t,e,r){e.set(t,r)}:function(t,e,r){if(t.copy)t.copy(e,r,0,t.length);else for(var n=0;n<t.length;)e[r++]=t[n++]}},BufferWriter.prototype.bytes=function t(e){util$4.isString(e)&&(e=util$4._Buffer_from(e,"base64"));var r=e.length>>>0;return this.uint32(r),r&&this._push(BufferWriter.writeBytesBuffer,r,e),this};function writeStringBuffer(t,e,r){t.length<40?util$4.utf8.write(t,e,r):e.utf8Write?e.utf8Write(t,r):e.write(t,r)}BufferWriter.prototype.string=function t(e){var r=util$4.Buffer.byteLength(e);return this.uint32(r),r&&this._push(writeStringBuffer,r,e),this},BufferWriter._configure();const WriterBufferClass=getDefaultExportFromCjs(writer_buffer$1);var reader$4=Reader$1,util$3=requireMinimal$2(),BufferReader$1,LongBits$1=util$3.LongBits,utf8=util$3.utf8;function indexOutOfRange(t,e){return RangeError("index out of range: "+t.pos+" + "+(e||1)+" > "+t.len)}function Reader$1(t){this.buf=t,this.pos=0,this.len=t.length}var create_array=typeof Uint8Array<"u"?function t(e){if(e instanceof Uint8Array||Array.isArray(e))return new Reader$1(e);throw Error("illegal buffer")}:function t(e){if(Array.isArray(e))return new Reader$1(e);throw Error("illegal buffer")},create$A=function t(){return util$3.Buffer?function(e){return(Reader$1.create=function(r){return util$3.Buffer.isBuffer(r)?new BufferReader$1(r):create_array(r)})(e)}:create_array};Reader$1.create=create$A(),Reader$1.prototype._slice=util$3.Array.prototype.subarray||util$3.Array.prototype.slice,Reader$1.prototype.uint32=function t(){var e=4294967295;return function(){if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,indexOutOfRange(this,10);return e}}(),Reader$1.prototype.int32=function t(){return this.uint32()|0},Reader$1.prototype.sint32=function t(){var e=this.uint32();return e>>>1^-(e&1)|0};function readLongVarint(){var t=new LongBits$1(0,0),e=0;if(this.len-this.pos>4){for(;e<4;++e)if(t.lo=(t.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return t;if(t.lo=(t.lo|(this.buf[this.pos]&127)<<28)>>>0,t.hi=(t.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return t;e=0}else{for(;e<3;++e){if(this.pos>=this.len)throw indexOutOfRange(this);if(t.lo=(t.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return t}return t.lo=(t.lo|(this.buf[this.pos++]&127)<<e*7)>>>0,t}if(this.len-this.pos>4){for(;e<5;++e)if(t.hi=(t.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return t}else for(;e<5;++e){if(this.pos>=this.len)throw indexOutOfRange(this);if(t.hi=(t.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return t}throw Error("invalid varint encoding")}Reader$1.prototype.bool=function t(){return this.uint32()!==0};function readFixed32_end(t,e){return(t[e-4]|t[e-3]<<8|t[e-2]<<16|t[e-1]<<24)>>>0}Reader$1.prototype.fixed32=function t(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);return readFixed32_end(this.buf,this.pos+=4)},Reader$1.prototype.sfixed32=function t(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);return readFixed32_end(this.buf,this.pos+=4)|0};function readFixed64(){if(this.pos+8>this.len)throw indexOutOfRange(this,8);return new LongBits$1(readFixed32_end(this.buf,this.pos+=4),readFixed32_end(this.buf,this.pos+=4))}Reader$1.prototype.float=function t(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);var e=util$3.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e},Reader$1.prototype.double=function t(){if(this.pos+8>this.len)throw indexOutOfRange(this,4);var e=util$3.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e},Reader$1.prototype.bytes=function t(){var e=this.uint32(),r=this.pos,n=this.pos+e;if(n>this.len)throw indexOutOfRange(this,e);if(this.pos+=e,Array.isArray(this.buf))return this.buf.slice(r,n);if(r===n){var o=util$3.Buffer;return o?o.alloc(0):new this.buf.constructor(0)}return this._slice.call(this.buf,r,n)},Reader$1.prototype.string=function t(){var e=this.bytes();return utf8.read(e,0,e.length)},Reader$1.prototype.skip=function t(e){if(typeof e=="number"){if(this.pos+e>this.len)throw indexOutOfRange(this,e);this.pos+=e}else do if(this.pos>=this.len)throw indexOutOfRange(this);while(this.buf[this.pos++]&128);return this},Reader$1.prototype.skipType=function(t){switch(t){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(t=this.uint32()&7)!==4;)this.skipType(t);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+t+" at offset "+this.pos)}return this},Reader$1._configure=function(t){BufferReader$1=t,Reader$1.create=create$A(),BufferReader$1._configure();var e=util$3.Long?"toLong":"toNumber";util$3.merge(Reader$1.prototype,{int64:function(){return readLongVarint.call(this)[e](!1)},uint64:function(){return readLongVarint.call(this)[e](!0)},sint64:function(){return readLongVarint.call(this).zzDecode()[e](!1)},fixed64:function(){return readFixed64.call(this)[e](!0)},sfixed64:function(){return readFixed64.call(this)[e](!1)}})};const ReaderClass=getDefaultExportFromCjs(reader$4);var reader_buffer$1=BufferReader,Reader=reader$4;(BufferReader.prototype=Object.create(Reader.prototype)).constructor=BufferReader;var util$2=requireMinimal$2();function BufferReader(t){Reader.call(this,t)}BufferReader._configure=function(){util$2.Buffer&&(BufferReader.prototype._slice=util$2.Buffer.prototype.slice)},BufferReader.prototype.string=function t(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))},BufferReader._configure();const ReaderBufferClass=getDefaultExportFromCjs(reader_buffer$1);var rpc$2={},service$1=Service$1,util$1=requireMinimal$2();(Service$1.prototype=Object.create(util$1.EventEmitter.prototype)).constructor=Service$1;function Service$1(t,e,r){if(typeof t!="function")throw TypeError("rpcImpl must be a function");util$1.EventEmitter.call(this),this.rpcImpl=t,this.requestDelimited=!!e,this.responseDelimited=!!r}Service$1.prototype.rpcCall=function t(e,r,n,o,a){if(!o)throw TypeError("request must be specified");var c=this;if(!a)return util$1.asPromise(t,c,e,r,n,o);if(!c.rpcImpl){setTimeout(function(){a(Error("already ended"))},0);return}try{return c.rpcImpl(e,r[c.requestDelimited?"encodeDelimited":"encode"](o).finish(),function(u,l){if(u)return c.emit("error",u,e),a(u);if(l===null){c.end(!0);return}if(!(l instanceof n))try{l=n[c.responseDelimited?"decodeDelimited":"decode"](l)}catch(f){return c.emit("error",f,e),a(f)}return c.emit("data",l,e),a(null,l)})}catch(u){c.emit("error",u,e),setTimeout(function(){a(u)},0);return}},Service$1.prototype.end=function t(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this},function(t){var e=t;e.Service=service$1}(rpc$2);var roots$1={};(function(t){var e=t;e.build="minimal",e.Writer=writer$3,e.BufferWriter=writer_buffer$1,e.Reader=reader$4,e.BufferReader=reader_buffer$1,e.util=requireMinimal$2(),e.rpc=rpc$2,e.roots=roots$1,e.configure=r;function r(){e.util._configure(),e.Writer._configure(e.BufferWriter),e.Reader._configure(e.BufferReader)}r()})(indexMinimal$1);var minimal$2=indexMinimal$1;const $protobuf=getDefaultExportFromCjs(minimal$2),$Reader$7=$protobuf.Reader,$Writer$7=$protobuf.Writer,$util$6=$protobuf.util,$root$7=$protobuf.roots["ipfs-unixfs"]||($protobuf.roots["ipfs-unixfs"]={}),Data=$root$7.Data=(()=>{function t(e){if(this.blocksizes=[],e)for(var r=Object.keys(e),n=0;n<r.length;++n)e[r[n]]!=null&&(this[r[n]]=e[r[n]])}return t.prototype.Type=0,t.prototype.Data=$util$6.newBuffer([]),t.prototype.filesize=$util$6.Long?$util$6.Long.fromBits(0,0,!0):0,t.prototype.blocksizes=$util$6.emptyArray,t.prototype.hashType=$util$6.Long?$util$6.Long.fromBits(0,0,!0):0,t.prototype.fanout=$util$6.Long?$util$6.Long.fromBits(0,0,!0):0,t.prototype.mode=0,t.prototype.mtime=null,t.encode=function(e,r){if(r||(r=$Writer$7.create()),r.uint32(8).int32(e.Type),e.Data!=null&&Object.hasOwnProperty.call(e,"Data")&&r.uint32(18).bytes(e.Data),e.filesize!=null&&Object.hasOwnProperty.call(e,"filesize")&&r.uint32(24).uint64(e.filesize),e.blocksizes!=null&&e.blocksizes.length)for(var n=0;n<e.blocksizes.length;++n)r.uint32(32).uint64(e.blocksizes[n]);return e.hashType!=null&&Object.hasOwnProperty.call(e,"hashType")&&r.uint32(40).uint64(e.hashType),e.fanout!=null&&Object.hasOwnProperty.call(e,"fanout")&&r.uint32(48).uint64(e.fanout),e.mode!=null&&Object.hasOwnProperty.call(e,"mode")&&r.uint32(56).uint32(e.mode),e.mtime!=null&&Object.hasOwnProperty.call(e,"mtime")&&$root$7.UnixTime.encode(e.mtime,r.uint32(66).fork()).ldelim(),r},t.decode=function(e,r){e instanceof $Reader$7||(e=$Reader$7.create(e));for(var n=r===void 0?e.len:e.pos+r,o=new $root$7.Data;e.pos<n;){var a=e.uint32();switch(a>>>3){case 1:o.Type=e.int32();break;case 2:o.Data=e.bytes();break;case 3:o.filesize=e.uint64();break;case 4:if(o.blocksizes&&o.blocksizes.length||(o.blocksizes=[]),(a&7)===2)for(var c=e.uint32()+e.pos;e.pos<c;)o.blocksizes.push(e.uint64());else o.blocksizes.push(e.uint64());break;case 5:o.hashType=e.uint64();break;case 6:o.fanout=e.uint64();break;case 7:o.mode=e.uint32();break;case 8:o.mtime=$root$7.UnixTime.decode(e,e.uint32());break;default:e.skipType(a&7);break}}if(!o.hasOwnProperty("Type"))throw $util$6.ProtocolError("missing required 'Type'",{instance:o});return o},t.fromObject=function(e){if(e instanceof $root$7.Data)return e;var r=new $root$7.Data;switch(e.Type){case"Raw":case 0:r.Type=0;break;case"Directory":case 1:r.Type=1;break;case"File":case 2:r.Type=2;break;case"Metadata":case 3:r.Type=3;break;case"Symlink":case 4:r.Type=4;break;case"HAMTShard":case 5:r.Type=5;break}if(e.Data!=null&&(typeof e.Data=="string"?$util$6.base64.decode(e.Data,r.Data=$util$6.newBuffer($util$6.base64.length(e.Data)),0):e.Data.length&&(r.Data=e.Data)),e.filesize!=null&&($util$6.Long?(r.filesize=$util$6.Long.fromValue(e.filesize)).unsigned=!0:typeof e.filesize=="string"?r.filesize=parseInt(e.filesize,10):typeof e.filesize=="number"?r.filesize=e.filesize:typeof e.filesize=="object"&&(r.filesize=new $util$6.LongBits(e.filesize.low>>>0,e.filesize.high>>>0).toNumber(!0))),e.blocksizes){if(!Array.isArray(e.blocksizes))throw TypeError(".Data.blocksizes: array expected");r.blocksizes=[];for(var n=0;n<e.blocksizes.length;++n)$util$6.Long?(r.blocksizes[n]=$util$6.Long.fromValue(e.blocksizes[n])).unsigned=!0:typeof e.blocksizes[n]=="string"?r.blocksizes[n]=parseInt(e.blocksizes[n],10):typeof e.blocksizes[n]=="number"?r.blocksizes[n]=e.blocksizes[n]:typeof e.blocksizes[n]=="object"&&(r.blocksizes[n]=new $util$6.LongBits(e.blocksizes[n].low>>>0,e.blocksizes[n].high>>>0).toNumber(!0))}if(e.hashType!=null&&($util$6.Long?(r.hashType=$util$6.Long.fromValue(e.hashType)).unsigned=!0:typeof e.hashType=="string"?r.hashType=parseInt(e.hashType,10):typeof e.hashType=="number"?r.hashType=e.hashType:typeof e.hashType=="object"&&(r.hashType=new $util$6.LongBits(e.hashType.low>>>0,e.hashType.high>>>0).toNumber(!0))),e.fanout!=null&&($util$6.Long?(r.fanout=$util$6.Long.fromValue(e.fanout)).unsigned=!0:typeof e.fanout=="string"?r.fanout=parseInt(e.fanout,10):typeof e.fanout=="number"?r.fanout=e.fanout:typeof e.fanout=="object"&&(r.fanout=new $util$6.LongBits(e.fanout.low>>>0,e.fanout.high>>>0).toNumber(!0))),e.mode!=null&&(r.mode=e.mode>>>0),e.mtime!=null){if(typeof e.mtime!="object")throw TypeError(".Data.mtime: object expected");r.mtime=$root$7.UnixTime.fromObject(e.mtime)}return r},t.toObject=function(e,r){r||(r={});var n={};if((r.arrays||r.defaults)&&(n.blocksizes=[]),r.defaults){if(n.Type=r.enums===String?"Raw":0,r.bytes===String?n.Data="":(n.Data=[],r.bytes!==Array&&(n.Data=$util$6.newBuffer(n.Data))),$util$6.Long){var o=new $util$6.Long(0,0,!0);n.filesize=r.longs===String?o.toString():r.longs===Number?o.toNumber():o}else n.filesize=r.longs===String?"0":0;if($util$6.Long){var o=new $util$6.Long(0,0,!0);n.hashType=r.longs===String?o.toString():r.longs===Number?o.toNumber():o}else n.hashType=r.longs===String?"0":0;if($util$6.Long){var o=new $util$6.Long(0,0,!0);n.fanout=r.longs===String?o.toString():r.longs===Number?o.toNumber():o}else n.fanout=r.longs===String?"0":0;n.mode=0,n.mtime=null}if(e.Type!=null&&e.hasOwnProperty("Type")&&(n.Type=r.enums===String?$root$7.Data.DataType[e.Type]:e.Type),e.Data!=null&&e.hasOwnProperty("Data")&&(n.Data=r.bytes===String?$util$6.base64.encode(e.Data,0,e.Data.length):r.bytes===Array?Array.prototype.slice.call(e.Data):e.Data),e.filesize!=null&&e.hasOwnProperty("filesize")&&(typeof e.filesize=="number"?n.filesize=r.longs===String?String(e.filesize):e.filesize:n.filesize=r.longs===String?$util$6.Long.prototype.toString.call(e.filesize):r.longs===Number?new $util$6.LongBits(e.filesize.low>>>0,e.filesize.high>>>0).toNumber(!0):e.filesize),e.blocksizes&&e.blocksizes.length){n.blocksizes=[];for(var a=0;a<e.blocksizes.length;++a)typeof e.blocksizes[a]=="number"?n.blocksizes[a]=r.longs===String?String(e.blocksizes[a]):e.blocksizes[a]:n.blocksizes[a]=r.longs===String?$util$6.Long.prototype.toString.call(e.blocksizes[a]):r.longs===Number?new $util$6.LongBits(e.blocksizes[a].low>>>0,e.blocksizes[a].high>>>0).toNumber(!0):e.blocksizes[a]}return e.hashType!=null&&e.hasOwnProperty("hashType")&&(typeof e.hashType=="number"?n.hashType=r.longs===String?String(e.hashType):e.hashType:n.hashType=r.longs===String?$util$6.Long.prototype.toString.call(e.hashType):r.longs===Number?new $util$6.LongBits(e.hashType.low>>>0,e.hashType.high>>>0).toNumber(!0):e.hashType),e.fanout!=null&&e.hasOwnProperty("fanout")&&(typeof e.fanout=="number"?n.fanout=r.longs===String?String(e.fanout):e.fanout:n.fanout=r.longs===String?$util$6.Long.prototype.toString.call(e.fanout):r.longs===Number?new $util$6.LongBits(e.fanout.low>>>0,e.fanout.high>>>0).toNumber(!0):e.fanout),e.mode!=null&&e.hasOwnProperty("mode")&&(n.mode=e.mode),e.mtime!=null&&e.hasOwnProperty("mtime")&&(n.mtime=$root$7.UnixTime.toObject(e.mtime,r)),n},t.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},t.DataType=function(){const e={},r=Object.create(e);return r[e[0]="Raw"]=0,r[e[1]="Directory"]=1,r[e[2]="File"]=2,r[e[3]="Metadata"]=3,r[e[4]="Symlink"]=4,r[e[5]="HAMTShard"]=5,r}(),t})();$root$7.UnixTime=(()=>{function t(e){if(e)for(var r=Object.keys(e),n=0;n<r.length;++n)e[r[n]]!=null&&(this[r[n]]=e[r[n]])}return t.prototype.Seconds=$util$6.Long?$util$6.Long.fromBits(0,0,!1):0,t.prototype.FractionalNanoseconds=0,t.encode=function(e,r){return r||(r=$Writer$7.create()),r.uint32(8).int64(e.Seconds),e.FractionalNanoseconds!=null&&Object.hasOwnProperty.call(e,"FractionalNanoseconds")&&r.uint32(21).fixed32(e.FractionalNanoseconds),r},t.decode=function(e,r){e instanceof $Reader$7||(e=$Reader$7.create(e));for(var n=r===void 0?e.len:e.pos+r,o=new $root$7.UnixTime;e.pos<n;){var a=e.uint32();switch(a>>>3){case 1:o.Seconds=e.int64();break;case 2:o.FractionalNanoseconds=e.fixed32();break;default:e.skipType(a&7);break}}if(!o.hasOwnProperty("Seconds"))throw $util$6.ProtocolError("missing required 'Seconds'",{instance:o});return o},t.fromObject=function(e){if(e instanceof $root$7.UnixTime)return e;var r=new $root$7.UnixTime;return e.Seconds!=null&&($util$6.Long?(r.Seconds=$util$6.Long.fromValue(e.Seconds)).unsigned=!1:typeof e.Seconds=="string"?r.Seconds=parseInt(e.Seconds,10):typeof e.Seconds=="number"?r.Seconds=e.Seconds:typeof e.Seconds=="object"&&(r.Seconds=new $util$6.LongBits(e.Seconds.low>>>0,e.Seconds.high>>>0).toNumber())),e.FractionalNanoseconds!=null&&(r.FractionalNanoseconds=e.FractionalNanoseconds>>>0),r},t.toObject=function(e,r){r||(r={});var n={};if(r.defaults){if($util$6.Long){var o=new $util$6.Long(0,0,!1);n.Seconds=r.longs===String?o.toString():r.longs===Number?o.toNumber():o}else n.Seconds=r.longs===String?"0":0;n.FractionalNanoseconds=0}return e.Seconds!=null&&e.hasOwnProperty("Seconds")&&(typeof e.Seconds=="number"?n.Seconds=r.longs===String?String(e.Seconds):e.Seconds:n.Seconds=r.longs===String?$util$6.Long.prototype.toString.call(e.Seconds):r.longs===Number?new $util$6.LongBits(e.Seconds.low>>>0,e.Seconds.high>>>0).toNumber():e.Seconds),e.FractionalNanoseconds!=null&&e.hasOwnProperty("FractionalNanoseconds")&&(n.FractionalNanoseconds=e.FractionalNanoseconds),n},t.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},t})(),$root$7.Metadata=(()=>{function t(e){if(e)for(var r=Object.keys(e),n=0;n<r.length;++n)e[r[n]]!=null&&(this[r[n]]=e[r[n]])}return t.prototype.MimeType="",t.encode=function(e,r){return r||(r=$Writer$7.create()),e.MimeType!=null&&Object.hasOwnProperty.call(e,"MimeType")&&r.uint32(10).string(e.MimeType),r},t.decode=function(e,r){e instanceof $Reader$7||(e=$Reader$7.create(e));for(var n=r===void 0?e.len:e.pos+r,o=new $root$7.Metadata;e.pos<n;){var a=e.uint32();switch(a>>>3){case 1:o.MimeType=e.string();break;default:e.skipType(a&7);break}}return o},t.fromObject=function(e){if(e instanceof $root$7.Metadata)return e;var r=new $root$7.Metadata;return e.MimeType!=null&&(r.MimeType=String(e.MimeType)),r},t.toObject=function(e,r){r||(r={});var n={};return r.defaults&&(n.MimeType=""),e.MimeType!=null&&e.hasOwnProperty("MimeType")&&(n.MimeType=e.MimeType),n},t.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},t})();const PBData=Data,types=["raw","directory","file","metadata","symlink","hamt-sharded-directory"],dirTypes=["directory","hamt-sharded-directory"],DEFAULT_FILE_MODE=parseInt("0644",8),DEFAULT_DIRECTORY_MODE=parseInt("0755",8);function parseMode(t){if(t!=null)return typeof t=="number"?t&4095:(t=t.toString(),t.substring(0,1)==="0"?parseInt(t,8)&4095:parseInt(t,10)&4095)}function parseMtime$1(t){if(t==null)return;let e;if(t.secs!=null&&(e={secs:t.secs,nsecs:t.nsecs}),t.Seconds!=null&&(e={secs:t.Seconds,nsecs:t.FractionalNanoseconds}),Array.isArray(t)&&(e={secs:t[0],nsecs:t[1]}),t instanceof Date){const r=t.getTime(),n=Math.floor(r/1e3);e={secs:n,nsecs:(r-n*1e3)*1e3}}if(Object.prototype.hasOwnProperty.call(e,"secs")){if(e!=null&&e.nsecs!=null&&(e.nsecs<0||e.nsecs>999999999))throw errcode(new Error("mtime-nsecs must be within the range [0,999999999]"),"ERR_INVALID_MTIME_NSECS");return e}}class UnixFS{static unmarshal(e){const r=PBData.decode(e),n=PBData.toObject(r,{defaults:!1,arrays:!0,longs:Number,objects:!1}),o=new UnixFS({type:types[n.Type],data:n.Data,blockSizes:n.blocksizes,mode:n.mode,mtime:n.mtime?{secs:n.mtime.Seconds,nsecs:n.mtime.FractionalNanoseconds}:void 0});return o._originalMode=n.mode||0,o}constructor(e={type:"file"}){const{type:r,data:n,blockSizes:o,hashType:a,fanout:c,mtime:u,mode:l}=e;if(r&&!types.includes(r))throw errcode(new Error("Type: "+r+" is not valid"),"ERR_INVALID_TYPE");this.type=r||"file",this.data=n,this.hashType=a,this.fanout=c,this.blockSizes=o||[],this._originalMode=0,this.mode=parseMode(l),u&&(this.mtime=parseMtime$1(u),this.mtime&&!this.mtime.nsecs&&(this.mtime.nsecs=0))}set mode(e){this._mode=this.isDirectory()?DEFAULT_DIRECTORY_MODE:DEFAULT_FILE_MODE;const r=parseMode(e);r!==void 0&&(this._mode=r)}get mode(){return this._mode}isDirectory(){return!!(this.type&&dirTypes.includes(this.type))}addBlockSize(e){this.blockSizes.push(e)}removeBlockSize(e){this.blockSizes.splice(e,1)}fileSize(){if(this.isDirectory())return 0;let e=0;return this.blockSizes.forEach(r=>{e+=r}),this.data&&(e+=this.data.length),e}marshal(){let e;switch(this.type){case"raw":e=PBData.DataType.Raw;break;case"directory":e=PBData.DataType.Directory;break;case"file":e=PBData.DataType.File;break;case"metadata":e=PBData.DataType.Metadata;break;case"symlink":e=PBData.DataType.Symlink;break;case"hamt-sharded-directory":e=PBData.DataType.HAMTShard;break;default:throw errcode(new Error("Type: "+e+" is not valid"),"ERR_INVALID_TYPE")}let r=this.data;(!this.data||!this.data.length)&&(r=void 0);let n;this.mode!=null&&(n=this._originalMode&4294963200|(parseMode(this.mode)||0),n===DEFAULT_FILE_MODE&&!this.isDirectory()&&(n=void 0),n===DEFAULT_DIRECTORY_MODE&&this.isDirectory()&&(n=void 0));let o;if(this.mtime!=null){const c=parseMtime$1(this.mtime);c&&(o={Seconds:c.secs,FractionalNanoseconds:c.nsecs},o.FractionalNanoseconds===0&&delete o.FractionalNanoseconds)}const a={Type:e,Data:r,filesize:this.isDirectory()?void 0:this.fileSize(),blocksizes:this.blockSizes,hashType:this.hashType,fanout:this.fanout,mode:n,mtime:o};return PBData.encode(a).finish()}}function equals$P(t,e){if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0}function coerce$t(t){if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")}function base$w(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$w=base$w,_brrp__multiformats_scope_baseX$s=src$w;let Encoder$v=class{constructor(t,e,r){N(this,"name");N(this,"prefix");N(this,"baseEncode");this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$v=class{constructor(t,e,r){N(this,"name");N(this,"prefix");N(this,"baseDecode");N(this,"prefixCodePoint");if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$x(this,t)}},ComposedDecoder$t=class{constructor(t){N(this,"decoders");this.decoders=t}or(t){return or$x(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r!=null)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};function or$x(t,e){return new ComposedDecoder$t({...t.decoders??{[t.prefix]:t},...e.decoders??{[e.prefix]:e}})}let Codec$t=class{constructor(t,e,r,n){N(this,"name");N(this,"prefix");N(this,"baseEncode");N(this,"baseDecode");N(this,"encoder");N(this,"decoder");this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$v(t,e,r),this.decoder=new Decoder$v(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};function from$G({name:t,prefix:e,encode:r,decode:n}){return new Codec$t(t,e,r,n)}function baseX$s({name:t,prefix:e,alphabet:r}){const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$s(r,t);return from$G({prefix:e,name:t,encode:n,decode:a=>coerce$t(o(a))})}function decode$2o(t,e,r,n){const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c}function encode$1N(t,e,r){const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c!==0&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a}function rfc4648$t({name:t,prefix:e,bitsPerChar:r,alphabet:n}){return from$G({prefix:e,name:t,encode(o){return encode$1N(o,n,r)},decode(o){return decode$2o(o,n,r,t)}})}const base32$F=rfc4648$t({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5});rfc4648$t({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),rfc4648$t({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),rfc4648$t({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),rfc4648$t({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),rfc4648$t({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),rfc4648$t({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),rfc4648$t({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),rfc4648$t({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});const base58btc$q=baseX$s({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"});baseX$s({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var encode_1$t=encode$1M,MSB$A=128,REST$A=127,MSBALL$t=~REST$A,INT$t=Math.pow(2,31);function encode$1M(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$t;)e[r++]=t&255|MSB$A,t/=128;for(;t&MSBALL$t;)e[r++]=t&255|MSB$A,t>>>=7;return e[r]=t|0,encode$1M.bytes=r-n+1,e}var decode$2n=read$u,MSB$1$t=128,REST$1$t=127;function read$u(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$u.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$t)<<o:(c&REST$1$t)*Math.pow(2,o),o+=7}while(c>=MSB$1$t);return read$u.bytes=a-n,r}var N1$z=Math.pow(2,7),N2$z=Math.pow(2,14),N3$z=Math.pow(2,21),N4$z=Math.pow(2,28),N5$z=Math.pow(2,35),N6$z=Math.pow(2,42),N7$z=Math.pow(2,49),N8$u=Math.pow(2,56),N9$u=Math.pow(2,63),length$v=function(t){return t<N1$z?1:t<N2$z?2:t<N3$z?3:t<N4$z?4:t<N5$z?5:t<N6$z?6:t<N7$z?7:t<N8$u?8:t<N9$u?9:10},varint$u={encode:encode_1$t,decode:decode$2n,encodingLength:length$v},_brrp_varint$s=varint$u;function decode$2m(t,e=0){return[_brrp_varint$s.decode(t,e),_brrp_varint$s.decode.bytes]}function encodeTo$s(t,e,r=0){return _brrp_varint$s.encode(t,e,r),e}function encodingLength$x(t){return _brrp_varint$s.encodingLength(t)}function create$z(t,e){const r=e.byteLength,n=encodingLength$x(t),o=n+encodingLength$x(r),a=new Uint8Array(o+r);return encodeTo$s(t,a,0),encodeTo$s(r,a,n),a.set(e,o),new Digest$s(t,r,e,a)}function decode$2l(t){const e=coerce$t(t),[r,n]=decode$2m(e),[o,a]=decode$2m(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$s(r,o,c,e)}function equals$O(t,e){if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$P(t.bytes,r.bytes)}}let Digest$s=class{constructor(t,e,r,n){N(this,"code");N(this,"size");N(this,"digest");N(this,"bytes");this.code=t,this.size=e,this.digest=r,this.bytes=n}};function format$s(t,e){const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$n(r,baseCache$n(t),e??base58btc$q.encoder);default:return toStringV1$n(r,baseCache$n(t),e??base32$F.encoder)}}const cache$r=new WeakMap;function baseCache$n(t){const e=cache$r.get(t);if(e==null){const r=new Map;return cache$r.set(t,r),r}return e}let CID$n=class Ie{constructor(e,r,n,o){N(this,"code");N(this,"version");N(this,"multihash");N(this,"bytes");N(this,"/");N(this,de,"CID");this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$n)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$n)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return Ie.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$z(e,r);return Ie.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return Ie.equals(this,e)}static equals(e,r){const n=r;return n!=null&&e.code===n.code&&e.version===n.version&&equals$O(e.multihash,n.multihash)}toString(e){return format$s(this,e)}toJSON(){return{"/":format$s(this)}}link(){return this}[(de=Symbol.toStringTag,Symbol.for("nodejs.util.inspect.custom"))](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof Ie)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new Ie(n,o,a,c??encodeCID$o(n,o,a.bytes))}else if(r[cidSymbol$n]===!0){const{version:n,multihash:o,code:a}=r,c=decode$2l(o);return Ie.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$n)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$n}) block encoding`);return new Ie(e,r,n,n.bytes)}case 1:{const o=encodeCID$o(e,r,n.bytes);return new Ie(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return Ie.create(0,DAG_PB_CODE$n,e)}static createV1(e,r){return Ie.create(1,e,r)}static decode(e){const[r,n]=Ie.decodeFirst(e);if(n.length!==0)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=Ie.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$t(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$s(r.multihashCode,r.digestSize,a,o);return[r.version===0?Ie.createV0(c):Ie.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$2m(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$n;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$n(e,r),a=Ie.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$n(a).set(n,e),a}};function parseCIDtoBytes$n(t,e){switch(t[0]){case"Q":{const r=e??base58btc$q;return[base58btc$q.prefix,r.decode(`${base58btc$q.prefix}${t}`)]}case base58btc$q.prefix:{const r=e??base58btc$q;return[base58btc$q.prefix,r.decode(t)]}case base32$F.prefix:{const r=e??base32$F;return[base32$F.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}}function toStringV0$n(t,e,r){const{prefix:n}=r;if(n!==base58btc$q.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o}function toStringV1$n(t,e,r){const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o}const DAG_PB_CODE$n=112,SHA_256_CODE$n=18;function encodeCID$o(t,e,r){const n=encodingLength$x(t),o=n+encodingLength$x(e),a=new Uint8Array(o+r.byteLength);return encodeTo$s(t,a,0),encodeTo$s(e,a,n),a.set(r,o),a}const cidSymbol$n=Symbol.for("@ipld/js-cid/CID"),textDecoder$5=new TextDecoder;function decodeVarint$1(t,e){let r=0;for(let n=0;;n+=7){if(n>=64)throw new Error("protobuf: varint overflow");if(e>=t.length)throw new Error("protobuf: unexpected end of data");const o=t[e++];if(r+=n<28?(o&127)<<n:(o&127)*2**n,o<128)break}return[r,e]}function decodeBytes(t,e){let r;[r,e]=decodeVarint$1(t,e);const n=e+r;if(r<0||n<0)throw new Error("protobuf: invalid length");if(n>t.length)throw new Error("protobuf: unexpected end of data");return[t.subarray(e,n),n]}function decodeKey(t,e){let r;return[r,e]=decodeVarint$1(t,e),[r&7,r>>3,e]}function decodeLink(t){const e={},r=t.length;let n=0;for(;n<r;){let o,a;if([o,a,n]=decodeKey(t,n),a===1){if(e.Hash)throw new Error("protobuf: (PBLink) duplicate Hash section");if(o!==2)throw new Error(`protobuf: (PBLink) wrong wireType (${o}) for Hash`);if(e.Name!==void 0)throw new Error("protobuf: (PBLink) invalid order, found Name before Hash");if(e.Tsize!==void 0)throw new Error("protobuf: (PBLink) invalid order, found Tsize before Hash");[e.Hash,n]=decodeBytes(t,n)}else if(a===2){if(e.Name!==void 0)throw new Error("protobuf: (PBLink) duplicate Name section");if(o!==2)throw new Error(`protobuf: (PBLink) wrong wireType (${o}) for Name`);if(e.Tsize!==void 0)throw new Error("protobuf: (PBLink) invalid order, found Tsize before Name");let c;[c,n]=decodeBytes(t,n),e.Name=textDecoder$5.decode(c)}else if(a===3){if(e.Tsize!==void 0)throw new Error("protobuf: (PBLink) duplicate Tsize section");if(o!==0)throw new Error(`protobuf: (PBLink) wrong wireType (${o}) for Tsize`);[e.Tsize,n]=decodeVarint$1(t,n)}else throw new Error(`protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got ${a}`)}if(n>r)throw new Error("protobuf: (PBLink) unexpected end of data");return e}function decodeNode(t){const e=t.length;let r=0,n,o=!1,a;for(;r<e;){let u,l;if([u,l,r]=decodeKey(t,r),u!==2)throw new Error(`protobuf: (PBNode) invalid wireType, expected 2, got ${u}`);if(l===1){if(a)throw new Error("protobuf: (PBNode) duplicate Data section");[a,r]=decodeBytes(t,r),n&&(o=!0)}else if(l===2){if(o)throw new Error("protobuf: (PBNode) duplicate Links section");n||(n=[]);let f;[f,r]=decodeBytes(t,r),n.push(decodeLink(f))}else throw new Error(`protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got ${l}`)}if(r>e)throw new Error("protobuf: (PBNode) unexpected end of data");const c={};return a&&(c.Data=a),c.Links=n||[],c}const textEncoder$6=new TextEncoder,maxInt32=2**32,maxUInt32=2**31;function encodeLink(t,e){let r=e.length;if(typeof t.Tsize=="number"){if(t.Tsize<0)throw new Error("Tsize cannot be negative");if(!Number.isSafeInteger(t.Tsize))throw new Error("Tsize too large for encoding");r=encodeVarint(e,r,t.Tsize)-1,e[r]=24}if(typeof t.Name=="string"){const n=textEncoder$6.encode(t.Name);r-=n.length,e.set(n,r),r=encodeVarint(e,r,n.length)-1,e[r]=18}return t.Hash&&(r-=t.Hash.length,e.set(t.Hash,r),r=encodeVarint(e,r,t.Hash.length)-1,e[r]=10),e.length-r}function encodeNode(t){const e=sizeNode(t),r=new Uint8Array(e);let n=e;if(t.Data&&(n-=t.Data.length,r.set(t.Data,n),n=encodeVarint(r,n,t.Data.length)-1,r[n]=10),t.Links)for(let o=t.Links.length-1;o>=0;o--){const a=encodeLink(t.Links[o],r.subarray(0,n));n-=a,n=encodeVarint(r,n,a)-1,r[n]=18}return r}function sizeLink(t){let e=0;if(t.Hash){const r=t.Hash.length;e+=1+r+sov(r)}if(typeof t.Name=="string"){const r=textEncoder$6.encode(t.Name).length;e+=1+r+sov(r)}return typeof t.Tsize=="number"&&(e+=1+sov(t.Tsize)),e}function sizeNode(t){let e=0;if(t.Data){const r=t.Data.length;e+=1+r+sov(r)}if(t.Links)for(const r of t.Links){const n=sizeLink(r);e+=1+n+sov(n)}return e}function encodeVarint(t,e,r){e-=sov(r);const n=e;for(;r>=maxUInt32;)t[e++]=r&127|128,r/=128;for(;r>=128;)t[e++]=r&127|128,r>>>=7;return t[e]=r,n}function sov(t){return t%2===0&&t++,Math.floor((len64(t)+6)/7)}function len64(t){let e=0;return t>=maxInt32&&(t=Math.floor(t/maxInt32),e=32),t>=65536&&(t>>>=16,e+=16),t>=256&&(t>>>=8,e+=8),e+len8tab[t]}const len8tab=[0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],pbNodeProperties=["Data","Links"],pbLinkProperties=["Hash","Name","Tsize"],textEncoder$5=new TextEncoder;function linkComparator(t,e){if(t===e)return 0;const r=t.Name?textEncoder$5.encode(t.Name):[],n=e.Name?textEncoder$5.encode(e.Name):[];let o=r.length,a=n.length;for(let c=0,u=Math.min(o,a);c<u;++c)if(r[c]!==n[c]){o=r[c],a=n[c];break}return o<a?-1:a<o?1:0}function hasOnlyProperties(t,e){return!Object.keys(t).some(r=>!e.includes(r))}function asLink(t){if(typeof t.asCID=="object"){const r=CID$n.asCID(t);if(!r)throw new TypeError("Invalid DAG-PB form");return{Hash:r}}if(typeof t!="object"||Array.isArray(t))throw new TypeError("Invalid DAG-PB form");const e={};if(t.Hash){let r=CID$n.asCID(t.Hash);try{r||(typeof t.Hash=="string"?r=CID$n.parse(t.Hash):t.Hash instanceof Uint8Array&&(r=CID$n.decode(t.Hash)))}catch(n){throw new TypeError(`Invalid DAG-PB form: ${n.message}`)}r&&(e.Hash=r)}if(!e.Hash)throw new TypeError("Invalid DAG-PB form");return typeof t.Name=="string"&&(e.Name=t.Name),typeof t.Tsize=="number"&&(e.Tsize=t.Tsize),e}function prepare(t){if((t instanceof Uint8Array||typeof t=="string")&&(t={Data:t}),typeof t!="object"||Array.isArray(t))throw new TypeError("Invalid DAG-PB form");const e={};if(t.Data!==void 0)if(typeof t.Data=="string")e.Data=textEncoder$5.encode(t.Data);else if(t.Data instanceof Uint8Array)e.Data=t.Data;else throw new TypeError("Invalid DAG-PB form");if(t.Links!==void 0)if(Array.isArray(t.Links))e.Links=t.Links.map(asLink),e.Links.sort(linkComparator);else throw new TypeError("Invalid DAG-PB form");else e.Links=[];return e}function validate$1(t){if(!t||typeof t!="object"||Array.isArray(t)||t instanceof Uint8Array||t["/"]&&t["/"]===t.bytes)throw new TypeError("Invalid DAG-PB form");if(!hasOnlyProperties(t,pbNodeProperties))throw new TypeError("Invalid DAG-PB form (extraneous properties)");if(t.Data!==void 0&&!(t.Data instanceof Uint8Array))throw new TypeError("Invalid DAG-PB form (Data must be bytes)");if(!Array.isArray(t.Links))throw new TypeError("Invalid DAG-PB form (Links must be a list)");for(let e=0;e<t.Links.length;e++){const r=t.Links[e];if(!r||typeof r!="object"||Array.isArray(r)||r instanceof Uint8Array||r["/"]&&r["/"]===r.bytes)throw new TypeError("Invalid DAG-PB form (bad link)");if(!hasOnlyProperties(r,pbLinkProperties))throw new TypeError("Invalid DAG-PB form (extraneous properties on link)");if(r.Hash===void 0)throw new TypeError("Invalid DAG-PB form (link must have a Hash)");if(r.Hash==null||!r.Hash["/"]||r.Hash["/"]!==r.Hash.bytes)throw new TypeError("Invalid DAG-PB form (link Hash must be a CID)");if(r.Name!==void 0&&typeof r.Name!="string")throw new TypeError("Invalid DAG-PB form (link Name must be a string)");if(r.Tsize!==void 0){if(typeof r.Tsize!="number"||r.Tsize%1!==0)throw new TypeError("Invalid DAG-PB form (link Tsize must be an integer)");if(r.Tsize<0)throw new TypeError("Invalid DAG-PB form (link Tsize cannot be negative)")}if(e>0&&linkComparator(r,t.Links[e-1])===-1)throw new TypeError("Invalid DAG-PB form (links must be sorted by Name bytes)")}}function createNode$2(t,e=[]){return prepare({Data:t,Links:e})}function createLink(t,e,r){return asLink({Hash:r,Name:t,Tsize:e})}const name$g="dag-pb",code$i=112;function encode$1L(t){validate$1(t);const e={};return t.Links&&(e.Links=t.Links.map(r=>{const n={};return r.Hash&&(n.Hash=r.Hash.bytes),r.Name!==void 0&&(n.Name=r.Name),r.Tsize!==void 0&&(n.Tsize=r.Tsize),n})),t.Data&&(e.Data=t.Data),encodeNode(e)}function decode$2k(t){const e=decodeNode(t),r={};return e.Data&&(r.Data=e.Data),e.Links&&(r.Links=e.Links.map(n=>{const o={};try{o.Hash=CID$n.decode(n.Hash)}catch{}if(!o.Hash)throw new Error("Invalid Hash field found in link, expected CID");return n.Name!==void 0&&(o.Name=n.Name),n.Tsize!==void 0&&(o.Tsize=n.Tsize),o})),r}const dagPB=Object.freeze(Object.defineProperty({__proto__:null,code:code$i,createLink,createNode:createNode$2,decode:decode$2k,encode:encode$1L,name:name$g,prepare,validate:validate$1},Symbol.toStringTag,{value:"Module"}));class JSONEncoder extends Array{constructor(){super(),this.inRecursive=[]}prefix(e){const r=this.inRecursive[this.inRecursive.length-1];r&&(r.type===Type$3.array&&(r.elements++,r.elements!==1&&e.push([44])),r.type===Type$3.map&&(r.elements++,r.elements!==1&&(r.elements%2===1?e.push([44]):e.push([58]))))}[Type$3.uint.major](e,r){this.prefix(e);const n=String(r.value),o=[];for(let a=0;a<n.length;a++)o[a]=n.charCodeAt(a);e.push(o)}[Type$3.negint.major](e,r){this[Type$3.uint.major](e,r)}[Type$3.bytes.major](e,r){throw new Error(`${encodeErrPrefix$3} unsupported type: Uint8Array`)}[Type$3.string.major](e,r){this.prefix(e);const n=fromString$x(JSON.stringify(r.value));e.push(n.length>32?asU8A$3(n):n)}[Type$3.array.major](e,r){this.prefix(e),this.inRecursive.push({type:Type$3.array,elements:0}),e.push([91])}[Type$3.map.major](e,r){this.prefix(e),this.inRecursive.push({type:Type$3.map,elements:0}),e.push([123])}[Type$3.tag.major](e,r){}[Type$3.float.major](e,r){if(r.type.name==="break"){const c=this.inRecursive.pop();if(c){if(c.type===Type$3.array)e.push([93]);else if(c.type===Type$3.map)e.push([125]);else throw new Error("Unexpected recursive type; this should not happen!");return}throw new Error("Unexpected break; this should not happen!")}if(r.value===void 0)throw new Error(`${encodeErrPrefix$3} unsupported type: undefined`);if(this.prefix(e),r.type.name==="true"){e.push([116,114,117,101]);return}else if(r.type.name==="false"){e.push([102,97,108,115,101]);return}else if(r.type.name==="null"){e.push([110,117,108,108]);return}const n=String(r.value),o=[];let a=!1;for(let c=0;c<n.length;c++)o[c]=n.charCodeAt(c),!a&&(o[c]===46||o[c]===101||o[c]===69)&&(a=!0);a||(o.push(46),o.push(48)),e.push(o)}}function mapSorter$3(t,e){if(Array.isArray(t[0])||Array.isArray(e[0]))throw new Error(`${encodeErrPrefix$3} complex map keys are not supported`);const r=t[0],n=e[0];if(r.type!==Type$3.string||n.type!==Type$3.string)throw new Error(`${encodeErrPrefix$3} non-string map keys are not supported`);if(r<n)return-1;if(r>n)return 1;throw new Error(`${encodeErrPrefix$3} unexpected duplicate map keys, this is not supported`)}const defaultEncodeOptions$3={addBreakTokens:!0,mapSorter:mapSorter$3};function encode$1K(t,e){return e=Object.assign({},defaultEncodeOptions$3,e),encodeCustom$3(t,new JSONEncoder,e)}class Tokenizer{constructor(e,r={}){this._pos=0,this.data=e,this.options=r,this.modeStack=["value"],this.lastToken=""}pos(){return this._pos}done(){return this._pos>=this.data.length}ch(){return this.data[this._pos]}currentMode(){return this.modeStack[this.modeStack.length-1]}skipWhitespace(){let e=this.ch();for(;e===32||e===9||e===13||e===10;)e=this.data[++this._pos]}expect(e){if(this.data.length-this._pos<e.length)throw new Error(`${decodeErrPrefix$3} unexpected end of input at position ${this._pos}`);for(let r=0;r<e.length;r++)if(this.data[this._pos++]!==e[r])throw new Error(`${decodeErrPrefix$3} unexpected token at position ${this._pos}, expected to find '${String.fromCharCode(...e)}'`)}parseNumber(){const e=this._pos;let r=!1,n=!1;const o=u=>{for(;!this.done();){const l=this.ch();if(u.includes(l))this._pos++;else break}};if(this.ch()===45&&(r=!0,this._pos++),this.ch()===48)if(this._pos++,this.ch()===46)this._pos++,n=!0;else return new Token$3(Type$3.uint,0,this._pos-e);if(o([48,49,50,51,52,53,54,55,56,57]),r&&this._pos===e+1)throw new Error(`${decodeErrPrefix$3} unexpected token at position ${this._pos}`);if(!this.done()&&this.ch()===46){if(n)throw new Error(`${decodeErrPrefix$3} unexpected token at position ${this._pos}`);n=!0,this._pos++,o([48,49,50,51,52,53,54,55,56,57])}!this.done()&&(this.ch()===101||this.ch()===69)&&(n=!0,this._pos++,!this.done()&&(this.ch()===43||this.ch()===45)&&this._pos++,o([48,49,50,51,52,53,54,55,56,57]));const a=String.fromCharCode.apply(null,this.data.subarray(e,this._pos)),c=parseFloat(a);return n?new Token$3(Type$3.float,c,this._pos-e):this.options.allowBigInt!==!0||Number.isSafeInteger(c)?new Token$3(c>=0?Type$3.uint:Type$3.negint,c,this._pos-e):new Token$3(c>=0?Type$3.uint:Type$3.negint,BigInt(a),this._pos-e)}parseString(){if(this.ch()!==34)throw new Error(`${decodeErrPrefix$3} unexpected character at position ${this._pos}; this shouldn't happen`);this._pos++;for(let a=this._pos,c=0;a<this.data.length&&c<65536;a++,c++){const u=this.data[a];if(u===92||u<32||u>=128)break;if(u===34){const l=String.fromCharCode.apply(null,this.data.subarray(this._pos,a));return this._pos=a+1,new Token$3(Type$3.string,l,c)}}const e=this._pos,r=[],n=()=>{if(this._pos+4>=this.data.length)throw new Error(`${decodeErrPrefix$3} unexpected end of unicode escape sequence at position ${this._pos}`);let a=0;for(let c=0;c<4;c++){let u=this.ch();if(u>=48&&u<=57)u-=48;else if(u>=97&&u<=102)u=u-97+10;else if(u>=65&&u<=70)u=u-65+10;else throw new Error(`${decodeErrPrefix$3} unexpected unicode escape character at position ${this._pos}`);a=a*16+u,this._pos++}return a},o=()=>{const a=this.ch();let c=null,u=a>239?4:a>223?3:a>191?2:1;if(this._pos+u>this.data.length)throw new Error(`${decodeErrPrefix$3} unexpected unicode sequence at position ${this._pos}`);let l,f,p,g;switch(u){case 1:a<128&&(c=a);break;case 2:l=this.data[this._pos+1],(l&192)===128&&(g=(a&31)<<6|l&63,g>127&&(c=g));break;case 3:l=this.data[this._pos+1],f=this.data[this._pos+2],(l&192)===128&&(f&192)===128&&(g=(a&15)<<12|(l&63)<<6|f&63,g>2047&&(g<55296||g>57343)&&(c=g));break;case 4:l=this.data[this._pos+1],f=this.data[this._pos+2],p=this.data[this._pos+3],(l&192)===128&&(f&192)===128&&(p&192)===128&&(g=(a&15)<<18|(l&63)<<12|(f&63)<<6|p&63,g>65535&&g<1114112&&(c=g))}c===null?(c=65533,u=1):c>65535&&(c-=65536,r.push(c>>>10&1023|55296),c=56320|c&1023),r.push(c),this._pos+=u};for(;!this.done();){const a=this.ch();let c;switch(a){case 92:if(this._pos++,this.done())throw new Error(`${decodeErrPrefix$3} unexpected string termination at position ${this._pos}`);switch(c=this.ch(),this._pos++,c){case 34:case 39:case 92:case 47:r.push(c);break;case 98:r.push(8);break;case 116:r.push(9);break;case 110:r.push(10);break;case 102:r.push(12);break;case 114:r.push(13);break;case 117:r.push(n());break;default:throw new Error(`${decodeErrPrefix$3} unexpected string escape character at position ${this._pos}`)}break;case 34:return this._pos++,new Token$3(Type$3.string,decodeCodePointsArray$3(r),this._pos-e);default:if(a<32)throw new Error(`${decodeErrPrefix$3} invalid control character at position ${this._pos}`);a<128?(r.push(a),this._pos++):o()}}throw new Error(`${decodeErrPrefix$3} unexpected end of string at position ${this._pos}`)}parseValue(){switch(this.ch()){case 123:return this.modeStack.push("obj-start"),this._pos++,new Token$3(Type$3.map,1/0,1);case 91:return this.modeStack.push("array-start"),this._pos++,new Token$3(Type$3.array,1/0,1);case 34:return this.parseString();case 110:return this.expect([110,117,108,108]),new Token$3(Type$3.null,null,4);case 102:return this.expect([102,97,108,115,101]),new Token$3(Type$3.false,!1,5);case 116:return this.expect([116,114,117,101]),new Token$3(Type$3.true,!0,4);case 45:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return this.parseNumber();default:throw new Error(`${decodeErrPrefix$3} unexpected character at position ${this._pos}`)}}next(){switch(this.skipWhitespace(),this.currentMode()){case"value":return this.modeStack.pop(),this.parseValue();case"array-value":{if(this.modeStack.pop(),this.ch()===93)return this._pos++,this.skipWhitespace(),new Token$3(Type$3.break,void 0,1);if(this.ch()!==44)throw new Error(`${decodeErrPrefix$3} unexpected character at position ${this._pos}, was expecting array delimiter but found '${String.fromCharCode(this.ch())}'`);return this._pos++,this.modeStack.push("array-value"),this.skipWhitespace(),this.parseValue()}case"array-start":return this.modeStack.pop(),this.ch()===93?(this._pos++,this.skipWhitespace(),new Token$3(Type$3.break,void 0,1)):(this.modeStack.push("array-value"),this.skipWhitespace(),this.parseValue());case"obj-key":if(this.ch()===125)return this.modeStack.pop(),this._pos++,this.skipWhitespace(),new Token$3(Type$3.break,void 0,1);if(this.ch()!==44)throw new Error(`${decodeErrPrefix$3} unexpected character at position ${this._pos}, was expecting object delimiter but found '${String.fromCharCode(this.ch())}'`);this._pos++,this.skipWhitespace();case"obj-start":{if(this.modeStack.pop(),this.ch()===125)return this._pos++,this.skipWhitespace(),new Token$3(Type$3.break,void 0,1);const e=this.parseString();if(this.skipWhitespace(),this.ch()!==58)throw new Error(`${decodeErrPrefix$3} unexpected character at position ${this._pos}, was expecting key/value delimiter ':' but found '${String.fromCharCode(this.ch())}'`);return this._pos++,this.modeStack.push("obj-value"),e}case"obj-value":return this.modeStack.pop(),this.modeStack.push("obj-key"),this.skipWhitespace(),this.parseValue();default:throw new Error(`${decodeErrPrefix$3} unexpected parse state at position ${this._pos}; this shouldn't happen`)}}}function decode$2j(t,e){return e=Object.assign({tokenizer:new Tokenizer(t,e)},e),decode$2t(t,e)}function equals$N(t,e){if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0}function coerce$s(t){if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")}function base$v(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$v=base$v,_brrp__multiformats_scope_baseX$r=src$v;let Encoder$u=class{constructor(t,e,r){N(this,"name");N(this,"prefix");N(this,"baseEncode");this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$u=class{constructor(t,e,r){N(this,"name");N(this,"prefix");N(this,"baseDecode");N(this,"prefixCodePoint");if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$w(this,t)}},ComposedDecoder$s=class{constructor(t){N(this,"decoders");this.decoders=t}or(t){return or$w(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r!=null)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};function or$w(t,e){return new ComposedDecoder$s({...t.decoders??{[t.prefix]:t},...e.decoders??{[e.prefix]:e}})}let Codec$s=class{constructor(t,e,r,n){N(this,"name");N(this,"prefix");N(this,"baseEncode");N(this,"baseDecode");N(this,"encoder");N(this,"decoder");this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$u(t,e,r),this.decoder=new Decoder$u(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};function from$F({name:t,prefix:e,encode:r,decode:n}){return new Codec$s(t,e,r,n)}function baseX$r({name:t,prefix:e,alphabet:r}){const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$r(r,t);return from$F({prefix:e,name:t,encode:n,decode:a=>coerce$s(o(a))})}function decode$2i(t,e,r,n){const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c}function encode$1J(t,e,r){const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c!==0&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a}function rfc4648$s({name:t,prefix:e,bitsPerChar:r,alphabet:n}){return from$F({prefix:e,name:t,encode(o){return encode$1J(o,n,r)},decode(o){return decode$2i(o,n,r,t)}})}const base32$E=rfc4648$s({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5});rfc4648$s({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),rfc4648$s({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),rfc4648$s({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),rfc4648$s({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),rfc4648$s({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),rfc4648$s({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),rfc4648$s({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),rfc4648$s({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});const base58btc$p=baseX$r({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"});baseX$r({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var encode_1$s=encode$1I,MSB$z=128,REST$z=127,MSBALL$s=~REST$z,INT$s=Math.pow(2,31);function encode$1I(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$s;)e[r++]=t&255|MSB$z,t/=128;for(;t&MSBALL$s;)e[r++]=t&255|MSB$z,t>>>=7;return e[r]=t|0,encode$1I.bytes=r-n+1,e}var decode$2h=read$t,MSB$1$s=128,REST$1$s=127;function read$t(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$t.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$s)<<o:(c&REST$1$s)*Math.pow(2,o),o+=7}while(c>=MSB$1$s);return read$t.bytes=a-n,r}var N1$y=Math.pow(2,7),N2$y=Math.pow(2,14),N3$y=Math.pow(2,21),N4$y=Math.pow(2,28),N5$y=Math.pow(2,35),N6$y=Math.pow(2,42),N7$y=Math.pow(2,49),N8$t=Math.pow(2,56),N9$t=Math.pow(2,63),length$u=function(t){return t<N1$y?1:t<N2$y?2:t<N3$y?3:t<N4$y?4:t<N5$y?5:t<N6$y?6:t<N7$y?7:t<N8$t?8:t<N9$t?9:10},varint$t={encode:encode_1$s,decode:decode$2h,encodingLength:length$u},_brrp_varint$r=varint$t;function decode$2g(t,e=0){return[_brrp_varint$r.decode(t,e),_brrp_varint$r.decode.bytes]}function encodeTo$r(t,e,r=0){return _brrp_varint$r.encode(t,e,r),e}function encodingLength$w(t){return _brrp_varint$r.encodingLength(t)}function create$y(t,e){const r=e.byteLength,n=encodingLength$w(t),o=n+encodingLength$w(r),a=new Uint8Array(o+r);return encodeTo$r(t,a,0),encodeTo$r(r,a,n),a.set(e,o),new Digest$r(t,r,e,a)}function decode$2f(t){const e=coerce$s(t),[r,n]=decode$2g(e),[o,a]=decode$2g(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$r(r,o,c,e)}function equals$M(t,e){if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$N(t.bytes,r.bytes)}}let Digest$r=class{constructor(t,e,r,n){N(this,"code");N(this,"size");N(this,"digest");N(this,"bytes");this.code=t,this.size=e,this.digest=r,this.bytes=n}};function format$r(t,e){const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$m(r,baseCache$m(t),e??base58btc$p.encoder);default:return toStringV1$m(r,baseCache$m(t),e??base32$E.encoder)}}const cache$q=new WeakMap;function baseCache$m(t){const e=cache$q.get(t);if(e==null){const r=new Map;return cache$q.set(t,r),r}return e}let CID$m=class Pe{constructor(e,r,n,o){N(this,"code");N(this,"version");N(this,"multihash");N(this,"bytes");N(this,"/");N(this,Dt,"CID");this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$m)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$m)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return Pe.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$y(e,r);return Pe.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return Pe.equals(this,e)}static equals(e,r){const n=r;return n!=null&&e.code===n.code&&e.version===n.version&&equals$M(e.multihash,n.multihash)}toString(e){return format$r(this,e)}toJSON(){return{"/":format$r(this)}}link(){return this}[(Dt=Symbol.toStringTag,Symbol.for("nodejs.util.inspect.custom"))](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof Pe)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new Pe(n,o,a,c??encodeCID$n(n,o,a.bytes))}else if(r[cidSymbol$m]===!0){const{version:n,multihash:o,code:a}=r,c=decode$2f(o);return Pe.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$m)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$m}) block encoding`);return new Pe(e,r,n,n.bytes)}case 1:{const o=encodeCID$n(e,r,n.bytes);return new Pe(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return Pe.create(0,DAG_PB_CODE$m,e)}static createV1(e,r){return Pe.create(1,e,r)}static decode(e){const[r,n]=Pe.decodeFirst(e);if(n.length!==0)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=Pe.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$s(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$r(r.multihashCode,r.digestSize,a,o);return[r.version===0?Pe.createV0(c):Pe.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$2g(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$m;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$m(e,r),a=Pe.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$m(a).set(n,e),a}};function parseCIDtoBytes$m(t,e){switch(t[0]){case"Q":{const r=e??base58btc$p;return[base58btc$p.prefix,r.decode(`${base58btc$p.prefix}${t}`)]}case base58btc$p.prefix:{const r=e??base58btc$p;return[base58btc$p.prefix,r.decode(t)]}case base32$E.prefix:{const r=e??base32$E;return[base32$E.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}}function toStringV0$m(t,e,r){const{prefix:n}=r;if(n!==base58btc$p.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o}function toStringV1$m(t,e,r){const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o}const DAG_PB_CODE$m=112,SHA_256_CODE$m=18;function encodeCID$n(t,e,r){const n=encodingLength$w(t),o=n+encodingLength$w(e),a=new Uint8Array(o+r.byteLength);return encodeTo$r(t,a,0),encodeTo$r(e,a,n),a.set(r,o),a}const cidSymbol$m=Symbol.for("@ipld/js-cid/CID"),base64$y=rfc4648$s({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6});rfc4648$s({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),rfc4648$s({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),rfc4648$s({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6});function cidEncoder(t){if(t.asCID!==t&&t["/"]!==t.bytes)return null;const e=CID$m.asCID(t);if(!e)return null;const r=e.toString();return[new Token$3(Type$3.map,1/0,1),new Token$3(Type$3.string,"/",1),new Token$3(Type$3.string,r,r.length),new Token$3(Type$3.break,void 0,1)]}function bytesEncoder(t){const e=base64$y.encode(t).slice(1);return[new Token$3(Type$3.map,1/0,1),new Token$3(Type$3.string,"/",1),new Token$3(Type$3.map,1/0,1),new Token$3(Type$3.string,"bytes",5),new Token$3(Type$3.string,e,e.length),new Token$3(Type$3.break,void 0,1),new Token$3(Type$3.break,void 0,1)]}function taBytesEncoder(t){return bytesEncoder(new Uint8Array(t.buffer,t.byteOffset,t.byteLength))}function abBytesEncoder(t){return bytesEncoder(new Uint8Array(t))}function undefinedEncoder(){throw new Error("`undefined` is not supported by the IPLD Data Model and cannot be encoded")}function numberEncoder(t){if(Number.isNaN(t))throw new Error("`NaN` is not supported by the IPLD Data Model and cannot be encoded");if(t===1/0||t===-1/0)throw new Error("`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded");return null}const encodeOptions={typeEncoders:{Object:cidEncoder,Buffer:bytesEncoder,Uint8Array:bytesEncoder,Int8Array:taBytesEncoder,Uint16Array:taBytesEncoder,Int16Array:taBytesEncoder,Uint32Array:taBytesEncoder,Int32Array:taBytesEncoder,Float32Array:taBytesEncoder,Float64Array:taBytesEncoder,Uint8ClampedArray:taBytesEncoder,BigInt64Array:taBytesEncoder,BigUint64Array:taBytesEncoder,DataView:taBytesEncoder,ArrayBuffer:abBytesEncoder,undefined:undefinedEncoder,number:numberEncoder}};class DagJsonTokenizer extends Tokenizer{constructor(e,r){super(e,r),this.tokenBuffer=[]}done(){return this.tokenBuffer.length===0&&super.done()}_next(){return this.tokenBuffer.length>0?this.tokenBuffer.pop():super.next()}next(){const e=this._next();if(e.type===Type$3.map){const r=this._next();if(r.type===Type$3.string&&r.value==="/"){const n=this._next();if(n.type===Type$3.string){if(this._next().type!==Type$3.break)throw new Error("Invalid encoded CID form");return this.tokenBuffer.push(n),new Token$3(Type$3.tag,42,0)}if(n.type===Type$3.map){const o=this._next();if(o.type===Type$3.string&&o.value==="bytes"){const a=this._next();if(a.type===Type$3.string){for(let u=0;u<2;u++)if(this._next().type!==Type$3.break)throw new Error("Invalid encoded Bytes form");const c=base64$y.decode(`m${a.value}`);return new Token$3(Type$3.bytes,c,a.value.length)}this.tokenBuffer.push(a)}this.tokenBuffer.push(o)}this.tokenBuffer.push(n)}this.tokenBuffer.push(r)}return e}}const decodeOptions={allowIndefinite:!1,allowUndefined:!1,allowNaN:!1,allowInfinity:!1,allowBigInt:!0,strict:!0,useMaps:!1,rejectDuplicateMapKeys:!0,tags:[]};decodeOptions.tags[42]=CID$m.parse;const name$f="dag-json",code$h=297,encode$1H=t=>encode$1K(t,encodeOptions),decode$2e=t=>{const e=Object.assign(decodeOptions,{tokenizer:new DagJsonTokenizer(t,decodeOptions)});return decode$2j(t,e)},format$q=t=>utf8Decoder.decode(encode$1H(t)),utf8Decoder=new TextDecoder,parse$5=t=>decode$2e(utf8Encoder.encode(t)),utf8Encoder=new TextEncoder,dagJSON=Object.freeze(Object.defineProperty({__proto__:null,code:code$h,decode:decode$2e,encode:encode$1H,format:format$q,name:name$f,parse:parse$5,stringify:format$q},Symbol.toStringTag,{value:"Module"}));function base$u(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$u=base$u,_brrp__multiformats_scope_baseX$q=src$u;const equals$L=(t,e)=>{if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0},coerce$r=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")};let Encoder$t=class{constructor(t,e,r){this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$t=class{constructor(t,e,r){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$v(this,t)}},ComposedDecoder$r=class{constructor(t){this.decoders=t}or(t){return or$v(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$v=(t,e)=>new ComposedDecoder$r({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});let Codec$r=class{constructor(t,e,r,n){this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$t(t,e,r),this.decoder=new Decoder$t(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};const from$E=({name:t,prefix:e,encode:r,decode:n})=>new Codec$r(t,e,r,n),baseX$q=({prefix:t,name:e,alphabet:r})=>{const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$q(r,e);return from$E({prefix:t,name:e,encode:n,decode:a=>coerce$r(o(a))})},decode$2d=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode$1G=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648$r=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from$E({prefix:e,name:t,encode(o){return encode$1G(o,n,r)},decode(o){return decode$2d(o,n,r,t)}});rfc4648$r({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),rfc4648$r({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6});const base64url$g=rfc4648$r({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6});rfc4648$r({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6});function toBase64url(t){return base64url$g.encode(t).slice(1)}function fromBase64url(t){return base64url$g.decode(`u${t}`)}var encode_1$r=encode$1F,MSB$y=128,REST$y=127,MSBALL$r=~REST$y,INT$r=Math.pow(2,31);function encode$1F(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$r;)e[r++]=t&255|MSB$y,t/=128;for(;t&MSBALL$r;)e[r++]=t&255|MSB$y,t>>>=7;return e[r]=t|0,encode$1F.bytes=r-n+1,e}var decode$2c=read$s,MSB$1$r=128,REST$1$r=127;function read$s(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$s.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$r)<<o:(c&REST$1$r)*Math.pow(2,o),o+=7}while(c>=MSB$1$r);return read$s.bytes=a-n,r}var N1$x=Math.pow(2,7),N2$x=Math.pow(2,14),N3$x=Math.pow(2,21),N4$x=Math.pow(2,28),N5$x=Math.pow(2,35),N6$x=Math.pow(2,42),N7$x=Math.pow(2,49),N8$s=Math.pow(2,56),N9$s=Math.pow(2,63),length$t=function(t){return t<N1$x?1:t<N2$x?2:t<N3$x?3:t<N4$x?4:t<N5$x?5:t<N6$x?6:t<N7$x?7:t<N8$s?8:t<N9$s?9:10},varint$s={encode:encode_1$r,decode:decode$2c,encodingLength:length$t},_brrp_varint$q=varint$s;const decode$2b=(t,e=0)=>[_brrp_varint$q.decode(t,e),_brrp_varint$q.decode.bytes],encodeTo$q=(t,e,r=0)=>(_brrp_varint$q.encode(t,e,r),e),encodingLength$v=t=>_brrp_varint$q.encodingLength(t),create$x=(t,e)=>{const r=e.byteLength,n=encodingLength$v(t),o=n+encodingLength$v(r),a=new Uint8Array(o+r);return encodeTo$q(t,a,0),encodeTo$q(r,a,n),a.set(e,o),new Digest$q(t,r,e,a)},decode$2a=t=>{const e=coerce$r(t),[r,n]=decode$2b(e),[o,a]=decode$2b(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$q(r,o,c,e)},equals$K=(t,e)=>{if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$L(t.bytes,r.bytes)}};let Digest$q=class{constructor(t,e,r,n){this.code=t,this.size=e,this.digest=r,this.bytes=n}};const base58btc$o=baseX$q({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"});baseX$q({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});const base32$D=rfc4648$r({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5});rfc4648$r({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),rfc4648$r({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),rfc4648$r({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),rfc4648$r({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),rfc4648$r({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),rfc4648$r({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),rfc4648$r({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),rfc4648$r({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});const format$p=(t,e)=>{const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$l(r,baseCache$l(t),e||base58btc$o.encoder);default:return toStringV1$l(r,baseCache$l(t),e||base32$D.encoder)}},cache$p=new WeakMap,baseCache$l=t=>{const e=cache$p.get(t);if(e==null){const r=new Map;return cache$p.set(t,r),r}return e};let CID$l=class ke{constructor(e,r,n,o){this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$l)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$l)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return ke.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$x(e,r);return ke.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return ke.equals(this,e)}static equals(e,r){const n=r;return n&&e.code===n.code&&e.version===n.version&&equals$K(e.multihash,n.multihash)}toString(e){return format$p(this,e)}toJSON(){return{"/":format$p(this)}}link(){return this}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof ke)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new ke(n,o,a,c||encodeCID$m(n,o,a.bytes))}else if(r[cidSymbol$l]===!0){const{version:n,multihash:o,code:a}=r,c=decode$2a(o);return ke.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$l)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$l}) block encoding`);return new ke(e,r,n,n.bytes)}case 1:{const o=encodeCID$m(e,r,n.bytes);return new ke(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return ke.create(0,DAG_PB_CODE$l,e)}static createV1(e,r){return ke.create(1,e,r)}static decode(e){const[r,n]=ke.decodeFirst(e);if(n.length)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=ke.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$r(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$q(r.multihashCode,r.digestSize,a,o);return[r.version===0?ke.createV0(c):ke.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$2b(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$l;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$l(e,r),a=ke.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$l(a).set(n,e),a}};const parseCIDtoBytes$l=(t,e)=>{switch(t[0]){case"Q":{const r=e||base58btc$o;return[base58btc$o.prefix,r.decode(`${base58btc$o.prefix}${t}`)]}case base58btc$o.prefix:{const r=e||base58btc$o;return[base58btc$o.prefix,r.decode(t)]}case base32$D.prefix:{const r=e||base32$D;return[base32$D.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}},toStringV0$l=(t,e,r)=>{const{prefix:n}=r;if(n!==base58btc$o.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o},toStringV1$l=(t,e,r)=>{const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o},DAG_PB_CODE$l=112,SHA_256_CODE$l=18,encodeCID$m=(t,e,r)=>{const n=encodingLength$v(t),o=n+encodingLength$v(e),a=new Uint8Array(o+r.byteLength);return encodeTo$q(t,a,0),encodeTo$q(e,a,n),a.set(r,o),a},cidSymbol$l=Symbol.for("@ipld/js-cid/CID");function fromSplit$1(t){const[e,r,n]=t;return{payload:r,signatures:[{protected:e,signature:n}],link:CID$l.decode(fromBase64url(r))}}function encodeSignature(t){const e={signature:fromBase64url(t.signature)};return t.header&&(e.header=t.header),t.protected&&(e.protected=fromBase64url(t.protected)),e}function encode$1E(t){const e=fromBase64url(t.payload);try{CID$l.decode(e)}catch{throw new Error("Not a valid DagJWS")}return{payload:e,signatures:t.signatures.map(encodeSignature)}}function decodeSignature(t){const e={signature:toBase64url(t.signature)};return t.header&&(e.header=t.header),t.protected&&(e.protected=toBase64url(t.protected)),e}function decode$29(t){const e={payload:toBase64url(t.payload),signatures:t.signatures.map(decodeSignature)};return e.link=CID$l.decode(new Uint8Array(t.payload)),e}function fromSplit(t){const[e,r,n,o,a]=t,c={ciphertext:o,iv:n,protected:e,tag:a};return r&&(c.recipients=[{encrypted_key:r}]),c}function encodeRecipient(t){const e={};return t.encrypted_key&&(e.encrypted_key=fromBase64url(t.encrypted_key)),t.header&&(e.header=t.header),e}function encode$1D(t){const e={ciphertext:fromBase64url(t.ciphertext),protected:fromBase64url(t.protected),iv:fromBase64url(t.iv),tag:fromBase64url(t.tag)};return t.aad&&(e.aad=fromBase64url(t.aad)),t.recipients&&(e.recipients=t.recipients.map(encodeRecipient)),t.unprotected&&(e.unprotected=t.unprotected),e}function decodeRecipient(t){const e={};return t.encrypted_key&&(e.encrypted_key=toBase64url(t.encrypted_key)),t.header&&(e.header=t.header),e}function decode$28(t){const e={ciphertext:toBase64url(t.ciphertext),protected:toBase64url(t.protected),iv:toBase64url(t.iv),tag:toBase64url(t.tag)};return t.aad&&(e.aad=toBase64url(t.aad)),t.recipients&&(e.recipients=t.recipients.map(decodeRecipient)),t.unprotected&&(e.unprotected=t.unprotected),e}const name$e="dag-jose",code$g=133;function isDagJWS(t){return"payload"in t&&typeof t.payload=="string"&&"signatures"in t&&Array.isArray(t.signatures)}function isEncodedJWS(t){return"payload"in t&&t.payload instanceof Uint8Array&&"signatures"in t&&Array.isArray(t.signatures)}function isEncodedJWE(t){return"ciphertext"in t&&t.ciphertext instanceof Uint8Array&&"iv"in t&&t.iv instanceof Uint8Array&&"protected"in t&&t.protected instanceof Uint8Array&&"tag"in t&&t.tag instanceof Uint8Array}function isDagJWE(t){return"ciphertext"in t&&typeof t.ciphertext=="string"&&"iv"in t&&typeof t.iv=="string"&&"protected"in t&&typeof t.protected=="string"&&"tag"in t&&typeof t.tag=="string"}function toGeneral(t){if(typeof t=="string"){const e=t.split(".");if(e.length===3)return fromSplit$1(e);if(e.length===5)return fromSplit(e);throw new Error("Not a valid JOSE string")}if(isDagJWS(t)||isDagJWE(t))return t;throw new Error("Not a valid unencoded JOSE object")}function encode$1C(t){typeof t=="string"&&(t=toGeneral(t));let e;if(isDagJWS(t))e=encode$1E(t);else if(isDagJWE(t))e=encode$1D(t);else throw new Error("Not a valid JOSE object");return new Uint8Array(encode$1T(e))}function decode$27(t){let e;try{e=decode$2u(t)}catch{throw new Error("Not a valid DAG-JOSE object")}if(isEncodedJWS(e))return decode$29(e);if(isEncodedJWE(e))return decode$28(e);throw new Error("Not a valid DAG-JOSE object")}const dagJOSE=Object.freeze(Object.defineProperty({__proto__:null,code:code$g,decode:decode$27,encode:encode$1C,name:name$e,toGeneral},Symbol.toStringTag,{value:"Module"})),equals$J=(t,e)=>{if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0},coerce$q=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")},fromString$u=t=>new TextEncoder().encode(t),toString$A=t=>new TextDecoder().decode(t);var encode_1$q=encode$1B,MSB$x=128,REST$x=127,MSBALL$q=~REST$x,INT$q=Math.pow(2,31);function encode$1B(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$q;)e[r++]=t&255|MSB$x,t/=128;for(;t&MSBALL$q;)e[r++]=t&255|MSB$x,t>>>=7;return e[r]=t|0,encode$1B.bytes=r-n+1,e}var decode$26=read$r,MSB$1$q=128,REST$1$q=127;function read$r(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$r.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$q)<<o:(c&REST$1$q)*Math.pow(2,o),o+=7}while(c>=MSB$1$q);return read$r.bytes=a-n,r}var N1$w=Math.pow(2,7),N2$w=Math.pow(2,14),N3$w=Math.pow(2,21),N4$w=Math.pow(2,28),N5$w=Math.pow(2,35),N6$w=Math.pow(2,42),N7$w=Math.pow(2,49),N8$r=Math.pow(2,56),N9$r=Math.pow(2,63),length$s=function(t){return t<N1$w?1:t<N2$w?2:t<N3$w?3:t<N4$w?4:t<N5$w?5:t<N6$w?6:t<N7$w?7:t<N8$r?8:t<N9$r?9:10},varint$r={encode:encode_1$q,decode:decode$26,encodingLength:length$s},_brrp_varint$p=varint$r;const decode$25=(t,e=0)=>[_brrp_varint$p.decode(t,e),_brrp_varint$p.decode.bytes],encodeTo$p=(t,e,r=0)=>(_brrp_varint$p.encode(t,e,r),e),encodingLength$u=t=>_brrp_varint$p.encodingLength(t),create$w=(t,e)=>{const r=e.byteLength,n=encodingLength$u(t),o=n+encodingLength$u(r),a=new Uint8Array(o+r);return encodeTo$p(t,a,0),encodeTo$p(r,a,n),a.set(e,o),new Digest$p(t,r,e,a)},decode$24=t=>{const e=coerce$q(t),[r,n]=decode$25(e),[o,a]=decode$25(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$p(r,o,c,e)},equals$I=(t,e)=>{if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$J(t.bytes,r.bytes)}};let Digest$p=class{constructor(t,e,r,n){this.code=t,this.size=e,this.digest=r,this.bytes=n}};const code$f=0,name$d="identity",encode$1A=coerce$q,digest$7=t=>create$w(code$f,encode$1A(t)),identity$o={code:code$f,name:name$d,encode:encode$1A,digest:digest$7},identity$p=Object.freeze(Object.defineProperty({__proto__:null,identity:identity$o},Symbol.toStringTag,{value:"Module"}));function base$t(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$t=base$t,_brrp__multiformats_scope_baseX$p=src$t;let Encoder$s=class{constructor(t,e,r){this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$s=class{constructor(t,e,r){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$u(this,t)}},ComposedDecoder$q=class{constructor(t){this.decoders=t}or(t){return or$u(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$u=(t,e)=>new ComposedDecoder$q({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});let Codec$q=class{constructor(t,e,r,n){this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$s(t,e,r),this.decoder=new Decoder$s(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};const from$D=({name:t,prefix:e,encode:r,decode:n})=>new Codec$q(t,e,r,n),baseX$p=({prefix:t,name:e,alphabet:r})=>{const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$p(r,e);return from$D({prefix:t,name:e,encode:n,decode:a=>coerce$q(o(a))})},decode$23=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode$1z=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648$q=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from$D({prefix:e,name:t,encode(o){return encode$1z(o,n,r)},decode(o){return decode$23(o,n,r,t)}}),identity$n=from$D({prefix:"\0",name:"identity",encode:t=>toString$A(t),decode:t=>fromString$u(t)}),identityBase$f=Object.freeze(Object.defineProperty({__proto__:null,identity:identity$n},Symbol.toStringTag,{value:"Module"})),base2$u=rfc4648$q({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),base2$v=Object.freeze(Object.defineProperty({__proto__:null,base2:base2$u},Symbol.toStringTag,{value:"Module"})),base8$u=rfc4648$q({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),base8$v=Object.freeze(Object.defineProperty({__proto__:null,base8:base8$u},Symbol.toStringTag,{value:"Module"})),base10$u=baseX$p({prefix:"9",name:"base10",alphabet:"0123456789"}),base10$v=Object.freeze(Object.defineProperty({__proto__:null,base10:base10$u},Symbol.toStringTag,{value:"Module"})),base16$u=rfc4648$q({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),base16upper$f=rfc4648$q({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),base16$v=Object.freeze(Object.defineProperty({__proto__:null,base16:base16$u,base16upper:base16upper$f},Symbol.toStringTag,{value:"Module"})),base32$B=rfc4648$q({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),base32upper$g=rfc4648$q({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),base32pad$g=rfc4648$q({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),base32padupper$f=rfc4648$q({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),base32hex$f=rfc4648$q({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),base32hexupper$f=rfc4648$q({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),base32hexpad$f=rfc4648$q({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),base32hexpadupper$f=rfc4648$q({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),base32z$f=rfc4648$q({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),base32$C=Object.freeze(Object.defineProperty({__proto__:null,base32:base32$B,base32hex:base32hex$f,base32hexpad:base32hexpad$f,base32hexpadupper:base32hexpadupper$f,base32hexupper:base32hexupper$f,base32pad:base32pad$g,base32padupper:base32padupper$f,base32upper:base32upper$g,base32z:base32z$f},Symbol.toStringTag,{value:"Module"})),base36$u=baseX$p({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),base36upper$f=baseX$p({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),base36$v=Object.freeze(Object.defineProperty({__proto__:null,base36:base36$u,base36upper:base36upper$f},Symbol.toStringTag,{value:"Module"})),base58btc$n=baseX$p({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),base58flickr$f=baseX$p({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),base58$f=Object.freeze(Object.defineProperty({__proto__:null,base58btc:base58btc$n,base58flickr:base58flickr$f},Symbol.toStringTag,{value:"Module"})),base64$w=rfc4648$q({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),base64pad$f=rfc4648$q({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),base64url$f=rfc4648$q({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),base64urlpad$f=rfc4648$q({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),base64$x=Object.freeze(Object.defineProperty({__proto__:null,base64:base64$w,base64pad:base64pad$f,base64url:base64url$f,base64urlpad:base64urlpad$f},Symbol.toStringTag,{value:"Module"})),alphabet$g=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),alphabetBytesToChars$f=alphabet$g.reduce((t,e,r)=>(t[r]=e,t),[]),alphabetCharsToBytes$f=alphabet$g.reduce((t,e,r)=>(t[e.codePointAt(0)]=r,t),[]);function encode$1y(t){return t.reduce((e,r)=>(e+=alphabetBytesToChars$f[r],e),"")}function decode$22(t){const e=[];for(const r of t){const n=alphabetCharsToBytes$f[r.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${r}`);e.push(n)}return new Uint8Array(e)}const base256emoji$u=from$D({prefix:"\u{1F680}",name:"base256emoji",encode:encode$1y,decode:decode$22}),base256emoji$v=Object.freeze(Object.defineProperty({__proto__:null,base256emoji:base256emoji$u},Symbol.toStringTag,{value:"Module"})),from$C=({name:t,code:e,encode:r})=>new Hasher$c(t,e,r);let Hasher$c=class{constructor(t,e,r){this.name=t,this.code=e,this.encode=r}digest(t){if(t instanceof Uint8Array){const e=this.encode(t);return e instanceof Uint8Array?create$w(this.code,e):e.then(r=>create$w(this.code,r))}else throw Error("Unknown type, must be binary type")}};const sha$b=t=>async e=>new Uint8Array(await crypto.subtle.digest(t,e)),sha256$c=from$C({name:"sha2-256",code:18,encode:sha$b("SHA-256")}),sha512$1=from$C({name:"sha2-512",code:19,encode:sha$b("SHA-512")}),sha2$1=Object.freeze(Object.defineProperty({__proto__:null,sha256:sha256$c,sha512:sha512$1},Symbol.toStringTag,{value:"Module"})),name$c="raw",code$e=85,encode$1x=t=>coerce$q(t),decode$21=t=>coerce$q(t),raw$2=Object.freeze(Object.defineProperty({__proto__:null,code:code$e,decode:decode$21,encode:encode$1x,name:name$c},Symbol.toStringTag,{value:"Module"})),textEncoder$4=new TextEncoder,textDecoder$4=new TextDecoder,name$b="json",code$d=512,encode$1w=t=>textEncoder$4.encode(JSON.stringify(t)),decode$20=t=>JSON.parse(textDecoder$4.decode(t)),json$1=Object.freeze(Object.defineProperty({__proto__:null,code:code$d,decode:decode$20,encode:encode$1w,name:name$b},Symbol.toStringTag,{value:"Module"})),format$o=(t,e)=>{const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$k(r,baseCache$k(t),e||base58btc$n.encoder);default:return toStringV1$k(r,baseCache$k(t),e||base32$B.encoder)}},cache$o=new WeakMap,baseCache$k=t=>{const e=cache$o.get(t);if(e==null){const r=new Map;return cache$o.set(t,r),r}return e};let CID$k=class Ne{constructor(e,r,n,o){this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$k)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$k)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return Ne.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$w(e,r);return Ne.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return Ne.equals(this,e)}static equals(e,r){const n=r;return n&&e.code===n.code&&e.version===n.version&&equals$I(e.multihash,n.multihash)}toString(e){return format$o(this,e)}toJSON(){return{"/":format$o(this)}}link(){return this}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof Ne)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new Ne(n,o,a,c||encodeCID$l(n,o,a.bytes))}else if(r[cidSymbol$k]===!0){const{version:n,multihash:o,code:a}=r,c=decode$24(o);return Ne.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$k)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$k}) block encoding`);return new Ne(e,r,n,n.bytes)}case 1:{const o=encodeCID$l(e,r,n.bytes);return new Ne(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return Ne.create(0,DAG_PB_CODE$k,e)}static createV1(e,r){return Ne.create(1,e,r)}static decode(e){const[r,n]=Ne.decodeFirst(e);if(n.length)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=Ne.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$q(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$p(r.multihashCode,r.digestSize,a,o);return[r.version===0?Ne.createV0(c):Ne.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$25(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$k;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$k(e,r),a=Ne.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$k(a).set(n,e),a}};const parseCIDtoBytes$k=(t,e)=>{switch(t[0]){case"Q":{const r=e||base58btc$n;return[base58btc$n.prefix,r.decode(`${base58btc$n.prefix}${t}`)]}case base58btc$n.prefix:{const r=e||base58btc$n;return[base58btc$n.prefix,r.decode(t)]}case base32$B.prefix:{const r=e||base32$B;return[base32$B.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}},toStringV0$k=(t,e,r)=>{const{prefix:n}=r;if(n!==base58btc$n.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o},toStringV1$k=(t,e,r)=>{const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o},DAG_PB_CODE$k=112,SHA_256_CODE$k=18,encodeCID$l=(t,e,r)=>{const n=encodingLength$u(t),o=n+encodingLength$u(e),a=new Uint8Array(o+r.byteLength);return encodeTo$p(t,a,0),encodeTo$p(e,a,n),a.set(r,o),a},cidSymbol$k=Symbol.for("@ipld/js-cid/CID"),bases$f={...identityBase$f,...base2$v,...base8$v,...base10$v,...base16$v,...base32$C,...base36$v,...base58$f,...base64$x,...base256emoji$v},hashes$1={...sha2$1,...identity$p},codecs$1={raw:raw$2,json:json$1};function initAssets(){}class NotInitializedError extends Error{constructor(e="not initialized"){super(e),this.name="NotInitializedError",this.code=NotInitializedError.code}}NotInitializedError.code="ERR_NOT_INITIALIZED";class AlreadyInitializingError extends Error{constructor(e="cannot initialize an initializing node"){super(e),this.name="AlreadyInitializingError",this.code=AlreadyInitializedError.code}}AlreadyInitializingError.code="ERR_ALREADY_INITIALIZING";class AlreadyInitializedError extends Error{constructor(e="cannot re-initialize an initialized node"){super(e),this.name="AlreadyInitializedError",this.code=AlreadyInitializedError.code}}AlreadyInitializedError.code="ERR_ALREADY_INITIALIZED";class NotStartedError extends Error{constructor(e="not started"){super(e),this.name="NotStartedError",this.code=NotStartedError.code}}NotStartedError.code="ERR_NOT_STARTED";class AlreadyStartingError extends Error{constructor(e="cannot start, already startin"){super(e),this.name="AlreadyStartingError",this.code=AlreadyStartingError.code}}AlreadyStartingError.code="ERR_ALREADY_STARTING";class AlreadyStartedError extends Error{constructor(e="cannot start, already started"){super(e),this.name="AlreadyStartedError",this.code=AlreadyStartedError.code}}AlreadyStartedError.code="ERR_ALREADY_STARTED";class NotEnabledError extends Error{constructor(e="not enabled"){super(e),this.name="NotEnabledError",this.code=NotEnabledError.code}}NotEnabledError.code="ERR_NOT_ENABLED";function base$s(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$s=base$s,_brrp__multiformats_scope_baseX$o=src$s;const equals$H=(t,e)=>{if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0},coerce$p=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")},fromString$t=t=>new TextEncoder().encode(t),toString$z=t=>new TextDecoder().decode(t);let Encoder$r=class{constructor(t,e,r){this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$r=class{constructor(t,e,r){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$t(this,t)}},ComposedDecoder$p=class{constructor(t){this.decoders=t}or(t){return or$t(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$t=(t,e)=>new ComposedDecoder$p({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});let Codec$p=class{constructor(t,e,r,n){this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$r(t,e,r),this.decoder=new Decoder$r(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};const from$B=({name:t,prefix:e,encode:r,decode:n})=>new Codec$p(t,e,r,n),baseX$o=({prefix:t,name:e,alphabet:r})=>{const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$o(r,e);return from$B({prefix:t,name:e,encode:n,decode:a=>coerce$p(o(a))})},decode$1$=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode$1v=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648$p=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from$B({prefix:e,name:t,encode(o){return encode$1v(o,n,r)},decode(o){return decode$1$(o,n,r,t)}}),base58btc$m=baseX$o({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),base58flickr$e=baseX$o({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),base58$e=Object.freeze(Object.defineProperty({__proto__:null,base58btc:base58btc$m,base58flickr:base58flickr$e},Symbol.toStringTag,{value:"Module"})),base32$z=rfc4648$p({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),base32upper$f=rfc4648$p({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),base32pad$f=rfc4648$p({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),base32padupper$e=rfc4648$p({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),base32hex$e=rfc4648$p({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),base32hexupper$e=rfc4648$p({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),base32hexpad$e=rfc4648$p({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),base32hexpadupper$e=rfc4648$p({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),base32z$e=rfc4648$p({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),base32$A=Object.freeze(Object.defineProperty({__proto__:null,base32:base32$z,base32hex:base32hex$e,base32hexpad:base32hexpad$e,base32hexpadupper:base32hexpadupper$e,base32hexupper:base32hexupper$e,base32pad:base32pad$f,base32padupper:base32padupper$e,base32upper:base32upper$f,base32z:base32z$e},Symbol.toStringTag,{value:"Module"}));var encode_1$p=encode$1u,MSB$w=128,REST$w=127,MSBALL$p=~REST$w,INT$p=Math.pow(2,31);function encode$1u(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$p;)e[r++]=t&255|MSB$w,t/=128;for(;t&MSBALL$p;)e[r++]=t&255|MSB$w,t>>>=7;return e[r]=t|0,encode$1u.bytes=r-n+1,e}var decode$1_=read$q,MSB$1$p=128,REST$1$p=127;function read$q(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$q.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$p)<<o:(c&REST$1$p)*Math.pow(2,o),o+=7}while(c>=MSB$1$p);return read$q.bytes=a-n,r}var N1$v=Math.pow(2,7),N2$v=Math.pow(2,14),N3$v=Math.pow(2,21),N4$v=Math.pow(2,28),N5$v=Math.pow(2,35),N6$v=Math.pow(2,42),N7$v=Math.pow(2,49),N8$q=Math.pow(2,56),N9$q=Math.pow(2,63),length$r=function(t){return t<N1$v?1:t<N2$v?2:t<N3$v?3:t<N4$v?4:t<N5$v?5:t<N6$v?6:t<N7$v?7:t<N8$q?8:t<N9$q?9:10},varint$q={encode:encode_1$p,decode:decode$1_,encodingLength:length$r},_brrp_varint$o=varint$q;const decode$1Z=(t,e=0)=>[_brrp_varint$o.decode(t,e),_brrp_varint$o.decode.bytes],encodeTo$o=(t,e,r=0)=>(_brrp_varint$o.encode(t,e,r),e),encodingLength$t=t=>_brrp_varint$o.encodingLength(t),create$v=(t,e)=>{const r=e.byteLength,n=encodingLength$t(t),o=n+encodingLength$t(r),a=new Uint8Array(o+r);return encodeTo$o(t,a,0),encodeTo$o(r,a,n),a.set(e,o),new Digest$o(t,r,e,a)},decode$1Y=t=>{const e=coerce$p(t),[r,n]=decode$1Z(e),[o,a]=decode$1Z(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$o(r,o,c,e)},equals$G=(t,e)=>{if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$H(t.bytes,r.bytes)}};let Digest$o=class{constructor(t,e,r,n){this.code=t,this.size=e,this.digest=r,this.bytes=n}};class Parser{constructor(){N(this,"index",0);N(this,"input","")}new(e){return this.index=0,this.input=e,this}readAtomically(e){const r=this.index,n=e();return n===void 0&&(this.index=r),n}parseWith(e){const r=e();if(this.index===this.input.length)return r}peekChar(){if(!(this.index>=this.input.length))return this.input[this.index]}readChar(){if(!(this.index>=this.input.length))return this.input[this.index++]}readGivenChar(e){return this.readAtomically(()=>{const r=this.readChar();if(r===e)return r})}readSeparator(e,r,n){return this.readAtomically(()=>{if(!(r>0&&this.readGivenChar(e)===void 0))return n()})}readNumber(e,r,n,o){return this.readAtomically(()=>{let a=0,c=0;const u=this.peekChar();if(u===void 0)return;const l=u==="0",f=2**(8*o)-1;for(;;){const p=this.readAtomically(()=>{const g=this.readChar();if(g===void 0)return;const $=Number.parseInt(g,e);if(!Number.isNaN($))return $});if(p===void 0)break;if(a*=e,a+=p,a>f||(c+=1,r!==void 0&&c>r))return}if(c!==0)return!n&&l&&c>1?void 0:a})}readIPv4Addr(){return this.readAtomically(()=>{const e=new Uint8Array(4);for(let r=0;r<e.length;r++){const n=this.readSeparator(".",r,()=>this.readNumber(10,3,!1,1));if(n===void 0)return;e[r]=n}return e})}readIPv6Addr(){const e=r=>{for(let n=0;n<r.length/2;n++){const o=n*2;if(n<r.length-3){const c=this.readSeparator(":",n,()=>this.readIPv4Addr());if(c!==void 0)return r[o]=c[0],r[o+1]=c[1],r[o+2]=c[2],r[o+3]=c[3],[o+4,!0]}const a=this.readSeparator(":",n,()=>this.readNumber(16,4,!0,2));if(a===void 0)return[o,!1];r[o]=a>>8,r[o+1]=a&255}return[r.length,!1]};return this.readAtomically(()=>{const r=new Uint8Array(16),[n,o]=e(r);if(n===16)return r;if(o||this.readGivenChar(":")===void 0||this.readGivenChar(":")===void 0)return;const a=new Uint8Array(14),c=16-(n+2),[u]=e(a.subarray(0,c));return r.set(a.subarray(0,u),16-u),r})}readIPAddr(){return this.readIPv4Addr()??this.readIPv6Addr()}}const MAX_IPV6_LENGTH=45,MAX_IPV4_LENGTH=15,parser$1=new Parser;function parseIPv4(t){if(!(t.length>MAX_IPV4_LENGTH))return parser$1.new(t).parseWith(()=>parser$1.readIPv4Addr())}function parseIPv6(t){if(t.includes("%")&&(t=t.split("%")[0]),!(t.length>MAX_IPV6_LENGTH))return parser$1.new(t).parseWith(()=>parser$1.readIPv6Addr())}function parseIP(t){if(t.includes("%")&&(t=t.split("%")[0]),!(t.length>MAX_IPV6_LENGTH))return parser$1.new(t).parseWith(()=>parser$1.readIPAddr())}function isIPv4(t){return!!parseIPv4(t)}function isIPv6(t){return!!parseIPv6(t)}function isIP(t){return!!parseIP(t)}const V$d=-1,names$d={},codes$g={},table$d=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,V$d,"ip6zone"],[43,8,"ipcidr"],[53,V$d,"dns",!0],[54,V$d,"dns4",!0],[55,V$d,"dns6",!0],[56,V$d,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc"],[281,0,"webrtc-w3c"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,V$d,"unix",!1,!0],[421,V$d,"ipfs"],[421,V$d,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,V$d,"garlic64"],[448,0,"tls"],[449,V$d,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,V$d,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[777,V$d,"memory"]];table$d.forEach(t=>{const e=createProtocol$d(...t);codes$g[e.code]=e,names$d[e.name]=e});function createProtocol$d(t,e,r,n,o){return{code:t,size:e,name:r,resolvable:!!n,path:!!o}}function getProtocol$d(t){if(typeof t=="number"){if(codes$g[t]!=null)return codes$g[t];throw new Error(`no protocol with code: ${t}`)}else if(typeof t=="string"){if(names$d[t]!=null)return names$d[t];throw new Error(`no protocol with name: ${t}`)}throw new Error(`invalid protocol id type: ${typeof t}`)}const format$n=(t,e)=>{const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$j(r,baseCache$j(t),e||base58btc$m.encoder);default:return toStringV1$j(r,baseCache$j(t),e||base32$z.encoder)}},cache$n=new WeakMap,baseCache$j=t=>{const e=cache$n.get(t);if(e==null){const r=new Map;return cache$n.set(t,r),r}return e};let CID$j=class Oe{constructor(e,r,n,o){this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$j)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$j)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return Oe.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$v(e,r);return Oe.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return Oe.equals(this,e)}static equals(e,r){const n=r;return n&&e.code===n.code&&e.version===n.version&&equals$G(e.multihash,n.multihash)}toString(e){return format$n(this,e)}toJSON(){return{"/":format$n(this)}}link(){return this}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof Oe)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new Oe(n,o,a,c||encodeCID$k(n,o,a.bytes))}else if(r[cidSymbol$j]===!0){const{version:n,multihash:o,code:a}=r,c=decode$1Y(o);return Oe.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$j)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$j}) block encoding`);return new Oe(e,r,n,n.bytes)}case 1:{const o=encodeCID$k(e,r,n.bytes);return new Oe(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return Oe.create(0,DAG_PB_CODE$j,e)}static createV1(e,r){return Oe.create(1,e,r)}static decode(e){const[r,n]=Oe.decodeFirst(e);if(n.length)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=Oe.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$p(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$o(r.multihashCode,r.digestSize,a,o);return[r.version===0?Oe.createV0(c):Oe.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$1Z(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$j;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$j(e,r),a=Oe.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$j(a).set(n,e),a}};const parseCIDtoBytes$j=(t,e)=>{switch(t[0]){case"Q":{const r=e||base58btc$m;return[base58btc$m.prefix,r.decode(`${base58btc$m.prefix}${t}`)]}case base58btc$m.prefix:{const r=e||base58btc$m;return[base58btc$m.prefix,r.decode(t)]}case base32$z.prefix:{const r=e||base32$z;return[base32$z.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}},toStringV0$j=(t,e,r)=>{const{prefix:n}=r;if(n!==base58btc$m.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o},toStringV1$j=(t,e,r)=>{const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o},DAG_PB_CODE$j=112,SHA_256_CODE$j=18,encodeCID$k=(t,e,r)=>{const n=encodingLength$t(t),o=n+encodingLength$t(e),a=new Uint8Array(o+r.byteLength);return encodeTo$o(t,a,0),encodeTo$o(e,a,n),a.set(r,o),a},cidSymbol$j=Symbol.for("@ipld/js-cid/CID"),identity$m=from$B({prefix:"\0",name:"identity",encode:t=>toString$z(t),decode:t=>fromString$t(t)}),identityBase$e=Object.freeze(Object.defineProperty({__proto__:null,identity:identity$m},Symbol.toStringTag,{value:"Module"})),base2$s=rfc4648$p({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),base2$t=Object.freeze(Object.defineProperty({__proto__:null,base2:base2$s},Symbol.toStringTag,{value:"Module"})),base8$s=rfc4648$p({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),base8$t=Object.freeze(Object.defineProperty({__proto__:null,base8:base8$s},Symbol.toStringTag,{value:"Module"})),base10$s=baseX$o({prefix:"9",name:"base10",alphabet:"0123456789"}),base10$t=Object.freeze(Object.defineProperty({__proto__:null,base10:base10$s},Symbol.toStringTag,{value:"Module"})),base16$s=rfc4648$p({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),base16upper$e=rfc4648$p({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),base16$t=Object.freeze(Object.defineProperty({__proto__:null,base16:base16$s,base16upper:base16upper$e},Symbol.toStringTag,{value:"Module"})),base36$s=baseX$o({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),base36upper$e=baseX$o({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),base36$t=Object.freeze(Object.defineProperty({__proto__:null,base36:base36$s,base36upper:base36upper$e},Symbol.toStringTag,{value:"Module"})),base64$u=rfc4648$p({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),base64pad$e=rfc4648$p({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),base64url$e=rfc4648$p({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),base64urlpad$e=rfc4648$p({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),base64$v=Object.freeze(Object.defineProperty({__proto__:null,base64:base64$u,base64pad:base64pad$e,base64url:base64url$e,base64urlpad:base64urlpad$e},Symbol.toStringTag,{value:"Module"})),alphabet$f=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),alphabetBytesToChars$e=alphabet$f.reduce((t,e,r)=>(t[r]=e,t),[]),alphabetCharsToBytes$e=alphabet$f.reduce((t,e,r)=>(t[e.codePointAt(0)]=r,t),[]);function encode$1t(t){return t.reduce((e,r)=>(e+=alphabetBytesToChars$e[r],e),"")}function decode$1X(t){const e=[];for(const r of t){const n=alphabetCharsToBytes$e[r.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${r}`);e.push(n)}return new Uint8Array(e)}const base256emoji$s=from$B({prefix:"\u{1F680}",name:"base256emoji",encode:encode$1t,decode:decode$1X}),base256emoji$t=Object.freeze(Object.defineProperty({__proto__:null,base256emoji:base256emoji$s},Symbol.toStringTag,{value:"Module"}));new TextEncoder,new TextDecoder;const bases$e={...identityBase$e,...base2$t,...base8$t,...base10$t,...base16$t,...base32$A,...base36$t,...base58$e,...base64$v,...base256emoji$t},decoders$d=Object.values(bases$e).map(t=>t.decoder);(function(){let t=decoders$d[0].or(decoders$d[1]);return decoders$d.slice(2).forEach(e=>t=t.or(e)),t})(),getProtocol$d("dns").code,getProtocol$d("dns4").code,getProtocol$d("dns6").code,getProtocol$d("dnsaddr").code;var TopicValidatorResult$5;(function(t){t.Accept="accept",t.Ignore="ignore",t.Reject="reject"})(TopicValidatorResult$5||(TopicValidatorResult$5={}));var FaultTolerance$6;(function(t){t[t.FATAL_ALL=0]="FATAL_ALL",t[t.NO_FATAL=1]="NO_FATAL"})(FaultTolerance$6||(FaultTolerance$6={}));let AggregateCodeError$4=class extends AggregateError{constructor(e,r,n,o){super(e,r);N(this,"code");N(this,"props");this.code=n,this.name=o?.name??"AggregateCodeError",this.props=o??{}}};function coerce$o(t){if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")}function fromString$s(t){return new TextEncoder().encode(t)}function toString$y(t){return new TextDecoder().decode(t)}function base$r(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$r=base$r,_brrp__multiformats_scope_baseX$n=src$r;let Encoder$q=class{constructor(t,e,r){N(this,"name");N(this,"prefix");N(this,"baseEncode");this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$q=class{constructor(t,e,r){N(this,"name");N(this,"prefix");N(this,"baseDecode");N(this,"prefixCodePoint");if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$s(this,t)}},ComposedDecoder$o=class{constructor(t){N(this,"decoders");this.decoders=t}or(t){return or$s(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r!=null)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};function or$s(t,e){return new ComposedDecoder$o({...t.decoders??{[t.prefix]:t},...e.decoders??{[e.prefix]:e}})}let Codec$o=class{constructor(t,e,r,n){N(this,"name");N(this,"prefix");N(this,"baseEncode");N(this,"baseDecode");N(this,"encoder");N(this,"decoder");this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$q(t,e,r),this.decoder=new Decoder$q(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};function from$A({name:t,prefix:e,encode:r,decode:n}){return new Codec$o(t,e,r,n)}function baseX$n({name:t,prefix:e,alphabet:r}){const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$n(r,t);return from$A({prefix:e,name:t,encode:n,decode:a=>coerce$o(o(a))})}function decode$1W(t,e,r,n){const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c}function encode$1s(t,e,r){const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c!==0&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a}function rfc4648$o({name:t,prefix:e,bitsPerChar:r,alphabet:n}){return from$A({prefix:e,name:t,encode(o){return encode$1s(o,n,r)},decode(o){return decode$1W(o,n,r,t)}})}const base58btc$l=baseX$n({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),base58flickr$d=baseX$n({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),base58$d=Object.freeze(Object.defineProperty({__proto__:null,base58btc:base58btc$l,base58flickr:base58flickr$d},Symbol.toStringTag,{value:"Module"})),base32$x=rfc4648$o({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),base32upper$e=rfc4648$o({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),base32pad$e=rfc4648$o({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),base32padupper$d=rfc4648$o({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),base32hex$d=rfc4648$o({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),base32hexupper$d=rfc4648$o({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),base32hexpad$d=rfc4648$o({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),base32hexpadupper$d=rfc4648$o({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),base32z$d=rfc4648$o({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),base32$y=Object.freeze(Object.defineProperty({__proto__:null,base32:base32$x,base32hex:base32hex$d,base32hexpad:base32hexpad$d,base32hexpadupper:base32hexpadupper$d,base32hexupper:base32hexupper$d,base32pad:base32pad$e,base32padupper:base32padupper$d,base32upper:base32upper$e,base32z:base32z$d},Symbol.toStringTag,{value:"Module"})),base10$q=baseX$n({prefix:"9",name:"base10",alphabet:"0123456789"}),base10$r=Object.freeze(Object.defineProperty({__proto__:null,base10:base10$q},Symbol.toStringTag,{value:"Module"})),base16$q=rfc4648$o({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),base16upper$d=rfc4648$o({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),base16$r=Object.freeze(Object.defineProperty({__proto__:null,base16:base16$q,base16upper:base16upper$d},Symbol.toStringTag,{value:"Module"})),base2$q=rfc4648$o({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),base2$r=Object.freeze(Object.defineProperty({__proto__:null,base2:base2$q},Symbol.toStringTag,{value:"Module"})),alphabet$e=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),alphabetBytesToChars$d=alphabet$e.reduce((t,e,r)=>(t[r]=e,t),[]),alphabetCharsToBytes$d=alphabet$e.reduce((t,e,r)=>(t[e.codePointAt(0)]=r,t),[]);function encode$1r(t){return t.reduce((e,r)=>(e+=alphabetBytesToChars$d[r],e),"")}function decode$1V(t){const e=[];for(const r of t){const n=alphabetCharsToBytes$d[r.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${r}`);e.push(n)}return new Uint8Array(e)}const base256emoji$q=from$A({prefix:"\u{1F680}",name:"base256emoji",encode:encode$1r,decode:decode$1V}),base256emoji$r=Object.freeze(Object.defineProperty({__proto__:null,base256emoji:base256emoji$q},Symbol.toStringTag,{value:"Module"})),base36$q=baseX$n({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),base36upper$d=baseX$n({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),base36$r=Object.freeze(Object.defineProperty({__proto__:null,base36:base36$q,base36upper:base36upper$d},Symbol.toStringTag,{value:"Module"})),base64$s=rfc4648$o({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),base64pad$d=rfc4648$o({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),base64url$d=rfc4648$o({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),base64urlpad$d=rfc4648$o({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),base64$t=Object.freeze(Object.defineProperty({__proto__:null,base64:base64$s,base64pad:base64pad$d,base64url:base64url$d,base64urlpad:base64urlpad$d},Symbol.toStringTag,{value:"Module"})),base8$q=rfc4648$o({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),base8$r=Object.freeze(Object.defineProperty({__proto__:null,base8:base8$q},Symbol.toStringTag,{value:"Module"})),identity$l=from$A({prefix:"\0",name:"identity",encode:t=>toString$y(t),decode:t=>fromString$s(t)}),identityBase$d=Object.freeze(Object.defineProperty({__proto__:null,identity:identity$l},Symbol.toStringTag,{value:"Module"}));new TextEncoder,new TextDecoder;const bases$d={...identityBase$d,...base2$r,...base8$r,...base10$r,...base16$r,...base32$y,...base36$r,...base58$d,...base64$t,...base256emoji$r},V$c=-1,names$c={},codes$f={},table$c=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,V$c,"ip6zone"],[43,8,"ipcidr"],[53,V$c,"dns",!0],[54,V$c,"dns4",!0],[55,V$c,"dns6",!0],[56,V$c,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc-direct"],[281,0,"webrtc"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,V$c,"unix",!1,!0],[421,V$c,"ipfs"],[421,V$c,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,V$c,"garlic64"],[448,0,"tls"],[449,V$c,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,V$c,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[777,V$c,"memory"]];table$c.forEach(t=>{const e=createProtocol$c(...t);codes$f[e.code]=e,names$c[e.name]=e});function createProtocol$c(t,e,r,n,o){return{code:t,size:e,name:r,resolvable:!!n,path:!!o}}function getProtocol$c(t){if(typeof t=="number"){if(codes$f[t]!=null)return codes$f[t];throw new Error(`no protocol with code: ${t}`)}else if(typeof t=="string"){if(names$c[t]!=null)return names$c[t];throw new Error(`no protocol with name: ${t}`)}throw new Error(`invalid protocol id type: ${typeof t}`)}getProtocol$c("ip4"),getProtocol$c("ip6"),getProtocol$c("ipcidr");const decoders$c=Object.values(bases$d).map(t=>t.decoder);(function(){let t=decoders$c[0].or(decoders$c[1]);return decoders$c.slice(2).forEach(e=>t=t.or(e)),t})(),getProtocol$c("dns").code,getProtocol$c("dns4").code,getProtocol$c("dns6").code,getProtocol$c("dnsaddr").code;const isReactNative$1=typeof navigator<"u"&&navigator.product==="ReactNative";function getDefaultBase(){return isReactNative$1?"http://localhost":self.location?self.location.protocol+"//"+self.location.host:""}const URL$2=self.URL,defaultBase$1=getDefaultBase();let URLWithLegacySupport$2=class{constructor(t="",e=defaultBase$1){this.super=new URL$2(t,e),this.path=this.pathname+this.search,this.auth=this.username&&this.password?this.username+":"+this.password:null,this.query=this.search&&this.search.startsWith("?")?this.search.slice(1):null}get hash(){return this.super.hash}get host(){return this.super.host}get hostname(){return this.super.hostname}get href(){return this.super.href}get origin(){return this.super.origin}get password(){return this.super.password}get pathname(){return this.super.pathname}get port(){return this.super.port}get protocol(){return this.super.protocol}get search(){return this.super.search}get searchParams(){return this.super.searchParams}get username(){return this.super.username}set hash(t){this.super.hash=t}set host(t){this.super.host=t}set hostname(t){this.super.hostname=t}set href(t){this.super.href=t}set password(t){this.super.password=t}set pathname(t){this.super.pathname=t}set port(t){this.super.port=t}set protocol(t){this.super.protocol=t}set search(t){this.super.search=t}set username(t){this.super.username=t}static createObjectURL(t){return URL$2.createObjectURL(t)}static revokeObjectURL(t){URL$2.revokeObjectURL(t)}toJSON(){return this.super.toJSON()}toString(){return this.super.toString()}format(){return this.toString()}};function format$m(t){if(typeof t=="string")return new URL$2(t).toString();if(!(t instanceof URL$2)){const e=t.username&&t.password?`${t.username}:${t.password}@`:"",r=t.auth?t.auth+"@":"",n=t.port?":"+t.port:"",o=t.protocol?t.protocol+"//":"",a=t.host||"",c=t.hostname||"",u=t.search||(t.query?"?"+t.query:""),l=t.hash||"",f=t.pathname||"",p=t.path||f+u;return`${o}${e||r}${a||c+n}${p}${l}`}}var urlBrowser={URLWithLegacySupport:URLWithLegacySupport$2,URLSearchParams:self.URLSearchParams,defaultBase:defaultBase$1,format:format$m};const{URLWithLegacySupport:URLWithLegacySupport$1,format:format$l}=urlBrowser;var relative$1=(t,e={},r={},n)=>{let o=e.protocol?e.protocol.replace(":",""):"http";o=(r[o]||n||o)+":";let a;try{a=new URLWithLegacySupport$1(t)}catch{a={}}const c=Object.assign({},e,{protocol:o||a.protocol,host:e.host||a.host});return new URLWithLegacySupport$1(t,format$l(c)).toString()};const{URLWithLegacySupport,format:format$k,URLSearchParams:URLSearchParams$2,defaultBase}=urlBrowser,relative=relative$1;var isoUrl={URL:URLWithLegacySupport,URLSearchParams:URLSearchParams$2,format:format$k,relative,defaultBase};const pathPattern=/^\/(ip[fn]s)\/([^/?#]+)/,defaultProtocolMatch=1,defaultHashMath=2,subdomainGatewayPattern=/^https?:\/\/([^/]+)\.(ip[fn]s)\.[^/?]+/,fqdnWithTld=/^(([a-z0-9]|[a-z0-9][a-z0-9-]*[a-z0-9])\.)+([a-z0-9]|[a-z0-9][a-z0-9-]*[a-z0-9])$/;function isCID$1(t){try{return isString(t)?!!CID$j.parse(t):t instanceof Uint8Array?!!CID$j.decode(t):!!CID$j.asCID(t)}catch{return!1}}function isIpfs(t,e,r=defaultProtocolMatch,n=defaultHashMath){const o=convertToString$c(t);if(o===!1)return!1;const a=o.match(e);if(a==null||a[r]!=="ipfs")return!1;let c=a[n];return c!=null&&e===subdomainGatewayPattern&&(c=c.toLowerCase()),isCID$1(c)}function isIpns(t,e,r=defaultProtocolMatch,n=defaultHashMath){const o=convertToString$c(t);if(o===!1)return!1;const a=o.match(e);if(a==null||a[r]!=="ipns")return!1;let c=a[n];if(c!=null&&e===subdomainGatewayPattern){if(c=c.toLowerCase(),isCID$1(c))return!0;try{!c.includes(".")&&c.includes("-")&&(c=c.replace(/--/g,"@").replace(/-/g,".").replace(/@/g,"-"));const{hostname:u}=new isoUrl.URL(`http://${c}`);return fqdnWithTld.test(u)}catch{return!1}}return!0}function isString(t){return typeof t=="string"}function convertToString$c(t){return t instanceof Uint8Array?toString$D(t,"base58btc"):isString(t)?t:!1}const path=t=>isIpfs(t,pathPattern)||isIpns(t,pathPattern),ipfsPath$1=t=>isIpfs(t,pathPattern),ipnsPath=t=>isIpns(t,pathPattern);let nanoid$1=(t=21)=>crypto.getRandomValues(new Uint8Array(t)).reduce((e,r)=>(r&=63,r<36?e+=r.toString(36):r<62?e+=(r-26).toString(36).toUpperCase():r>62?e+="-":e+="_",e),"");const pathSepS="/",pathSepB=new TextEncoder().encode(pathSepS),pathSep=pathSepB[0];class Key{constructor(e,r){if(typeof e=="string")this._buf=fromString$y(e);else if(e instanceof Uint8Array)this._buf=e;else throw new Error("Invalid key, should be String of Uint8Array");if(r==null&&(r=!0),r&&this.clean(),this._buf.byteLength===0||this._buf[0]!==pathSep)throw new Error("Invalid key")}toString(e="utf8"){return toString$D(this._buf,e)}uint8Array(){return this._buf}get[Symbol.toStringTag](){return`Key(${this.toString()})`}static withNamespaces(e){return new Key(e.join(pathSepS))}static random(){return new Key(nanoid$1().replace(/-/g,""))}static asKey(e){return e instanceof Uint8Array||typeof e=="string"?new Key(e):typeof e.uint8Array=="function"?new Key(e.uint8Array()):null}clean(){if((this._buf==null||this._buf.byteLength===0)&&(this._buf=pathSepB),this._buf[0]!==pathSep){const e=new Uint8Array(this._buf.byteLength+1);e.fill(pathSep,0,1),e.set(this._buf,1),this._buf=e}for(;this._buf.byteLength>1&&this._buf[this._buf.byteLength-1]===pathSep;)this._buf=this._buf.subarray(0,-1)}less(e){const r=this.list(),n=e.list();for(let o=0;o<r.length;o++){if(n.length<o+1)return!1;const a=r[o],c=n[o];if(a<c)return!0;if(a>c)return!1}return r.length<n.length}reverse(){return Key.withNamespaces(this.list().slice().reverse())}namespaces(){return this.list()}baseNamespace(){const e=this.namespaces();return e[e.length-1]}list(){return this.toString().split(pathSepS).slice(1)}type(){return namespaceType(this.baseNamespace())}name(){return namespaceValue(this.baseNamespace())}instance(e){return new Key(this.toString()+":"+e)}path(){let e=this.parent().toString();return e.endsWith(pathSepS)||(e+=pathSepS),e+=this.type(),new Key(e)}parent(){const e=this.list();return e.length===1?new Key(pathSepS):new Key(e.slice(0,-1).join(pathSepS))}child(e){return this.toString()===pathSepS?e:e.toString()===pathSepS?this:new Key(this.toString()+e.toString(),!1)}isAncestorOf(e){return e.toString()===this.toString()?!1:e.toString().startsWith(this.toString())}isDecendantOf(e){return e.toString()===this.toString()?!1:this.toString().startsWith(e.toString())}isTopLevel(){return this.list().length===1}concat(...e){return Key.withNamespaces([...this.namespaces(),...flatten(e.map(r=>r.namespaces()))])}}function namespaceType(t){const e=t.split(":");return e.length<2?"":e.slice(0,-1).join(":")}function namespaceValue(t){const e=t.split(":");return e[e.length-1]}function flatten(t){return[].concat(...t)}var anySignal$5={exports:{}};function anySignal$4(t){const e=new globalThis.AbortController;function r(){e.abort();for(const n of t)!n||!n.removeEventListener||n.removeEventListener("abort",r)}for(const n of t)if(!(!n||!n.addEventListener)){if(n.aborted){r();break}n.addEventListener("abort",r)}return e.signal}anySignal$5.exports=anySignal$4;var anySignal_2=anySignal$5.exports.anySignal=anySignal$4,anySignalExports=anySignal$5.exports;let durationRE=/(-?(?:\d+\.?\d*|\d*\.?\d+)(?:e[-+]?\d+)?)\s*([\p{L}]*)/uig;parse$4.nanosecond=parse$4.ns=1/1e6,parse$4.\u00B5s=parse$4.\u03BCs=parse$4.us=parse$4.microsecond=1/1e3,parse$4.millisecond=parse$4.ms=parse$4[""]=1,parse$4.second=parse$4.sec=parse$4.s=parse$4.ms*1e3,parse$4.minute=parse$4.min=parse$4.m=parse$4.s*60,parse$4.hour=parse$4.hr=parse$4.h=parse$4.m*60,parse$4.day=parse$4.d=parse$4.h*24,parse$4.week=parse$4.wk=parse$4.w=parse$4.d*7,parse$4.month=parse$4.b=parse$4.d*(365.25/12),parse$4.year=parse$4.yr=parse$4.y=parse$4.d*365.25;function parse$4(t="",e="ms"){var r=null;t=(t+"").replace(/(\d)[,_](\d)/g,"$1$2");var n=t[0]==="-";return t.replace(durationRE,function(o,a,c){c=unitRatio(c),c&&(r=(r||0)+Math.abs(parseFloat(a,10))*c)}),r&&r/(unitRatio(e)||1)*(n?-1:1)}function unitRatio(t){return parse$4[t]||parse$4[t.toLowerCase().replace(/s$/,"")]}let TimeoutError$5=class vr extends Error{constructor(e="request timed out"){super(e),this.name="TimeoutError",this.code=vr.code}};TimeoutError$5.code="ERR_TIMEOUT";function withTimeoutOption(t,e){return(...r)=>{const n=r[e??r.length-1];if(!n||!n.timeout)return t(...r);const o=typeof n.timeout=="string"?parse$4(n.timeout):n.timeout,a=new timeoutAbortController.TimeoutController(o);n.signal=anySignal_2([n.signal,a.signal]);const c=t(...r),u=new Promise((p,g)=>{a.signal.addEventListener("abort",()=>{g(new TimeoutError$5)})}),l=Date.now(),f=()=>{if(a.signal.aborted)throw new TimeoutError$5;if(Date.now()-l>o)throw a.abort(),new TimeoutError$5};return c[Symbol.asyncIterator]?async function*(){const p=c[Symbol.asyncIterator]();try{for(;;){const{value:g,done:$}=await Promise.race([p.next(),u]);if($)break;f(),yield g}}catch(g){throw f(),g}finally{a.clear(),p.return&&p.return()}}():(async()=>{try{const p=await Promise.race([c,u]);return f(),p}catch(p){throw f(),p}finally{a.clear()}})()}}var encode_1$o=encode$1q,MSB$v=128,REST$v=127,MSBALL$o=~REST$v,INT$o=Math.pow(2,31);function encode$1q(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$o;)e[r++]=t&255|MSB$v,t/=128;for(;t&MSBALL$o;)e[r++]=t&255|MSB$v,t>>>=7;return e[r]=t|0,encode$1q.bytes=r-n+1,e}var decode$1U=read$p,MSB$1$o=128,REST$1$o=127;function read$p(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$p.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$o)<<o:(c&REST$1$o)*Math.pow(2,o),o+=7}while(c>=MSB$1$o);return read$p.bytes=a-n,r}var N1$u=Math.pow(2,7),N2$u=Math.pow(2,14),N3$u=Math.pow(2,21),N4$u=Math.pow(2,28),N5$u=Math.pow(2,35),N6$u=Math.pow(2,42),N7$u=Math.pow(2,49),N8$p=Math.pow(2,56),N9$p=Math.pow(2,63),length$q=function(t){return t<N1$u?1:t<N2$u?2:t<N3$u?3:t<N4$u?4:t<N5$u?5:t<N6$u?6:t<N7$u?7:t<N8$p?8:t<N9$p?9:10},varint$p={encode:encode_1$o,decode:decode$1U,encodingLength:length$q},_brrp_varint$n=varint$p;const decode$1T=(t,e=0)=>[_brrp_varint$n.decode(t,e),_brrp_varint$n.decode.bytes],encodeTo$n=(t,e,r=0)=>(_brrp_varint$n.encode(t,e,r),e),encodingLength$s=t=>_brrp_varint$n.encodingLength(t),equals$F=(t,e)=>{if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0},coerce$n=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")},fromString$r=t=>new TextEncoder().encode(t),toString$x=t=>new TextDecoder().decode(t),create$u=(t,e)=>{const r=e.byteLength,n=encodingLength$s(t),o=n+encodingLength$s(r),a=new Uint8Array(o+r);return encodeTo$n(t,a,0),encodeTo$n(r,a,n),a.set(e,o),new Digest$n(t,r,e,a)},decode$1S=t=>{const e=coerce$n(t),[r,n]=decode$1T(e),[o,a]=decode$1T(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$n(r,o,c,e)},equals$E=(t,e)=>{if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$F(t.bytes,r.bytes)}};let Digest$n=class{constructor(t,e,r,n){this.code=t,this.size=e,this.digest=r,this.bytes=n}};function base$q(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$q=base$q,_brrp__multiformats_scope_baseX$m=src$q;let Encoder$p=class{constructor(t,e,r){this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$p=class{constructor(t,e,r){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$r(this,t)}},ComposedDecoder$n=class{constructor(t){this.decoders=t}or(t){return or$r(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$r=(t,e)=>new ComposedDecoder$n({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});let Codec$n=class{constructor(t,e,r,n){this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$p(t,e,r),this.decoder=new Decoder$p(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};const from$z=({name:t,prefix:e,encode:r,decode:n})=>new Codec$n(t,e,r,n),baseX$m=({prefix:t,name:e,alphabet:r})=>{const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$m(r,e);return from$z({prefix:t,name:e,encode:n,decode:a=>coerce$n(o(a))})},decode$1R=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode$1p=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648$n=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from$z({prefix:e,name:t,encode(o){return encode$1p(o,n,r)},decode(o){return decode$1R(o,n,r,t)}}),base58btc$k=baseX$m({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),base58flickr$c=baseX$m({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),base58$c=Object.freeze(Object.defineProperty({__proto__:null,base58btc:base58btc$k,base58flickr:base58flickr$c},Symbol.toStringTag,{value:"Module"})),base32$v=rfc4648$n({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),base32upper$d=rfc4648$n({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),base32pad$d=rfc4648$n({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),base32padupper$c=rfc4648$n({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),base32hex$c=rfc4648$n({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),base32hexupper$c=rfc4648$n({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),base32hexpad$c=rfc4648$n({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),base32hexpadupper$c=rfc4648$n({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),base32z$c=rfc4648$n({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),base32$w=Object.freeze(Object.defineProperty({__proto__:null,base32:base32$v,base32hex:base32hex$c,base32hexpad:base32hexpad$c,base32hexpadupper:base32hexpadupper$c,base32hexupper:base32hexupper$c,base32pad:base32pad$d,base32padupper:base32padupper$c,base32upper:base32upper$d,base32z:base32z$c},Symbol.toStringTag,{value:"Module"})),format$j=(t,e)=>{const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$i(r,baseCache$i(t),e||base58btc$k.encoder);default:return toStringV1$i(r,baseCache$i(t),e||base32$v.encoder)}},cache$m=new WeakMap,baseCache$i=t=>{const e=cache$m.get(t);if(e==null){const r=new Map;return cache$m.set(t,r),r}return e};let CID$i=class Me{constructor(e,r,n,o){this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$i)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$i)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return Me.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$u(e,r);return Me.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return Me.equals(this,e)}static equals(e,r){const n=r;return n&&e.code===n.code&&e.version===n.version&&equals$E(e.multihash,n.multihash)}toString(e){return format$j(this,e)}toJSON(){return{"/":format$j(this)}}link(){return this}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof Me)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new Me(n,o,a,c||encodeCID$j(n,o,a.bytes))}else if(r[cidSymbol$i]===!0){const{version:n,multihash:o,code:a}=r,c=decode$1S(o);return Me.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$i)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$i}) block encoding`);return new Me(e,r,n,n.bytes)}case 1:{const o=encodeCID$j(e,r,n.bytes);return new Me(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return Me.create(0,DAG_PB_CODE$i,e)}static createV1(e,r){return Me.create(1,e,r)}static decode(e){const[r,n]=Me.decodeFirst(e);if(n.length)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=Me.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$n(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$n(r.multihashCode,r.digestSize,a,o);return[r.version===0?Me.createV0(c):Me.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$1T(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$i;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$i(e,r),a=Me.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$i(a).set(n,e),a}};const parseCIDtoBytes$i=(t,e)=>{switch(t[0]){case"Q":{const r=e||base58btc$k;return[base58btc$k.prefix,r.decode(`${base58btc$k.prefix}${t}`)]}case base58btc$k.prefix:{const r=e||base58btc$k;return[base58btc$k.prefix,r.decode(t)]}case base32$v.prefix:{const r=e||base32$v;return[base32$v.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}},toStringV0$i=(t,e,r)=>{const{prefix:n}=r;if(n!==base58btc$k.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o},toStringV1$i=(t,e,r)=>{const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o},DAG_PB_CODE$i=112,SHA_256_CODE$i=18,encodeCID$j=(t,e,r)=>{const n=encodingLength$s(t),o=n+encodingLength$s(e),a=new Uint8Array(o+r.byteLength);return encodeTo$n(t,a,0),encodeTo$n(e,a,n),a.set(r,o),a},cidSymbol$i=Symbol.for("@ipld/js-cid/CID"),IPFS_PREFIX$1="/ipfs/";function toCidAndPath(t){if(t instanceof Uint8Array)try{t=CID$i.decode(t)}catch(o){throw errcode(o,"ERR_INVALID_CID")}let e=CID$i.asCID(t);if(e)return{cid:e,path:void 0};t=t.toString(),t.startsWith(IPFS_PREFIX$1)&&(t=t.substring(IPFS_PREFIX$1.length));const r=t.split("/");let n;try{e=CID$i.parse(r.shift()||"")}catch(o){throw errcode(o,"ERR_INVALID_CID")}return r.length&&(n=`/${r.join("/")}`),{cid:e,path:n}}const ERR_BAD_PATH="ERR_BAD_PATH",OFFLINE_ERROR="This command must be run in online mode. Try running 'ipfs daemon' first.",MFS_ROOT_KEY$2=new Key("/local/filesroot"),MFS_MAX_CHUNK_SIZE=262144,normalizePath=t=>{if(CID$k.asCID(t))return`/ipfs/${t}`;const e=t.toString();try{return`/ipfs/${CID$k.parse(e)}`}catch{}if(path(e))return e;throw errcode(new Error(`invalid path: ${t}`),ERR_BAD_PATH)},normalizeCidPath=t=>t instanceof Uint8Array?CID$k.decode(t).toString():(t=t.toString(),t.indexOf("/ipfs/")===0&&(t=t.substring(6)),t.charAt(t.length-1)==="/"&&(t=t.substring(0,t.length-1)),t),resolvePath$1=async function(t,e,r,n={}){const{cid:o,path:a}=toCidAndPath(r);a&&(n.path=a);let c=o,u=n.path||"";if(u.startsWith("/")&&(u=u.substring(1)),n.path)try{for await(const{value:l,remainderPath:f}of resolve$5(o,n.path,e,t,{signal:n.signal})){if(!CID$k.asCID(l))break;u=f,c=l}}catch(l){throw l.message.startsWith("Object has no property")&&(l.message=`no link named "${u.split("/")[0]}" under ${c}`,l.code="ERR_NO_LINK"),l}return{cid:c,remainderPath:u||""}},mapFile=t=>{if(t.type!=="file"&&t.type!=="directory"&&t.type!=="raw")throw new Error(`Unknown node type '${t.type}'`);const e={cid:t.cid,path:t.path,name:t.name,size:t.size,type:"file"};return t.type==="directory"&&(e.type="dir"),t.type==="file"&&(e.size=t.unixfs.fileSize()),(t.type==="file"||t.type==="directory")&&(e.mode=t.unixfs.mode,t.unixfs.mtime!==void 0&&(e.mtime=t.unixfs.mtime)),e},withTimeout=withTimeoutOption(async(t,e)=>await t),resolve$5=async function*(t,e,r,n,o){const a=async f=>{const p=await r.getCodec(f.code),g=await n.blocks.get(f,o);return p.decode(g)},c=e.split("/").filter(Boolean);let u=await a(t),l=t;for(;c.length;){const f=c.shift();if(!f)throw errcode(new Error(`Could not resolve path "${e}"`),"ERR_INVALID_PATH");if(t.code===code$i&&Array.isArray(u.Links)){const p=u.Links.find(g=>g.Name===f);if(p){yield{value:p.Hash,remainderPath:c.join("/")},u=await a(p.Hash),l=p.Hash;continue}}if(Object.prototype.hasOwnProperty.call(u,f))u=u[f],yield{value:u,remainderPath:c.join("/")};else throw errcode(new Error(`no link named "${f}" under ${l}`),"ERR_NO_LINK");CID$k.asCID(u)&&(l=u,u=await a(u))}yield{value:u,remainderPath:""}};class Service{static create({start:e,stop:r}){return new Service(e,r)}static async start(e,r){const{state:n,activate:o}=e;switch(n.status){case"stopped":try{const a=o(r);e.state={status:"starting",ready:a};const c=await a;return e.state={status:"started",value:c},c}catch(a){throw e.state={status:"stopped"},a}case"starting":throw new AlreadyStartingError;case"started":throw new AlreadyStartedError;case"stopping":return await n.ready,await Service.start(e,r);default:return Service.panic(e)}}static async stop(e){const{state:r,deactivate:n}=e;switch(r.status){case"stopped":break;case"starting":{try{await r.ready}catch{}return await Service.stop(e)}case"stopping":return await r.ready;case"started":{n&&await n(r.value),e.state={status:"stopped"};break}default:Service.panic(r)}}static try({state:e}){switch(e.status){case"started":return e.value;default:return null}}static async use({state:e},r){switch(e.status){case"started":return e.value;case"starting":return await withTimeout(e.ready,r);default:throw new NotStartedError}}static panic({state:e}){const r=JSON.stringify({status:e.status});throw RangeError(`Service in invalid state ${r}, should never happen if you see this please report a bug`)}constructor(e,r){this.activate=e,this.deactivate=r,this.state={status:"stopped"}}async use(e){return await Service.use(this,e)}try(){return Service.try(this)}}function createStart$1({network:t,preload:e,peerId:r,keychain:n,repo:o,ipns:a,mfsPreload:c,print:u,hashers:l,options:f}){return async()=>{const{libp2p:p}=await Service.start(t,{peerId:r,repo:o,print:u,hashers:l,options:f});await Promise.all([a.startOnline({keychain:n,libp2p:p,peerId:r,repo:o}),e.start(),c.start()])}}function createStop$1({network:t,preload:e,ipns:r,repo:n,mfsPreload:o}){return async()=>{await Promise.all([e.stop(),r.stop(),o.stop()]),await Service.stop(t),await n.close()}}var hashlru=function(t){if(!t)throw Error("hashlru must have a max value, of type number, greater than 0");var e=0,r=Object.create(null),n=Object.create(null);function o(a,c){r[a]=c,e++,e>=t&&(e=0,n=r,r=Object.create(null))}return{has:function(a){return r[a]!==void 0||n[a]!==void 0},remove:function(a){r[a]!==void 0&&(r[a]=void 0),n[a]!==void 0&&(n[a]=void 0)},get:function(a){var c=r[a];if(c!==void 0)return c;if((c=n[a])!==void 0)return o(a,c),c},set:function(a,c){r[a]!==void 0?r[a]=c:o(a,c)},clear:function(){r=Object.create(null),n=Object.create(null)}}};const cache$l=getDefaultExportFromCjs(hashlru);let TLRU$1=class{constructor(t){this.lru=cache$l(t)}get(t){const e=this.lru.get(t);if(e){if(e.expire&&e.expire<Date.now()){this.lru.remove(t);return}return e.value}}set(t,e,r){this.lru.set(t,{value:e,expire:Date.now()+r})}has(t){return!!this.get(t)}remove(t){this.lru.remove(t)}clear(){this.lru.clear()}};var error={};let TimeoutError$4=class extends Error{constructor(t="Request timed out"){super(t),this.name="TimeoutError"}};error.TimeoutError=TimeoutError$4;let AbortError$a=class extends Error{constructor(t="The operation was aborted."){super(t),this.name="AbortError"}};error.AbortError=AbortError$a;let HTTPError$1=class extends Error{constructor(t){super(t.statusText),this.name="HTTPError",this.response=t}};error.HTTPError=HTTPError$1;var src$p={exports:{}},browser$4={exports:{}},hasRequiredBrowser;function requireBrowser(){return hasRequiredBrowser||(hasRequiredBrowser=1,function(t,e){var r=function(){if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof commonjsGlobal<"u")return commonjsGlobal;throw new Error("unable to locate global object")},n=r();t.exports=e=n.fetch,n.fetch&&(e.default=n.fetch.bind(n)),e.Headers=n.Headers,e.Request=n.Request,e.Response=n.Response}(browser$4,browser$4.exports)),browser$4.exports}globalThis.fetch&&globalThis.Headers&&globalThis.Request&&globalThis.Response?src$p.exports={default:globalThis.fetch,Headers:globalThis.Headers,Request:globalThis.Request,Response:globalThis.Response}:src$p.exports={default:requireBrowser().default,Headers:requireBrowser().Headers,Request:requireBrowser().Request,Response:requireBrowser().Response};var srcExports=src$p.exports,fetch_browser$1=srcExports;const{TimeoutError:TimeoutError$3,AbortError:AbortError$9}=error,{Response:Response$1,Request:Request$2,Headers:Headers$1,default:fetch$1}=fetch_browser$1,fetchWithProgress=(t,e={})=>{const r=new XMLHttpRequest;r.open(e.method||"GET",t.toString(),!0);const{timeout:n,headers:o}=e;if(n&&n>0&&n<1/0&&(r.timeout=n),e.overrideMimeType!=null&&r.overrideMimeType(e.overrideMimeType),o)for(const[a,c]of new Headers$1(o))r.setRequestHeader(a,c);return e.signal&&(e.signal.onabort=()=>r.abort()),e.onUploadProgress&&(r.upload.onprogress=e.onUploadProgress),r.responseType="arraybuffer",new Promise((a,c)=>{const u=l=>{switch(l.type){case"error":{a(Response$1.error());break}case"load":{a(new ResponseWithURL(r.responseURL,r.response,{status:r.status,statusText:r.statusText,headers:parseHeaders(r.getAllResponseHeaders())}));break}case"timeout":{c(new TimeoutError$3);break}case"abort":{c(new AbortError$9);break}}};r.onerror=u,r.onload=u,r.ontimeout=u,r.onabort=u,r.send(e.body)})},fetchWithStreaming=fetch$1,fetchWith=(t,e={})=>e.onUploadProgress!=null?fetchWithProgress(t,e):fetchWithStreaming(t,e),parseHeaders=t=>{const e=new Headers$1;for(const r of t.trim().split(/[\r\n]+/)){const n=r.indexOf(": ");n>0&&e.set(r.slice(0,n),r.slice(n+1))}return e};class ResponseWithURL extends Response$1{constructor(e,r,n){super(r,n),Object.defineProperty(this,"url",{value:e})}}var fetch_browser={fetch:fetchWith,Request:Request$2,Headers:Headers$1};const require$$2=getAugmentedNamespace(mergeOptions$f);async function*browserReadableStreamToIt$1(t,e={}){const r=t.getReader();try{for(;;){const n=await r.read();if(n.done)return;yield n.value}}finally{e.preventCancel!==!0&&r.cancel(),r.releaseLock()}}var browserReadablestreamToIt=browserReadableStreamToIt$1;const all$3=async t=>{const e=[];for await(const r of t)e.push(r);return e};var itAll=all$3;const{fetch,Request:Request$1,Headers}=fetch_browser,{TimeoutError:TimeoutError$2,HTTPError}=error,merge$3=require$$2.bind({ignoreUndefined:!0}),{URL:URL$1,URLSearchParams:URLSearchParams$1}=isoUrl,anySignal$3=anySignalExports,browserReableStreamToIt=browserReadablestreamToIt,{isBrowser:isBrowser$1,isWebWorker}=env,all$2=itAll,timeout=(t,e,r)=>{if(e===void 0)return t;const n=Date.now(),o=()=>Date.now()-n>=e;return new Promise((a,c)=>{const u=setTimeout(()=>{o()&&(c(new TimeoutError$2),r.abort())},e),l=f=>p=>{if(clearTimeout(u),o()){c(new TimeoutError$2);return}f(p)};t.then(l(a),l(c))})},defaults={throwHttpErrors:!0,credentials:"same-origin"};let HTTP$3=class{constructor(t={}){this.opts=merge$3(defaults,t)}async fetch(t,e={}){const r=merge$3(this.opts,e),n=new Headers(r.headers);if(typeof t!="string"&&!(t instanceof URL$1||t instanceof Request$1))throw new TypeError("`resource` must be a string, URL, or Request");const o=new URL$1(t.toString(),r.base),{searchParams:a,transformSearchParams:c,json:u}=r;a&&(typeof c=="function"?o.search=c(new URLSearchParams$1(r.searchParams)):o.search=new URLSearchParams$1(r.searchParams)),u&&(r.body=JSON.stringify(r.json),n.set("content-type","application/json"));const l=new AbortController,f=anySignal$3([l.signal,r.signal]);globalThis.ReadableStream!=null&&r.body instanceof globalThis.ReadableStream&&(isBrowser$1||isWebWorker)&&(r.body=new Blob(await all$2(browserReableStreamToIt(r.body))));const p=await timeout(fetch(o.toString(),{...r,signal:f,timeout:void 0,headers:n,duplex:"half"}),r.timeout,l);if(!p.ok&&r.throwHttpErrors)throw r.handleError&&await r.handleError(p),new HTTPError(p);return p.iterator=async function*(){yield*fromStream(p.body)},p.ndjson=async function*(){for await(const g of ndjson(p.iterator()))e.transform?yield e.transform(g):yield g},p}post(t,e={}){return this.fetch(t,{...e,method:"POST"})}get(t,e={}){return this.fetch(t,{...e,method:"GET"})}put(t,e={}){return this.fetch(t,{...e,method:"PUT"})}delete(t,e={}){return this.fetch(t,{...e,method:"DELETE"})}options(t,e={}){return this.fetch(t,{...e,method:"OPTIONS"})}};const ndjson=async function*(t){const e=new TextDecoder;let r="";for await(const n of t){r+=e.decode(n,{stream:!0});const o=r.split(/\r?\n/);for(let a=0;a<o.length-1;a++){const c=o[a].trim();c.length>0&&(yield JSON.parse(c))}r=o[o.length-1]}r+=e.decode(),r=r.trim(),r.length!==0&&(yield JSON.parse(r))},fromStream=t=>{if(isAsyncIterable$7(t))return t;if(isNodeReadableStream(t)){const e=t[Symbol.asyncIterator]();return{[Symbol.asyncIterator](){return{next:e.next.bind(e),return(r){return t.destroy(),typeof e.return=="function"?e.return():Promise.resolve({done:!0,value:r})}}}}}if(isWebReadableStream(t)){const e=t.getReader();return async function*(){try{for(;;){const{done:r,value:n}=await e.read();if(r)return;n&&(yield n)}}finally{e.releaseLock()}}()}throw new TypeError("Body can't be converted to AsyncIterable")},isAsyncIterable$7=t=>typeof t=="object"&&t!==null&&typeof t[Symbol.asyncIterator]=="function",isWebReadableStream=t=>t&&typeof t.getReader=="function",isNodeReadableStream=t=>Object.prototype.hasOwnProperty.call(t,"readable")&&Object.prototype.hasOwnProperty.call(t,"writable");HTTP$3.HTTPError=HTTPError,HTTP$3.TimeoutError=TimeoutError$2,HTTP$3.streamToAsyncIterator=fromStream,HTTP$3.post=(t,e)=>new HTTP$3(e).post(t,e),HTTP$3.get=(t,e)=>new HTTP$3(e).get(t,e),HTTP$3.put=(t,e)=>new HTTP$3(e).put(t,e),HTTP$3.delete=(t,e)=>new HTTP$3(e).delete(t,e),HTTP$3.options=(t,e)=>new HTTP$3(e).options(t,e);var http=HTTP$3;const HTTP$4=getDefaultExportFromCjs(http),cache$k=new TLRU$1(1e3),ttl=60*1e3,Queue$3=PQueue$1.default?PQueue$1.default:PQueue$1,httpQueue$1=new Queue$3({concurrency:4}),ipfsPath=t=>{if(t.Path)return t.Path;throw new Error(t.Message)};async function resolveDnslink(t,e){return(async(r,n={})=>{const o=new URLSearchParams(n);o.set("arg",r);const a=o.toString();if(!n.nocache&&cache$k.has(a)){const u=cache$k.get(a);return ipfsPath(u)}const c=await httpQueue$1.add(async()=>{const u=await HTTP$4.get("https://ipfs.io/api/v0/dns",{searchParams:o}),l=new URL(u.url).search.slice(1),f=await u.json();return cache$k.set(l,f,ttl),f});return ipfsPath(c)})(t,e)}function fqdnFixups(t){return t.endsWith(".eth")&&(t=t.replace(/.eth$/,".eth.link")),t}function createDns$1(){return withTimeoutOption(async(t,e={recursive:!0})=>{if(typeof t!="string")throw new Error("Invalid arguments, domain must be a string");return t=fqdnFixups(t),resolveDnslink(t,e)})}function createIsOnline$1({network:t}){return()=>{const e=t.try();return e!=null&&!!e.libp2p.isStarted()}}const symbol$h=Symbol.for("@libp2p/peer-id");function isPeerId(t){return t!=null&&!!t[symbol$h]}function base$p(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$o=base$p,_brrp__multiformats_scope_baseX$l=src$o;const equals$D=(t,e)=>{if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0},coerce$m=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")},fromString$q=t=>new TextEncoder().encode(t),toString$w=t=>new TextDecoder().decode(t);let Encoder$o=class{constructor(t,e,r){this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$o=class{constructor(t,e,r){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$q(this,t)}},ComposedDecoder$m=class{constructor(t){this.decoders=t}or(t){return or$q(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$q=(t,e)=>new ComposedDecoder$m({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});let Codec$m=class{constructor(t,e,r,n){this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$o(t,e,r),this.decoder=new Decoder$o(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};const from$y=({name:t,prefix:e,encode:r,decode:n})=>new Codec$m(t,e,r,n),baseX$l=({prefix:t,name:e,alphabet:r})=>{const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$l(r,e);return from$y({prefix:t,name:e,encode:n,decode:a=>coerce$m(o(a))})},decode$1Q=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode$1o=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648$m=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from$y({prefix:e,name:t,encode(o){return encode$1o(o,n,r)},decode(o){return decode$1Q(o,n,r,t)}}),base58btc$j=baseX$l({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),base58flickr$b=baseX$l({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),base58$b=Object.freeze(Object.defineProperty({__proto__:null,base58btc:base58btc$j,base58flickr:base58flickr$b},Symbol.toStringTag,{value:"Module"})),identity$k=from$y({prefix:"\0",name:"identity",encode:t=>toString$w(t),decode:t=>fromString$q(t)}),identityBase$c=Object.freeze(Object.defineProperty({__proto__:null,identity:identity$k},Symbol.toStringTag,{value:"Module"})),base2$o=rfc4648$m({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),base2$p=Object.freeze(Object.defineProperty({__proto__:null,base2:base2$o},Symbol.toStringTag,{value:"Module"})),base8$o=rfc4648$m({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),base8$p=Object.freeze(Object.defineProperty({__proto__:null,base8:base8$o},Symbol.toStringTag,{value:"Module"})),base10$o=baseX$l({prefix:"9",name:"base10",alphabet:"0123456789"}),base10$p=Object.freeze(Object.defineProperty({__proto__:null,base10:base10$o},Symbol.toStringTag,{value:"Module"})),base16$o=rfc4648$m({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),base16upper$c=rfc4648$m({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),base16$p=Object.freeze(Object.defineProperty({__proto__:null,base16:base16$o,base16upper:base16upper$c},Symbol.toStringTag,{value:"Module"})),base32$t=rfc4648$m({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),base32upper$c=rfc4648$m({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),base32pad$c=rfc4648$m({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),base32padupper$b=rfc4648$m({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),base32hex$b=rfc4648$m({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),base32hexupper$b=rfc4648$m({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),base32hexpad$b=rfc4648$m({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),base32hexpadupper$b=rfc4648$m({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),base32z$b=rfc4648$m({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),base32$u=Object.freeze(Object.defineProperty({__proto__:null,base32:base32$t,base32hex:base32hex$b,base32hexpad:base32hexpad$b,base32hexpadupper:base32hexpadupper$b,base32hexupper:base32hexupper$b,base32pad:base32pad$c,base32padupper:base32padupper$b,base32upper:base32upper$c,base32z:base32z$b},Symbol.toStringTag,{value:"Module"})),base36$o=baseX$l({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),base36upper$c=baseX$l({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),base36$p=Object.freeze(Object.defineProperty({__proto__:null,base36:base36$o,base36upper:base36upper$c},Symbol.toStringTag,{value:"Module"})),base64$q=rfc4648$m({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),base64pad$c=rfc4648$m({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),base64url$c=rfc4648$m({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),base64urlpad$c=rfc4648$m({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),base64$r=Object.freeze(Object.defineProperty({__proto__:null,base64:base64$q,base64pad:base64pad$c,base64url:base64url$c,base64urlpad:base64urlpad$c},Symbol.toStringTag,{value:"Module"})),alphabet$d=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),alphabetBytesToChars$c=alphabet$d.reduce((t,e,r)=>(t[r]=e,t),[]),alphabetCharsToBytes$c=alphabet$d.reduce((t,e,r)=>(t[e.codePointAt(0)]=r,t),[]);function encode$1n(t){return t.reduce((e,r)=>(e+=alphabetBytesToChars$c[r],e),"")}function decode$1P(t){const e=[];for(const r of t){const n=alphabetCharsToBytes$c[r.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${r}`);e.push(n)}return new Uint8Array(e)}const base256emoji$o=from$y({prefix:"\u{1F680}",name:"base256emoji",encode:encode$1n,decode:decode$1P}),base256emoji$p=Object.freeze(Object.defineProperty({__proto__:null,base256emoji:base256emoji$o},Symbol.toStringTag,{value:"Module"}));var encode_1$n=encode$1m,MSB$u=128,REST$u=127,MSBALL$n=~REST$u,INT$n=Math.pow(2,31);function encode$1m(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$n;)e[r++]=t&255|MSB$u,t/=128;for(;t&MSBALL$n;)e[r++]=t&255|MSB$u,t>>>=7;return e[r]=t|0,encode$1m.bytes=r-n+1,e}var decode$1O=read$o,MSB$1$n=128,REST$1$n=127;function read$o(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$o.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$n)<<o:(c&REST$1$n)*Math.pow(2,o),o+=7}while(c>=MSB$1$n);return read$o.bytes=a-n,r}var N1$t=Math.pow(2,7),N2$t=Math.pow(2,14),N3$t=Math.pow(2,21),N4$t=Math.pow(2,28),N5$t=Math.pow(2,35),N6$t=Math.pow(2,42),N7$t=Math.pow(2,49),N8$o=Math.pow(2,56),N9$o=Math.pow(2,63),length$p=function(t){return t<N1$t?1:t<N2$t?2:t<N3$t?3:t<N4$t?4:t<N5$t?5:t<N6$t?6:t<N7$t?7:t<N8$o?8:t<N9$o?9:10},varint$o={encode:encode_1$n,decode:decode$1O,encodingLength:length$p},_brrp_varint$m=varint$o;const decode$1N=(t,e=0)=>[_brrp_varint$m.decode(t,e),_brrp_varint$m.decode.bytes],encodeTo$m=(t,e,r=0)=>(_brrp_varint$m.encode(t,e,r),e),encodingLength$r=t=>_brrp_varint$m.encodingLength(t),create$t=(t,e)=>{const r=e.byteLength,n=encodingLength$r(t),o=n+encodingLength$r(r),a=new Uint8Array(o+r);return encodeTo$m(t,a,0),encodeTo$m(r,a,n),a.set(e,o),new Digest$m(t,r,e,a)},decode$1M=t=>{const e=coerce$m(t),[r,n]=decode$1N(e),[o,a]=decode$1N(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$m(r,o,c,e)},equals$C=(t,e)=>{if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$D(t.bytes,r.bytes)}};let Digest$m=class{constructor(t,e,r,n){this.code=t,this.size=e,this.digest=r,this.bytes=n}};const from$x=({name:t,code:e,encode:r})=>new Hasher$b(t,e,r);let Hasher$b=class{constructor(t,e,r){this.name=t,this.code=e,this.encode=r}digest(t){if(t instanceof Uint8Array){const e=this.encode(t);return e instanceof Uint8Array?create$t(this.code,e):e.then(r=>create$t(this.code,r))}else throw Error("Unknown type, must be binary type")}};const sha$a=t=>async e=>new Uint8Array(await crypto.subtle.digest(t,e)),sha256$b=from$x({name:"sha2-256",code:18,encode:sha$a("SHA-256")}),code$c=0,name$a="identity",encode$1l=coerce$m,digest$6=t=>create$t(code$c,encode$1l(t)),identity$j={code:code$c,name:name$a,encode:encode$1l,digest:digest$6};new TextEncoder,new TextDecoder;const format$i=(t,e)=>{const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$h(r,baseCache$h(t),e||base58btc$j.encoder);default:return toStringV1$h(r,baseCache$h(t),e||base32$t.encoder)}},cache$j=new WeakMap,baseCache$h=t=>{const e=cache$j.get(t);if(e==null){const r=new Map;return cache$j.set(t,r),r}return e};let CID$h=class xe{constructor(e,r,n,o){this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$h)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$h)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return xe.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$t(e,r);return xe.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return xe.equals(this,e)}static equals(e,r){const n=r;return n&&e.code===n.code&&e.version===n.version&&equals$C(e.multihash,n.multihash)}toString(e){return format$i(this,e)}toJSON(){return{"/":format$i(this)}}link(){return this}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof xe)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new xe(n,o,a,c||encodeCID$i(n,o,a.bytes))}else if(r[cidSymbol$h]===!0){const{version:n,multihash:o,code:a}=r,c=decode$1M(o);return xe.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$h)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$h}) block encoding`);return new xe(e,r,n,n.bytes)}case 1:{const o=encodeCID$i(e,r,n.bytes);return new xe(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return xe.create(0,DAG_PB_CODE$h,e)}static createV1(e,r){return xe.create(1,e,r)}static decode(e){const[r,n]=xe.decodeFirst(e);if(n.length)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=xe.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$m(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$m(r.multihashCode,r.digestSize,a,o);return[r.version===0?xe.createV0(c):xe.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$1N(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$h;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$h(e,r),a=xe.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$h(a).set(n,e),a}};const parseCIDtoBytes$h=(t,e)=>{switch(t[0]){case"Q":{const r=e||base58btc$j;return[base58btc$j.prefix,r.decode(`${base58btc$j.prefix}${t}`)]}case base58btc$j.prefix:{const r=e||base58btc$j;return[base58btc$j.prefix,r.decode(t)]}case base32$t.prefix:{const r=e||base32$t;return[base32$t.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}},toStringV0$h=(t,e,r)=>{const{prefix:n}=r;if(n!==base58btc$j.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o},toStringV1$h=(t,e,r)=>{const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o},DAG_PB_CODE$h=112,SHA_256_CODE$h=18,encodeCID$i=(t,e,r)=>{const n=encodingLength$r(t),o=n+encodingLength$r(e),a=new Uint8Array(o+r.byteLength);return encodeTo$m(t,a,0),encodeTo$m(e,a,n),a.set(r,o),a},cidSymbol$h=Symbol.for("@ipld/js-cid/CID"),bases$c={...identityBase$c,...base2$p,...base8$p,...base10$p,...base16$p,...base32$u,...base36$p,...base58$b,...base64$r,...base256emoji$p},inspect$d=Symbol.for("nodejs.util.inspect.custom"),baseDecoder$1=Object.values(bases$c).map(t=>t.decoder).reduce((t,e)=>t.or(e),bases$c.identity.decoder),LIBP2P_KEY_CODE$1=114,MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$1=36,MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$1=37;let PeerIdImpl$1=class{constructor(t){N(this,"type");N(this,"multihash");N(this,"privateKey");N(this,"publicKey");N(this,"string");N(this,gr,!0);this.type=t.type,this.multihash=t.multihash,this.privateKey=t.privateKey,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}toString(){return this.string==null&&(this.string=base58btc$j.encode(this.multihash.bytes).slice(1)),this.string}toCID(){return CID$h.createV1(LIBP2P_KEY_CODE$1,this.multihash)}toBytes(){return this.multihash.bytes}toJSON(){return this.toString()}equals(t){if(t instanceof Uint8Array)return equals$R(this.multihash.bytes,t);if(typeof t=="string")return peerIdFromString$1(t).equals(this);if(t?.multihash?.bytes!=null)return equals$R(this.multihash.bytes,t.multihash.bytes);throw new Error("not valid Id")}[(gr=symbol$h,inspect$d)](){return`PeerId(${this.toString()})`}},RSAPeerIdImpl$1=class extends PeerIdImpl$1{constructor(e){super({...e,type:"RSA"});N(this,"type","RSA");N(this,"publicKey");this.publicKey=e.publicKey}},Ed25519PeerIdImpl$1=class extends PeerIdImpl$1{constructor(e){super({...e,type:"Ed25519"});N(this,"type","Ed25519");N(this,"publicKey");this.publicKey=e.multihash.digest}},Secp256k1PeerIdImpl$1=class extends PeerIdImpl$1{constructor(e){super({...e,type:"secp256k1"});N(this,"type","secp256k1");N(this,"publicKey");this.publicKey=e.multihash.digest}};function peerIdFromPeerId(t){if(t.type==="RSA")return new RSAPeerIdImpl$1(t);if(t.type==="Ed25519")return new Ed25519PeerIdImpl$1(t);if(t.type==="secp256k1")return new Secp256k1PeerIdImpl$1(t);throw new CodeError$4("Not a PeerId","ERR_INVALID_PARAMETERS")}peerIdFromString$1=function(t,e){if(t.charAt(0)==="1"||t.charAt(0)==="Q"){const r=decode$1M(base58btc$j.decode(`z${t}`));return t.startsWith("12D")?new Ed25519PeerIdImpl$1({multihash:r}):t.startsWith("16U")?new Secp256k1PeerIdImpl$1({multihash:r}):new RSAPeerIdImpl$1({multihash:r})}return peerIdFromBytes$1(baseDecoder$1.decode(t))};function peerIdFromBytes$1(t){try{const e=decode$1M(t);if(e.code===identity$j.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$1)return new Ed25519PeerIdImpl$1({multihash:e});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$1)return new Secp256k1PeerIdImpl$1({multihash:e})}if(e.code===sha256$b.code)return new RSAPeerIdImpl$1({multihash:e})}catch{return peerIdFromCID$1(CID$h.decode(t))}throw new Error("Supplied PeerID CID is invalid")}function peerIdFromCID$1(t){if(t==null||t.multihash==null||t.version==null||t.version===1&&t.code!==LIBP2P_KEY_CODE$1)throw new Error("Supplied PeerID CID is invalid");const e=t.multihash;if(e.code===sha256$b.code)return new RSAPeerIdImpl$1({multihash:t.multihash});if(e.code===identity$j.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$1)return new Ed25519PeerIdImpl$1({multihash:t.multihash});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$1)return new Secp256k1PeerIdImpl$1({multihash:t.multihash})}throw new Error("Supplied PeerID CID is invalid")}async function peerIdFromKeys(t,e){return t.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$1?new Ed25519PeerIdImpl$1({multihash:create$t(identity$j.code,t),privateKey:e}):t.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$1?new Secp256k1PeerIdImpl$1({multihash:create$t(identity$j.code,t),privateKey:e}):new RSAPeerIdImpl$1({multihash:await sha256$b.digest(t),publicKey:t,privateKey:e})}function createResolve$5({repo:t,codecs:e,bases:r,name:n}){async function o(a,c={}){if(!path(a))throw new Error("invalid argument "+a);if(ipnsPath(a))for await(const v of n.resolve(a,c))a=v;const[,u,l,...f]=a.split("/"),p=c.cidBase?await r.getBase(c.cidBase):void 0,g=parseBytes(l);if(f.length===0){const v=p?p.encoder.encode(g):l;return`/${u}/${v}`}const $=CID$k.decode(g);a=f.join("/");const _=resolve$5($,a,e,t,c);let b=$,D=a;for await(const v of _)CID$k.asCID(v.value)&&(b=v.value,D=v.remainderPath);return`/ipfs/${b.toString(p&&p.encoder)}${D?"/"+D:""}`}return withTimeoutOption(o)}function parseBytes(t){try{return peerIdFromString$1(t).toBytes()}catch{return CID$k.parse(t).bytes}}async function last(t){let e;for await(const r of t)e=r;return e}function createAdd$7({addAll:t}){return(e,r={})=>{let n;const o=CID$k.asCID(e);return o?n=t([{cid:o,...r}],r):n=t([{path:e.toString(),...r}],r),last(n)}}function isIterable$3(t){return Symbol.iterator in t}function isAsyncIterable$6(t){return Symbol.asyncIterator in t}function isCID(t){return CID$i.asCID(t)!=null}async function*normaliseInput$3(t){if(t==null)throw errcode(new Error(`Unexpected input: ${t}`),"ERR_UNEXPECTED_INPUT");const e=CID$i.asCID(t);if(e){yield toPin$2({cid:e});return}if(t instanceof String||typeof t=="string"){yield toPin$2({path:t});return}if(t.cid!=null||t.path!=null)return yield toPin$2(t);if(isIterable$3(t)){const r=t[Symbol.iterator](),n=r.next();if(n.done)return r;if(isCID(n.value)){yield toPin$2({cid:n.value});for(const o of r)yield toPin$2({cid:o});return}if(n.value instanceof String||typeof n.value=="string"){yield toPin$2({path:n.value});for(const o of r)yield toPin$2({path:o});return}if(n.value.cid!=null||n.value.path!=null){yield toPin$2(n.value);for(const o of r)yield toPin$2(o);return}throw errcode(new Error("Unexpected input: "+typeof t),"ERR_UNEXPECTED_INPUT")}if(isAsyncIterable$6(t)){const r=t[Symbol.asyncIterator](),n=await r.next();if(n.done)return r;if(isCID(n.value)){yield toPin$2({cid:n.value});for await(const o of r)yield toPin$2({cid:o});return}if(n.value instanceof String||typeof n.value=="string"){yield toPin$2({path:n.value});for await(const o of r)yield toPin$2({path:o});return}if(n.value.cid!=null||n.value.path!=null){yield toPin$2(n.value);for await(const o of r)yield toPin$2(o);return}throw errcode(new Error("Unexpected input: "+typeof t),"ERR_UNEXPECTED_INPUT")}throw errcode(new Error("Unexpected input: "+typeof t),"ERR_UNEXPECTED_INPUT")}function toPin$2(t){const e=t.cid||`${t.path}`;if(!e)throw errcode(new Error("Unexpected input: Please path either a CID or an IPFS path"),"ERR_UNEXPECTED_INPUT");const r={path:e,recursive:t.recursive!==!1};return t.metadata!=null&&(r.metadata=t.metadata),r}const PinTypes$1={direct:"direct",recursive:"recursive",indirect:"indirect",all:"all"};function createAddAll$3({repo:t,codecs:e}){async function*r(n,o={}){const a=async function*(){for await(const{path:u,recursive:l,metadata:f}of normaliseInput$3(n)){const{cid:p}=await resolvePath$1(t,e,u),{reason:g}=await t.pins.isPinnedWithType(p,[PinTypes$1.recursive,PinTypes$1.direct]);if(g==="recursive"&&!l)throw new Error(`${p} already pinned recursively`);l?await t.pins.pinRecursively(p,{metadata:f}):await t.pins.pinDirectly(p,{metadata:f}),yield p}};if(!o.lock){yield*a();return}const c=await t.gcLock.readLock();try{yield*a()}finally{c()}}return withTimeoutOption(r)}function toPin$1(t,e,r){const n={type:t,cid:e};return r&&(n.metadata=r),n}function createLs$9({repo:t,codecs:e}){async function*r(n={}){let o=PinTypes$1.all;if(n.type&&(o=n.type,!Object.keys(PinTypes$1).includes(o)))throw errcode(new Error("Invalid pin type"),"ERR_INVALID_PIN_TYPE");if(n.paths){let a=!1;for await(const{path:c}of normaliseInput$3(n.paths)){const{cid:u}=await resolvePath$1(t,e,c),{reason:l,pinned:f,parent:p,metadata:g}=await t.pins.isPinnedWithType(u,o);if(!f)throw errcode(new Error(`path '${c}' is not pinned`),"ERR_NOT_PINNED");switch(l){case PinTypes$1.direct:case PinTypes$1.recursive:a=!0,yield toPin$1(l,u,g);break;default:a=!0,yield toPin$1(`${PinTypes$1.indirect} through ${p}`,u,g)}}if(!a)throw new Error("No match found");return}if(o===PinTypes$1.recursive||o===PinTypes$1.all)for await(const{cid:a,metadata:c}of t.pins.recursiveKeys())yield toPin$1(PinTypes$1.recursive,a,c);if(o===PinTypes$1.indirect||o===PinTypes$1.all)for await(const a of t.pins.indirectKeys(n))yield toPin$1(PinTypes$1.indirect,a);if(o===PinTypes$1.direct||o===PinTypes$1.all)for await(const{cid:a,metadata:c}of t.pins.directKeys())yield toPin$1(PinTypes$1.direct,a,c)}return withTimeoutOption(r)}function createRm$b({rmAll:t}){async function e(r,n={}){const o=await last(t([{path:r,...n}],n));if(!o)throw new Error("CID expected");return o}return e}function createRmAll$2({repo:t,codecs:e}){async function*r(n,o={}){const a=await t.gcLock.readLock();try{for await(const{path:c,recursive:u}of normaliseInput$3(n)){const{cid:l}=await resolvePath$1(t,e,c),{pinned:f,reason:p}=await t.pins.isPinnedWithType(l,PinTypes$1.all);if(!f)throw new Error(`${l} is not pinned`);switch(p){case PinTypes$1.recursive:if(!u)throw new Error(`${l} is pinned recursively`);await t.pins.unpin(l),yield l;break;case PinTypes$1.direct:await t.pins.unpin(l),yield l;break;default:throw new Error(`${l} is pinned indirectly under ${p}`)}}}finally{a()}}return withTimeoutOption(r)}class PinAPI{constructor({codecs:e,repo:r}){const n=createAddAll$3({codecs:e,repo:r});this.addAll=n,this.add=createAdd$7({addAll:n});const o=createRmAll$2({codecs:e,repo:r});this.rmAll=o,this.rm=createRm$b({rmAll:o}),this.ls=createLs$9({codecs:e,repo:r}),this.remote={add:(a,c={})=>Promise.reject(new Error("Not implemented")),ls:async function*(a,c={}){return Promise.reject(new Error("Not implemented"))},rm:(a,c={})=>Promise.reject(new Error("Not implemented")),rmAll:(a,c={})=>Promise.reject(new Error("Not implemented")),service:{add:(a,c)=>Promise.reject(new Error("Not implemented")),rm:(a,c={})=>Promise.reject(new Error("Not implemented")),ls:(a={})=>Promise.reject(new Error("Not implemented"))}}}}function dbOpenFailedError(t){return t=t||new Error("Cannot open database"),errcode(t,"ERR_DB_OPEN_FAILED")}function dbDeleteFailedError(t){return t=t||new Error("Delete failed"),errcode(t,"ERR_DB_DELETE_FAILED")}function dbWriteFailedError(t){return t=t||new Error("Write failed"),errcode(t,"ERR_DB_WRITE_FAILED")}function notFoundError(t){return t=t||new Error("Not Found"),errcode(t,"ERR_NOT_FOUND")}var timestamp_min={exports:{}};(function(t){(function(){t.exports=v;var e=86400,r=3200,n=146097*r/400,o=e*n,a=1e3*o,c=864e13,u=4294967296,l=1e6,f="000000000",p=Math.trunc||function(k){var O=k-k%1;return O==0&&(k<0||k===0&&1/k!=1/0)?-0:O},g=v.prototype,$=(v.fromDate=function(k){return new v(+k)},v.fromInt64BE=T(0,1,2,3,0,4),v.fromInt64LE=T(3,2,1,0,4,0),v.fromString=function(L){var O,M=new v,L=(L+="").replace(/^\s*[+\-]?\d+/,function(F){var F=+F,x=1970+(F-1970)%400;return M.year=F-x,x}).replace(/(?:Z|([+\-]\d{2}):?(\d{2}))$/,function(U,F,x){return F<0&&(x*=-1),O=6e4*(60*+F+ +x),""}).replace(/\.\d+$/,function(U){return M.nano=+(U+f).substr(1,9),""}).split(/\D+/);if(1<L.length?L[1]--:L[1]=0,M.time=O=Date.UTC.apply(Date,L)-(O||0),isNaN(O))throw new TypeError("Invalid Date");return S(M)},v.fromTimeT=function(k){return R(k,0)},g.year=0,g.time=0,g.nano=0,g.addNano=function(k){return this.nano+=+k||0,this},g.getNano=function(){var k=S(this);return(k.time%1e3*l+ +k.nano+1e9)%1e9},g.getTimeT=function(){var O=S(this),k=Math.floor(O.time/1e3),O=O.year;return O&&(k+=O*n*e/r),k},g.getYear=function(){return this.toDate().getUTCFullYear()+this.year},g.toDate=function(){return I(S(this).time)},g.toJSON=function(){return this.toString().replace(/0{1,6}Z$/,"Z")},g.toString=function(k){var O=this,M=O.toDate(),L={H:function(){return E(M.getUTCHours())},L:function(){return A(M.getUTCMilliseconds(),3)},M:function(){return E(M.getUTCMinutes())},N:function(){return A(O.getNano(),9)},S:function(){return E(M.getUTCSeconds())},Y:function(){var U=O.getYear();return 999999<U?"+"+U:9999<U?"+"+A(U,6):0<=U?A(U,4):-999999<=U?"-"+A(-U,6):U},a:function(){return b[M.getUTCDay()]},b:function(){return _[M.getUTCMonth()]},d:function(){return E(M.getUTCDate())},e:function(){return function(U){return(9<U?"":" ")+(0|U)}(M.getUTCDate())},m:function(){return E(M.getUTCMonth()+1)}};return function U(F){return F.replace(/%./g,function(x){var j=x[1],z=D[j],j=L[j];return z?U(z):j?j():x})}(k||$)},g.writeInt64BE=C(0,1,2,3,0,4),g.writeInt64LE=C(3,2,1,0,4,0),"%Y-%m-%dT%H:%M:%S.%NZ"),_=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],b=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],D={"%":"%",F:"%Y-%m-%d",n:`
`,R:"%H:%M",T:"%H:%M:%S",t:"	",X:"%T",Z:"GMT",z:"+0000"};return v;function v(k,O,M){var L=this;if(!(L instanceof v))return new v(k,O,M);L.time=+k||0,L.nano=+O||0,L.year=+M||0,S(L)}function S(k){var O,M,L,U=k.year,F=k.time,x=k.nano,z=((x<0||l<=x)&&(x-=(M=Math.floor(x/l))*l,F+=M,M=1),U%r);return(F<-c||c<F||z)&&((O=p(F/a))&&(U+=O*r,F-=O*a),(L=I(F)).setUTCFullYear(z+L.getUTCFullYear()),L=(F=+L)+(O=p((U-=z)/r))*a,O&&-c<=L&&L<=c&&(U-=O*r,F=L),M=1),M&&(k.year=U,k.time=F,k.nano=x),k}function I(k){var O=new Date(0);return O.setTime(k),O}function R(U,L){U=+U||0;var M=p((L=(L|0)*u)/o)+p(U/o),L=L%o+U%o,U=p(L/o);return U&&(M+=U,L-=U*o),new v(1e3*L,0,M*r)}function C(k,O,M,L,U,F){return function(z,j){var Y=S(this);z=z||new Array(8),P(z,j|=0);var ne=Math.floor(Y.time/1e3),Y=Y.year*(n*e/r),q=p(Y/u)+p(ne/u),Y=Y%u+ne%u,ne=Math.floor(Y/u);return ne&&(q+=ne,Y-=ne*u),x(z,j+U,q),x(z,j+F,Y),z};function x(z,j,q){z[j+k]=q>>24&255,z[j+O]=q>>16&255,z[j+M]=q>>8&255,z[j+L]=255&q}}function T(k,O,M,L,U,F){return function(z,j){P(z,j|=0);var q=x(z,j+U);return R(x(z,j+F),q)};function x(z,j){return 16777216*z[j+k]+(z[j+O]<<16|z[j+M]<<8|z[j+L])}}function P(k,O){if(k=k&&k.length,k==null)throw new TypeError("Invalid Buffer");if(k<O+8)throw new RangeError("Out of range")}function E(k){return(9<k?"":"0")+(0|k)}function A(k,O){return(f+(0|k)).substr(-O)}})()})(timestamp_min);var timestamp_minExports=timestamp_min.exports;const NanoDate=getDefaultExportFromCjs(timestamp_minExports);function base$o(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$n=base$o,_brrp__multiformats_scope_baseX$k=src$n;const coerce$l=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")};let Encoder$n=class{constructor(t,e,r){this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$n=class{constructor(t,e,r){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$p(this,t)}},ComposedDecoder$l=class{constructor(t){this.decoders=t}or(t){return or$p(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$p=(t,e)=>new ComposedDecoder$l({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});let Codec$l=class{constructor(t,e,r,n){this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$n(t,e,r),this.decoder=new Decoder$n(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};const from$w=({name:t,prefix:e,encode:r,decode:n})=>new Codec$l(t,e,r,n),baseX$k=({prefix:t,name:e,alphabet:r})=>{const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$k(r,e);return from$w({prefix:t,name:e,encode:n,decode:a=>coerce$l(o(a))})},decode$1L=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode$1k=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648$l=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from$w({prefix:e,name:t,encode(o){return encode$1k(o,n,r)},decode(o){return decode$1L(o,n,r,t)}}),base58btc$i=baseX$k({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"});baseX$k({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var encode_1$m=encode$1j,MSB$t=128,REST$t=127,MSBALL$m=~REST$t,INT$m=Math.pow(2,31);function encode$1j(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$m;)e[r++]=t&255|MSB$t,t/=128;for(;t&MSBALL$m;)e[r++]=t&255|MSB$t,t>>>=7;return e[r]=t|0,encode$1j.bytes=r-n+1,e}var decode$1K=read$n,MSB$1$m=128,REST$1$m=127;function read$n(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$n.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$m)<<o:(c&REST$1$m)*Math.pow(2,o),o+=7}while(c>=MSB$1$m);return read$n.bytes=a-n,r}var N1$s=Math.pow(2,7),N2$s=Math.pow(2,14),N3$s=Math.pow(2,21),N4$s=Math.pow(2,28),N5$s=Math.pow(2,35),N6$s=Math.pow(2,42),N7$s=Math.pow(2,49),N8$n=Math.pow(2,56),N9$n=Math.pow(2,63),length$o=function(t){return t<N1$s?1:t<N2$s?2:t<N3$s?3:t<N4$s?4:t<N5$s?5:t<N6$s?6:t<N7$s?7:t<N8$n?8:t<N9$n?9:10},varint$n={encode:encode_1$m,decode:decode$1K,encodingLength:length$o},_brrp_varint$l=varint$n;const encodeTo$l=(t,e,r=0)=>(_brrp_varint$l.encode(t,e,r),e),encodingLength$q=t=>_brrp_varint$l.encodingLength(t),create$s=(t,e)=>{const r=e.byteLength,n=encodingLength$q(t),o=n+encodingLength$q(r),a=new Uint8Array(o+r);return encodeTo$l(t,a,0),encodeTo$l(r,a,n),a.set(e,o),new Digest$l(t,r,e,a)};let Digest$l=class{constructor(t,e,r,n){this.code=t,this.size=e,this.digest=r,this.bytes=n}};const code$b=0,name$9="identity",encode$1i=coerce$l,digest$5=t=>create$s(code$b,encode$1i(t)),identity$i={code:code$b,name:name$9,encode:encode$1i,digest:digest$5},from$v=({name:t,code:e,encode:r})=>new Hasher$a(t,e,r);let Hasher$a=class{constructor(t,e,r){this.name=t,this.code=e,this.encode=r}digest(t){if(t instanceof Uint8Array){const e=this.encode(t);return e instanceof Uint8Array?create$s(this.code,e):e.then(r=>create$s(this.code,r))}else throw Error("Unknown type, must be binary type")}};const sha$9=t=>async e=>new Uint8Array(await crypto.subtle.digest(t,e)),sha256$a=from$v({name:"sha2-256",code:18,encode:sha$9("SHA-256")});var cryptoBrowserifyExports=requireCryptoBrowserify();const index$1=getDefaultExportFromCjs(cryptoBrowserifyExports),nodeCrypto=_mergeNamespaces({__proto__:null,default:index$1},[cryptoBrowserifyExports]),_0n$1=BigInt(0),_1n$1=BigInt(1),_2n$1=BigInt(2),_8n$1=BigInt(8),CU_O=BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),CURVE$1=Object.freeze({a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),P:BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),l:CU_O,n:CU_O,h:BigInt(8),Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960")}),POW_2_256$1=BigInt("0x10000000000000000000000000000000000000000000000000000000000000000"),SQRT_M1=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");BigInt("6853475219497561581579357271197624642482790079785650197046958215289687604742");const SQRT_AD_MINUS_ONE=BigInt("25063068953384623474111414158702152701244531502492656460079210482610430750235"),INVSQRT_A_MINUS_D=BigInt("54469307008909316920995813868745141605393597292927456921205312896311721017578"),ONE_MINUS_D_SQ=BigInt("1159843021668779879193775521855586647937357759715417654439879720876111806838"),D_MINUS_ONE_SQ=BigInt("40440834346308536858101042469323190826248399146238708352240133220865137265952");class ExtendedPoint{constructor(e,r,n,o){this.x=e,this.y=r,this.z=n,this.t=o}static fromAffine(e){if(!(e instanceof Point$1))throw new TypeError("ExtendedPoint#fromAffine: expected Point");return e.equals(Point$1.ZERO)?ExtendedPoint.ZERO:new ExtendedPoint(e.x,e.y,_1n$1,mod$1(e.x*e.y))}static toAffineBatch(e){const r=invertBatch$1(e.map(n=>n.z));return e.map((n,o)=>n.toAffine(r[o]))}static normalizeZ(e){return this.toAffineBatch(e).map(this.fromAffine)}equals(e){assertExtPoint(e);const{x:r,y:n,z:o}=this,{x:a,y:c,z:u}=e,l=mod$1(r*u),f=mod$1(a*o),p=mod$1(n*u),g=mod$1(c*o);return l===f&&p===g}negate(){return new ExtendedPoint(mod$1(-this.x),this.y,this.z,mod$1(-this.t))}double(){const{x:e,y:r,z:n}=this,{a:o}=CURVE$1,a=mod$1(e*e),c=mod$1(r*r),u=mod$1(_2n$1*mod$1(n*n)),l=mod$1(o*a),f=e+r,p=mod$1(mod$1(f*f)-a-c),g=l+c,$=g-u,_=l-c,b=mod$1(p*$),D=mod$1(g*_),v=mod$1(p*_),S=mod$1($*g);return new ExtendedPoint(b,D,S,v)}add(e){assertExtPoint(e);const{x:r,y:n,z:o,t:a}=this,{x:c,y:u,z:l,t:f}=e,p=mod$1((n-r)*(u+c)),g=mod$1((n+r)*(u-c)),$=mod$1(g-p);if($===_0n$1)return this.double();const _=mod$1(o*_2n$1*f),b=mod$1(a*_2n$1*l),D=b+_,v=g+p,S=b-_,I=mod$1(D*$),R=mod$1(v*S),C=mod$1(D*S),T=mod$1($*v);return new ExtendedPoint(I,R,T,C)}subtract(e){return this.add(e.negate())}precomputeWindow(e){const r=1+256/e,n=[];let o=this,a=o;for(let c=0;c<r;c++){a=o,n.push(a);for(let u=1;u<2**(e-1);u++)a=a.add(o),n.push(a);o=a.double()}return n}wNAF(e,r){!r&&this.equals(ExtendedPoint.BASE)&&(r=Point$1.BASE);const n=r&&r._WINDOW_SIZE||1;if(256%n)throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");let o=r&&pointPrecomputes$1.get(r);o||(o=this.precomputeWindow(n),r&&n!==1&&(o=ExtendedPoint.normalizeZ(o),pointPrecomputes$1.set(r,o)));let a=ExtendedPoint.ZERO,c=ExtendedPoint.BASE;const u=1+256/n,l=2**(n-1),f=BigInt(2**n-1),p=2**n,g=BigInt(n);for(let $=0;$<u;$++){const _=$*l;let b=Number(e&f);e>>=g,b>l&&(b-=p,e+=_1n$1);const D=_,v=_+Math.abs(b)-1,S=$%2!==0,I=b<0;b===0?c=c.add(constTimeNegate$1(S,o[D])):a=a.add(constTimeNegate$1(I,o[v]))}return ExtendedPoint.normalizeZ([a,c])[0]}multiply(e,r){return this.wNAF(normalizeScalar$1(e,CURVE$1.l),r)}multiplyUnsafe(e){let r=normalizeScalar$1(e,CURVE$1.l,!1);const n=ExtendedPoint.BASE,o=ExtendedPoint.ZERO;if(r===_0n$1)return o;if(this.equals(o)||r===_1n$1)return this;if(this.equals(n))return this.wNAF(r);let a=o,c=this;for(;r>_0n$1;)r&_1n$1&&(a=a.add(c)),c=c.double(),r>>=_1n$1;return a}isSmallOrder(){return this.multiplyUnsafe(CURVE$1.h).equals(ExtendedPoint.ZERO)}isTorsionFree(){let e=this.multiplyUnsafe(CURVE$1.l/_2n$1).double();return CURVE$1.l%_2n$1&&(e=e.add(this)),e.equals(ExtendedPoint.ZERO)}toAffine(e){const{x:r,y:n,z:o}=this,a=this.equals(ExtendedPoint.ZERO);e==null&&(e=a?_8n$1:invert$1(o));const c=mod$1(r*e),u=mod$1(n*e),l=mod$1(o*e);if(a)return Point$1.ZERO;if(l!==_1n$1)throw new Error("invZ was invalid");return new Point$1(c,u)}fromRistrettoBytes(){legacyRist()}toRistrettoBytes(){legacyRist()}fromRistrettoHash(){legacyRist()}}ExtendedPoint.BASE=new ExtendedPoint(CURVE$1.Gx,CURVE$1.Gy,_1n$1,mod$1(CURVE$1.Gx*CURVE$1.Gy)),ExtendedPoint.ZERO=new ExtendedPoint(_0n$1,_1n$1,_1n$1,_0n$1);function constTimeNegate$1(t,e){const r=e.negate();return t?r:e}function assertExtPoint(t){if(!(t instanceof ExtendedPoint))throw new TypeError("ExtendedPoint expected")}function assertRstPoint(t){if(!(t instanceof RistrettoPoint))throw new TypeError("RistrettoPoint expected")}function legacyRist(){throw new Error("Legacy method: switch to RistrettoPoint")}class RistrettoPoint{constructor(e){this.ep=e}static calcElligatorRistrettoMap(e){const{d:r}=CURVE$1,n=mod$1(SQRT_M1*e*e),o=mod$1((n+_1n$1)*ONE_MINUS_D_SQ);let a=BigInt(-1);const c=mod$1((a-r*n)*mod$1(n+r));let{isValid:u,value:l}=uvRatio(o,c),f=mod$1(l*e);edIsNegative(f)||(f=mod$1(-f)),u||(l=f),u||(a=n);const p=mod$1(a*(n-_1n$1)*D_MINUS_ONE_SQ-c),g=l*l,$=mod$1((l+l)*c),_=mod$1(p*SQRT_AD_MINUS_ONE),b=mod$1(_1n$1-g),D=mod$1(_1n$1+g);return new ExtendedPoint(mod$1($*D),mod$1(b*_),mod$1(_*D),mod$1($*b))}static hashToCurve(e){e=ensureBytes$1(e,64);const r=bytes255ToNumberLE(e.slice(0,32)),n=this.calcElligatorRistrettoMap(r),o=bytes255ToNumberLE(e.slice(32,64)),a=this.calcElligatorRistrettoMap(o);return new RistrettoPoint(n.add(a))}static fromHex(e){e=ensureBytes$1(e,32);const{a:r,d:n}=CURVE$1,o="RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint",a=bytes255ToNumberLE(e);if(!equalBytes(numberTo32BytesLE(a),e)||edIsNegative(a))throw new Error(o);const c=mod$1(a*a),u=mod$1(_1n$1+r*c),l=mod$1(_1n$1-r*c),f=mod$1(u*u),p=mod$1(l*l),g=mod$1(r*n*f-p),{isValid:$,value:_}=invertSqrt(mod$1(g*p)),b=mod$1(_*l),D=mod$1(_*b*g);let v=mod$1((a+a)*b);edIsNegative(v)&&(v=mod$1(-v));const S=mod$1(u*D),I=mod$1(v*S);if(!$||edIsNegative(I)||S===_0n$1)throw new Error(o);return new RistrettoPoint(new ExtendedPoint(v,S,_1n$1,I))}toRawBytes(){let{x:e,y:r,z:n,t:o}=this.ep;const a=mod$1(mod$1(n+r)*mod$1(n-r)),c=mod$1(e*r),u=mod$1(c*c),{value:l}=invertSqrt(mod$1(a*u)),f=mod$1(l*a),p=mod$1(l*c),g=mod$1(f*p*o);let $;if(edIsNegative(o*g)){let b=mod$1(r*SQRT_M1),D=mod$1(e*SQRT_M1);e=b,r=D,$=mod$1(f*INVSQRT_A_MINUS_D)}else $=p;edIsNegative(e*g)&&(r=mod$1(-r));let _=mod$1((n-r)*$);return edIsNegative(_)&&(_=mod$1(-_)),numberTo32BytesLE(_)}toHex(){return bytesToHex$1(this.toRawBytes())}toString(){return this.toHex()}equals(e){assertRstPoint(e);const r=this.ep,n=e.ep,o=mod$1(r.x*n.y)===mod$1(r.y*n.x),a=mod$1(r.y*n.y)===mod$1(r.x*n.x);return o||a}add(e){return assertRstPoint(e),new RistrettoPoint(this.ep.add(e.ep))}subtract(e){return assertRstPoint(e),new RistrettoPoint(this.ep.subtract(e.ep))}multiply(e){return new RistrettoPoint(this.ep.multiply(e))}multiplyUnsafe(e){return new RistrettoPoint(this.ep.multiplyUnsafe(e))}}RistrettoPoint.BASE=new RistrettoPoint(ExtendedPoint.BASE),RistrettoPoint.ZERO=new RistrettoPoint(ExtendedPoint.ZERO);const pointPrecomputes$1=new WeakMap;let Point$1=class $r{constructor(e,r){this.x=e,this.y=r}_setWindowSize(e){this._WINDOW_SIZE=e,pointPrecomputes$1.delete(this)}static fromHex(e,r=!0){const{d:n,P:o}=CURVE$1;e=ensureBytes$1(e,32);const a=e.slice();a[31]=e[31]&-129;const c=bytesToNumberLE(a);if(r&&c>=o)throw new Error("Expected 0 < hex < P");if(!r&&c>=POW_2_256$1)throw new Error("Expected 0 < hex < 2**256");const u=mod$1(c*c),l=mod$1(u-_1n$1),f=mod$1(n*u+_1n$1);let{isValid:p,value:g}=uvRatio(l,f);if(!p)throw new Error("Point.fromHex: invalid y coordinate");const $=(g&_1n$1)===_1n$1;return(e[31]&128)!==0!==$&&(g=mod$1(-g)),new $r(g,c)}static async fromPrivateKey(e){return(await getExtendedPublicKey(e)).point}toRawBytes(){const e=numberTo32BytesLE(this.y);return e[31]|=this.x&_1n$1?128:0,e}toHex(){return bytesToHex$1(this.toRawBytes())}toX25519(){const{y:e}=this,r=mod$1((_1n$1+e)*invert$1(_1n$1-e));return numberTo32BytesLE(r)}isTorsionFree(){return ExtendedPoint.fromAffine(this).isTorsionFree()}equals(e){return this.x===e.x&&this.y===e.y}negate(){return new $r(mod$1(-this.x),this.y)}add(e){return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(e)).toAffine()}subtract(e){return this.add(e.negate())}multiply(e){return ExtendedPoint.fromAffine(this).multiply(e,this).toAffine()}};Point$1.BASE=new Point$1(CURVE$1.Gx,CURVE$1.Gy),Point$1.ZERO=new Point$1(_0n$1,_1n$1);let Signature$1=class Sr{constructor(e,r){this.r=e,this.s=r,this.assertValidity()}static fromHex(e){const r=ensureBytes$1(e,64),n=Point$1.fromHex(r.slice(0,32),!1),o=bytesToNumberLE(r.slice(32,64));return new Sr(n,o)}assertValidity(){const{r:e,s:r}=this;if(!(e instanceof Point$1))throw new Error("Expected Point instance");return normalizeScalar$1(r,CURVE$1.l,!1),this}toRawBytes(){const e=new Uint8Array(64);return e.set(this.r.toRawBytes()),e.set(numberTo32BytesLE(this.s),32),e}toHex(){return bytesToHex$1(this.toRawBytes())}};function concatBytes$1(...t){if(!t.every(n=>n instanceof Uint8Array))throw new Error("Expected Uint8Array list");if(t.length===1)return t[0];const e=t.reduce((n,o)=>n+o.length,0),r=new Uint8Array(e);for(let n=0,o=0;n<t.length;n++){const a=t[n];r.set(a,o),o+=a.length}return r}const hexes$1=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function bytesToHex$1(t){if(!(t instanceof Uint8Array))throw new Error("Uint8Array expected");let e="";for(let r=0;r<t.length;r++)e+=hexes$1[t[r]];return e}function hexToBytes$1(t){if(typeof t!="string")throw new TypeError("hexToBytes: expected string, got "+typeof t);if(t.length%2)throw new Error("hexToBytes: received invalid unpadded hex");const e=new Uint8Array(t.length/2);for(let r=0;r<e.length;r++){const n=r*2,o=t.slice(n,n+2),a=Number.parseInt(o,16);if(Number.isNaN(a)||a<0)throw new Error("Invalid byte sequence");e[r]=a}return e}function numberTo32BytesBE(t){const e=t.toString(16).padStart(64,"0");return hexToBytes$1(e)}function numberTo32BytesLE(t){return numberTo32BytesBE(t).reverse()}function edIsNegative(t){return(mod$1(t)&_1n$1)===_1n$1}function bytesToNumberLE(t){if(!(t instanceof Uint8Array))throw new Error("Expected Uint8Array");return BigInt("0x"+bytesToHex$1(Uint8Array.from(t).reverse()))}const MAX_255B=BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");function bytes255ToNumberLE(t){return mod$1(bytesToNumberLE(t)&MAX_255B)}function mod$1(t,e=CURVE$1.P){const r=t%e;return r>=_0n$1?r:e+r}function invert$1(t,e=CURVE$1.P){if(t===_0n$1||e<=_0n$1)throw new Error(`invert: expected positive integers, got n=${t} mod=${e}`);let r=mod$1(t,e),n=e,o=_0n$1,a=_1n$1;for(;r!==_0n$1;){const c=n/r,u=n%r,l=o-a*c;n=r,r=u,o=a,a=l}if(n!==_1n$1)throw new Error("invert: does not exist");return mod$1(o,e)}function invertBatch$1(t,e=CURVE$1.P){const r=new Array(t.length),n=t.reduce((a,c,u)=>c===_0n$1?a:(r[u]=a,mod$1(a*c,e)),_1n$1),o=invert$1(n,e);return t.reduceRight((a,c,u)=>c===_0n$1?a:(r[u]=mod$1(a*r[u],e),mod$1(a*c,e)),o),r}function pow2$1(t,e){const{P:r}=CURVE$1;let n=t;for(;e-- >_0n$1;)n*=n,n%=r;return n}function pow_2_252_3(t){const{P:e}=CURVE$1,r=BigInt(5),n=BigInt(10),o=BigInt(20),a=BigInt(40),c=BigInt(80),u=t*t%e*t%e,l=pow2$1(u,_2n$1)*u%e,f=pow2$1(l,_1n$1)*t%e,p=pow2$1(f,r)*f%e,g=pow2$1(p,n)*p%e,$=pow2$1(g,o)*g%e,_=pow2$1($,a)*$%e,b=pow2$1(_,c)*_%e,D=pow2$1(b,c)*_%e,v=pow2$1(D,n)*p%e;return{pow_p_5_8:pow2$1(v,_2n$1)*t%e,b2:u}}function uvRatio(t,e){const r=mod$1(e*e*e),n=mod$1(r*r*e),o=pow_2_252_3(t*n).pow_p_5_8;let a=mod$1(t*r*o);const c=mod$1(e*a*a),u=a,l=mod$1(a*SQRT_M1),f=c===t,p=c===mod$1(-t),g=c===mod$1(-t*SQRT_M1);return f&&(a=u),(p||g)&&(a=l),edIsNegative(a)&&(a=mod$1(-a)),{isValid:f||p,value:a}}function invertSqrt(t){return uvRatio(_1n$1,t)}function modlLE(t){return mod$1(bytesToNumberLE(t),CURVE$1.l)}function equalBytes(t,e){if(t.length!==e.length)return!1;for(let r=0;r<t.length;r++)if(t[r]!==e[r])return!1;return!0}function ensureBytes$1(t,e){const r=t instanceof Uint8Array?Uint8Array.from(t):hexToBytes$1(t);if(typeof e=="number"&&r.length!==e)throw new Error(`Expected ${e} bytes`);return r}function normalizeScalar$1(t,e,r=!0){if(!e)throw new TypeError("Specify max value");if(typeof t=="number"&&Number.isSafeInteger(t)&&(t=BigInt(t)),typeof t=="bigint"&&t<e){if(r){if(_0n$1<t)return t}else if(_0n$1<=t)return t}throw new TypeError("Expected valid scalar: 0 < scalar < max")}function adjustBytes25519(t){return t[0]&=248,t[31]&=127,t[31]|=64,t}function checkPrivateKey(t){if(t=typeof t=="bigint"||typeof t=="number"?numberTo32BytesBE(normalizeScalar$1(t,POW_2_256$1)):ensureBytes$1(t),t.length!==32)throw new Error("Expected 32 bytes");return t}function getKeyFromHash(t){const e=adjustBytes25519(t.slice(0,32)),r=t.slice(32,64),n=modlLE(e),o=Point$1.BASE.multiply(n),a=o.toRawBytes();return{head:e,prefix:r,scalar:n,point:o,pointBytes:a}}let _sha512Sync;async function getExtendedPublicKey(t){return getKeyFromHash(await utils$1.sha512(checkPrivateKey(t)))}async function getPublicKey$1(t){return(await getExtendedPublicKey(t)).pointBytes}async function sign$1(t,e){t=ensureBytes$1(t);const{prefix:r,scalar:n,pointBytes:o}=await getExtendedPublicKey(e),a=modlLE(await utils$1.sha512(r,t)),c=Point$1.BASE.multiply(a),u=modlLE(await utils$1.sha512(c.toRawBytes(),o,t)),l=mod$1(a+u*n,CURVE$1.l);return new Signature$1(c,l).toRawBytes()}function prepareVerification(t,e,r){e=ensureBytes$1(e),r instanceof Point$1||(r=Point$1.fromHex(r,!1));const{r:n,s:o}=t instanceof Signature$1?t.assertValidity():Signature$1.fromHex(t),a=ExtendedPoint.BASE.multiplyUnsafe(o);return{r:n,s:o,SB:a,pub:r,msg:e}}function finishVerification(t,e,r,n){const o=modlLE(n),a=ExtendedPoint.fromAffine(t).multiplyUnsafe(o);return ExtendedPoint.fromAffine(e).add(a).subtract(r).multiplyUnsafe(CURVE$1.h).equals(ExtendedPoint.ZERO)}async function verify$1(t,e,r){const{r:n,SB:o,msg:a,pub:c}=prepareVerification(t,e,r),u=await utils$1.sha512(n.toRawBytes(),c.toRawBytes(),a);return finishVerification(c,n,o,u)}Point$1.BASE._setWindowSize(8);const crypto$2={node:nodeCrypto,web:typeof self=="object"&&"crypto"in self?self.crypto:void 0},utils$1={bytesToHex:bytesToHex$1,hexToBytes:hexToBytes$1,concatBytes:concatBytes$1,getExtendedPublicKey,mod:mod$1,invert:invert$1,TORSION_SUBGROUP:["0100000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a","0000000000000000000000000000000000000000000000000000000000000080","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05","ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85","0000000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa"],hashToPrivateScalar:t=>{if(t=ensureBytes$1(t),t.length<40||t.length>1024)throw new Error("Expected 40-1024 bytes of private key as per FIPS 186");return mod$1(bytesToNumberLE(t),CURVE$1.l-_1n$1)+_1n$1},randomBytes:(t=32)=>{if(crypto$2.web)return crypto$2.web.getRandomValues(new Uint8Array(t));if(crypto$2.node){const{randomBytes:e}=crypto$2.node;return new Uint8Array(e(t).buffer)}else throw new Error("The environment doesn't have randomBytes function")},randomPrivateKey:()=>utils$1.randomBytes(32),sha512:async(...t)=>{const e=concatBytes$1(...t);if(crypto$2.web){const r=await crypto$2.web.subtle.digest("SHA-512",e.buffer);return new Uint8Array(r)}else{if(crypto$2.node)return Uint8Array.from(crypto$2.node.createHash("sha512").update(e).digest());throw new Error("The environment doesn't have sha512 function")}},precompute(t=8,e=Point$1.BASE){const r=e.equals(Point$1.BASE)?e:new Point$1(e.x,e.y);return r._setWindowSize(t),r.multiply(_2n$1),r},sha512Sync:void 0};Object.defineProperties(utils$1,{sha512Sync:{configurable:!1,get(){return _sha512Sync},set(t){_sha512Sync||(_sha512Sync=t)}}});const PUBLIC_KEY_BYTE_LENGTH=32,PRIVATE_KEY_BYTE_LENGTH=64,KEYS_BYTE_LENGTH=32;async function generateKey$2(){const t=utils$1.randomPrivateKey(),e=await getPublicKey$1(t);return{privateKey:concatKeys(t,e),publicKey:e}}async function generateKeyFromSeed(t){if(t.length!==KEYS_BYTE_LENGTH)throw new TypeError('"seed" must be 32 bytes in length.');if(!(t instanceof Uint8Array))throw new TypeError('"seed" must be a node.js Buffer, or Uint8Array.');const e=t,r=await getPublicKey$1(e);return{privateKey:concatKeys(e,r),publicKey:r}}async function hashAndSign$2(t,e){const r=t.subarray(0,KEYS_BYTE_LENGTH);return sign$1(e,r)}async function hashAndVerify$2(t,e,r){return verify$1(e,r,t)}function concatKeys(t,e){const r=new Uint8Array(PRIVATE_KEY_BYTE_LENGTH);for(let n=0;n<KEYS_BYTE_LENGTH;n++)r[n]=t[n],r[KEYS_BYTE_LENGTH+n]=e[n];return r}const base64$p=rfc4648$l({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6});rfc4648$l({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),rfc4648$l({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),rfc4648$l({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6});const webcrypto={get(t=globalThis){const e=t.crypto;if(e==null||e.subtle==null)throw Object.assign(new Error("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p-crypto/blob/master/README.md#web-crypto-api"),{code:"ERR_MISSING_WEB_CRYPTO"});return e}},derivedEmptyPasswordKey={alg:"A128GCM",ext:!0,k:"scm9jmO_4BJAgdwWGVulLg",key_ops:["encrypt","decrypt"],kty:"oct"};function create$r(t){const e=t?.algorithm??"AES-GCM";let r=t?.keyLength??16;const n=t?.nonceLength??12,o=t?.digest??"SHA-256",a=t?.saltLength??16,c=t?.iterations??32767,u=webcrypto.get();r*=8;async function l(p,g){const $=u.getRandomValues(new Uint8Array(a)),_=u.getRandomValues(new Uint8Array(n)),b={name:e,iv:_};typeof g=="string"&&(g=fromString$y(g));let D;if(g.length===0){D=await u.subtle.importKey("jwk",derivedEmptyPasswordKey,{name:"AES-GCM"},!0,["encrypt"]);try{const S={name:"PBKDF2",salt:$,iterations:c,hash:{name:o}},I=await u.subtle.importKey("raw",g,{name:"PBKDF2"},!1,["deriveKey"]);D=await u.subtle.deriveKey(S,I,{name:e,length:r},!0,["encrypt"])}catch{D=await u.subtle.importKey("jwk",derivedEmptyPasswordKey,{name:"AES-GCM"},!0,["encrypt"])}}else{const S={name:"PBKDF2",salt:$,iterations:c,hash:{name:o}},I=await u.subtle.importKey("raw",g,{name:"PBKDF2"},!1,["deriveKey"]);D=await u.subtle.deriveKey(S,I,{name:e,length:r},!0,["encrypt"])}const v=await u.subtle.encrypt(b,D,p);return concat$8([$,b.iv,new Uint8Array(v)])}async function f(p,g){const $=p.subarray(0,a),_=p.subarray(a,a+n),b=p.subarray(a+n),D={name:e,iv:_};typeof g=="string"&&(g=fromString$y(g));let v;if(g.length===0)try{const I={name:"PBKDF2",salt:$,iterations:c,hash:{name:o}},R=await u.subtle.importKey("raw",g,{name:"PBKDF2"},!1,["deriveKey"]);v=await u.subtle.deriveKey(I,R,{name:e,length:r},!0,["decrypt"])}catch{v=await u.subtle.importKey("jwk",derivedEmptyPasswordKey,{name:"AES-GCM"},!0,["decrypt"])}else{const I={name:"PBKDF2",salt:$,iterations:c,hash:{name:o}},R=await u.subtle.importKey("raw",g,{name:"PBKDF2"},!1,["deriveKey"]);v=await u.subtle.deriveKey(I,R,{name:e,length:r},!0,["decrypt"])}const S=await u.subtle.decrypt(D,v,b);return new Uint8Array(S)}return{encrypt:l,decrypt:f}}async function exporter$1(t,e){const r=await create$r().encrypt(t,e);return base64$p.encode(r)}var KeyType;(function(t){t.RSA="RSA",t.Ed25519="Ed25519",t.Secp256k1="Secp256k1"})(KeyType||(KeyType={}));var __KeyTypeValues;(function(t){t[t.RSA=0]="RSA",t[t.Ed25519=1]="Ed25519",t[t.Secp256k1=2]="Secp256k1"})(__KeyTypeValues||(__KeyTypeValues={})),function(t){t.codec=()=>enumeration$2(__KeyTypeValues)}(KeyType||(KeyType={}));var PublicKey;(function(t){let e;t.codec=()=>(e==null&&(e=message$2((r,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),r.Type!=null&&(n.uint32(8),KeyType.codec().encode(r.Type,n)),r.Data!=null&&(n.uint32(18),n.bytes(r.Data)),o.lengthDelimited!==!1&&n.ldelim()},(r,n)=>{const o={},a=n==null?r.len:r.pos+n;for(;r.pos<a;){const c=r.uint32();switch(c>>>3){case 1:o.Type=KeyType.codec().decode(r);break;case 2:o.Data=r.bytes();break;default:r.skipType(c&7);break}}return o})),e),t.encode=r=>encodeMessage$2(r,t.codec()),t.decode=r=>decodeMessage$3(r,t.codec())})(PublicKey||(PublicKey={}));var PrivateKey;(function(t){let e;t.codec=()=>(e==null&&(e=message$2((r,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),r.Type!=null&&(n.uint32(8),KeyType.codec().encode(r.Type,n)),r.Data!=null&&(n.uint32(18),n.bytes(r.Data)),o.lengthDelimited!==!1&&n.ldelim()},(r,n)=>{const o={},a=n==null?r.len:r.pos+n;for(;r.pos<a;){const c=r.uint32();switch(c>>>3){case 1:o.Type=KeyType.codec().decode(r);break;case 2:o.Data=r.bytes();break;default:r.skipType(c&7);break}}return o})),e),t.encode=r=>encodeMessage$2(r,t.codec()),t.decode=r=>decodeMessage$3(r,t.codec())})(PrivateKey||(PrivateKey={}));class Ed25519PublicKey{constructor(e){N(this,"_key");this._key=ensureKey(e,PUBLIC_KEY_BYTE_LENGTH)}async verify(e,r){return hashAndVerify$2(this._key,r,e)}marshal(){return this._key}get bytes(){return PublicKey.encode({Type:KeyType.Ed25519,Data:this.marshal()}).subarray()}equals(e){return equals$R(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$a.digest(this.bytes);return e}}class Ed25519PrivateKey{constructor(e,r){N(this,"_key");N(this,"_publicKey");this._key=ensureKey(e,PRIVATE_KEY_BYTE_LENGTH),this._publicKey=ensureKey(r,PUBLIC_KEY_BYTE_LENGTH)}async sign(e){return hashAndSign$2(this._key,e)}get public(){return new Ed25519PublicKey(this._publicKey)}marshal(){return this._key}get bytes(){return PrivateKey.encode({Type:KeyType.Ed25519,Data:this.marshal()}).subarray()}equals(e){return equals$R(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$a.digest(this.bytes);return e}async id(){const e=identity$i.digest(this.public.bytes);return base58btc$i.encode(e.bytes).substring(1)}async export(e,r="libp2p-key"){if(r==="libp2p-key")return exporter$1(this.bytes,e);throw new CodeError$4(`export format '${r}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}}function unmarshalEd25519PrivateKey(t){if(t.length>PRIVATE_KEY_BYTE_LENGTH){t=ensureKey(t,PRIVATE_KEY_BYTE_LENGTH+PUBLIC_KEY_BYTE_LENGTH);const n=t.subarray(0,PRIVATE_KEY_BYTE_LENGTH),o=t.subarray(PRIVATE_KEY_BYTE_LENGTH,t.length);return new Ed25519PrivateKey(n,o)}t=ensureKey(t,PRIVATE_KEY_BYTE_LENGTH);const e=t.subarray(0,PRIVATE_KEY_BYTE_LENGTH),r=t.subarray(PUBLIC_KEY_BYTE_LENGTH);return new Ed25519PrivateKey(e,r)}function unmarshalEd25519PublicKey(t){return t=ensureKey(t,PUBLIC_KEY_BYTE_LENGTH),new Ed25519PublicKey(t)}async function generateKeyPair$3(){const{privateKey:t,publicKey:e}=await generateKey$2();return new Ed25519PrivateKey(t,e)}async function generateKeyPairFromSeed(t){const{privateKey:e,publicKey:r}=await generateKeyFromSeed(t);return new Ed25519PrivateKey(e,r)}function ensureKey(t,e){if(t=Uint8Array.from(t??[]),t.length!==e)throw new CodeError$4(`Key must be a Uint8Array of length ${e}, got ${t.length}`,"ERR_INVALID_KEY_TYPE");return t}const Ed25519=Object.freeze(Object.defineProperty({__proto__:null,Ed25519PrivateKey,Ed25519PublicKey,generateKeyPair:generateKeyPair$3,generateKeyPairFromSeed,unmarshalEd25519PrivateKey,unmarshalEd25519PublicKey},Symbol.toStringTag,{value:"Module"}));function bigIntegerToUintBase64url(t,e){let r=Uint8Array.from(t.abs().toByteArray());if(r=r[0]===0?r.subarray(1):r,e!=null){if(r.length>e)throw new Error("byte array longer than desired length");r=concat$8([new Uint8Array(e-r.length),r])}return toString$D(r,"base64url")}function base64urlToBigInteger(t){const e=base64urlToBuffer(t);return new forge$6.jsbn.BigInteger(toString$D(e,"base16"),16)}function base64urlToBuffer(t,e){let r=fromString$y(t,"base64urlpad");if(e!=null){if(r.length>e)throw new Error("byte array longer than desired length");r=concat$8([new Uint8Array(e-r.length),r])}return r}const bits={"P-256":256,"P-384":384,"P-521":521},curveTypes=Object.keys(bits);curveTypes.join(" / ");async function importer$1(t,e){const r=base64$p.decode(t);return create$r().decrypt(r,e)}const _0n=BigInt(0),_1n=BigInt(1),_2n=BigInt(2),_3n=BigInt(3),_8n=BigInt(8),CURVE=Object.freeze({a:_0n,b:BigInt(7),P:BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),n:BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),h:_1n,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee")}),divNearest=(t,e)=>(t+e/_2n)/e,endo={beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar(t){const{n:e}=CURVE,r=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),n=-_1n*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),o=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),a=r,c=BigInt("0x100000000000000000000000000000000"),u=divNearest(a*t,e),l=divNearest(-n*t,e);let f=mod(t-u*r-l*o,e),p=mod(-u*n-l*a,e);const g=f>c,$=p>c;if(g&&(f=e-f),$&&(p=e-p),f>c||p>c)throw new Error("splitScalarEndo: Endomorphism failed, k="+t);return{k1neg:g,k1:f,k2neg:$,k2:p}}},fieldLen=32,groupLen=32,hashLen=32,compressedLen=fieldLen+1,uncompressedLen=2*fieldLen+1;function weierstrass(t){const{a:e,b:r}=CURVE,n=mod(t*t),o=mod(n*t);return mod(o+e*t+r)}const USE_ENDOMORPHISM=CURVE.a===_0n;class ShaError extends Error{constructor(e){super(e)}}function assertJacPoint(t){if(!(t instanceof JacobianPoint))throw new TypeError("JacobianPoint expected")}class JacobianPoint{constructor(e,r,n){this.x=e,this.y=r,this.z=n}static fromAffine(e){if(!(e instanceof Point))throw new TypeError("JacobianPoint#fromAffine: expected Point");return e.equals(Point.ZERO)?JacobianPoint.ZERO:new JacobianPoint(e.x,e.y,_1n)}static toAffineBatch(e){const r=invertBatch(e.map(n=>n.z));return e.map((n,o)=>n.toAffine(r[o]))}static normalizeZ(e){return JacobianPoint.toAffineBatch(e).map(JacobianPoint.fromAffine)}equals(e){assertJacPoint(e);const{x:r,y:n,z:o}=this,{x:a,y:c,z:u}=e,l=mod(o*o),f=mod(u*u),p=mod(r*f),g=mod(a*l),$=mod(mod(n*u)*f),_=mod(mod(c*o)*l);return p===g&&$===_}negate(){return new JacobianPoint(this.x,mod(-this.y),this.z)}double(){const{x:e,y:r,z:n}=this,o=mod(e*e),a=mod(r*r),c=mod(a*a),u=e+a,l=mod(_2n*(mod(u*u)-o-c)),f=mod(_3n*o),p=mod(f*f),g=mod(p-_2n*l),$=mod(f*(l-g)-_8n*c),_=mod(_2n*r*n);return new JacobianPoint(g,$,_)}add(e){assertJacPoint(e);const{x:r,y:n,z:o}=this,{x:a,y:c,z:u}=e;if(a===_0n||c===_0n)return this;if(r===_0n||n===_0n)return e;const l=mod(o*o),f=mod(u*u),p=mod(r*f),g=mod(a*l),$=mod(mod(n*u)*f),_=mod(mod(c*o)*l),b=mod(g-p),D=mod(_-$);if(b===_0n)return D===_0n?this.double():JacobianPoint.ZERO;const v=mod(b*b),S=mod(b*v),I=mod(p*v),R=mod(D*D-S-_2n*I),C=mod(D*(I-R)-$*S),T=mod(o*u*b);return new JacobianPoint(R,C,T)}subtract(e){return this.add(e.negate())}multiplyUnsafe(e){const r=JacobianPoint.ZERO;if(typeof e=="bigint"&&e===_0n)return r;let n=normalizeScalar(e);if(n===_1n)return this;if(!USE_ENDOMORPHISM){let g=r,$=this;for(;n>_0n;)n&_1n&&(g=g.add($)),$=$.double(),n>>=_1n;return g}let{k1neg:o,k1:a,k2neg:c,k2:u}=endo.splitScalar(n),l=r,f=r,p=this;for(;a>_0n||u>_0n;)a&_1n&&(l=l.add(p)),u&_1n&&(f=f.add(p)),p=p.double(),a>>=_1n,u>>=_1n;return o&&(l=l.negate()),c&&(f=f.negate()),f=new JacobianPoint(mod(f.x*endo.beta),f.y,f.z),l.add(f)}precomputeWindow(e){const r=USE_ENDOMORPHISM?128/e+1:256/e+1,n=[];let o=this,a=o;for(let c=0;c<r;c++){a=o,n.push(a);for(let u=1;u<2**(e-1);u++)a=a.add(o),n.push(a);o=a.double()}return n}wNAF(e,r){!r&&this.equals(JacobianPoint.BASE)&&(r=Point.BASE);const n=r&&r._WINDOW_SIZE||1;if(256%n)throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");let o=r&&pointPrecomputes.get(r);o||(o=this.precomputeWindow(n),r&&n!==1&&(o=JacobianPoint.normalizeZ(o),pointPrecomputes.set(r,o)));let a=JacobianPoint.ZERO,c=JacobianPoint.BASE;const u=1+(USE_ENDOMORPHISM?128/n:256/n),l=2**(n-1),f=BigInt(2**n-1),p=2**n,g=BigInt(n);for(let $=0;$<u;$++){const _=$*l;let b=Number(e&f);e>>=g,b>l&&(b-=p,e+=_1n);const D=_,v=_+Math.abs(b)-1,S=$%2!==0,I=b<0;b===0?c=c.add(constTimeNegate(S,o[D])):a=a.add(constTimeNegate(I,o[v]))}return{p:a,f:c}}multiply(e,r){let n=normalizeScalar(e),o,a;if(USE_ENDOMORPHISM){const{k1neg:c,k1:u,k2neg:l,k2:f}=endo.splitScalar(n);let{p,f:g}=this.wNAF(u,r),{p:$,f:_}=this.wNAF(f,r);p=constTimeNegate(c,p),$=constTimeNegate(l,$),$=new JacobianPoint(mod($.x*endo.beta),$.y,$.z),o=p.add($),a=g.add(_)}else{const{p:c,f:u}=this.wNAF(n,r);o=c,a=u}return JacobianPoint.normalizeZ([o,a])[0]}toAffine(e){const{x:r,y:n,z:o}=this,a=this.equals(JacobianPoint.ZERO);e==null&&(e=a?_8n:invert(o));const c=e,u=mod(c*c),l=mod(u*c),f=mod(r*u),p=mod(n*l),g=mod(o*c);if(a)return Point.ZERO;if(g!==_1n)throw new Error("invZ was invalid");return new Point(f,p)}}JacobianPoint.BASE=new JacobianPoint(CURVE.Gx,CURVE.Gy,_1n),JacobianPoint.ZERO=new JacobianPoint(_0n,_1n,_0n);function constTimeNegate(t,e){const r=e.negate();return t?r:e}const pointPrecomputes=new WeakMap;class Point{constructor(e,r){this.x=e,this.y=r}_setWindowSize(e){this._WINDOW_SIZE=e,pointPrecomputes.delete(this)}hasEvenY(){return this.y%_2n===_0n}static fromCompressedHex(e){const r=e.length===32,n=bytesToNumber(r?e:e.subarray(1));if(!isValidFieldElement(n))throw new Error("Point is not on curve");const o=weierstrass(n);let a=sqrtMod(o);const c=(a&_1n)===_1n;r?c&&(a=mod(-a)):(e[0]&1)===1!==c&&(a=mod(-a));const u=new Point(n,a);return u.assertValidity(),u}static fromUncompressedHex(e){const r=bytesToNumber(e.subarray(1,fieldLen+1)),n=bytesToNumber(e.subarray(fieldLen+1,fieldLen*2+1)),o=new Point(r,n);return o.assertValidity(),o}static fromHex(e){const r=ensureBytes(e),n=r.length,o=r[0];if(n===fieldLen)return this.fromCompressedHex(r);if(n===compressedLen&&(o===2||o===3))return this.fromCompressedHex(r);if(n===uncompressedLen&&o===4)return this.fromUncompressedHex(r);throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${n}`)}static fromPrivateKey(e){return Point.BASE.multiply(normalizePrivateKey(e))}static fromSignature(e,r,n){const{r:o,s:a}=normalizeSignature(r);if(![0,1,2,3].includes(n))throw new Error("Cannot recover: invalid recovery bit");const c=truncateHash(ensureBytes(e)),{n:u}=CURVE,l=n===2||n===3?o+u:o,f=invert(l,u),p=mod(-c*f,u),g=mod(a*f,u),$=n&1?"03":"02",_=Point.fromHex($+numTo32bStr(l)),b=Point.BASE.multiplyAndAddUnsafe(_,p,g);if(!b)throw new Error("Cannot recover signature: point at infinify");return b.assertValidity(),b}toRawBytes(e=!1){return hexToBytes(this.toHex(e))}toHex(e=!1){const r=numTo32bStr(this.x);return e?`${this.hasEvenY()?"02":"03"}${r}`:`04${r}${numTo32bStr(this.y)}`}toHexX(){return this.toHex(!0).slice(2)}toRawX(){return this.toRawBytes(!0).slice(1)}assertValidity(){const e="Point is not on elliptic curve",{x:r,y:n}=this;if(!isValidFieldElement(r)||!isValidFieldElement(n))throw new Error(e);const o=mod(n*n),a=weierstrass(r);if(mod(o-a)!==_0n)throw new Error(e)}equals(e){return this.x===e.x&&this.y===e.y}negate(){return new Point(this.x,mod(-this.y))}double(){return JacobianPoint.fromAffine(this).double().toAffine()}add(e){return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(e)).toAffine()}subtract(e){return this.add(e.negate())}multiply(e){return JacobianPoint.fromAffine(this).multiply(e,this).toAffine()}multiplyAndAddUnsafe(e,r,n){const o=JacobianPoint.fromAffine(this),a=r===_0n||r===_1n||this!==Point.BASE?o.multiplyUnsafe(r):o.multiply(r),c=JacobianPoint.fromAffine(e).multiplyUnsafe(n),u=a.add(c);return u.equals(JacobianPoint.ZERO)?void 0:u.toAffine()}}Point.BASE=new Point(CURVE.Gx,CURVE.Gy),Point.ZERO=new Point(_0n,_0n);function sliceDER(t){return Number.parseInt(t[0],16)>=8?"00"+t:t}function parseDERInt(t){if(t.length<2||t[0]!==2)throw new Error(`Invalid signature integer tag: ${bytesToHex(t)}`);const e=t[1],r=t.subarray(2,e+2);if(!e||r.length!==e)throw new Error("Invalid signature integer: wrong length");if(r[0]===0&&r[1]<=127)throw new Error("Invalid signature integer: trailing length");return{data:bytesToNumber(r),left:t.subarray(e+2)}}function parseDERSignature(t){if(t.length<2||t[0]!=48)throw new Error(`Invalid signature tag: ${bytesToHex(t)}`);if(t[1]!==t.length-2)throw new Error("Invalid signature: incorrect length");const{data:e,left:r}=parseDERInt(t.subarray(2)),{data:n,left:o}=parseDERInt(r);if(o.length)throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(o)}`);return{r:e,s:n}}class Signature{constructor(e,r){this.r=e,this.s=r,this.assertValidity()}static fromCompact(e){const r=e instanceof Uint8Array,n="Signature.fromCompact";if(typeof e!="string"&&!r)throw new TypeError(`${n}: Expected string or Uint8Array`);const o=r?bytesToHex(e):e;if(o.length!==128)throw new Error(`${n}: Expected 64-byte hex`);return new Signature(hexToNumber(o.slice(0,64)),hexToNumber(o.slice(64,128)))}static fromDER(e){const r=e instanceof Uint8Array;if(typeof e!="string"&&!r)throw new TypeError("Signature.fromDER: Expected string or Uint8Array");const{r:n,s:o}=parseDERSignature(r?e:hexToBytes(e));return new Signature(n,o)}static fromHex(e){return this.fromDER(e)}assertValidity(){const{r:e,s:r}=this;if(!isWithinCurveOrder(e))throw new Error("Invalid Signature: r must be 0 < r < n");if(!isWithinCurveOrder(r))throw new Error("Invalid Signature: s must be 0 < s < n")}hasHighS(){const e=CURVE.n>>_1n;return this.s>e}normalizeS(){return this.hasHighS()?new Signature(this.r,mod(-this.s,CURVE.n)):this}toDERRawBytes(){return hexToBytes(this.toDERHex())}toDERHex(){const e=sliceDER(numberToHexUnpadded(this.s)),r=sliceDER(numberToHexUnpadded(this.r)),n=e.length/2,o=r.length/2,a=numberToHexUnpadded(n),c=numberToHexUnpadded(o);return`30${numberToHexUnpadded(o+n+4)}02${c}${r}02${a}${e}`}toRawBytes(){return this.toDERRawBytes()}toHex(){return this.toDERHex()}toCompactRawBytes(){return hexToBytes(this.toCompactHex())}toCompactHex(){return numTo32bStr(this.r)+numTo32bStr(this.s)}}function concatBytes(...t){if(!t.every(n=>n instanceof Uint8Array))throw new Error("Uint8Array list expected");if(t.length===1)return t[0];const e=t.reduce((n,o)=>n+o.length,0),r=new Uint8Array(e);for(let n=0,o=0;n<t.length;n++){const a=t[n];r.set(a,o),o+=a.length}return r}const hexes=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function bytesToHex(t){if(!(t instanceof Uint8Array))throw new Error("Expected Uint8Array");let e="";for(let r=0;r<t.length;r++)e+=hexes[t[r]];return e}const POW_2_256=BigInt("0x10000000000000000000000000000000000000000000000000000000000000000");function numTo32bStr(t){if(typeof t!="bigint")throw new Error("Expected bigint");if(!(_0n<=t&&t<POW_2_256))throw new Error("Expected number 0 <= n < 2^256");return t.toString(16).padStart(64,"0")}function numTo32b(t){const e=hexToBytes(numTo32bStr(t));if(e.length!==32)throw new Error("Error: expected 32 bytes");return e}function numberToHexUnpadded(t){const e=t.toString(16);return e.length&1?`0${e}`:e}function hexToNumber(t){if(typeof t!="string")throw new TypeError("hexToNumber: expected string, got "+typeof t);return BigInt(`0x${t}`)}function hexToBytes(t){if(typeof t!="string")throw new TypeError("hexToBytes: expected string, got "+typeof t);if(t.length%2)throw new Error("hexToBytes: received invalid unpadded hex"+t.length);const e=new Uint8Array(t.length/2);for(let r=0;r<e.length;r++){const n=r*2,o=t.slice(n,n+2),a=Number.parseInt(o,16);if(Number.isNaN(a)||a<0)throw new Error("Invalid byte sequence");e[r]=a}return e}function bytesToNumber(t){return hexToNumber(bytesToHex(t))}function ensureBytes(t){return t instanceof Uint8Array?Uint8Array.from(t):hexToBytes(t)}function normalizeScalar(t){if(typeof t=="number"&&Number.isSafeInteger(t)&&t>0)return BigInt(t);if(typeof t=="bigint"&&isWithinCurveOrder(t))return t;throw new TypeError("Expected valid private scalar: 0 < scalar < curve.n")}function mod(t,e=CURVE.P){const r=t%e;return r>=_0n?r:e+r}function pow2(t,e){const{P:r}=CURVE;let n=t;for(;e-- >_0n;)n*=n,n%=r;return n}function sqrtMod(t){const{P:e}=CURVE,r=BigInt(6),n=BigInt(11),o=BigInt(22),a=BigInt(23),c=BigInt(44),u=BigInt(88),l=t*t*t%e,f=l*l*t%e,p=pow2(f,_3n)*f%e,g=pow2(p,_3n)*f%e,$=pow2(g,_2n)*l%e,_=pow2($,n)*$%e,b=pow2(_,o)*_%e,D=pow2(b,c)*b%e,v=pow2(D,u)*D%e,S=pow2(v,c)*b%e,I=pow2(S,_3n)*f%e,R=pow2(I,a)*_%e,C=pow2(R,r)*l%e,T=pow2(C,_2n);if(T*T%e!==t)throw new Error("Cannot find square root");return T}function invert(t,e=CURVE.P){if(t===_0n||e<=_0n)throw new Error(`invert: expected positive integers, got n=${t} mod=${e}`);let r=mod(t,e),n=e,o=_0n,a=_1n;for(;r!==_0n;){const c=n/r,u=n%r,l=o-a*c;n=r,r=u,o=a,a=l}if(n!==_1n)throw new Error("invert: does not exist");return mod(o,e)}function invertBatch(t,e=CURVE.P){const r=new Array(t.length),n=t.reduce((a,c,u)=>c===_0n?a:(r[u]=a,mod(a*c,e)),_1n),o=invert(n,e);return t.reduceRight((a,c,u)=>c===_0n?a:(r[u]=mod(a*r[u],e),mod(a*c,e)),o),r}function bits2int_2(t){const e=t.length*8-groupLen*8,r=bytesToNumber(t);return e>0?r>>BigInt(e):r}function truncateHash(t,e=!1){const r=bits2int_2(t);if(e)return r;const{n}=CURVE;return r>=n?r-n:r}let _sha256Sync,_hmacSha256Sync;class HmacDrbg{constructor(e,r){if(this.hashLen=e,this.qByteLen=r,typeof e!="number"||e<2)throw new Error("hashLen must be a number");if(typeof r!="number"||r<2)throw new Error("qByteLen must be a number");this.v=new Uint8Array(e).fill(1),this.k=new Uint8Array(e).fill(0),this.counter=0}hmac(...e){return utils.hmacSha256(this.k,...e)}hmacSync(...e){return _hmacSha256Sync(this.k,...e)}checkSync(){if(typeof _hmacSha256Sync!="function")throw new ShaError("hmacSha256Sync needs to be set")}incr(){if(this.counter>=1e3)throw new Error("Tried 1,000 k values for sign(), all were invalid");this.counter+=1}async reseed(e=new Uint8Array){this.k=await this.hmac(this.v,Uint8Array.from([0]),e),this.v=await this.hmac(this.v),e.length!==0&&(this.k=await this.hmac(this.v,Uint8Array.from([1]),e),this.v=await this.hmac(this.v))}reseedSync(e=new Uint8Array){this.checkSync(),this.k=this.hmacSync(this.v,Uint8Array.from([0]),e),this.v=this.hmacSync(this.v),e.length!==0&&(this.k=this.hmacSync(this.v,Uint8Array.from([1]),e),this.v=this.hmacSync(this.v))}async generate(){this.incr();let e=0;const r=[];for(;e<this.qByteLen;){this.v=await this.hmac(this.v);const n=this.v.slice();r.push(n),e+=this.v.length}return concatBytes(...r)}generateSync(){this.checkSync(),this.incr();let e=0;const r=[];for(;e<this.qByteLen;){this.v=this.hmacSync(this.v);const n=this.v.slice();r.push(n),e+=this.v.length}return concatBytes(...r)}}function isWithinCurveOrder(t){return _0n<t&&t<CURVE.n}function isValidFieldElement(t){return _0n<t&&t<CURVE.P}function kmdToSig(t,e,r,n=!0){const{n:o}=CURVE,a=truncateHash(t,!0);if(!isWithinCurveOrder(a))return;const c=invert(a,o),u=Point.BASE.multiply(a),l=mod(u.x,o);if(l===_0n)return;const f=mod(c*mod(e+r*l,o),o);if(f===_0n)return;let p=new Signature(l,f),g=(u.x===p.r?0:2)|Number(u.y&_1n);return n&&p.hasHighS()&&(p=p.normalizeS(),g^=1),{sig:p,recovery:g}}function normalizePrivateKey(t){let e;if(typeof t=="bigint")e=t;else if(typeof t=="number"&&Number.isSafeInteger(t)&&t>0)e=BigInt(t);else if(typeof t=="string"){if(t.length!==2*groupLen)throw new Error("Expected 32 bytes of private key");e=hexToNumber(t)}else if(t instanceof Uint8Array){if(t.length!==groupLen)throw new Error("Expected 32 bytes of private key");e=bytesToNumber(t)}else throw new TypeError("Expected valid private key");if(!isWithinCurveOrder(e))throw new Error("Expected private key: 0 < key < n");return e}function normalizePublicKey(t){return t instanceof Point?(t.assertValidity(),t):Point.fromHex(t)}function normalizeSignature(t){if(t instanceof Signature)return t.assertValidity(),t;try{return Signature.fromDER(t)}catch{return Signature.fromCompact(t)}}function getPublicKey(t,e=!1){return Point.fromPrivateKey(t).toRawBytes(e)}function bits2int(t){const e=t.length>fieldLen?t.slice(0,fieldLen):t;return bytesToNumber(e)}function bits2octets(t){const e=bits2int(t),r=mod(e,CURVE.n);return int2octets(r<_0n?e:r)}function int2octets(t){return numTo32b(t)}function initSigArgs(t,e,r){if(t==null)throw new Error(`sign: expected valid message hash, not "${t}"`);const n=ensureBytes(t),o=normalizePrivateKey(e),a=[int2octets(o),bits2octets(n)];if(r!=null){r===!0&&(r=utils.randomBytes(fieldLen));const l=ensureBytes(r);if(l.length!==fieldLen)throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);a.push(l)}const c=concatBytes(...a),u=bits2int(n);return{seed:c,m:u,d:o}}function finalizeSig(t,e){const{sig:r,recovery:n}=t,{der:o,recovered:a}=Object.assign({canonical:!0,der:!0},e),c=o?r.toDERRawBytes():r.toCompactRawBytes();return a?[c,n]:c}async function sign(t,e,r={}){const{seed:n,m:o,d:a}=initSigArgs(t,e,r.extraEntropy),c=new HmacDrbg(hashLen,groupLen);await c.reseed(n);let u;for(;!(u=kmdToSig(await c.generate(),o,a,r.canonical));)await c.reseed();return finalizeSig(u,r)}const vopts={strict:!0};function verify(t,e,r,n=vopts){let o;try{o=normalizeSignature(t),e=ensureBytes(e)}catch{return!1}const{r:a,s:c}=o;if(n.strict&&o.hasHighS())return!1;const u=truncateHash(e);let l;try{l=normalizePublicKey(r)}catch{return!1}const{n:f}=CURVE,p=invert(c,f),g=mod(u*p,f),$=mod(a*p,f),_=Point.BASE.multiplyAndAddUnsafe(l,g,$);return _?mod(_.x,f)===a:!1}Point.BASE._setWindowSize(8);const crypto$1={node:nodeCrypto,web:typeof self=="object"&&"crypto"in self?self.crypto:void 0},TAGGED_HASH_PREFIXES={},utils={bytesToHex,hexToBytes,concatBytes,mod,invert,isValidPrivateKey(t){try{return normalizePrivateKey(t),!0}catch{return!1}},_bigintTo32Bytes:numTo32b,_normalizePrivateKey:normalizePrivateKey,hashToPrivateKey:t=>{t=ensureBytes(t);const e=groupLen+8;if(t.length<e||t.length>1024)throw new Error("Expected valid bytes of private key as per FIPS 186");const r=mod(bytesToNumber(t),CURVE.n-_1n)+_1n;return numTo32b(r)},randomBytes:(t=32)=>{if(crypto$1.web)return crypto$1.web.getRandomValues(new Uint8Array(t));if(crypto$1.node){const{randomBytes:e}=crypto$1.node;return Uint8Array.from(e(t))}else throw new Error("The environment doesn't have randomBytes function")},randomPrivateKey:()=>utils.hashToPrivateKey(utils.randomBytes(groupLen+8)),precompute(t=8,e=Point.BASE){const r=e===Point.BASE?e:new Point(e.x,e.y);return r._setWindowSize(t),r.multiply(_3n),r},sha256:async(...t)=>{if(crypto$1.web){const e=await crypto$1.web.subtle.digest("SHA-256",concatBytes(...t));return new Uint8Array(e)}else if(crypto$1.node){const{createHash:e}=crypto$1.node,r=e("sha256");return t.forEach(n=>r.update(n)),Uint8Array.from(r.digest())}else throw new Error("The environment doesn't have sha256 function")},hmacSha256:async(t,...e)=>{if(crypto$1.web){const r=await crypto$1.web.subtle.importKey("raw",t,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]),n=concatBytes(...e),o=await crypto$1.web.subtle.sign("HMAC",r,n);return new Uint8Array(o)}else if(crypto$1.node){const{createHmac:r}=crypto$1.node,n=r("sha256",t);return e.forEach(o=>n.update(o)),Uint8Array.from(n.digest())}else throw new Error("The environment doesn't have hmac-sha256 function")},sha256Sync:void 0,hmacSha256Sync:void 0,taggedHash:async(t,...e)=>{let r=TAGGED_HASH_PREFIXES[t];if(r===void 0){const n=await utils.sha256(Uint8Array.from(t,o=>o.charCodeAt(0)));r=concatBytes(n,n),TAGGED_HASH_PREFIXES[t]=r}return utils.sha256(r,...e)},taggedHashSync:(t,...e)=>{if(typeof _sha256Sync!="function")throw new ShaError("sha256Sync is undefined, you need to set it");let r=TAGGED_HASH_PREFIXES[t];if(r===void 0){const n=_sha256Sync(Uint8Array.from(t,o=>o.charCodeAt(0)));r=concatBytes(n,n),TAGGED_HASH_PREFIXES[t]=r}return _sha256Sync(r,...e)},_JacobianPoint:JacobianPoint};Object.defineProperties(utils,{sha256Sync:{configurable:!1,get(){return _sha256Sync},set(t){_sha256Sync||(_sha256Sync=t)}},hmacSha256Sync:{configurable:!1,get(){return _hmacSha256Sync},set(t){_hmacSha256Sync||(_hmacSha256Sync=t)}}});function randomBytes$3(t){if(isNaN(t)||t<=0)throw new CodeError$4("random bytes length must be a Number bigger than 0","ERR_INVALID_LENGTH");return utils.randomBytes(t)}function convert(t,e){return e.map(r=>base64urlToBigInteger(t[r]))}function jwk2priv(t){return forge$6.pki.setRsaPrivateKey(...convert(t,["n","e","d","p","q","dp","dq","qi"]))}function jwk2pub(t){return forge$6.pki.setRsaPublicKey(...convert(t,["n","e"]))}function pkcs1ToJwk(t){const e=forge$6.asn1.fromDer(toString$D(t,"ascii")),r=forge$6.pki.privateKeyFromAsn1(e);return{kty:"RSA",n:bigIntegerToUintBase64url(r.n),e:bigIntegerToUintBase64url(r.e),d:bigIntegerToUintBase64url(r.d),p:bigIntegerToUintBase64url(r.p),q:bigIntegerToUintBase64url(r.q),dp:bigIntegerToUintBase64url(r.dP),dq:bigIntegerToUintBase64url(r.dQ),qi:bigIntegerToUintBase64url(r.qInv),alg:"RS256"}}function jwkToPkcs1(t){if(t.n==null||t.e==null||t.d==null||t.p==null||t.q==null||t.dp==null||t.dq==null||t.qi==null)throw new CodeError$4("JWK was missing components","ERR_INVALID_PARAMETERS");const e=forge$6.pki.privateKeyToAsn1({n:base64urlToBigInteger(t.n),e:base64urlToBigInteger(t.e),d:base64urlToBigInteger(t.d),p:base64urlToBigInteger(t.p),q:base64urlToBigInteger(t.q),dP:base64urlToBigInteger(t.dp),dQ:base64urlToBigInteger(t.dq),qInv:base64urlToBigInteger(t.qi)});return fromString$y(forge$6.asn1.toDer(e).getBytes(),"ascii")}function pkixToJwk(t){const e=forge$6.asn1.fromDer(toString$D(t,"ascii")),r=forge$6.pki.publicKeyFromAsn1(e);return{kty:"RSA",n:bigIntegerToUintBase64url(r.n),e:bigIntegerToUintBase64url(r.e)}}function jwkToPkix(t){if(t.n==null||t.e==null)throw new CodeError$4("JWK was missing components","ERR_INVALID_PARAMETERS");const e=forge$6.pki.publicKeyToAsn1({n:base64urlToBigInteger(t.n),e:base64urlToBigInteger(t.e)});return fromString$y(forge$6.asn1.toDer(e).getBytes(),"ascii")}async function generateKey$1(t){const e=await webcrypto.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:t,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),r=await exportKey(e);return{privateKey:r[0],publicKey:r[1]}}async function unmarshalPrivateKey$1(t){const e=[await webcrypto.get().subtle.importKey("jwk",t,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["sign"]),await derivePublicFromPrivate(t)],r=await exportKey({privateKey:e[0],publicKey:e[1]});return{privateKey:r[0],publicKey:r[1]}}async function hashAndSign$1(t,e){const r=await webcrypto.get().subtle.importKey("jwk",t,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),n=await webcrypto.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},r,Uint8Array.from(e));return new Uint8Array(n,0,n.byteLength)}async function hashAndVerify$1(t,e,r){const n=await webcrypto.get().subtle.importKey("jwk",t,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return webcrypto.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},n,e,r)}async function exportKey(t){if(t.privateKey==null||t.publicKey==null)throw new CodeError$4("Private and public key are required","ERR_INVALID_PARAMETERS");return Promise.all([webcrypto.get().subtle.exportKey("jwk",t.privateKey),webcrypto.get().subtle.exportKey("jwk",t.publicKey)])}async function derivePublicFromPrivate(t){return webcrypto.get().subtle.importKey("jwk",{kty:t.kty,n:t.n,e:t.e},{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["verify"])}function convertKey(t,e,r,n){const o=e?jwk2pub(t):jwk2priv(t),a=toString$D(Uint8Array.from(r),"ascii"),c=n(a,o);return fromString$y(c,"ascii")}function encrypt(t,e){return convertKey(t,!0,e,(r,n)=>n.encrypt(r))}function decrypt(t,e){return convertKey(t,!1,e,(r,n)=>n.decrypt(r))}class RsaPublicKey{constructor(e){N(this,"_key");this._key=e}async verify(e,r){return hashAndVerify$1(this._key,r,e)}marshal(){return jwkToPkix(this._key)}get bytes(){return PublicKey.encode({Type:KeyType.RSA,Data:this.marshal()}).subarray()}encrypt(e){return encrypt(this._key,e)}equals(e){return equals$R(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$a.digest(this.bytes);return e}}class RsaPrivateKey{constructor(e,r){N(this,"_key");N(this,"_publicKey");this._key=e,this._publicKey=r}genSecret(){return randomBytes$3(16)}async sign(e){return hashAndSign$1(this._key,e)}get public(){if(this._publicKey==null)throw new CodeError$4("public key not provided","ERR_PUBKEY_NOT_PROVIDED");return new RsaPublicKey(this._publicKey)}decrypt(e){return decrypt(this._key,e)}marshal(){return jwkToPkcs1(this._key)}get bytes(){return PrivateKey.encode({Type:KeyType.RSA,Data:this.marshal()}).subarray()}equals(e){return equals$R(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$a.digest(this.bytes);return e}async id(){const e=await this.public.hash();return toString$D(e,"base58btc")}async export(e,r="pkcs-8"){if(r==="pkcs-8"){const n=new forge$6.util.ByteBuffer(this.marshal()),o=forge$6.asn1.fromDer(n),a=forge$6.pki.privateKeyFromAsn1(o),c={algorithm:"aes256",count:1e4,saltSize:128/8,prfAlgorithm:"sha512"};return forge$6.pki.encryptRsaPrivateKey(a,e,c)}else{if(r==="libp2p-key")return exporter$1(this.bytes,e);throw new CodeError$4(`export format '${r}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}}}async function unmarshalRsaPrivateKey(t){const e=pkcs1ToJwk(t),r=await unmarshalPrivateKey$1(e);return new RsaPrivateKey(r.privateKey,r.publicKey)}function unmarshalRsaPublicKey(t){const e=pkixToJwk(t);return new RsaPublicKey(e)}async function fromJwk(t){const e=await unmarshalPrivateKey$1(t);return new RsaPrivateKey(e.privateKey,e.publicKey)}async function generateKeyPair$2(t){const e=await generateKey$1(t);return new RsaPrivateKey(e.privateKey,e.publicKey)}const RSA=Object.freeze(Object.defineProperty({__proto__:null,RsaPrivateKey,RsaPublicKey,fromJwk,generateKeyPair:generateKeyPair$2,unmarshalRsaPrivateKey,unmarshalRsaPublicKey},Symbol.toStringTag,{value:"Module"}));function generateKey(){return utils.randomPrivateKey()}async function hashAndSign(t,e){const{digest:r}=await sha256$a.digest(e);try{return await sign(r,t)}catch(n){throw new CodeError$4(String(n),"ERR_INVALID_INPUT")}}async function hashAndVerify(t,e,r){try{const{digest:n}=await sha256$a.digest(r);return verify(e,n,t)}catch(n){throw new CodeError$4(String(n),"ERR_INVALID_INPUT")}}function compressPublicKey(t){return Point.fromHex(t).toRawBytes(!0)}function validatePrivateKey(t){try{getPublicKey(t,!0)}catch(e){throw new CodeError$4(String(e),"ERR_INVALID_PRIVATE_KEY")}}function validatePublicKey(t){try{Point.fromHex(t)}catch(e){throw new CodeError$4(String(e),"ERR_INVALID_PUBLIC_KEY")}}function computePublicKey(t){try{return getPublicKey(t,!0)}catch(e){throw new CodeError$4(String(e),"ERR_INVALID_PRIVATE_KEY")}}class Secp256k1PublicKey{constructor(e){N(this,"_key");validatePublicKey(e),this._key=e}async verify(e,r){return hashAndVerify(this._key,r,e)}marshal(){return compressPublicKey(this._key)}get bytes(){return PublicKey.encode({Type:KeyType.Secp256k1,Data:this.marshal()}).subarray()}equals(e){return equals$R(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$a.digest(this.bytes);return e}}class Secp256k1PrivateKey{constructor(e,r){N(this,"_key");N(this,"_publicKey");this._key=e,this._publicKey=r??computePublicKey(e),validatePrivateKey(this._key),validatePublicKey(this._publicKey)}async sign(e){return hashAndSign(this._key,e)}get public(){return new Secp256k1PublicKey(this._publicKey)}marshal(){return this._key}get bytes(){return PrivateKey.encode({Type:KeyType.Secp256k1,Data:this.marshal()}).subarray()}equals(e){return equals$R(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$a.digest(this.bytes);return e}async id(){const e=await this.public.hash();return toString$D(e,"base58btc")}async export(e,r="libp2p-key"){if(r==="libp2p-key")return exporter$1(this.bytes,e);throw new CodeError$4(`export format '${r}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}}function unmarshalSecp256k1PrivateKey(t){return new Secp256k1PrivateKey(t)}function unmarshalSecp256k1PublicKey(t){return new Secp256k1PublicKey(t)}async function generateKeyPair$1(){const t=generateKey();return new Secp256k1PrivateKey(t)}const Secp256k1=Object.freeze(Object.defineProperty({__proto__:null,Secp256k1PrivateKey,Secp256k1PublicKey,generateKeyPair:generateKeyPair$1,unmarshalSecp256k1PrivateKey,unmarshalSecp256k1PublicKey},Symbol.toStringTag,{value:"Module"})),supportedKeys={rsa:RSA,ed25519:Ed25519,secp256k1:Secp256k1};function unsupportedKey(t){const e=Object.keys(supportedKeys).join(" / ");return new CodeError$4(`invalid or unsupported key type ${t}. Must be ${e}`,"ERR_UNSUPPORTED_KEY_TYPE")}function typeToKey(t){if(t=t.toLowerCase(),t==="rsa"||t==="ed25519"||t==="secp256k1")return supportedKeys[t];throw unsupportedKey(t)}async function generateKeyPair(t,e){return typeToKey(t).generateKeyPair(e??2048)}function unmarshalPublicKey(t){const e=PublicKey.decode(t),r=e.Data??new Uint8Array;switch(e.Type){case KeyType.RSA:return supportedKeys.rsa.unmarshalRsaPublicKey(r);case KeyType.Ed25519:return supportedKeys.ed25519.unmarshalEd25519PublicKey(r);case KeyType.Secp256k1:return supportedKeys.secp256k1.unmarshalSecp256k1PublicKey(r);default:throw unsupportedKey(e.Type??"RSA")}}function marshalPublicKey(t,e){return e=(e??"rsa").toLowerCase(),typeToKey(e),t.bytes}async function unmarshalPrivateKey(t){const e=PrivateKey.decode(t),r=e.Data??new Uint8Array;switch(e.Type){case KeyType.RSA:return supportedKeys.rsa.unmarshalRsaPrivateKey(r);case KeyType.Ed25519:return supportedKeys.ed25519.unmarshalEd25519PrivateKey(r);case KeyType.Secp256k1:return supportedKeys.secp256k1.unmarshalSecp256k1PrivateKey(r);default:throw unsupportedKey(e.Type??"RSA")}}function marshalPrivateKey(t,e){return e=(e??"rsa").toLowerCase(),typeToKey(e),t.bytes}async function importKey(t,e){try{const o=await importer$1(t,e);return await unmarshalPrivateKey(o)}catch{}const r=forge$6.pki.decryptRsaPrivateKey(t,e);if(r===null)throw new CodeError$4("Cannot read the key, most likely the password is wrong or not a RSA key","ERR_CANNOT_DECRYPT_PEM");let n=forge$6.asn1.toDer(forge$6.pki.privateKeyToAsn1(r));return n=fromString$y(n.getBytes(),"ascii"),supportedKeys.rsa.unmarshalRsaPrivateKey(n)}const coerce$k=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")};let Encoder$m=class{constructor(t,e,r){this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$m=class{constructor(t,e,r){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$o(this,t)}},ComposedDecoder$k=class{constructor(t){this.decoders=t}or(t){return or$o(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$o=(t,e)=>new ComposedDecoder$k({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});let Codec$k=class{constructor(t,e,r,n){this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$m(t,e,r),this.decoder=new Decoder$m(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};const from$u=({name:t,prefix:e,encode:r,decode:n})=>new Codec$k(t,e,r,n),decode$1J=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode$1h=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648$k=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from$u({prefix:e,name:t,encode(o){return encode$1h(o,n,r)},decode(o){return decode$1J(o,n,r,t)}});rfc4648$k({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5});const base32upper$b=rfc4648$k({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5});rfc4648$k({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),rfc4648$k({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),rfc4648$k({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),rfc4648$k({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),rfc4648$k({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),rfc4648$k({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),rfc4648$k({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});const ERR_IPNS_EXPIRED_RECORD="ERR_IPNS_EXPIRED_RECORD",ERR_UNRECOGNIZED_VALIDITY="ERR_UNRECOGNIZED_VALIDITY",ERR_SIGNATURE_CREATION="ERR_SIGNATURE_CREATION",ERR_SIGNATURE_VERIFICATION="ERR_SIGNATURE_VERIFICATION",ERR_UNRECOGNIZED_FORMAT="ERR_UNRECOGNIZED_FORMAT",ERR_UNDEFINED_PARAMETER="ERR_UNDEFINED_PARAMETER",ERR_INVALID_RECORD_DATA="ERR_INVALID_RECORD_DATA",ERR_INVALID_EMBEDDED_KEY="ERR_INVALID_EMBEDDED_KEY",ERR_MISSING_PRIVATE_KEY="ERR_MISSING_PRIVATE_KEY";var minimalExports$1=requireMinimal$2();const util=getDefaultExportFromCjs(minimalExports$1);function configure$2(){util._configure(),ReaderClass._configure(ReaderBufferClass),WriterClass._configure(WriterBufferClass)}configure$2();const methods$1=["uint64","int64","sint64","fixed64","sfixed64"];function patchReader$1(t){for(const e of methods$1){if(t[e]==null)continue;const r=t[e];t[e]=function(){return BigInt(r.call(this).toString())}}return t}function reader$3(t){return patchReader$1(new ReaderClass(t))}function patchWriter$1(t){for(const e of methods$1){if(t[e]==null)continue;const r=t[e];t[e]=function(n){return r.call(this,n.toString())}}return t}function writer$2(){return patchWriter$1(WriterClass.create())}function decodeMessage$2(t,e){const r=reader$3(t instanceof Uint8Array?t:t.subarray());return e.decode(r)}function encodeMessage$1(t,e){const r=writer$2();return e.encode(t,r,{lengthDelimited:!1}),r.finish()}var CODEC_TYPES$1;(function(t){t[t.VARINT=0]="VARINT",t[t.BIT64=1]="BIT64",t[t.LENGTH_DELIMITED=2]="LENGTH_DELIMITED",t[t.START_GROUP=3]="START_GROUP",t[t.END_GROUP=4]="END_GROUP",t[t.BIT32=5]="BIT32"})(CODEC_TYPES$1||(CODEC_TYPES$1={}));function createCodec$5(t,e,r,n){return{name:t,type:e,encode:r,decode:n}}function enumeration$1(t){function e(o){if(t[o.toString()]==null)throw new Error("Invalid enum value");return t[o]}const r=function(o,a){const c=e(o);a.int32(c)},n=function(o){const a=o.int32();return e(a)};return createCodec$5("enum",CODEC_TYPES$1.VARINT,r,n)}function message$1(t,e){return createCodec$5("message",CODEC_TYPES$1.LENGTH_DELIMITED,t,e)}var IpnsEntry;(function(t){(function(n){n.EOL="EOL"})(t.ValidityType||(t.ValidityType={}));let e;(function(n){n[n.EOL=0]="EOL"})(e||(e={})),function(n){n.codec=()=>enumeration$1(e)}(t.ValidityType||(t.ValidityType={}));let r;t.codec=()=>(r==null&&(r=message$1((n,o,a={})=>{a.lengthDelimited!==!1&&o.fork(),n.value!=null&&(o.uint32(10),o.bytes(n.value)),n.signature!=null&&(o.uint32(18),o.bytes(n.signature)),n.validityType!=null&&(o.uint32(24),t.ValidityType.codec().encode(n.validityType,o)),n.validity!=null&&(o.uint32(34),o.bytes(n.validity)),n.sequence!=null&&(o.uint32(40),o.uint64(n.sequence)),n.ttl!=null&&(o.uint32(48),o.uint64(n.ttl)),n.pubKey!=null&&(o.uint32(58),o.bytes(n.pubKey)),n.signatureV2!=null&&(o.uint32(66),o.bytes(n.signatureV2)),n.data!=null&&(o.uint32(74),o.bytes(n.data)),a.lengthDelimited!==!1&&o.ldelim()},(n,o)=>{const a={},c=o==null?n.len:n.pos+o;for(;n.pos<c;){const u=n.uint32();switch(u>>>3){case 1:a.value=n.bytes();break;case 2:a.signature=n.bytes();break;case 3:a.validityType=t.ValidityType.codec().decode(n);break;case 4:a.validity=n.bytes();break;case 5:a.sequence=n.uint64();break;case 6:a.ttl=n.uint64();break;case 7:a.pubKey=n.bytes();break;case 8:a.signatureV2=n.bytes();break;case 9:a.data=n.bytes();break;default:n.skipType(u&7);break}}return a})),r),t.encode=n=>encodeMessage$1(n,t.codec()),t.decode=n=>decodeMessage$2(n,t.codec())})(IpnsEntry||(IpnsEntry={}));const typeofs$2=["string","number","bigint","symbol"],objectTypeNames$2=["Function","Generator","AsyncGenerator","GeneratorFunction","AsyncGeneratorFunction","AsyncFunction","Observable","Array","Buffer","Object","RegExp","Date","Error","Map","Set","WeakMap","WeakSet","ArrayBuffer","SharedArrayBuffer","DataView","Promise","URL","HTMLElement","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array"];function is$2(t){if(t===null)return"null";if(t===void 0)return"undefined";if(t===!0||t===!1)return"boolean";const e=typeof t;return typeofs$2.includes(e)?e:e==="function"?"Function":Array.isArray(t)?"Array":isBuffer$5(t)?"Buffer":getObjectType$2(t)||"Object"}function isBuffer$5(t){return t&&t.constructor&&t.constructor.isBuffer&&t.constructor.isBuffer.call(null,t)}function getObjectType$2(t){const e=Object.prototype.toString.call(t).slice(8,-1);if(objectTypeNames$2.includes(e))return e}let Type$2=class{constructor(t,e,r){this.major=t,this.majorEncoded=t<<5,this.name=e,this.terminal=r}toString(){return`Type[${this.major}].${this.name}`}compare(t){return this.major<t.major?-1:this.major>t.major?1:0}};Type$2.uint=new Type$2(0,"uint",!0),Type$2.negint=new Type$2(1,"negint",!0),Type$2.bytes=new Type$2(2,"bytes",!0),Type$2.string=new Type$2(3,"string",!0),Type$2.array=new Type$2(4,"array",!1),Type$2.map=new Type$2(5,"map",!1),Type$2.tag=new Type$2(6,"tag",!1),Type$2.float=new Type$2(7,"float",!0),Type$2.false=new Type$2(7,"false",!0),Type$2.true=new Type$2(7,"true",!0),Type$2.null=new Type$2(7,"null",!0),Type$2.undefined=new Type$2(7,"undefined",!0),Type$2.break=new Type$2(7,"break",!0);let Token$2=class{constructor(t,e,r){this.type=t,this.value=e,this.encodedLength=r,this.encodedBytes=void 0,this.byteValue=void 0}toString(){return`Token[${this.type}].${this.value}`}};const useBuffer$2=globalThis.process&&!globalThis.process.browser&&globalThis.Buffer&&typeof globalThis.Buffer.isBuffer=="function",textDecoder$3=new TextDecoder,textEncoder$3=new TextEncoder;function isBuffer$4(t){return useBuffer$2&&globalThis.Buffer.isBuffer(t)}function asU8A$2(t){return t instanceof Uint8Array?isBuffer$4(t)?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):t:Uint8Array.from(t)}const toString$v=useBuffer$2?(t,e,r)=>r-e>64?globalThis.Buffer.from(t.subarray(e,r)).toString("utf8"):utf8Slice$2(t,e,r):(t,e,r)=>r-e>64?textDecoder$3.decode(t.subarray(e,r)):utf8Slice$2(t,e,r),fromString$p=useBuffer$2?t=>t.length>64?globalThis.Buffer.from(t):utf8ToBytes$2(t):t=>t.length>64?textEncoder$3.encode(t):utf8ToBytes$2(t),fromArray$2=t=>Uint8Array.from(t),slice$2=useBuffer$2?(t,e,r)=>isBuffer$4(t)?new Uint8Array(t.subarray(e,r)):t.slice(e,r):(t,e,r)=>t.slice(e,r),concat$6=useBuffer$2?(t,e)=>(t=t.map(r=>r instanceof Uint8Array?r:globalThis.Buffer.from(r)),asU8A$2(globalThis.Buffer.concat(t,e))):(t,e)=>{const r=new Uint8Array(e);let n=0;for(let o of t)n+o.length>r.length&&(o=o.subarray(0,r.length-n)),r.set(o,n),n+=o.length;return r},alloc$2=useBuffer$2?t=>globalThis.Buffer.allocUnsafe(t):t=>new Uint8Array(t);function compare$3(t,e){if(isBuffer$4(t)&&isBuffer$4(e))return t.compare(e);for(let r=0;r<t.length;r++)if(t[r]!==e[r])return t[r]<e[r]?-1:1;return 0}function utf8ToBytes$2(t,e=1/0){let r;const n=t.length;let o=null;const a=[];for(let c=0;c<n;++c){if(r=t.charCodeAt(c),r>55295&&r<57344){if(!o){if(r>56319){(e-=3)>-1&&a.push(239,191,189);continue}else if(c+1===n){(e-=3)>-1&&a.push(239,191,189);continue}o=r;continue}if(r<56320){(e-=3)>-1&&a.push(239,191,189),o=r;continue}r=(o-55296<<10|r-56320)+65536}else o&&(e-=3)>-1&&a.push(239,191,189);if(o=null,r<128){if((e-=1)<0)break;a.push(r)}else if(r<2048){if((e-=2)<0)break;a.push(r>>6|192,r&63|128)}else if(r<65536){if((e-=3)<0)break;a.push(r>>12|224,r>>6&63|128,r&63|128)}else if(r<1114112){if((e-=4)<0)break;a.push(r>>18|240,r>>12&63|128,r>>6&63|128,r&63|128)}else throw new Error("Invalid code point")}return a}function utf8Slice$2(t,e,r){const n=[];for(;e<r;){const o=t[e];let a=null,c=o>239?4:o>223?3:o>191?2:1;if(e+c<=r){let u,l,f,p;switch(c){case 1:o<128&&(a=o);break;case 2:u=t[e+1],(u&192)===128&&(p=(o&31)<<6|u&63,p>127&&(a=p));break;case 3:u=t[e+1],l=t[e+2],(u&192)===128&&(l&192)===128&&(p=(o&15)<<12|(u&63)<<6|l&63,p>2047&&(p<55296||p>57343)&&(a=p));break;case 4:u=t[e+1],l=t[e+2],f=t[e+3],(u&192)===128&&(l&192)===128&&(f&192)===128&&(p=(o&15)<<18|(u&63)<<12|(l&63)<<6|f&63,p>65535&&p<1114112&&(a=p))}}a===null?(a=65533,c=1):a>65535&&(a-=65536,n.push(a>>>10&1023|55296),a=56320|a&1023),n.push(a),e+=c}return decodeCodePointsArray$2(n)}const MAX_ARGUMENTS_LENGTH$2=4096;function decodeCodePointsArray$2(t){const e=t.length;if(e<=MAX_ARGUMENTS_LENGTH$2)return String.fromCharCode.apply(String,t);let r="",n=0;for(;n<e;)r+=String.fromCharCode.apply(String,t.slice(n,n+=MAX_ARGUMENTS_LENGTH$2));return r}const defaultChunkSize$2=256;let Bl$2=class{constructor(t=defaultChunkSize$2){this.chunkSize=t,this.cursor=0,this.maxCursor=-1,this.chunks=[],this._initReuseChunk=null}reset(){this.cursor=0,this.maxCursor=-1,this.chunks.length&&(this.chunks=[]),this._initReuseChunk!==null&&(this.chunks.push(this._initReuseChunk),this.maxCursor=this._initReuseChunk.length-1)}push(t){let e=this.chunks[this.chunks.length-1];if(this.cursor+t.length<=this.maxCursor+1){const r=e.length-(this.maxCursor-this.cursor)-1;e.set(t,r)}else{if(e){const r=e.length-(this.maxCursor-this.cursor)-1;r<e.length&&(this.chunks[this.chunks.length-1]=e.subarray(0,r),this.maxCursor=this.cursor-1)}t.length<64&&t.length<this.chunkSize?(e=alloc$2(this.chunkSize),this.chunks.push(e),this.maxCursor+=e.length,this._initReuseChunk===null&&(this._initReuseChunk=e),e.set(t,0)):(this.chunks.push(t),this.maxCursor+=t.length)}this.cursor+=t.length}toBytes(t=!1){let e;if(this.chunks.length===1){const r=this.chunks[0];t&&this.cursor>r.length/2?(e=this.cursor===r.length?r:r.subarray(0,this.cursor),this._initReuseChunk=null,this.chunks=[]):e=slice$2(r,0,this.cursor)}else e=concat$6(this.chunks,this.cursor);return t&&this.reset(),e}};const decodeErrPrefix$2="CBOR decode error:",encodeErrPrefix$2="CBOR encode error:";function assertEnoughData$2(t,e,r){if(t.length-e<r)throw new Error(`${decodeErrPrefix$2} not enough data for type`)}const uintBoundaries$2=[24,256,65536,4294967296,BigInt("18446744073709551616")];function readUint8$2(t,e,r){assertEnoughData$2(t,e,1);const n=t[e];if(r.strict===!0&&n<uintBoundaries$2[0])throw new Error(`${decodeErrPrefix$2} integer encoded in more bytes than necessary (strict decode)`);return n}function readUint16$2(t,e,r){assertEnoughData$2(t,e,2);const n=t[e]<<8|t[e+1];if(r.strict===!0&&n<uintBoundaries$2[1])throw new Error(`${decodeErrPrefix$2} integer encoded in more bytes than necessary (strict decode)`);return n}function readUint32$2(t,e,r){assertEnoughData$2(t,e,4);const n=t[e]*16777216+(t[e+1]<<16)+(t[e+2]<<8)+t[e+3];if(r.strict===!0&&n<uintBoundaries$2[2])throw new Error(`${decodeErrPrefix$2} integer encoded in more bytes than necessary (strict decode)`);return n}function readUint64$2(t,e,r){assertEnoughData$2(t,e,8);const n=t[e]*16777216+(t[e+1]<<16)+(t[e+2]<<8)+t[e+3],o=t[e+4]*16777216+(t[e+5]<<16)+(t[e+6]<<8)+t[e+7],a=(BigInt(n)<<BigInt(32))+BigInt(o);if(r.strict===!0&&a<uintBoundaries$2[3])throw new Error(`${decodeErrPrefix$2} integer encoded in more bytes than necessary (strict decode)`);if(a<=Number.MAX_SAFE_INTEGER)return Number(a);if(r.allowBigInt===!0)return a;throw new Error(`${decodeErrPrefix$2} integers outside of the safe integer range are not supported`)}function decodeUint8$2(t,e,r,n){return new Token$2(Type$2.uint,readUint8$2(t,e+1,n),2)}function decodeUint16$2(t,e,r,n){return new Token$2(Type$2.uint,readUint16$2(t,e+1,n),3)}function decodeUint32$2(t,e,r,n){return new Token$2(Type$2.uint,readUint32$2(t,e+1,n),5)}function decodeUint64$2(t,e,r,n){return new Token$2(Type$2.uint,readUint64$2(t,e+1,n),9)}function encodeUint$2(t,e){return encodeUintValue$2(t,0,e.value)}function encodeUintValue$2(t,e,r){if(r<uintBoundaries$2[0]){const n=Number(r);t.push([e|n])}else if(r<uintBoundaries$2[1]){const n=Number(r);t.push([e|24,n])}else if(r<uintBoundaries$2[2]){const n=Number(r);t.push([e|25,n>>>8,n&255])}else if(r<uintBoundaries$2[3]){const n=Number(r);t.push([e|26,n>>>24&255,n>>>16&255,n>>>8&255,n&255])}else{const n=BigInt(r);if(n<uintBoundaries$2[4]){const o=[e|27,0,0,0,0,0,0,0];let a=Number(n&BigInt(4294967295)),c=Number(n>>BigInt(32)&BigInt(4294967295));o[8]=a&255,a=a>>8,o[7]=a&255,a=a>>8,o[6]=a&255,a=a>>8,o[5]=a&255,o[4]=c&255,c=c>>8,o[3]=c&255,c=c>>8,o[2]=c&255,c=c>>8,o[1]=c&255,t.push(o)}else throw new Error(`${decodeErrPrefix$2} encountered BigInt larger than allowable range`)}}encodeUint$2.encodedSize=function t(e){return encodeUintValue$2.encodedSize(e.value)},encodeUintValue$2.encodedSize=function t(e){return e<uintBoundaries$2[0]?1:e<uintBoundaries$2[1]?2:e<uintBoundaries$2[2]?3:e<uintBoundaries$2[3]?5:9},encodeUint$2.compareTokens=function t(e,r){return e.value<r.value?-1:e.value>r.value?1:0};function decodeNegint8$2(t,e,r,n){return new Token$2(Type$2.negint,-1-readUint8$2(t,e+1,n),2)}function decodeNegint16$2(t,e,r,n){return new Token$2(Type$2.negint,-1-readUint16$2(t,e+1,n),3)}function decodeNegint32$2(t,e,r,n){return new Token$2(Type$2.negint,-1-readUint32$2(t,e+1,n),5)}const neg1b$2=BigInt(-1),pos1b$2=BigInt(1);function decodeNegint64$2(t,e,r,n){const o=readUint64$2(t,e+1,n);if(typeof o!="bigint"){const a=-1-o;if(a>=Number.MIN_SAFE_INTEGER)return new Token$2(Type$2.negint,a,9)}if(n.allowBigInt!==!0)throw new Error(`${decodeErrPrefix$2} integers outside of the safe integer range are not supported`);return new Token$2(Type$2.negint,neg1b$2-BigInt(o),9)}function encodeNegint$2(t,e){const r=e.value,n=typeof r=="bigint"?r*neg1b$2-pos1b$2:r*-1-1;encodeUintValue$2(t,e.type.majorEncoded,n)}encodeNegint$2.encodedSize=function t(e){const r=e.value,n=typeof r=="bigint"?r*neg1b$2-pos1b$2:r*-1-1;return n<uintBoundaries$2[0]?1:n<uintBoundaries$2[1]?2:n<uintBoundaries$2[2]?3:n<uintBoundaries$2[3]?5:9},encodeNegint$2.compareTokens=function t(e,r){return e.value<r.value?1:e.value>r.value?-1:0};function toToken$b(t,e,r,n){assertEnoughData$2(t,e,r+n);const o=slice$2(t,e+r,e+r+n);return new Token$2(Type$2.bytes,o,r+n)}function decodeBytesCompact$2(t,e,r,n){return toToken$b(t,e,1,r)}function decodeBytes8$2(t,e,r,n){return toToken$b(t,e,2,readUint8$2(t,e+1,n))}function decodeBytes16$2(t,e,r,n){return toToken$b(t,e,3,readUint16$2(t,e+1,n))}function decodeBytes32$2(t,e,r,n){return toToken$b(t,e,5,readUint32$2(t,e+1,n))}function decodeBytes64$2(t,e,r,n){const o=readUint64$2(t,e+1,n);if(typeof o=="bigint")throw new Error(`${decodeErrPrefix$2} 64-bit integer bytes lengths not supported`);return toToken$b(t,e,9,o)}function tokenBytes$2(t){return t.encodedBytes===void 0&&(t.encodedBytes=t.type===Type$2.string?fromString$p(t.value):t.value),t.encodedBytes}function encodeBytes$2(t,e){const r=tokenBytes$2(e);encodeUintValue$2(t,e.type.majorEncoded,r.length),t.push(r)}encodeBytes$2.encodedSize=function t(e){const r=tokenBytes$2(e);return encodeUintValue$2.encodedSize(r.length)+r.length},encodeBytes$2.compareTokens=function t(e,r){return compareBytes$2(tokenBytes$2(e),tokenBytes$2(r))};function compareBytes$2(t,e){return t.length<e.length?-1:t.length>e.length?1:compare$3(t,e)}function toToken$a(t,e,r,n,o){const a=r+n;assertEnoughData$2(t,e,a);const c=new Token$2(Type$2.string,toString$v(t,e+r,e+a),a);return o.retainStringBytes===!0&&(c.byteValue=slice$2(t,e+r,e+a)),c}function decodeStringCompact$2(t,e,r,n){return toToken$a(t,e,1,r,n)}function decodeString8$2(t,e,r,n){return toToken$a(t,e,2,readUint8$2(t,e+1,n),n)}function decodeString16$2(t,e,r,n){return toToken$a(t,e,3,readUint16$2(t,e+1,n),n)}function decodeString32$2(t,e,r,n){return toToken$a(t,e,5,readUint32$2(t,e+1,n),n)}function decodeString64$2(t,e,r,n){const o=readUint64$2(t,e+1,n);if(typeof o=="bigint")throw new Error(`${decodeErrPrefix$2} 64-bit integer string lengths not supported`);return toToken$a(t,e,9,o,n)}const encodeString$2=encodeBytes$2;function toToken$9(t,e,r,n){return new Token$2(Type$2.array,n,r)}function decodeArrayCompact$2(t,e,r,n){return toToken$9(t,e,1,r)}function decodeArray8$2(t,e,r,n){return toToken$9(t,e,2,readUint8$2(t,e+1,n))}function decodeArray16$2(t,e,r,n){return toToken$9(t,e,3,readUint16$2(t,e+1,n))}function decodeArray32$2(t,e,r,n){return toToken$9(t,e,5,readUint32$2(t,e+1,n))}function decodeArray64$2(t,e,r,n){const o=readUint64$2(t,e+1,n);if(typeof o=="bigint")throw new Error(`${decodeErrPrefix$2} 64-bit integer array lengths not supported`);return toToken$9(t,e,9,o)}function decodeArrayIndefinite$2(t,e,r,n){if(n.allowIndefinite===!1)throw new Error(`${decodeErrPrefix$2} indefinite length items not allowed`);return toToken$9(t,e,1,1/0)}function encodeArray$2(t,e){encodeUintValue$2(t,Type$2.array.majorEncoded,e.value)}encodeArray$2.compareTokens=encodeUint$2.compareTokens,encodeArray$2.encodedSize=function t(e){return encodeUintValue$2.encodedSize(e.value)};function toToken$8(t,e,r,n){return new Token$2(Type$2.map,n,r)}function decodeMapCompact$2(t,e,r,n){return toToken$8(t,e,1,r)}function decodeMap8$2(t,e,r,n){return toToken$8(t,e,2,readUint8$2(t,e+1,n))}function decodeMap16$2(t,e,r,n){return toToken$8(t,e,3,readUint16$2(t,e+1,n))}function decodeMap32$2(t,e,r,n){return toToken$8(t,e,5,readUint32$2(t,e+1,n))}function decodeMap64$2(t,e,r,n){const o=readUint64$2(t,e+1,n);if(typeof o=="bigint")throw new Error(`${decodeErrPrefix$2} 64-bit integer map lengths not supported`);return toToken$8(t,e,9,o)}function decodeMapIndefinite$2(t,e,r,n){if(n.allowIndefinite===!1)throw new Error(`${decodeErrPrefix$2} indefinite length items not allowed`);return toToken$8(t,e,1,1/0)}function encodeMap$2(t,e){encodeUintValue$2(t,Type$2.map.majorEncoded,e.value)}encodeMap$2.compareTokens=encodeUint$2.compareTokens,encodeMap$2.encodedSize=function t(e){return encodeUintValue$2.encodedSize(e.value)};function decodeTagCompact$2(t,e,r,n){return new Token$2(Type$2.tag,r,1)}function decodeTag8$2(t,e,r,n){return new Token$2(Type$2.tag,readUint8$2(t,e+1,n),2)}function decodeTag16$2(t,e,r,n){return new Token$2(Type$2.tag,readUint16$2(t,e+1,n),3)}function decodeTag32$2(t,e,r,n){return new Token$2(Type$2.tag,readUint32$2(t,e+1,n),5)}function decodeTag64$2(t,e,r,n){return new Token$2(Type$2.tag,readUint64$2(t,e+1,n),9)}function encodeTag$2(t,e){encodeUintValue$2(t,Type$2.tag.majorEncoded,e.value)}encodeTag$2.compareTokens=encodeUint$2.compareTokens,encodeTag$2.encodedSize=function t(e){return encodeUintValue$2.encodedSize(e.value)};const MINOR_FALSE$2=20,MINOR_TRUE$2=21,MINOR_NULL$2=22,MINOR_UNDEFINED$2=23;function decodeUndefined$2(t,e,r,n){if(n.allowUndefined===!1)throw new Error(`${decodeErrPrefix$2} undefined values are not supported`);return n.coerceUndefinedToNull===!0?new Token$2(Type$2.null,null,1):new Token$2(Type$2.undefined,void 0,1)}function decodeBreak$2(t,e,r,n){if(n.allowIndefinite===!1)throw new Error(`${decodeErrPrefix$2} indefinite length items not allowed`);return new Token$2(Type$2.break,void 0,1)}function createToken$2(t,e,r){if(r){if(r.allowNaN===!1&&Number.isNaN(t))throw new Error(`${decodeErrPrefix$2} NaN values are not supported`);if(r.allowInfinity===!1&&(t===1/0||t===-1/0))throw new Error(`${decodeErrPrefix$2} Infinity values are not supported`)}return new Token$2(Type$2.float,t,e)}function decodeFloat16$2(t,e,r,n){return createToken$2(readFloat16$2(t,e+1),3,n)}function decodeFloat32$2(t,e,r,n){return createToken$2(readFloat32$2(t,e+1),5,n)}function decodeFloat64$2(t,e,r,n){return createToken$2(readFloat64$2(t,e+1),9,n)}function encodeFloat$2(t,e,r){const n=e.value;if(n===!1)t.push([Type$2.float.majorEncoded|MINOR_FALSE$2]);else if(n===!0)t.push([Type$2.float.majorEncoded|MINOR_TRUE$2]);else if(n===null)t.push([Type$2.float.majorEncoded|MINOR_NULL$2]);else if(n===void 0)t.push([Type$2.float.majorEncoded|MINOR_UNDEFINED$2]);else{let o,a=!1;(!r||r.float64!==!0)&&(encodeFloat16$2(n),o=readFloat16$2(ui8a$2,1),n===o||Number.isNaN(n)?(ui8a$2[0]=249,t.push(ui8a$2.slice(0,3)),a=!0):(encodeFloat32$2(n),o=readFloat32$2(ui8a$2,1),n===o&&(ui8a$2[0]=250,t.push(ui8a$2.slice(0,5)),a=!0))),a||(encodeFloat64$2(n),o=readFloat64$2(ui8a$2,1),ui8a$2[0]=251,t.push(ui8a$2.slice(0,9)))}}encodeFloat$2.encodedSize=function t(e,r){const n=e.value;if(n===!1||n===!0||n===null||n===void 0)return 1;if(!r||r.float64!==!0){encodeFloat16$2(n);let o=readFloat16$2(ui8a$2,1);if(n===o||Number.isNaN(n))return 3;if(encodeFloat32$2(n),o=readFloat32$2(ui8a$2,1),n===o)return 5}return 9};const buffer$2=new ArrayBuffer(9),dataView$2=new DataView(buffer$2,1),ui8a$2=new Uint8Array(buffer$2,0);function encodeFloat16$2(t){if(t===1/0)dataView$2.setUint16(0,31744,!1);else if(t===-1/0)dataView$2.setUint16(0,64512,!1);else if(Number.isNaN(t))dataView$2.setUint16(0,32256,!1);else{dataView$2.setFloat32(0,t);const e=dataView$2.getUint32(0),r=(e&2139095040)>>23,n=e&8388607;if(r===255)dataView$2.setUint16(0,31744,!1);else if(r===0)dataView$2.setUint16(0,(t&2147483648)>>16|n>>13,!1);else{const o=r-127;o<-24?dataView$2.setUint16(0,0):o<-14?dataView$2.setUint16(0,(e&2147483648)>>16|1<<24+o,!1):dataView$2.setUint16(0,(e&2147483648)>>16|o+15<<10|n>>13,!1)}}}function readFloat16$2(t,e){if(t.length-e<2)throw new Error(`${decodeErrPrefix$2} not enough data for float16`);const r=(t[e]<<8)+t[e+1];if(r===31744)return 1/0;if(r===64512)return-1/0;if(r===32256)return NaN;const n=r>>10&31,o=r&1023;let a;return n===0?a=o*2**-24:n!==31?a=(o+1024)*2**(n-25):a=o===0?1/0:NaN,r&32768?-a:a}function encodeFloat32$2(t){dataView$2.setFloat32(0,t,!1)}function readFloat32$2(t,e){if(t.length-e<4)throw new Error(`${decodeErrPrefix$2} not enough data for float32`);const r=(t.byteOffset||0)+e;return new DataView(t.buffer,r,4).getFloat32(0,!1)}function encodeFloat64$2(t){dataView$2.setFloat64(0,t,!1)}function readFloat64$2(t,e){if(t.length-e<8)throw new Error(`${decodeErrPrefix$2} not enough data for float64`);const r=(t.byteOffset||0)+e;return new DataView(t.buffer,r,8).getFloat64(0,!1)}encodeFloat$2.compareTokens=encodeUint$2.compareTokens;function invalidMinor$2(t,e,r){throw new Error(`${decodeErrPrefix$2} encountered invalid minor (${r}) for major ${t[e]>>>5}`)}function errorer$2(t){return()=>{throw new Error(`${decodeErrPrefix$2} ${t}`)}}const jump$2=[];for(let t=0;t<=23;t++)jump$2[t]=invalidMinor$2;jump$2[24]=decodeUint8$2,jump$2[25]=decodeUint16$2,jump$2[26]=decodeUint32$2,jump$2[27]=decodeUint64$2,jump$2[28]=invalidMinor$2,jump$2[29]=invalidMinor$2,jump$2[30]=invalidMinor$2,jump$2[31]=invalidMinor$2;for(let t=32;t<=55;t++)jump$2[t]=invalidMinor$2;jump$2[56]=decodeNegint8$2,jump$2[57]=decodeNegint16$2,jump$2[58]=decodeNegint32$2,jump$2[59]=decodeNegint64$2,jump$2[60]=invalidMinor$2,jump$2[61]=invalidMinor$2,jump$2[62]=invalidMinor$2,jump$2[63]=invalidMinor$2;for(let t=64;t<=87;t++)jump$2[t]=decodeBytesCompact$2;jump$2[88]=decodeBytes8$2,jump$2[89]=decodeBytes16$2,jump$2[90]=decodeBytes32$2,jump$2[91]=decodeBytes64$2,jump$2[92]=invalidMinor$2,jump$2[93]=invalidMinor$2,jump$2[94]=invalidMinor$2,jump$2[95]=errorer$2("indefinite length bytes/strings are not supported");for(let t=96;t<=119;t++)jump$2[t]=decodeStringCompact$2;jump$2[120]=decodeString8$2,jump$2[121]=decodeString16$2,jump$2[122]=decodeString32$2,jump$2[123]=decodeString64$2,jump$2[124]=invalidMinor$2,jump$2[125]=invalidMinor$2,jump$2[126]=invalidMinor$2,jump$2[127]=errorer$2("indefinite length bytes/strings are not supported");for(let t=128;t<=151;t++)jump$2[t]=decodeArrayCompact$2;jump$2[152]=decodeArray8$2,jump$2[153]=decodeArray16$2,jump$2[154]=decodeArray32$2,jump$2[155]=decodeArray64$2,jump$2[156]=invalidMinor$2,jump$2[157]=invalidMinor$2,jump$2[158]=invalidMinor$2,jump$2[159]=decodeArrayIndefinite$2;for(let t=160;t<=183;t++)jump$2[t]=decodeMapCompact$2;jump$2[184]=decodeMap8$2,jump$2[185]=decodeMap16$2,jump$2[186]=decodeMap32$2,jump$2[187]=decodeMap64$2,jump$2[188]=invalidMinor$2,jump$2[189]=invalidMinor$2,jump$2[190]=invalidMinor$2,jump$2[191]=decodeMapIndefinite$2;for(let t=192;t<=215;t++)jump$2[t]=decodeTagCompact$2;jump$2[216]=decodeTag8$2,jump$2[217]=decodeTag16$2,jump$2[218]=decodeTag32$2,jump$2[219]=decodeTag64$2,jump$2[220]=invalidMinor$2,jump$2[221]=invalidMinor$2,jump$2[222]=invalidMinor$2,jump$2[223]=invalidMinor$2;for(let t=224;t<=243;t++)jump$2[t]=errorer$2("simple values are not supported");jump$2[244]=invalidMinor$2,jump$2[245]=invalidMinor$2,jump$2[246]=invalidMinor$2,jump$2[247]=decodeUndefined$2,jump$2[248]=errorer$2("simple values are not supported"),jump$2[249]=decodeFloat16$2,jump$2[250]=decodeFloat32$2,jump$2[251]=decodeFloat64$2,jump$2[252]=invalidMinor$2,jump$2[253]=invalidMinor$2,jump$2[254]=invalidMinor$2,jump$2[255]=decodeBreak$2;const quick$2=[];for(let t=0;t<24;t++)quick$2[t]=new Token$2(Type$2.uint,t,1);for(let t=-1;t>=-24;t--)quick$2[31-t]=new Token$2(Type$2.negint,t,1);quick$2[64]=new Token$2(Type$2.bytes,new Uint8Array(0),1),quick$2[96]=new Token$2(Type$2.string,"",1),quick$2[128]=new Token$2(Type$2.array,0,1),quick$2[160]=new Token$2(Type$2.map,0,1),quick$2[244]=new Token$2(Type$2.false,!1,1),quick$2[245]=new Token$2(Type$2.true,!0,1),quick$2[246]=new Token$2(Type$2.null,null,1);function quickEncodeToken$2(t){switch(t.type){case Type$2.false:return fromArray$2([244]);case Type$2.true:return fromArray$2([245]);case Type$2.null:return fromArray$2([246]);case Type$2.bytes:return t.value.length?void 0:fromArray$2([64]);case Type$2.string:return t.value===""?fromArray$2([96]):void 0;case Type$2.array:return t.value===0?fromArray$2([128]):void 0;case Type$2.map:return t.value===0?fromArray$2([160]):void 0;case Type$2.uint:return t.value<24?fromArray$2([Number(t.value)]):void 0;case Type$2.negint:if(t.value>=-24)return fromArray$2([31-Number(t.value)])}}const defaultEncodeOptions$2={float64:!1,mapSorter:mapSorter$2,quickEncodeToken:quickEncodeToken$2};function makeCborEncoders$2(){const t=[];return t[Type$2.uint.major]=encodeUint$2,t[Type$2.negint.major]=encodeNegint$2,t[Type$2.bytes.major]=encodeBytes$2,t[Type$2.string.major]=encodeString$2,t[Type$2.array.major]=encodeArray$2,t[Type$2.map.major]=encodeMap$2,t[Type$2.tag.major]=encodeTag$2,t[Type$2.float.major]=encodeFloat$2,t}const cborEncoders$2=makeCborEncoders$2(),buf$2=new Bl$2;let Ref$2=class Cr{constructor(e,r){this.obj=e,this.parent=r}includes(e){let r=this;do if(r.obj===e)return!0;while(r=r.parent);return!1}static createCheck(e,r){if(e&&e.includes(r))throw new Error(`${encodeErrPrefix$2} object contains circular references`);return new Cr(r,e)}};const simpleTokens$2={null:new Token$2(Type$2.null,null),undefined:new Token$2(Type$2.undefined,void 0),true:new Token$2(Type$2.true,!0),false:new Token$2(Type$2.false,!1),emptyArray:new Token$2(Type$2.array,0),emptyMap:new Token$2(Type$2.map,0)},typeEncoders$2={number(t,e,r,n){return!Number.isInteger(t)||!Number.isSafeInteger(t)?new Token$2(Type$2.float,t):t>=0?new Token$2(Type$2.uint,t):new Token$2(Type$2.negint,t)},bigint(t,e,r,n){return t>=BigInt(0)?new Token$2(Type$2.uint,t):new Token$2(Type$2.negint,t)},Uint8Array(t,e,r,n){return new Token$2(Type$2.bytes,t)},string(t,e,r,n){return new Token$2(Type$2.string,t)},boolean(t,e,r,n){return t?simpleTokens$2.true:simpleTokens$2.false},null(t,e,r,n){return simpleTokens$2.null},undefined(t,e,r,n){return simpleTokens$2.undefined},ArrayBuffer(t,e,r,n){return new Token$2(Type$2.bytes,new Uint8Array(t))},DataView(t,e,r,n){return new Token$2(Type$2.bytes,new Uint8Array(t.buffer,t.byteOffset,t.byteLength))},Array(t,e,r,n){if(!t.length)return r.addBreakTokens===!0?[simpleTokens$2.emptyArray,new Token$2(Type$2.break)]:simpleTokens$2.emptyArray;n=Ref$2.createCheck(n,t);const o=[];let a=0;for(const c of t)o[a++]=objectToTokens$2(c,r,n);return r.addBreakTokens?[new Token$2(Type$2.array,t.length),o,new Token$2(Type$2.break)]:[new Token$2(Type$2.array,t.length),o]},Object(t,e,r,n){const o=e!=="Object",a=o?t.keys():Object.keys(t),c=o?t.size:a.length;if(!c)return r.addBreakTokens===!0?[simpleTokens$2.emptyMap,new Token$2(Type$2.break)]:simpleTokens$2.emptyMap;n=Ref$2.createCheck(n,t);const u=[];let l=0;for(const f of a)u[l++]=[objectToTokens$2(f,r,n),objectToTokens$2(o?t.get(f):t[f],r,n)];return sortMapEntries$2(u,r),r.addBreakTokens?[new Token$2(Type$2.map,c),u,new Token$2(Type$2.break)]:[new Token$2(Type$2.map,c),u]}};typeEncoders$2.Map=typeEncoders$2.Object,typeEncoders$2.Buffer=typeEncoders$2.Uint8Array;for(const t of"Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64".split(" "))typeEncoders$2[`${t}Array`]=typeEncoders$2.DataView;function objectToTokens$2(t,e={},r){const n=is$2(t),o=e&&e.typeEncoders&&e.typeEncoders[n]||typeEncoders$2[n];if(typeof o=="function"){const c=o(t,n,e,r);if(c!=null)return c}const a=typeEncoders$2[n];if(!a)throw new Error(`${encodeErrPrefix$2} unsupported type: ${n}`);return a(t,n,e,r)}function sortMapEntries$2(t,e){e.mapSorter&&t.sort(e.mapSorter)}function mapSorter$2(t,e){const r=Array.isArray(t[0])?t[0][0]:t[0],n=Array.isArray(e[0])?e[0][0]:e[0];if(r.type!==n.type)return r.type.compare(n.type);const o=r.type.major,a=cborEncoders$2[o].compareTokens(r,n);return a===0&&console.warn("WARNING: complex key types used, CBOR key sorting guarantees are gone"),a}function tokensToEncoded$2(t,e,r,n){if(Array.isArray(e))for(const o of e)tokensToEncoded$2(t,o,r,n);else r[e.type.major](t,e,n)}function encodeCustom$2(t,e,r){const n=objectToTokens$2(t,r);if(!Array.isArray(n)&&r.quickEncodeToken){const o=r.quickEncodeToken(n);if(o)return o;const a=e[n.type.major];if(a.encodedSize){const c=a.encodedSize(n,r),u=new Bl$2(c);if(a(u,n,r),u.chunks.length!==1)throw new Error(`Unexpected error: pre-calculated length for ${n} was wrong`);return asU8A$2(u.chunks[0])}}return buf$2.reset(),tokensToEncoded$2(buf$2,n,e,r),buf$2.toBytes(!0)}function encode$1g(t,e){return e=Object.assign({},defaultEncodeOptions$2,e),encodeCustom$2(t,cborEncoders$2,e)}const defaultDecodeOptions$2={strict:!1,allowIndefinite:!0,allowUndefined:!0,allowBigInt:!0};let Tokeniser$2=class{constructor(t,e={}){this.pos=0,this.data=t,this.options=e}done(){return this.pos>=this.data.length}next(){const t=this.data[this.pos];let e=quick$2[t];if(e===void 0){const r=jump$2[t];if(!r)throw new Error(`${decodeErrPrefix$2} no decoder for major type ${t>>>5} (byte 0x${t.toString(16).padStart(2,"0")})`);const n=t&31;e=r(this.data,this.pos,n,this.options)}return this.pos+=e.encodedLength,e}};const DONE$3=Symbol.for("DONE"),BREAK$2=Symbol.for("BREAK");function tokenToArray$2(t,e,r){const n=[];for(let o=0;o<t.value;o++){const a=tokensToObject$2(e,r);if(a===BREAK$2){if(t.value===1/0)break;throw new Error(`${decodeErrPrefix$2} got unexpected break to lengthed array`)}if(a===DONE$3)throw new Error(`${decodeErrPrefix$2} found array but not enough entries (got ${o}, expected ${t.value})`);n[o]=a}return n}function tokenToMap$2(t,e,r){const n=r.useMaps===!0,o=n?void 0:{},a=n?new Map:void 0;for(let c=0;c<t.value;c++){const u=tokensToObject$2(e,r);if(u===BREAK$2){if(t.value===1/0)break;throw new Error(`${decodeErrPrefix$2} got unexpected break to lengthed map`)}if(u===DONE$3)throw new Error(`${decodeErrPrefix$2} found map but not enough entries (got ${c} [no key], expected ${t.value})`);if(n!==!0&&typeof u!="string")throw new Error(`${decodeErrPrefix$2} non-string keys not supported (got ${typeof u})`);if(r.rejectDuplicateMapKeys===!0&&(n&&a.has(u)||!n&&u in o))throw new Error(`${decodeErrPrefix$2} found repeat map key "${u}"`);const l=tokensToObject$2(e,r);if(l===DONE$3)throw new Error(`${decodeErrPrefix$2} found map but not enough entries (got ${c} [no value], expected ${t.value})`);n?a.set(u,l):o[u]=l}return n?a:o}function tokensToObject$2(t,e){if(t.done())return DONE$3;const r=t.next();if(r.type===Type$2.break)return BREAK$2;if(r.type.terminal)return r.value;if(r.type===Type$2.array)return tokenToArray$2(r,t,e);if(r.type===Type$2.map)return tokenToMap$2(r,t,e);if(r.type===Type$2.tag){if(e.tags&&typeof e.tags[r.value]=="function"){const n=tokensToObject$2(t,e);return e.tags[r.value](n)}throw new Error(`${decodeErrPrefix$2} tag not supported (${r.value})`)}throw new Error("unsupported")}function decode$1I(t,e){if(!(t instanceof Uint8Array))throw new Error(`${decodeErrPrefix$2} data to decode must be a Uint8Array`);e=Object.assign({},defaultDecodeOptions$2,e);const r=e.tokenizer||new Tokeniser$2(t,e),n=tokensToObject$2(r,e);if(n===DONE$3)throw new Error(`${decodeErrPrefix$2} did not find any content to decode`);if(n===BREAK$2)throw new Error(`${decodeErrPrefix$2} got unexpected break`);if(!r.done())throw new Error(`${decodeErrPrefix$2} too many terminals, data makes no sense`);return n}const log$1F=logger$3("ipns:utils"),IPNS_PREFIX$1=fromString$y("/ipns/");function parseRFC3339$1(t){const e=new RegExp("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})\\.(\\d+)Z"),r=String(t).trim().match(e);if(r==null)throw new Error("Invalid format");const n=parseInt(r[1],10),o=parseInt(r[2],10)-1,a=parseInt(r[3],10),c=parseInt(r[4],10),u=parseInt(r[5],10),l=parseInt(r[6],10),f=parseInt(r[7].slice(0,-6),10);return new Date(Date.UTC(n,o,a,c,u,l,f))}const extractPublicKey=async(t,e)=>{if(e==null||t==null){const n=new Error("one or more of the provided parameters are not defined");throw log$1F.error(n),errcode(n,ERR_UNDEFINED_PARAMETER)}let r;if(e.pubKey!=null){try{r=unmarshalPublicKey(e.pubKey)}catch(n){throw log$1F.error(n),n}if(!(await peerIdFromKeys(e.pubKey)).equals(t))throw errcode(new Error("Embedded public key did not match PeerID"),ERR_INVALID_EMBEDDED_KEY)}else t.publicKey!=null&&(r=unmarshalPublicKey(t.publicKey));if(r!=null)return r;throw errcode(new Error("no public key is available"),ERR_UNDEFINED_PARAMETER)},ipnsEntryDataForV1Sig=(t,e,r)=>{const n=fromString$y(e);return concat$8([t,r,n])},ipnsEntryDataForV2Sig=t=>{const e=fromString$y("ipns-signature:");return concat$8([e,t])},marshal=t=>IpnsEntry.encode(t),unmarshal=t=>{const e=IpnsEntry.decode(t);return e.sequence!=null&&(e.sequence=BigInt(e.sequence)),e.ttl!=null&&(e.ttl=BigInt(e.ttl)),{value:e.value??new Uint8Array(0),signature:e.signature??new Uint8Array(0),validityType:e.validityType??IpnsEntry.ValidityType.EOL,validity:e.validity??new Uint8Array(0),sequence:e.sequence??0n,pubKey:e.pubKey,ttl:e.ttl??void 0,signatureV2:e.signatureV2,data:e.data}},peerIdToRoutingKey=t=>concat$8([IPNS_PREFIX$1,t.toBytes()]),peerIdFromRoutingKey=t=>peerIdFromBytes$1(t.slice(IPNS_PREFIX$1.length)),createCborData=(t,e,r,n,o)=>{let a;if(r===IpnsEntry.ValidityType.EOL)a=0;else throw errcode(new Error("Unknown validity type"),ERR_UNRECOGNIZED_VALIDITY);return encode$1g({Value:t,Validity:e,ValidityType:a,Sequence:n,TTL:o})},parseCborData=t=>{const e=decode$1I(t);if(e.ValidityType===0)e.ValidityType=IpnsEntry.ValidityType.EOL;else throw errcode(new Error("Unknown validity type"),ERR_UNRECOGNIZED_VALIDITY);return Number.isInteger(e.Sequence)&&(e.Sequence=BigInt(e.Sequence)),Number.isInteger(e.TTL)&&(e.TTL=BigInt(e.TTL)),e};var encode_1$l=encode$1f,MSB$s=128,REST$s=127,MSBALL$l=~REST$s,INT$l=Math.pow(2,31);function encode$1f(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$l;)e[r++]=t&255|MSB$s,t/=128;for(;t&MSBALL$l;)e[r++]=t&255|MSB$s,t>>>=7;return e[r]=t|0,encode$1f.bytes=r-n+1,e}var decode$1H=read$m,MSB$1$l=128,REST$1$l=127;function read$m(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$m.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$l)<<o:(c&REST$1$l)*Math.pow(2,o),o+=7}while(c>=MSB$1$l);return read$m.bytes=a-n,r}var N1$r=Math.pow(2,7),N2$r=Math.pow(2,14),N3$r=Math.pow(2,21),N4$r=Math.pow(2,28),N5$r=Math.pow(2,35),N6$r=Math.pow(2,42),N7$r=Math.pow(2,49),N8$m=Math.pow(2,56),N9$m=Math.pow(2,63),length$n=function(t){return t<N1$r?1:t<N2$r?2:t<N3$r?3:t<N4$r?4:t<N5$r?5:t<N6$r?6:t<N7$r?7:t<N8$m?8:t<N9$m?9:10},varint$m={encode:encode_1$l,decode:decode$1H,encodingLength:length$n},_brrp_varint$k=varint$m;const decode$1G=(t,e=0)=>[_brrp_varint$k.decode(t,e),_brrp_varint$k.decode.bytes],encodeTo$k=(t,e,r=0)=>(_brrp_varint$k.encode(t,e,r),e),encodingLength$p=t=>_brrp_varint$k.encodingLength(t),create$q=(t,e)=>{const r=e.byteLength,n=encodingLength$p(t),o=n+encodingLength$p(r),a=new Uint8Array(o+r);return encodeTo$k(t,a,0),encodeTo$k(r,a,n),a.set(e,o),new Digest$k(t,r,e,a)},decode$1F=t=>{const e=coerce$k(t),[r,n]=decode$1G(e),[o,a]=decode$1G(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$k(r,o,c,e)};let Digest$k=class{constructor(t,e,r,n){this.code=t,this.size=e,this.digest=r,this.bytes=n}};const code$a=0,name$8="identity",encode$1e=coerce$k,digest$4=t=>create$q(code$a,encode$1e(t)),identity$h={code:code$a,name:name$8,encode:encode$1e,digest:digest$4},log$1E=logger$3("ipns"),ID_MULTIHASH_CODE=identity$h.code,namespace$1="/ipns/",namespaceLength=namespace$1.length,create$p=async(t,e,r,n)=>{const o=new NanoDate(Date.now()+Number(n)),a=IpnsEntry.ValidityType.EOL,[c,u]=n.toString().split("."),l=BigInt(c)*BigInt(1e5)+BigInt(u??"0");return await _create(t,e,r,a,o,l)},_create=async(t,e,r,n,o,a)=>{r=BigInt(r);const c=fromString$y(o.toString());if(t.privateKey==null)throw errcode(new Error("Missing private key"),ERR_MISSING_PRIVATE_KEY);const u=await unmarshalPrivateKey(t.privateKey),l=await signLegacyV1(u,e,n,c),f=createCborData(e,c,n,r,a),p=ipnsEntryDataForV2Sig(f),g=await u.sign(p),$={value:e,signature:l,validityType:n,validity:c,sequence:r,ttl:a,signatureV2:g,data:f};if(t.publicKey!=null){const _=decode$1F(t.toBytes());(_.code!==ID_MULTIHASH_CODE||!equals$R(t.publicKey,_.digest))&&($.pubKey=t.publicKey)}return log$1E("ipns entry for %b created",e),$},rawStdEncoding=t=>base32upper$b.encode(t).slice(1),getLocalKey=t=>new Key(`/ipns/${rawStdEncoding(t)}`),signLegacyV1=async(t,e,r,n)=>{try{const o=ipnsEntryDataForV1Sig(e,r,n);return await t.sign(o)}catch(o){throw log$1E.error("record signature creation failed",o),errcode(new Error("record signature creation failed"),ERR_SIGNATURE_CREATION)}},log$1D=logger$3("ipfs:ipns:publisher"),ERR_NOT_FOUND$3=notFoundError().code,defaultRecordLifetime$1=60*60*1e3;class IpnsPublisher{constructor(e,r){this._routing=e,this._datastore=r}async publishWithEOL(e,r,n,o){const a=await this._updateOrCreateRecord(e,r,n,o);return this._putRecordToRouting(a,e,o)}publish(e,r,n){return this.publishWithEOL(e,r,defaultRecordLifetime$1,n)}async _putRecordToRouting(e,r,n){if(!isPeerId(r)){const a="peerId received is not valid";throw log$1D.error(a),errcode(new Error(a),"ERR_INVALID_PEER_ID")}if(r.publicKey==null)throw errcode(new Error("Public key was missing"),"ERR_MISSING_PUBLIC_KEY");const o=peerIdToRoutingKey(r);return await this._publishEntry(o,e,n),e}async _publishEntry(e,r,n){try{const o=await this._routing.put(e,r,n);return log$1D(`ipns record for ${toString$D(e,"base32")} was stored in the routing`),o}catch(o){const a=`ipns record for ${toString$D(e,"base32")} could not be stored in the routing - ${o.stack}`;throw log$1D.error(a),log$1D.error(o),errcode(new Error(a),"ERR_PUTTING_TO_ROUTING")}}async _getPublished(e,r={}){if(!isPeerId(e)){const o="peerId received is not valid";throw log$1D.error(o),errcode(new Error(o),"ERR_INVALID_PEER_ID")}const n=r.checkRouting!==!1;try{const o=await this._datastore.get(getLocalKey(e.toBytes()));return this._unmarshalData(o)}catch(o){if(o.code!==ERR_NOT_FOUND$3){const a=`unexpected error getting the ipns record ${e.toString()} from datastore`;throw log$1D.error(a),errcode(new Error(a),"ERR_UNEXPECTED_DATASTORE_RESPONSE")}if(!n)throw errcode(o,"ERR_NOT_FOUND_AND_CHECK_ROUTING_NOT_ENABLED");try{const a=peerIdToRoutingKey(e),c=await this._routing.get(a);return this._unmarshalData(c)}catch(a){throw log$1D.error(a),a}}}_unmarshalData(e){try{return unmarshal(e)}catch(r){throw errcode(r,"ERR_INVALID_RECORD_DATA")}}async _updateOrCreateRecord(e,r,n,o){if(!isPeerId(e)){const f="peerId received is not valid";throw log$1D.error(f),errcode(new Error(f),"ERR_INVALID_PEER_ID")}const a={checkRouting:!0};let c;try{c=await this._getPublished(e,a)}catch(f){if(f.code!==ERR_NOT_FOUND$3){const p=`unexpected error when determining the last published IPNS record for ${e.toString()} ${f.stack}`;throw log$1D.error(p),errcode(new Error(p),"ERR_DETERMINING_PUBLISHED_RECORD")}}let u=0n;c&&c.sequence!==void 0&&(u=equals$R(c.value,r)?c.sequence:c.sequence+BigInt(1));let l;try{l=await create$p(e,r,u,n)}catch(f){const p=`ipns record for ${r} could not be created`;throw log$1D.error(f),errcode(new Error(p),"ERR_CREATING_IPNS_RECORD")}try{const f=marshal(l);return await this._datastore.put(getLocalKey(e.toBytes()),f,o),log$1D(`ipns record for ${toString$D(r,"base32")} was stored in the datastore`),f}catch{const f=`ipns record for ${r} could not be stored in the datastore`;throw log$1D.error(f),errcode(new Error(f),"ERR_STORING_IN_DATASTORE")}}}IpnsPublisher.defaultRecordLifetime=defaultRecordLifetime$1;const log$1C=logger$3("ipfs:ipns:republisher"),minute$3=60*1e3,hour$1=60*minute$3,defaultBroadcastInterval=4*hour$1,defaultRecordLifetime=24*hour$1;class IpnsRepublisher{constructor(e,r,n,o,a={pass:""}){this._publisher=e,this._datastore=r,this._peerId=n,this._keychain=o,this._options=a,this._republishHandle=null}async start(){if(this._republishHandle)throw errcode(new Error("republisher is already running"),"ERR_REPUBLISH_ALREADY_RUNNING");const e={_task:null,_inflightTask:null,_timeoutId:null,runPeriodically:o=>{e._timeoutId=setTimeout(async()=>{e._timeoutId=null;try{e._inflightTask=e._task(),await e._inflightTask,e._task&&e.runPeriodically(o)}catch(a){log$1C.error(a)}},o())},cancel:async()=>{e._timeoutId!=null&&clearTimeout(e._timeoutId),e._task=null,await e._inflightTask}},{pass:r}=this._options;let n=!0;e._task=async()=>{const o=new timeoutAbortController.TimeoutController(3e4);try{await this._republishEntries(this._peerId,r,{signal:o.signal})}finally{o.clear()}},e.runPeriodically(()=>n?(n=!1,this._options.initialBroadcastInterval||minute$3):this._options.broadcastInterval||defaultBroadcastInterval),this._republishHandle=e}async stop(){const e=this._republishHandle;if(!e)throw errcode(new Error("republisher is not running"),"ERR_REPUBLISH_NOT_RUNNING");this._republishHandle=null,await e.cancel()}async _republishEntries(e,r,n){try{await this._republishEntry(e,n)}catch{log$1C.error("cannot republish entry for the node's private key");return}if(r)try{const o=await this._keychain.listKeys();for(const a of o){if(a.name==="self")continue;const c=await this._keychain.exportKey(a.name,r),u=await importKey(c,r),l=await peerIdFromKeys(u.public.bytes,u.bytes);await this._republishEntry(l,n)}}catch(o){log$1C.error(o)}}async _republishEntry(e,r){try{const n=await this._getPreviousValue(e);await this._publisher.publishWithEOL(e,n,defaultRecordLifetime,r)}catch(n){if(n.code==="ERR_NO_ENTRY_FOUND")return;throw n}}async _getPreviousValue(e){if(!isPeerId(e))throw errcode(new Error("invalid peer ID"),"ERR_INVALID_PEER_ID");try{const r=await this._datastore.get(getLocalKey(e.toBytes()));if(!(r instanceof Uint8Array))throw errcode(new Error("found ipns record that we couldn't process"),"ERR_INVALID_IPNS_RECORD");try{return unmarshal(r).value}catch(n){throw log$1C.error(n),errcode(new Error("found ipns record that we couldn't convert to a value"),"ERR_INVALID_IPNS_RECORD")}}catch(r){throw r&&r.notFound?errcode(new Error(`no previous entry for record with id: ${e.toString()}`),"ERR_NO_ENTRY_FOUND"):r}}}const log$1B=logger$3("ipns:validator"),validate=async(t,e)=>{const{value:r,validityType:n,validity:o}=e;let a,c;if(e.signatureV2!=null&&e.data!=null)c=e.signatureV2,a=ipnsEntryDataForV2Sig(e.data),validateCborDataMatchesPbData(e);else throw errcode(new Error("missing data or signatureV2"),ERR_SIGNATURE_VERIFICATION);let u;try{u=await t.verify(a,c)}catch{u=!1}if(!u)throw log$1B.error("record signature verification failed"),errcode(new Error("record signature verification failed"),ERR_SIGNATURE_VERIFICATION);if(o!=null&&n===IpnsEntry.ValidityType.EOL){let l;try{l=parseRFC3339$1(toString$D(o))}catch{throw log$1B.error("unrecognized validity format (not an rfc3339 format)"),errcode(new Error("unrecognized validity format (not an rfc3339 format)"),ERR_UNRECOGNIZED_FORMAT)}if(l.getTime()<Date.now())throw log$1B.error("record has expired"),errcode(new Error("record has expired"),ERR_IPNS_EXPIRED_RECORD)}else if(n!=null)throw log$1B.error("unrecognized validity type"),errcode(new Error("unrecognized validity type"),ERR_UNRECOGNIZED_VALIDITY);log$1B("ipns entry for %b is valid",r)},validateCborDataMatchesPbData=t=>{if(t.data==null)throw errcode(new Error("Record data is missing"),ERR_INVALID_RECORD_DATA);const e=parseCborData(t.data);if(!equals$R(e.Value,t.value))throw errcode(new Error('Field "value" did not match between protobuf and CBOR'),ERR_SIGNATURE_VERIFICATION);if(!equals$R(e.Validity,t.validity))throw errcode(new Error('Field "validity" did not match between protobuf and CBOR'),ERR_SIGNATURE_VERIFICATION);if(e.ValidityType!==t.validityType)throw errcode(new Error('Field "validityType" did not match between protobuf and CBOR'),ERR_SIGNATURE_VERIFICATION);if(e.Sequence!==t.sequence)throw errcode(new Error('Field "sequence" did not match between protobuf and CBOR'),ERR_SIGNATURE_VERIFICATION);if(e.TTL!==t.ttl)throw errcode(new Error('Field "ttl" did not match between protobuf and CBOR'),ERR_SIGNATURE_VERIFICATION)},ipnsValidator=async(t,e)=>{const r=peerIdFromRoutingKey(t),n=unmarshal(e),o=await extractPublicKey(r,n);await validate(o,n)},log$1A=logger$3("ipfs:ipns:resolver"),ERR_NOT_FOUND$2=notFoundError().code,defaultMaximumRecursiveDepth=32;class IpnsResolver{constructor(e){this._routing=e}async resolve(e,r={}){if(typeof e!="string")throw errcode(new Error("invalid name"),"ERR_INVALID_NAME");const n=r.recursive&&r.recursive.toString()==="true",o=e.split("/");if(o.length!==3||o[0]!=="")throw errcode(new Error("invalid name"),"ERR_INVALID_NAME");const a=o[2];let c=1/0;n&&(c=defaultMaximumRecursiveDepth);const u=await this.resolver(a,c,r);return log$1A(`${e} was locally resolved correctly`),u}async resolver(e,r,n){if(r===0){const c=`could not resolve name (recursion limit of ${defaultMaximumRecursiveDepth} exceeded)`;throw log$1A.error(c),errcode(new Error(c),"ERR_RESOLVE_RECURSION_LIMIT")}const o=await this._resolveName(e,n),a=o.split("/");return a[1]==="ipfs"||!r?o:this.resolver(a[2],r-1,n)}async _resolveName(e,r){const n=peerIdFromString$1(e),o=peerIdToRoutingKey(n);let a;try{a=await this._routing.get(o,r)}catch(c){throw log$1A.error("could not get record from routing",c),c.code===ERR_NOT_FOUND$2?errcode(new Error(`record requested for ${e} was not found in the network`),"ERR_NO_RECORD_FOUND"):errcode(new Error(`unexpected error getting the ipns record ${n.toString()}`),"ERR_UNEXPECTED_ERROR_GETTING_RECORD")}return this._validateRecord(n,a)}async _validateRecord(e,r){await ipnsValidator(concat$8([fromString$y("/ipns/"),e.toBytes()]),r);const n=unmarshal(r);return toString$D(n.value)}}class TLRU{constructor(e){this.lru=cache$l(e)}get(e){const r=this.lru.get(e);if(r){if(r.expire&&r.expire<Date.now()){this.lru.remove(e);return}return r.value}}set(e,r,n){this.lru.set(e,{value:r,expire:Date.now()+n})}has(e){return!!this.get(e)}remove(e){this.lru.remove(e)}clear(){this.lru.clear()}}const log$1z=logger$3("ipfs:ipns"),defaultRecordTtl=60*1e3;class IPNS{constructor(e,r,n,o,a){this.publisher=new IpnsPublisher(e,r),this.republisher=new IpnsRepublisher(this.publisher,r,n,o,a),this.resolver=new IpnsResolver(e),this.cache=new TLRU(1e3),this.routing=e}async publish(e,r,n=IpnsPublisher.defaultRecordLifetime,o){try{await this.publisher.publishWithEOL(e,r,n,o),log$1z(`IPNS value ${toString$D(r,"base32")} was published correctly`);const a=e.toString(),c=parseFloat(n),u=c<defaultRecordTtl?c:defaultRecordTtl;return this.cache.set(a,r,u),log$1z(`IPNS value ${toString$D(r,"base32")} was cached correctly`),{name:a,value:r}}catch(a){throw log$1z.error(a),a}}async resolve(e,r={}){if(typeof e!="string")throw errcode(new Error("name received is not valid"),"ERR_INVALID_NAME");if(!r.nocache&&!r.recursive){const n=e.split("/")[2],o=this.cache.get(n);if(o)return o}try{const n=await this.resolver.resolve(e,r);return log$1z(`IPNS record from ${e} was resolved correctly`),n}catch(n){throw log$1z.error(n),n}}async initializeKeyspace(e,r,n){return this.publish(e,r,IpnsPublisher.defaultRecordLifetime,n)}}async function all$1(t){const e=[];for await(const r of t)e.push(r);return e}const sortAll$1=(t,e)=>async function*(){yield*(await all$1(t)).sort(e)}();async function drain$1(t){for await(const e of t);}async function*filter$1(t,e){for await(const r of t)await e(r)&&(yield r)}async function*take(t,e){let r=0;if(!(e<1)){for await(const n of t)if(yield n,r++,r===e)return}}class BaseDatastore{open(){return Promise.reject(new Error(".open is not implemented"))}close(){return Promise.reject(new Error(".close is not implemented"))}put(e,r,n){return Promise.reject(new Error(".put is not implemented"))}get(e,r){return Promise.reject(new Error(".get is not implemented"))}has(e,r){return Promise.reject(new Error(".has is not implemented"))}delete(e,r){return Promise.reject(new Error(".delete is not implemented"))}async*putMany(e,r={}){for await(const{key:n,value:o}of e)await this.put(n,o,r),yield{key:n,value:o}}async*getMany(e,r={}){for await(const n of e)yield this.get(n,r)}async*deleteMany(e,r={}){for await(const n of e)await this.delete(n,r),yield n}batch(){let e=[],r=[];return{put(n,o){e.push({key:n,value:o})},delete(n){r.push(n)},commit:async n=>{await drain$1(this.putMany(e,n)),e=[],await drain$1(this.deleteMany(r,n)),r=[]}}}async*_all(e,r){throw new Error("._all is not implemented")}async*_allKeys(e,r){throw new Error("._allKeys is not implemented")}query(e,r){let n=this._all(e,r);if(e.prefix!=null&&(n=filter$1(n,o=>o.key.toString().startsWith(e.prefix))),Array.isArray(e.filters)&&(n=e.filters.reduce((o,a)=>filter$1(o,a),n)),Array.isArray(e.orders)&&(n=e.orders.reduce((o,a)=>sortAll$1(o,a),n)),e.offset!=null){let o=0;n=filter$1(n,()=>o++>=e.offset)}return e.limit!=null&&(n=take(n,e.limit)),n}queryKeys(e,r){let n=this._allKeys(e,r);if(e.prefix!=null&&(n=filter$1(n,o=>o.toString().startsWith(e.prefix))),Array.isArray(e.filters)&&(n=e.filters.reduce((o,a)=>filter$1(o,a),n)),Array.isArray(e.orders)&&(n=e.orders.reduce((o,a)=>sortAll$1(o,a),n)),e.offset!=null){let o=0;n=filter$1(n,()=>o++>=e.offset)}return e.limit!=null&&(n=take(n,e.limit)),n}}const log$1y=logger$3("datastore:core:tiered");class TieredDatastore extends BaseDatastore{constructor(e){super(),this.stores=e.slice()}async open(){try{await Promise.all(this.stores.map(e=>e.open()))}catch(e){throw dbOpenFailedError(e)}}async put(e,r,n){try{await Promise.all(this.stores.map(o=>o.put(e,r,n)))}catch(o){throw dbWriteFailedError(o)}}async get(e,r){for(const n of this.stores)try{const o=await n.get(e,r);if(o)return o}catch(o){log$1y.error(o)}throw notFoundError()}async has(e,r){for(const n of this.stores)if(await n.has(e,r))return!0;return!1}async delete(e,r){try{await Promise.all(this.stores.map(n=>n.delete(e,r)))}catch(n){throw dbDeleteFailedError(n)}}async*putMany(e,r={}){let n;const o=this.stores.map(a=>{const c=pushable({objectMode:!0});return drain$1(a.putMany(c,r)).catch(u=>{n=u}),c});try{for await(const a of e){if(n)throw n;o.forEach(c=>c.push(a)),yield a}}finally{o.forEach(a=>a.end())}}async*deleteMany(e,r={}){let n;const o=this.stores.map(a=>{const c=pushable({objectMode:!0});return drain$1(a.deleteMany(c,r)).catch(u=>{n=u}),c});try{for await(const a of e){if(n)throw n;o.forEach(c=>c.push(a)),yield a}}finally{o.forEach(a=>a.end())}}async close(){await Promise.all(this.stores.map(e=>e.close()))}batch(){const e=this.stores.map(r=>r.batch());return{put:(r,n)=>{e.forEach(o=>o.put(r,n))},delete:r=>{e.forEach(n=>n.delete(r))},commit:async r=>{for(const n of e)await n.commit(r)}}}query(e,r){return this.stores[this.stores.length-1].query(e,r)}queryKeys(e,r){return this.stores[this.stores.length-1].queryKeys(e,r)}}function get$3(t,e,r,n,o){for(e=e.split?e.split("."):e,n=0;n<e.length;n++)t=t?t[e[n]]:o;return t===o?r:t}const ipnsSelector=(t,e)=>{const r=e.map((n,o)=>({entry:IpnsEntry.decode(n),index:o}));return r.sort((n,o)=>{if(n.entry.signatureV2!=null&&o.entry.signatureV2==null)return-1;if(n.entry.signatureV2==null&&o.entry.signatureV2!=null)return 1;const a=n.entry.sequence??0n,c=o.entry.sequence??0n;if(a>c)return-1;if(a<c)return 1;const u=n.entry.validity??new Uint8Array(0),l=o.entry.validity??new Uint8Array(0),f=parseRFC3339$1(toString$D(u)),p=parseRFC3339$1(toString$D(l));return f.getTime()>p.getTime()?-1:f.getTime()<p.getTime()?1:0}),r[0].index},SHARDING_FN="SHARDING",README_FN="_README";class MemoryDatastore extends BaseDatastore{constructor(){super(),this.data={}}open(){return Promise.resolve()}close(){return Promise.resolve()}async put(e,r){this.data[e.toString()]=r}async get(e){if(!await this.has(e))throw notFoundError();return this.data[e.toString()]}async has(e){return this.data[e.toString()]!==void 0}async delete(e){delete this.data[e.toString()]}async*_all(){yield*Object.entries(this.data).map(([e,r])=>({key:new Key(e),value:r}))}async*_allKeys(){yield*Object.entries(this.data).map(([e])=>new Key(e))}}async function*map$3(t,e){for await(const r of t)yield e(r)}async function*merge$2(...t){const e=pushable({objectMode:!0});Promise.resolve().then(async()=>{try{await Promise.all(t.map(async r=>{for await(const n of r)e.push(n)})),e.end()}catch(r){e.end(r)}}),yield*e}const rawPipe$1=(...t)=>{let e;for(;t.length>0;)e=t.shift()(e);return e},isIterable$2=t=>t!=null&&(typeof t[Symbol.asyncIterator]=="function"||typeof t[Symbol.iterator]=="function"||typeof t.next=="function"),isDuplex$1=t=>t!=null&&typeof t.sink=="function"&&isIterable$2(t.source),duplexPipelineFn$1=t=>e=>{const r=t.sink(e);if(r.then!=null){const n=pushable({objectMode:!0});return r.then(()=>{n.end()},o=>{n.end(o)}),merge$2(n,async function*(){yield*t.source,n.end()}())}return t.source};function pipe$1(t,...e){if(isDuplex$1(t)){const n=t;t=()=>n.source}else if(isIterable$2(t)){const n=t;t=()=>n}const r=[t,...e];if(r.length>1&&isDuplex$1(r[r.length-1])&&(r[r.length-1]=r[r.length-1].sink),r.length>2)for(let n=1;n<r.length-1;n++)isDuplex$1(r[n])&&(r[n]=duplexPipelineFn$1(r[n]));return rawPipe$1(...r)}new Key(SHARDING_FN),new Key(README_FN);const namespace="/record/";function encodeBase32(t){return toString$D(t,"base32")}function keyToTopic(t){(typeof t=="string"||t instanceof String)&&(t=fromString$y(t.toString()));const e=toString$D(t,"base64url");return`${namespace}${e}`}function topicToKey(t){if(t.substring(0,namespace.length)!==namespace)throw new CodeError$4("topic received is not from a record","ERR_TOPIC_IS_NOT_FROM_RECORD_NAMESPACE");const e=t.substring(namespace.length);return fromString$y(e,"base64url")}const log$1x=logger$3("datastore-pubsub:publisher");class PubSubDatastore extends BaseDatastore{constructor(e,r,n,o,a,c){if(super(),!o)throw new CodeError$4("missing validator","ERR_INVALID_PARAMETERS");if(typeof o!="function")throw new CodeError$4("missing validate function","ERR_INVALID_PARAMETERS");if(typeof a!="function")throw new CodeError$4("missing select function","ERR_INVALID_PARAMETERS");if(c&&typeof c!="function")throw new CodeError$4("invalid subscriptionKeyFn received","ERR_INVALID_PARAMETERS");this._pubsub=e,this._datastore=r,this._peerId=n,this._validator=o,this._selector=a,this._handleSubscriptionKeyFn=c,this._onMessage=this._onMessage.bind(this),this._pubsub.addEventListener("message",this._onMessage)}async put(e,r,n){if(!(e instanceof Uint8Array)){const a="datastore key does not have a valid format";throw log$1x.error(a),new CodeError$4(a,"ERR_INVALID_DATASTORE_KEY")}if(!(r instanceof Uint8Array)){const a="received value is not a Uint8Array";throw log$1x.error(a),new CodeError$4(a,"ERR_INVALID_VALUE_RECEIVED")}const o=keyToTopic(e);log$1x(`publish value for topic ${o}`),await this._pubsub.publish(o,r)}async get(e,r){if(!(e instanceof Uint8Array)){const a="datastore key does not have a valid format";throw log$1x.error(a),new CodeError$4(a,"ERR_INVALID_DATASTORE_KEY")}const n=keyToTopic(e),o=await this._pubsub.getTopics();if(o&&Array.isArray(o)&&o.indexOf(n)>-1)return this._getLocal(e,r);try{await this._pubsub.subscribe(n)}catch{const a=`cannot subscribe topic ${n}`;throw log$1x.error(a),new CodeError$4(a,"ERR_SUBSCRIBING_TOPIC")}return log$1x(`subscribed values for key ${n}`),this._getLocal(e)}unsubscribe(e){const r=keyToTopic(e);return this._pubsub.unsubscribe(r)}async _getLocal(e,r){const n=new Key("/"+encodeBase32(e),!1);let o;try{o=await this._datastore.get(n,r)}catch(a){if(a.code!=="ERR_NOT_FOUND"){const u=`unexpected error getting the ipns record for ${n.toString()}`;throw log$1x.error(u),new CodeError$4(u,"ERR_UNEXPECTED_ERROR_GETTING_RECORD")}const c=`local record requested was not found for ${n.toString()}`;throw log$1x.error(c),new CodeError$4(c,"ERR_NOT_FOUND")}if(!(o instanceof Uint8Array)){const a="found record that we couldn't convert to a value";throw log$1x.error(a),new CodeError$4(a,"ERR_INVALID_RECORD_RECEIVED")}return o}async _onMessage(e){const r=e.detail;if(r.type!=="signed"){log$1x.error("unsigned message received, this module can only work with signed messages");return}const{data:n,from:o,topic:a}=r;let c;try{c=topicToKey(a)}catch(u){log$1x.error(u);return}if(log$1x(`message received for topic ${a}`),this._peerId.equals(o)){log$1x("message discarded as it is from the same peer");return}if(this._handleSubscriptionKeyFn){let u;try{u=await this._handleSubscriptionKeyFn(c)}catch{log$1x.error("message discarded by the subscriptionKeyFn");return}c=u}try{await this._storeIfSubscriptionIsBetter(c,n)}catch(u){log$1x.error(u)}}async _storeIfSubscriptionIsBetter(e,r,n){let o=!1;try{o=await this._isBetter(e,r)}catch(a){if(a.code!=="ERR_NOT_VALID_RECORD")throw a}o&&await this._storeRecord(e,r,n)}async _validateRecord(e,r){return this._validator(e,r)}async _selectRecord(e,r){return await this._selector(e,r)===0}async _isBetter(e,r){try{await this._validateRecord(e,r)}catch{const a="record received through pubsub is not valid";throw log$1x.error(a),new CodeError$4(a,"ERR_NOT_VALID_RECORD")}const n=new Key(e);let o;try{o=await this._getLocal(n.uint8Array())}catch{return!0}return equals$R(o,r)?!1:this._selectRecord(e,[o,r])}async _storeRecord(e,r,n){const o=new Key("/"+encodeBase32(e),!1);await this._datastore.put(o,r,n),log$1x(`record for ${keyToTopic(e)} was stored in the datastore`)}}const log$1w=logger$3("ipfs:ipns:pubsub");class IpnsPubsubDatastore{constructor(e,r,n){this._subscriptions={},this._handleSubscriptionKey=this._handleSubscriptionKey.bind(this),this._pubsubDs=new PubSubDatastore(e,r,n,ipnsValidator,ipnsSelector,this._handleSubscriptionKey)}async put(e,r,n){try{await this._pubsubDs.put(e,r,n)}catch(o){throw log$1w.error(o),o}}async get(e,r){let n,o;try{n=await this._pubsubDs.get(e,r)}catch(c){o=c}const a=e.slice(0,namespaceLength);if(toString$D(a)===namespace$1){const c=base58btc$n.encode(e).substring(1),u=base58btc$n.encode(e.slice(namespaceLength)).substring(1);this._subscriptions[c]=u,log$1w(`subscribed to pubsub topic ${c}, id ${u}`)}if(o)throw o;return n}_handleSubscriptionKey(e){e instanceof Uint8Array&&(e=toString$D(e,"base58btc"));const r=this._subscriptions[e];if(!r)throw errcode(new Error(`key ${e} does not correspond to a subscription`),"ERR_INVALID_KEY");try{return peerIdToRoutingKey(peerIdFromString$1(r))}catch(n){throw log$1w.error(n),n}}getSubscriptions(){return Object.values(this._subscriptions).filter(Boolean).map(e=>`${namespace$1}${e}`)}async cancel(e){if(typeof e!="string")throw errcode(new Error("invalid subscription name"),"ERR_INVALID_SUBSCRIPTION_NAME");e.startsWith(namespace$1)&&(e=e.substring(namespaceLength));const r=Object.keys(this._subscriptions).find(o=>this._subscriptions[o]===e);if(!r)return{canceled:!1};const n=fromString$y(r);return this._pubsubDs.unsubscribe(n),delete this._subscriptions[r],log$1w(`unsubscribed pubsub ${r}: ${e}`),{canceled:!0}}}var Record$1;(function(t){let e;t.codec=()=>(e==null&&(e=message$2((r,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),r.key!=null&&r.key.byteLength>0&&(n.uint32(10),n.bytes(r.key)),r.value!=null&&r.value.byteLength>0&&(n.uint32(18),n.bytes(r.value)),r.timeReceived!=null&&r.timeReceived!==""&&(n.uint32(42),n.string(r.timeReceived)),o.lengthDelimited!==!1&&n.ldelim()},(r,n)=>{const o={key:new Uint8Array(0),value:new Uint8Array(0),timeReceived:""},a=n==null?r.len:r.pos+n;for(;r.pos<a;){const c=r.uint32();switch(c>>>3){case 1:o.key=r.bytes();break;case 2:o.value=r.bytes();break;case 5:o.timeReceived=r.string();break;default:r.skipType(c&7);break}}return o})),e),t.encode=r=>encodeMessage$2(r,t.codec()),t.decode=r=>decodeMessage$3(r,t.codec())})(Record$1||(Record$1={}));function toRFC3339(t){const e=t.getUTCFullYear(),r=String(t.getUTCMonth()+1).padStart(2,"0"),n=String(t.getUTCDate()).padStart(2,"0"),o=String(t.getUTCHours()).padStart(2,"0"),a=String(t.getUTCMinutes()).padStart(2,"0"),c=String(t.getUTCSeconds()).padStart(2,"0"),u=t.getUTCMilliseconds(),l=String(u*1e3*1e3).padStart(9,"0");return`${e}-${r}-${n}T${o}:${a}:${c}.${l}Z`}function parseRFC3339(t){const e=new RegExp("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})\\.(\\d+)Z"),r=String(t).trim().match(e);if(r==null)throw new Error("Invalid format");const n=parseInt(r[1],10),o=parseInt(r[2],10)-1,a=parseInt(r[3],10),c=parseInt(r[4],10),u=parseInt(r[5],10),l=parseInt(r[6],10),f=parseInt(r[7].slice(0,-6),10);return new Date(Date.UTC(n,o,a,c,u,l,f))}class Libp2pRecord{constructor(e,r,n){N(this,"key");N(this,"value");N(this,"timeReceived");if(!(e instanceof Uint8Array))throw new Error("key must be a Uint8Array");if(!(r instanceof Uint8Array))throw new Error("value must be a Uint8Array");this.key=e,this.value=r,this.timeReceived=n}serialize(){return Record$1.encode(this.prepareSerialize())}prepareSerialize(){return{key:this.key,value:this.value,timeReceived:toRFC3339(this.timeReceived)}}static deserialize(e){const r=Record$1.decode(e);return new Libp2pRecord(r.key,r.value,new Date(r.timeReceived))}static fromDeserialized(e){const r=parseRFC3339(e.timeReceived);if(e.key==null)throw new Error("key missing from deserialized object");if(e.value==null)throw new Error("value missing from deserialized object");return new Libp2pRecord(e.key,e.value,r)}}const log$1v=logger$3("ipfs:ipns:offline-datastore");class OfflineDatastore{constructor(e){this._datastore=e,this.stores=[]}async put(e,r,n){if(!(e instanceof Uint8Array))throw errcode(new Error("Offline datastore key must be a Uint8Array"),"ERR_INVALID_KEY");if(!(r instanceof Uint8Array))throw errcode(new Error("Offline datastore value must be a Uint8Array"),"ERR_INVALID_VALUE");let o;try{o=this._routingKey(e)}catch(c){throw log$1v.error(c),errcode(new Error("Not possible to generate the routing key"),"ERR_GENERATING_ROUTING_KEY")}const a=new Libp2pRecord(e,r,new Date);await this._datastore.put(o,a.serialize(),n)}async get(e,r){if(!(e instanceof Uint8Array))throw errcode(new Error("Offline datastore key must be a Uint8Array"),"ERR_INVALID_KEY");let n;try{n=this._routingKey(e)}catch(c){throw log$1v.error(c),errcode(new Error("Not possible to generate the routing key"),"ERR_GENERATING_ROUTING_KEY")}const o=await this._datastore.get(n,r);let a;try{a=Libp2pRecord.deserialize(o)}catch(c){throw log$1v.error(c),c}return a.value}_routingKey(e){return new Key("/dht/record/"+toString$D(e,"base32"),!1)}}const log$1u=logger$3("ipfs:ipns:dht-datastore");class DHTDatastore{constructor(e){this._dht=e}async put(e,r,n){try{await drain$1(this._dht.put(e,r,n))}catch(o){throw log$1u.error(o),o}}async get(e,r){for await(const n of this._dht.get(e,r))if(n.name==="VALUE")return n.value;throw notFoundError()}}function createRouting({libp2p:t,repo:e,peerId:r,options:n}){const o=[];let a;if(get$3(n,"EXPERIMENTAL.ipnsPubsub",!1)&&(a=new IpnsPubsubDatastore(t.pubsub,e.datastore,r),o.push(a)),get$3(n,"offline",!1)!==!0&&["dht","dhtclient","dhtserver"].includes(get$3(n,"config.Routing.Type","none"))&&o.push(new DHTDatastore(t.dht)),get$3(n,"offline",!1)||o.length===0){const c=new OfflineDatastore(e.datastore);o.push(c)}return new TieredDatastore(o)}const log$1t=logger$3("ipfs:components:ipns");class IPNSAPI{constructor(e={pass:""}){this.options=e,this.offline=null,this.online=null}getIPNS(){const e=this.online||this.offline;if(e)return e;throw new NotInitializedError}get routing(){return this.getIPNS().routing}startOffline({repo:e,peerId:r,keychain:n}){if(this.offline!=null)throw new AlreadyInitializedError;log$1t("initializing IPNS keyspace (offline)");const o=new OfflineDatastore(e.datastore),a=new IPNS(o,e.datastore,r,n,this.options);this.offline=a}async startOnline({libp2p:e,repo:r,peerId:n,keychain:o}){if(this.online!=null)throw new AlreadyInitializedError;const a=createRouting({libp2p:e,repo:r,peerId:n,options:this.options}),c=new IPNS(a,r.datastore,n,o,this.options);await c.republisher.start(),this.online=c}async stop(){const e=this.online;e&&(await e.republisher.stop(),this.online=null)}publish(e,r,n,o){return this.getIPNS().publish(e,r,n,o)}resolve(e,r){return this.getIPNS().resolve(e,r)}initializeKeyspace(e,r,n){return this.getIPNS().initializeKeyspace(e,r,n)}}async function resolvePath({ipns:t,repo:e,codecs:r},n,o){if(ipnsPath(n))return t.resolve(n);const{cid:a,path:c}=toCidAndPath(n);await drain$1(resolve$5(a,c||"",r,e,o))}const log$1s=logger$3("ipfs:name:publish");function createPublish$2({ipns:t,repo:e,codecs:r,peerId:n,isOnline:o,keychain:a}){const c=async l=>{let f;if(l==="self"&&n.privateKey!=null)f=await unmarshalPrivateKey(n.privateKey);else try{const p=await a.exportKey(l,"temp");f=await importKey(p,"temp")}catch(p){throw log$1s.error(p),errcode(p,"ERR_CANNOT_GET_KEY")}return peerIdFromKeys(f.public.bytes,f.bytes)};async function u(l,f={}){const p=f.resolve!==!1,g=f.lifetime||"24h",$=f.key||"self";if(!o())throw errcode(new Error(OFFLINE_ERROR),"OFFLINE_ERROR");try{l=normalizePath(l)}catch(S){throw log$1s.error(S),S}let _=0;try{_=parse$4(g)||0,_=parseFloat(_.toFixed(6))}catch(S){throw log$1s.error(S),S}const b=await Promise.all([c($),p?resolvePath({ipns:t,repo:e,codecs:r},l):Promise.resolve()]),D=fromString$y(l),v=await t.publish(b[0],D,_,f);return{name:v.name,value:toString$D(v.value)}}return withTimeoutOption(u)}var domainNameRegex=/^(?:[a-z0-9](?:[a-z0-9\-]{0,61}[a-z0-9])?\.){0,126}(?:[a-z0-9](?:[a-z0-9\-]{0,61}[a-z0-9]))\.?$/i,isDomainName=function t(e,r){if(r==null&&(r=!1),e.length<2||e.length>255)return!1;var n=e[e.length-1];if(r){if(n!==".")return!1}else if(n===".")return!1;return domainNameRegex.test(e)};const isDomain=getDefaultExportFromCjs(isDomainName),mergeOptions$e=mergeOptions$h.bind({ignoreUndefined:!0}),log$1r=logger$3("ipfs:name:resolve"),appendRemainder=(t,e)=>e.length>0?t+"/"+e.join("/"):t;function createResolve$4({dns:t,ipns:e,isOnline:r,options:{offline:n}}){async function*o(a,c={}){if(c=mergeOptions$e({nocache:!1,recursive:!0},c),n&&c&&c.nocache)throw errcode(new Error("cannot specify both offline and nocache"),"ERR_NOCACHE_AND_OFFLINE");if(!r()&&!n)throw errcode(new Error(OFFLINE_ERROR),"OFFLINE_ERROR");let u=a.toString();u.startsWith("/ipns/")||(u=`/ipns/${u}`);let[l,f,...p]=u.slice(1).split("/");try{if(f.substring(0,1)==="1"){const $=peerIdFromString$1(f),_=decode$24($.toBytes());f=CID$k.createV1(114,_).toString(base36$u)}else{const $=CID$k.parse(f);$.version===1&&(f=$.toString(base36$u))}}catch($){if(isDomain(f)){yield appendRemainder(await t(f,c),p);return}throw log$1r.error($),errcode(new Error("Invalid IPNS name"),"ERR_IPNS_INVALID_NAME")}const g=await e.resolve(`/${l}/${f}`,c);yield appendRemainder(g instanceof Uint8Array?toString$D(g):g,p)}return withTimeoutOption(o)}function getPubsubRouting(t,e){if(!t||!(e&&e.ipnsPubsub))throw errcode(new Error("IPNS pubsub subsystem is not enabled"),"ERR_IPNS_PUBSUB_NOT_ENABLED");if(t.routing instanceof IpnsPubsubDatastore)return t.routing;const r=(t.routing.stores||[]).find(n=>n instanceof IpnsPubsubDatastore);if(!r)throw errcode(new Error("IPNS pubsub datastore not found"),"ERR_PUBSUB_DATASTORE_NOT_FOUND");return r}function createCancel$1({ipns:t,options:e}){const r=e.EXPERIMENTAL;async function n(o,a={}){return getPubsubRouting(t,r).cancel(o,a)}return withTimeoutOption(n)}function createState$1({ipns:t,options:e}){const r=e.EXPERIMENTAL;async function n(o={}){try{return{enabled:!!getPubsubRouting(t,r)}}catch{return{enabled:!1}}}return withTimeoutOption(n)}function createSubs$1({ipns:t,options:e}){const r=e.EXPERIMENTAL;async function n(o={}){return getPubsubRouting(t,r).getSubscriptions(o)}return withTimeoutOption(n)}class PubSubAPI{constructor({ipns:e,options:r}){this.cancel=createCancel$1({ipns:e,options:r}),this.state=createState$1({ipns:e,options:r}),this.subs=createSubs$1({ipns:e,options:r})}}class NameAPI{constructor({dns:e,ipns:r,repo:n,codecs:o,peerId:a,isOnline:c,keychain:u,options:l}){this.publish=createPublish$2({ipns:r,repo:n,codecs:o,peerId:a,isOnline:c,keychain:u}),this.resolve=createResolve$4({dns:e,ipns:r,isOnline:c,options:l}),this.pubsub=new PubSubAPI({ipns:r,options:l})}}const ERR_NOT_FOUND$1=notFoundError().code,Format={default:"<dst>",edges:"<src> -> <dst>"};function createRefs$1({repo:t,codecs:e,resolve:r,preload:n}){async function*o(a,c={}){if(c.maxDepth===0)return;if(c.edges&&c.format&&c.format!==Format.default)throw new Error("Cannot set edges to true and also specify format");if(c.format=c.edges?Format.edges:c.format,typeof c.maxDepth!="number"&&(c.maxDepth=c.recursive?1/0:1),c.timeout){const l=[new timeoutAbortController.TimeoutController(c.timeout).signal];c.signal&&l.push(c.signal),c.signal=anySignal_2(l)}const u=(Array.isArray(a)?a:[a]).map(l=>getFullPath(n,l,c));for(const l of u)try{yield*refsStream(r,t,e,l,c)}catch(f){yield{ref:"",err:f.message}}}return o}function getFullPath(t,e,r){const{cid:n,path:o}=toCidAndPath(e);return r.preload!==!1&&t(n),`/ipfs/${n}${o||""}`}async function*refsStream(t,e,r,n,o){const a=await t(n,o),{cid:c}=toCidAndPath(a),u=o.maxDepth!=null?o.maxDepth:1/0,l=o.unique||!1;for await(const f of objectStream(e,r,c,u,l,o))f.parent&&(f.isDuplicate||(yield{ref:formatLink(f.parent.cid,f.node.cid,f.node.name,o.format)}))}function formatLink(t,e,r="",n=Format.default){let o=n.replace(/<src>/g,t.toString());return o=o.replace(/<dst>/g,e.toString()),o=o.replace(/<linkname>/g,r),o}async function*objectStream(t,e,r,n,o,a){const c=new Set;async function*u(l,f){const p=f+1;if(!(p>n))try{for await(const g of getLinks(t,e,l.cid,a))yield{parent:l,node:g,isDuplicate:o&&c.has(g.cid.toString())},o&&c.add(g.cid.toString()),yield*u(g,p)}catch(g){throw g.code===ERR_NOT_FOUND$1&&(g.message=`Could not find object with CID: ${l.cid}`),g}}yield*u({cid:r},0)}async function*getLinks(t,e,r,n){const o=await t.blocks.get(r,n),a=(await e.getCodec(r.code)).decode(o),c=r.code===code$i,u=[];for(const[l,f]of links$2(a,u)){if(c){const p=l.match(/^Links\/(\d+)\/Hash$/);if(p){const g=Number(p[1]);if(g<a.Links.length){yield{name:a.Links[g].Name,cid:f};continue}}}yield{name:l,cid:f}}}const links$2=function*(t,e){if(t!=null&&!(t instanceof Uint8Array)){for(const[r,n]of Object.entries(t)){const o=[...e,r];if(n!=null&&typeof n=="object")if(Array.isArray(n))for(const[a,c]of n.entries()){const u=[...o,a],l=CID$k.asCID(c);l?yield[u.join("/"),l]:typeof c=="object"&&(yield*links$2(c,u))}else{const a=CID$k.asCID(n);a?yield[o.join("/"),a]:yield*links$2(n,o)}}return[]}};function createLocal$1({repo:t}){async function*e(r={}){for await(const n of t.blocks.queryKeys({},{signal:r.signal}))yield{ref:n.toString()}}return withTimeoutOption(e)}function createWantlist$1({network:t}){async function e(r={}){const{bitswap:n}=await t.use(r),o=n.getWantlist();return Array.from(o).map(a=>a[1].cid)}return withTimeoutOption(e)}function createWantlistForPeer$1({network:t}){async function e(r,n={}){const{bitswap:o}=await t.use(n),a=o.wantlistForPeer(r);return Array.from(a).map(c=>c[1].cid)}return withTimeoutOption(e)}function createUnwant$1({network:t}){async function e(r,n={}){const{bitswap:o}=await t.use(n);return Array.isArray(r)||(r=[r]),o.unwant(r)}return withTimeoutOption(e)}function createStat$9({network:t}){async function e(r={}){const n=(await t.use(r)).bitswap,o=n.stat().snapshot;return{provideBufLen:parseInt(o.providesBufferLength.toString()),blocksReceived:BigInt(o.blocksReceived.toString()),wantlist:Array.from(n.getWantlist()).map(a=>a[1].cid),peers:n.peers(),dupBlksReceived:BigInt(o.dupBlksReceived.toString()),dupDataReceived:BigInt(o.dupDataReceived.toString()),dataReceived:BigInt(o.dataReceived.toString()),blocksSent:BigInt(o.blocksSent.toString()),dataSent:BigInt(o.dataSent.toString())}}return withTimeoutOption(e)}class BitswapAPI{constructor({network:e}){this.wantlist=createWantlist$1({network:e}),this.wantlistForPeer=createWantlistForPeer$1({network:e}),this.unwant=createUnwant$1({network:e}),this.stat=createStat$9({network:e})}}var TopicValidatorResult$4;(function(t){t.Accept="accept",t.Ignore="ignore",t.Reject="reject"})(TopicValidatorResult$4||(TopicValidatorResult$4={}));var FaultTolerance$5;(function(t){t[t.FATAL_ALL=0]="FATAL_ALL",t[t.NO_FATAL=1]="NO_FATAL"})(FaultTolerance$5||(FaultTolerance$5={}));let CodeError$3=class extends Error{constructor(e,r,n){super(e);N(this,"code");N(this,"props");this.code=r,this.name=n?.name??"CodeError",this.props=n??{}}},AggregateCodeError$3=class extends AggregateError{constructor(e,r,n,o){super(e,r);N(this,"code");N(this,"props");this.code=n,this.name=o?.name??"AggregateCodeError",this.props=o??{}}};function equals$B(t,e){if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0}function coerce$j(t){if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")}function fromString$o(t){return new TextEncoder().encode(t)}function toString$u(t){return new TextDecoder().decode(t)}function base$n(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$m=base$n,_brrp__multiformats_scope_baseX$j=src$m;let Encoder$l=class{constructor(t,e,r){N(this,"name");N(this,"prefix");N(this,"baseEncode");this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$l=class{constructor(t,e,r){N(this,"name");N(this,"prefix");N(this,"baseDecode");N(this,"prefixCodePoint");if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$n(this,t)}},ComposedDecoder$j=class{constructor(t){N(this,"decoders");this.decoders=t}or(t){return or$n(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r!=null)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};function or$n(t,e){return new ComposedDecoder$j({...t.decoders??{[t.prefix]:t},...e.decoders??{[e.prefix]:e}})}let Codec$j=class{constructor(t,e,r,n){N(this,"name");N(this,"prefix");N(this,"baseEncode");N(this,"baseDecode");N(this,"encoder");N(this,"decoder");this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$l(t,e,r),this.decoder=new Decoder$l(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};function from$t({name:t,prefix:e,encode:r,decode:n}){return new Codec$j(t,e,r,n)}function baseX$j({name:t,prefix:e,alphabet:r}){const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$j(r,t);return from$t({prefix:e,name:t,encode:n,decode:a=>coerce$j(o(a))})}function decode$1E(t,e,r,n){const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c}function encode$1d(t,e,r){const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c!==0&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a}function rfc4648$j({name:t,prefix:e,bitsPerChar:r,alphabet:n}){return from$t({prefix:e,name:t,encode(o){return encode$1d(o,n,r)},decode(o){return decode$1E(o,n,r,t)}})}const base58btc$h=baseX$j({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),base58flickr$a=baseX$j({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),base58$a=Object.freeze(Object.defineProperty({__proto__:null,base58btc:base58btc$h,base58flickr:base58flickr$a},Symbol.toStringTag,{value:"Module"})),base32$r=rfc4648$j({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),base32upper$a=rfc4648$j({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),base32pad$b=rfc4648$j({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),base32padupper$a=rfc4648$j({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),base32hex$a=rfc4648$j({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),base32hexupper$a=rfc4648$j({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),base32hexpad$a=rfc4648$j({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),base32hexpadupper$a=rfc4648$j({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),base32z$a=rfc4648$j({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),base32$s=Object.freeze(Object.defineProperty({__proto__:null,base32:base32$r,base32hex:base32hex$a,base32hexpad:base32hexpad$a,base32hexpadupper:base32hexpadupper$a,base32hexupper:base32hexupper$a,base32pad:base32pad$b,base32padupper:base32padupper$a,base32upper:base32upper$a,base32z:base32z$a},Symbol.toStringTag,{value:"Module"}));var encode_1$k=encode$1c,MSB$r=128,REST$r=127,MSBALL$k=~REST$r,INT$k=Math.pow(2,31);function encode$1c(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$k;)e[r++]=t&255|MSB$r,t/=128;for(;t&MSBALL$k;)e[r++]=t&255|MSB$r,t>>>=7;return e[r]=t|0,encode$1c.bytes=r-n+1,e}var decode$1D=read$l,MSB$1$k=128,REST$1$k=127;function read$l(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$l.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$k)<<o:(c&REST$1$k)*Math.pow(2,o),o+=7}while(c>=MSB$1$k);return read$l.bytes=a-n,r}var N1$q=Math.pow(2,7),N2$q=Math.pow(2,14),N3$q=Math.pow(2,21),N4$q=Math.pow(2,28),N5$q=Math.pow(2,35),N6$q=Math.pow(2,42),N7$q=Math.pow(2,49),N8$l=Math.pow(2,56),N9$l=Math.pow(2,63),length$m=function(t){return t<N1$q?1:t<N2$q?2:t<N3$q?3:t<N4$q?4:t<N5$q?5:t<N6$q?6:t<N7$q?7:t<N8$l?8:t<N9$l?9:10},varint$l={encode:encode_1$k,decode:decode$1D,encodingLength:length$m},_brrp_varint$j=varint$l;function decode$1C(t,e=0){return[_brrp_varint$j.decode(t,e),_brrp_varint$j.decode.bytes]}function encodeTo$j(t,e,r=0){return _brrp_varint$j.encode(t,e,r),e}function encodingLength$o(t){return _brrp_varint$j.encodingLength(t)}function create$o(t,e){const r=e.byteLength,n=encodingLength$o(t),o=n+encodingLength$o(r),a=new Uint8Array(o+r);return encodeTo$j(t,a,0),encodeTo$j(r,a,n),a.set(e,o),new Digest$j(t,r,e,a)}function decode$1B(t){const e=coerce$j(t),[r,n]=decode$1C(e),[o,a]=decode$1C(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$j(r,o,c,e)}function equals$A(t,e){if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$B(t.bytes,r.bytes)}}let Digest$j=class{constructor(t,e,r,n){N(this,"code");N(this,"size");N(this,"digest");N(this,"bytes");this.code=t,this.size=e,this.digest=r,this.bytes=n}};function format$h(t,e){const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$g(r,baseCache$g(t),e??base58btc$h.encoder);default:return toStringV1$g(r,baseCache$g(t),e??base32$r.encoder)}}const cache$i=new WeakMap;function baseCache$g(t){const e=cache$i.get(t);if(e==null){const r=new Map;return cache$i.set(t,r),r}return e}let CID$g=class Le{constructor(e,r,n,o){N(this,"code");N(this,"version");N(this,"multihash");N(this,"bytes");N(this,"/");N(this,xr,"CID");this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$g)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$g)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return Le.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$o(e,r);return Le.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return Le.equals(this,e)}static equals(e,r){const n=r;return n!=null&&e.code===n.code&&e.version===n.version&&equals$A(e.multihash,n.multihash)}toString(e){return format$h(this,e)}toJSON(){return{"/":format$h(this)}}link(){return this}[(xr=Symbol.toStringTag,Symbol.for("nodejs.util.inspect.custom"))](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof Le)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new Le(n,o,a,c??encodeCID$h(n,o,a.bytes))}else if(r[cidSymbol$g]===!0){const{version:n,multihash:o,code:a}=r,c=decode$1B(o);return Le.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$g)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$g}) block encoding`);return new Le(e,r,n,n.bytes)}case 1:{const o=encodeCID$h(e,r,n.bytes);return new Le(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return Le.create(0,DAG_PB_CODE$g,e)}static createV1(e,r){return Le.create(1,e,r)}static decode(e){const[r,n]=Le.decodeFirst(e);if(n.length!==0)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=Le.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$j(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$j(r.multihashCode,r.digestSize,a,o);return[r.version===0?Le.createV0(c):Le.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$1C(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$g;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$g(e,r),a=Le.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$g(a).set(n,e),a}};function parseCIDtoBytes$g(t,e){switch(t[0]){case"Q":{const r=e??base58btc$h;return[base58btc$h.prefix,r.decode(`${base58btc$h.prefix}${t}`)]}case base58btc$h.prefix:{const r=e??base58btc$h;return[base58btc$h.prefix,r.decode(t)]}case base32$r.prefix:{const r=e??base32$r;return[base32$r.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}}function toStringV0$g(t,e,r){const{prefix:n}=r;if(n!==base58btc$h.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o}function toStringV1$g(t,e,r){const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o}const DAG_PB_CODE$g=112,SHA_256_CODE$g=18;function encodeCID$h(t,e,r){const n=encodingLength$o(t),o=n+encodingLength$o(e),a=new Uint8Array(o+r.byteLength);return encodeTo$j(t,a,0),encodeTo$j(e,a,n),a.set(r,o),a}const cidSymbol$g=Symbol.for("@ipld/js-cid/CID");function equals$z(t,e){if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0}const base10$m=baseX$j({prefix:"9",name:"base10",alphabet:"0123456789"}),base10$n=Object.freeze(Object.defineProperty({__proto__:null,base10:base10$m},Symbol.toStringTag,{value:"Module"})),base16$m=rfc4648$j({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),base16upper$b=rfc4648$j({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),base16$n=Object.freeze(Object.defineProperty({__proto__:null,base16:base16$m,base16upper:base16upper$b},Symbol.toStringTag,{value:"Module"})),base2$m=rfc4648$j({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),base2$n=Object.freeze(Object.defineProperty({__proto__:null,base2:base2$m},Symbol.toStringTag,{value:"Module"})),alphabet$c=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),alphabetBytesToChars$b=alphabet$c.reduce((t,e,r)=>(t[r]=e,t),[]),alphabetCharsToBytes$b=alphabet$c.reduce((t,e,r)=>(t[e.codePointAt(0)]=r,t),[]);function encode$1b(t){return t.reduce((e,r)=>(e+=alphabetBytesToChars$b[r],e),"")}function decode$1A(t){const e=[];for(const r of t){const n=alphabetCharsToBytes$b[r.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${r}`);e.push(n)}return new Uint8Array(e)}const base256emoji$m=from$t({prefix:"\u{1F680}",name:"base256emoji",encode:encode$1b,decode:decode$1A}),base256emoji$n=Object.freeze(Object.defineProperty({__proto__:null,base256emoji:base256emoji$m},Symbol.toStringTag,{value:"Module"})),base36$m=baseX$j({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),base36upper$b=baseX$j({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),base36$n=Object.freeze(Object.defineProperty({__proto__:null,base36:base36$m,base36upper:base36upper$b},Symbol.toStringTag,{value:"Module"})),base64$n=rfc4648$j({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),base64pad$b=rfc4648$j({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),base64url$b=rfc4648$j({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),base64urlpad$b=rfc4648$j({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),base64$o=Object.freeze(Object.defineProperty({__proto__:null,base64:base64$n,base64pad:base64pad$b,base64url:base64url$b,base64urlpad:base64urlpad$b},Symbol.toStringTag,{value:"Module"})),base8$m=rfc4648$j({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),base8$n=Object.freeze(Object.defineProperty({__proto__:null,base8:base8$m},Symbol.toStringTag,{value:"Module"})),identity$g=from$t({prefix:"\0",name:"identity",encode:t=>toString$u(t),decode:t=>fromString$o(t)}),identityBase$b=Object.freeze(Object.defineProperty({__proto__:null,identity:identity$g},Symbol.toStringTag,{value:"Module"}));new TextEncoder,new TextDecoder;const bases$b={...identityBase$b,...base2$n,...base8$n,...base10$n,...base16$n,...base32$s,...base36$n,...base58$a,...base64$o,...base256emoji$n};function asUint8Array$6(t){return globalThis.Buffer!=null?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):t}function allocUnsafe$c(t=0){return globalThis.Buffer?.allocUnsafe!=null?asUint8Array$6(globalThis.Buffer.allocUnsafe(t)):new Uint8Array(t)}function createCodec$4(t,e,r,n){return{name:t,prefix:e,encoder:{name:t,prefix:e,encode:r},decoder:{decode:n}}}const string$3=createCodec$4("utf8","u",t=>"u"+new TextDecoder("utf8").decode(t),t=>new TextEncoder().encode(t.substring(1))),ascii$3=createCodec$4("ascii","a",t=>{let e="a";for(let r=0;r<t.length;r++)e+=String.fromCharCode(t[r]);return e},t=>{t=t.substring(1);const e=allocUnsafe$c(t.length);for(let r=0;r<t.length;r++)e[r]=t.charCodeAt(r);return e}),BASES$3={utf8:string$3,"utf-8":string$3,hex:bases$b.base16,latin1:ascii$3,ascii:ascii$3,binary:ascii$3,...bases$b};function toString$t(t,e="utf8"){const r=BASES$3[e];if(r==null)throw new Error(`Unsupported encoding "${e}"`);return(e==="utf8"||e==="utf-8")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?globalThis.Buffer.from(t.buffer,t.byteOffset,t.byteLength).toString("utf8"):r.encoder.encode(t).substring(1)}function asUint8Array$5(t){return globalThis.Buffer!=null?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):t}function allocUnsafe$b(t=0){return globalThis.Buffer?.allocUnsafe!=null?asUint8Array$5(globalThis.Buffer.allocUnsafe(t)):new Uint8Array(t)}const N1$p=Math.pow(2,7),N2$p=Math.pow(2,14),N3$p=Math.pow(2,21),N4$p=Math.pow(2,28),N5$p=Math.pow(2,35),N6$p=Math.pow(2,42),N7$p=Math.pow(2,49),MSB$q=128,REST$q=127;function encodingLength$n(t){if(t<N1$p)return 1;if(t<N2$p)return 2;if(t<N3$p)return 3;if(t<N4$p)return 4;if(t<N5$p)return 5;if(t<N6$p)return 6;if(t<N7$p)return 7;if(Number.MAX_SAFE_INTEGER!=null&&t>Number.MAX_SAFE_INTEGER)throw new RangeError("Could not encode varint");return 8}function encodeUint8Array$4(t,e,r=0){switch(encodingLength$n(t)){case 8:e[r++]=t&255|MSB$q,t/=128;case 7:e[r++]=t&255|MSB$q,t/=128;case 6:e[r++]=t&255|MSB$q,t/=128;case 5:e[r++]=t&255|MSB$q,t/=128;case 4:e[r++]=t&255|MSB$q,t>>>=7;case 3:e[r++]=t&255|MSB$q,t>>>=7;case 2:e[r++]=t&255|MSB$q,t>>>=7;case 1:{e[r++]=t&255,t>>>=7;break}default:throw new Error("unreachable")}return e}function encodeUint8ArrayList$4(t,e,r=0){switch(encodingLength$n(t)){case 8:e.set(r++,t&255|MSB$q),t/=128;case 7:e.set(r++,t&255|MSB$q),t/=128;case 6:e.set(r++,t&255|MSB$q),t/=128;case 5:e.set(r++,t&255|MSB$q),t/=128;case 4:e.set(r++,t&255|MSB$q),t>>>=7;case 3:e.set(r++,t&255|MSB$q),t>>>=7;case 2:e.set(r++,t&255|MSB$q),t>>>=7;case 1:{e.set(r++,t&255),t>>>=7;break}default:throw new Error("unreachable")}return e}function decodeUint8Array$4(t,e){let r=t[e],n=0;if(n+=r&REST$q,r<MSB$q||(r=t[e+1],n+=(r&REST$q)<<7,r<MSB$q)||(r=t[e+2],n+=(r&REST$q)<<14,r<MSB$q)||(r=t[e+3],n+=(r&REST$q)<<21,r<MSB$q)||(r=t[e+4],n+=(r&REST$q)*N4$p,r<MSB$q)||(r=t[e+5],n+=(r&REST$q)*N5$p,r<MSB$q)||(r=t[e+6],n+=(r&REST$q)*N6$p,r<MSB$q)||(r=t[e+7],n+=(r&REST$q)*N7$p,r<MSB$q))return n;throw new RangeError("Could not decode varint")}function decodeUint8ArrayList$4(t,e){let r=t.get(e),n=0;if(n+=r&REST$q,r<MSB$q||(r=t.get(e+1),n+=(r&REST$q)<<7,r<MSB$q)||(r=t.get(e+2),n+=(r&REST$q)<<14,r<MSB$q)||(r=t.get(e+3),n+=(r&REST$q)<<21,r<MSB$q)||(r=t.get(e+4),n+=(r&REST$q)*N4$p,r<MSB$q)||(r=t.get(e+5),n+=(r&REST$q)*N5$p,r<MSB$q)||(r=t.get(e+6),n+=(r&REST$q)*N6$p,r<MSB$q)||(r=t.get(e+7),n+=(r&REST$q)*N7$p,r<MSB$q))return n;throw new RangeError("Could not decode varint")}function encode$1a(t,e,r=0){return e==null&&(e=allocUnsafe$b(encodingLength$n(t))),e instanceof Uint8Array?encodeUint8Array$4(t,e,r):encodeUint8ArrayList$4(t,e,r)}function decode$1z(t,e=0){return t instanceof Uint8Array?decodeUint8Array$4(t,e):decodeUint8ArrayList$4(t,e)}function concat$5(t,e){if(globalThis.Buffer!=null)return asUint8Array$6(globalThis.Buffer.concat(t,e));e==null&&(e=t.reduce((o,a)=>o+a.length,0));const r=allocUnsafe$c(e);let n=0;for(const o of t)r.set(o,n),n+=o.length;return asUint8Array$6(r)}function fromString$n(t,e="utf8"){const r=BASES$3[e];if(r==null)throw new Error(`Unsupported encoding "${e}"`);return(e==="utf8"||e==="utf-8")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?asUint8Array$6(globalThis.Buffer.from(t,"utf-8")):r.decoder.decode(`${r.prefix}${t}`)}const isV4$b=isIPv4,isV6$b=isIPv6,toBytes$c=function(t){let e=0;if(t=t.toString().trim(),isV4$b(t)){const r=new Uint8Array(e+4);return t.split(/\./g).forEach(n=>{r[e++]=parseInt(n,10)&255}),r}if(isV6$b(t)){const r=t.split(":",8);let n;for(n=0;n<r.length;n++){const a=isV4$b(r[n]);let c;a&&(c=toBytes$c(r[n]),r[n]=toString$t(c.slice(0,2),"base16")),c!=null&&++n<8&&r.splice(n,0,toString$t(c.slice(2,4),"base16"))}if(r[0]==="")for(;r.length<8;)r.unshift("0");else if(r[r.length-1]==="")for(;r.length<8;)r.push("0");else if(r.length<8){for(n=0;n<r.length&&r[n]!=="";n++);const a=[n,1];for(n=9-r.length;n>0;n--)a.push("0");r.splice.apply(r,a)}const o=new Uint8Array(e+16);for(n=0;n<r.length;n++){const a=parseInt(r[n],16);o[e++]=a>>8&255,o[e++]=a&255}return o}throw new Error("invalid ip address")},toString$s=function(t,e=0,r){e=~~e,r=r??t.length-e;const n=new DataView(t.buffer);if(r===4){const o=[];for(let a=0;a<r;a++)o.push(t[e+a]);return o.join(".")}if(r===16){const o=[];for(let a=0;a<r;a+=2)o.push(n.getUint16(e+a).toString(16));return o.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""},V$b=-1,names$b={},codes$e={},table$b=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,V$b,"ip6zone"],[43,8,"ipcidr"],[53,V$b,"dns",!0],[54,V$b,"dns4",!0],[55,V$b,"dns6",!0],[56,V$b,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc-direct"],[281,0,"webrtc"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,V$b,"unix",!1,!0],[421,V$b,"ipfs"],[421,V$b,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,V$b,"garlic64"],[448,0,"tls"],[449,V$b,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,V$b,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[777,V$b,"memory"]];table$b.forEach(t=>{const e=createProtocol$b(...t);codes$e[e.code]=e,names$b[e.name]=e});function createProtocol$b(t,e,r,n,o){return{code:t,size:e,name:r,resolvable:!!n,path:!!o}}function getProtocol$b(t){if(typeof t=="number"){if(codes$e[t]!=null)return codes$e[t];throw new Error(`no protocol with code: ${t}`)}else if(typeof t=="string"){if(names$b[t]!=null)return names$b[t];throw new Error(`no protocol with name: ${t}`)}throw new Error(`invalid protocol id type: ${typeof t}`)}getProtocol$b("ip4"),getProtocol$b("ip6"),getProtocol$b("ipcidr");function convertToString$b(t,e){switch(getProtocol$b(t).code){case 4:case 41:return bytes2ip$b(e);case 42:return bytes2str$b(e);case 6:case 273:case 33:case 132:return bytes2port$b(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return bytes2str$b(e);case 421:return bytes2mh$b(e);case 444:return bytes2onion$b(e);case 445:return bytes2onion$b(e);case 466:return bytes2mb$b(e);default:return toString$t(e,"base16")}}function convertToBytes$b(t,e){switch(getProtocol$b(t).code){case 4:return ip2bytes$b(e);case 41:return ip2bytes$b(e);case 42:return str2bytes$b(e);case 6:case 273:case 33:case 132:return port2bytes$b(parseInt(e,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return str2bytes$b(e);case 421:return mh2bytes$b(e);case 444:return onion2bytes$b(e);case 445:return onion32bytes$b(e);case 466:return mb2bytes$b(e);default:return fromString$n(e,"base16")}}const decoders$b=Object.values(bases$b).map(t=>t.decoder),anybaseDecoder$b=function(){let t=decoders$b[0].or(decoders$b[1]);return decoders$b.slice(2).forEach(e=>t=t.or(e)),t}();function ip2bytes$b(t){if(!isIP(t))throw new Error("invalid ip address");return toBytes$c(t)}function bytes2ip$b(t){const e=toString$s(t,0,t.length);if(e==null)throw new Error("ipBuff is required");if(!isIP(e))throw new Error("invalid ip address");return e}function port2bytes$b(t){const e=new ArrayBuffer(2);return new DataView(e).setUint16(0,t),new Uint8Array(e)}function bytes2port$b(t){return new DataView(t.buffer).getUint16(t.byteOffset)}function str2bytes$b(t){const e=fromString$n(t),r=Uint8Array.from(encode$1a(e.length));return concat$5([r,e],r.length+e.length)}function bytes2str$b(t){const e=decode$1z(t);if(t=t.slice(encodingLength$n(e)),t.length!==e)throw new Error("inconsistent lengths");return toString$t(t)}function mh2bytes$b(t){let e;t[0]==="Q"||t[0]==="1"?e=decode$1B(base58btc$h.decode(`z${t}`)).bytes:e=CID$g.parse(t).multihash.bytes;const r=Uint8Array.from(encode$1a(e.length));return concat$5([r,e],r.length+e.length)}function mb2bytes$b(t){const e=anybaseDecoder$b.decode(t),r=Uint8Array.from(encode$1a(e.length));return concat$5([r,e],r.length+e.length)}function bytes2mb$b(t){const e=decode$1z(t),r=t.slice(encodingLength$n(e));if(r.length!==e)throw new Error("inconsistent lengths");return"u"+toString$t(r,"base64url")}function bytes2mh$b(t){const e=decode$1z(t),r=t.slice(encodingLength$n(e));if(r.length!==e)throw new Error("inconsistent lengths");return toString$t(r,"base58btc")}function onion2bytes$b(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==16)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion address.`);const r=base32$r.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes$b(n);return concat$5([r,o],r.length+o.length)}function onion32bytes$b(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==56)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion3 address.`);const r=base32$r.decode(`b${e[0]}`),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes$b(n);return concat$5([r,o],r.length+o.length)}function bytes2onion$b(t){const e=t.slice(0,t.length-2),r=t.slice(t.length-2),n=toString$t(e,"base32"),o=bytes2port$b(r);return`${n}:${o}`}function stringToMultiaddrParts$3(t){t=cleanPath$b(t);const e=[],r=[];let n=null;const o=t.split("/").slice(1);if(o.length===1&&o[0]==="")return{bytes:new Uint8Array,string:"/",tuples:[],stringTuples:[],path:null};for(let a=0;a<o.length;a++){const c=o[a],u=getProtocol$b(c);if(u.size===0){e.push([u.code]),r.push([u.code]);continue}if(a++,a>=o.length)throw ParseError$b("invalid address: "+t);if(u.path===!0){n=cleanPath$b(o.slice(a).join("/")),e.push([u.code,convertToBytes$b(u.code,n)]),r.push([u.code,n]);break}const l=convertToBytes$b(u.code,o[a]);e.push([u.code,l]),r.push([u.code,convertToString$b(u.code,l)])}return{string:stringTuplesToString$b(r),bytes:tuplesToBytes$b(e),tuples:e,stringTuples:r,path:n}}function bytesToMultiaddrParts$3(t){const e=[],r=[];let n=null,o=0;for(;o<t.length;){const a=decode$1z(t,o),c=encodingLength$n(a),u=getProtocol$b(a),l=sizeForAddr$b(u,t.slice(o+c));if(l===0){e.push([a]),r.push([a]),o+=c;continue}const f=t.slice(o+c,o+c+l);if(o+=l+c,o>t.length)throw ParseError$b("Invalid address Uint8Array: "+toString$t(t,"base16"));e.push([a,f]);const p=convertToString$b(a,f);if(r.push([a,p]),u.path===!0){n=p;break}}return{bytes:Uint8Array.from(t),string:stringTuplesToString$b(r),tuples:e,stringTuples:r,path:n}}function stringTuplesToString$b(t){const e=[];return t.map(r=>{const n=getProtocol$b(r[0]);return e.push(n.name),r.length>1&&r[1]!=null&&e.push(r[1]),null}),cleanPath$b(e.join("/"))}function tuplesToBytes$b(t){return concat$5(t.map(e=>{const r=getProtocol$b(e[0]);let n=Uint8Array.from(encode$1a(r.code));return e.length>1&&e[1]!=null&&(n=concat$5([n,e[1]])),n}))}function sizeForAddr$b(t,e){if(t.size>0)return t.size/8;if(t.size===0)return 0;{const r=decode$1z(e instanceof Uint8Array?e:Uint8Array.from(e));return r+encodingLength$n(r)}}function cleanPath$b(t){return"/"+t.trim().split("/").filter(e=>e).join("/")}function ParseError$b(t){return new Error("Error parsing address: "+t)}const inspect$c=Symbol.for("nodejs.util.inspect.custom"),symbol$g=Symbol.for("@multiformats/js-multiaddr/multiaddr"),DNS_CODES$b=[getProtocol$b("dns").code,getProtocol$b("dns4").code,getProtocol$b("dns6").code,getProtocol$b("dnsaddr").code];let Multiaddr$3=(st=class{constructor(e){N(this,"bytes");G(this,Et,void 0);G(this,lt,void 0);G(this,zt,void 0);G(this,Ht,void 0);N(this,Lr,!0);e==null&&(e="");let r;if(e instanceof Uint8Array)r=bytesToMultiaddrParts$3(e);else if(typeof e=="string"){if(e.length>0&&e.charAt(0)!=="/")throw new Error(`multiaddr "${e}" must start with a "/"`);r=stringToMultiaddrParts$3(e)}else if(isMultiaddr$b(e))r=bytesToMultiaddrParts$3(e.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr");this.bytes=r.bytes,W(this,Et,r.string),W(this,lt,r.tuples),W(this,zt,r.stringTuples),W(this,Ht,r.path)}toString(){return B(this,Et)}toJSON(){return this.toString()}toOptions(){let e,r,n,o,a="";const c=getProtocol$b("tcp"),u=getProtocol$b("udp"),l=getProtocol$b("ip4"),f=getProtocol$b("ip6"),p=getProtocol$b("dns6"),g=getProtocol$b("ip6zone");for(const[$,_]of this.stringTuples())$===g.code&&(a=`%${_??""}`),DNS_CODES$b.includes($)&&(r=c.name,o=443,n=`${_??""}${a}`,e=$===p.code?6:4),($===c.code||$===u.code)&&(r=getProtocol$b($).name,o=parseInt(_??"")),($===l.code||$===f.code)&&(r=getProtocol$b($).name,n=`${_??""}${a}`,e=$===f.code?6:4);if(e==null||r==null||n==null||o==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:e,host:n,transport:r,port:o}}protos(){return B(this,lt).map(([e])=>Object.assign({},getProtocol$b(e)))}protoCodes(){return B(this,lt).map(([e])=>e)}protoNames(){return B(this,lt).map(([e])=>getProtocol$b(e).name)}tuples(){return B(this,lt)}stringTuples(){return B(this,zt)}encapsulate(e){return e=new st(e),new st(this.toString()+e.toString())}decapsulate(e){const r=e.toString(),n=this.toString(),o=n.lastIndexOf(r);if(o<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${e.toString()}`);return new st(n.slice(0,o))}decapsulateCode(e){const r=this.tuples();for(let n=r.length-1;n>=0;n--)if(r[n][0]===e)return new st(tuplesToBytes$b(r.slice(0,n)));return this}getPeerId(){try{let e=[];this.stringTuples().forEach(([n,o])=>{n===names$b.p2p.code&&e.push([n,o]),n===names$b["p2p-circuit"].code&&(e=[])});const r=e.pop();if(r?.[1]!=null){const n=r[1];return n[0]==="Q"||n[0]==="1"?toString$t(base58btc$h.decode(`z${n}`),"base58btc"):toString$t(CID$g.parse(n).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){return B(this,Ht)}equals(e){return equals$z(this.bytes,e.bytes)}async resolve(e){const r=this.protos().find(o=>o.resolvable);if(r==null)return[this];const n=resolvers$c.get(r.name);if(n==null)throw new CodeError$3(`no available resolver for ${r.name}`,"ERR_NO_AVAILABLE_RESOLVER");return(await n(this,e)).map(o=>new st(o))}nodeAddress(){const e=this.toOptions();if(e.transport!=="tcp"&&e.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${e.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:e.family,address:e.host,port:e.port}}isThinWaistAddress(e){const r=(e??this).protos();return!(r.length!==2||r[0].code!==4&&r[0].code!==41||r[1].code!==6&&r[1].code!==273)}[(Lr=symbol$g,inspect$c)](){return`Multiaddr(${B(this,Et)})`}},Et=new WeakMap,lt=new WeakMap,zt=new WeakMap,Ht=new WeakMap,st);const resolvers$c=new Map;function isMultiaddr$b(t){return!!t?.[symbol$g]}function multiaddr$b(t){return new Multiaddr$3(t)}const DNS4$3=base$m("dns4"),DNS6$3=base$m("dns6"),DNSADDR$3=base$m("dnsaddr"),DNS$3=or$m(base$m("dns"),DNSADDR$3,DNS4$3,DNS6$3),IP$3=or$m(base$m("ip4"),base$m("ip6")),TCP$3=or$m(and$3(IP$3,base$m("tcp")),and$3(DNS$3,base$m("tcp"))),UDP$2=and$3(IP$3,base$m("udp")),UTP$2=and$3(UDP$2,base$m("utp")),QUIC$2=and$3(UDP$2,base$m("quic")),WebSockets$4=or$m(and$3(TCP$3,base$m("ws")),and$3(DNS$3,base$m("ws"))),WebSocketsSecure$3=or$m(and$3(TCP$3,base$m("wss")),and$3(DNS$3,base$m("wss")),and$3(TCP$3,base$m("tls"),base$m("ws")),and$3(DNS$3,base$m("tls"),base$m("ws"))),HTTP$2=or$m(and$3(TCP$3,base$m("http")),and$3(IP$3,base$m("http")),and$3(DNS$3,base$m("http"))),HTTPS$2=or$m(and$3(TCP$3,base$m("https")),and$3(IP$3,base$m("https")),and$3(DNS$3,base$m("https"))),_WebRTC$1=and$3(UDP$2,base$m("webrtc"),base$m("certhash")),WebRTC$1=or$m(and$3(_WebRTC$1,base$m("p2p")),_WebRTC$1),WebRTCStar$3=or$m(and$3(WebSockets$4,base$m("p2p-webrtc-star"),base$m("p2p")),and$3(WebSocketsSecure$3,base$m("p2p-webrtc-star"),base$m("p2p")),and$3(WebSockets$4,base$m("p2p-webrtc-star")),and$3(WebSocketsSecure$3,base$m("p2p-webrtc-star"))),WebRTCDirect$2=or$m(and$3(HTTP$2,base$m("p2p-webrtc-direct"),base$m("p2p")),and$3(HTTPS$2,base$m("p2p-webrtc-direct"),base$m("p2p")),and$3(HTTP$2,base$m("p2p-webrtc-direct")),and$3(HTTPS$2,base$m("p2p-webrtc-direct"))),Reliable$2=or$m(WebSockets$4,WebSocketsSecure$3,HTTP$2,HTTPS$2,WebRTCStar$3,WebRTCDirect$2,TCP$3,UTP$2,QUIC$2,DNS$3,WebRTC$1),_P2P$2=or$m(and$3(Reliable$2,base$m("p2p")),WebRTCStar$3,WebRTCDirect$2,WebRTC$1,base$m("p2p")),_Circuit$2=or$m(and$3(_P2P$2,base$m("p2p-circuit"),_P2P$2),and$3(_P2P$2,base$m("p2p-circuit")),and$3(base$m("p2p-circuit"),_P2P$2),and$3(Reliable$2,base$m("p2p-circuit")),and$3(base$m("p2p-circuit"),Reliable$2),base$m("p2p-circuit")),CircuitRecursive$2=()=>or$m(and$3(_Circuit$2,CircuitRecursive$2),_Circuit$2),Circuit$3=CircuitRecursive$2(),P2P$1=or$m(and$3(Circuit$3,_P2P$2,Circuit$3),and$3(_P2P$2,Circuit$3),and$3(Circuit$3,_P2P$2),Circuit$3,_P2P$2),IPFS$1=P2P$1;function makeMatchesFunction$3(t){function e(r){let n;try{n=multiaddr$b(r)}catch{return!1}const o=t(n.protoNames());return o===null?!1:o===!0||o===!1?o:o.length===0}return e}function and$3(...t){function e(r){if(r.length<t.length)return null;let n=r;return t.some(o=>(n=typeof o=="function"?o().partialMatch(r):o.partialMatch(r),Array.isArray(n)&&(r=n),n===null)),n}return{toString:function(){return"{ "+t.join(" ")+" }"},input:t,matches:makeMatchesFunction$3(e),partialMatch:e}}function or$m(...t){function e(r){let n=null;return t.some(o=>{const a=typeof o=="function"?o().partialMatch(r):o.partialMatch(r);return a!=null?(n=a,!0):!1}),n}return{toString:function(){return"{ "+t.join(" ")+" }"},input:t,matches:makeMatchesFunction$3(e),partialMatch:e}}function base$m(t){const e=t;function r(o){let a;try{a=multiaddr$b(o)}catch{return!1}const c=a.protoNames();return c.length===1&&c[0]===e}function n(o){return o.length===0?null:o[0]===e?o.slice(1):null}return{toString:function(){return e},matches:r,partialMatch:n}}function isValidMultiaddr(t){try{return IPFS$1.matches(t)}catch{return!1}}function createAdd$6({repo:t}){async function e(r,n={}){if(!isValidMultiaddr(r))throw new Error(`${r} is not a valid Multiaddr`);const o=await t.config.getAll(n),a=o.Bootstrap||[];return a.push(r.toString()),o.Bootstrap=Array.from(new Set(a)).sort((c,u)=>c.localeCompare(u)),await t.config.replace(o),{Peers:[r]}}return withTimeoutOption(e)}const isV4$a=isIPv4,isV6$a=isIPv6,toBytes$b=function(t){let e=0;if(t=t.toString().trim(),isV4$a(t)){const r=new Uint8Array(e+4);return t.split(/\./g).forEach(n=>{r[e++]=parseInt(n,10)&255}),r}if(isV6$a(t)){const r=t.split(":",8);let n;for(n=0;n<r.length;n++){const a=isV4$a(r[n]);let c;a&&(c=toBytes$b(r[n]),r[n]=toString$D(c.slice(0,2),"base16")),c!=null&&++n<8&&r.splice(n,0,toString$D(c.slice(2,4),"base16"))}if(r[0]==="")for(;r.length<8;)r.unshift("0");else if(r[r.length-1]==="")for(;r.length<8;)r.push("0");else if(r.length<8){for(n=0;n<r.length&&r[n]!=="";n++);const a=[n,1];for(n=9-r.length;n>0;n--)a.push("0");r.splice.apply(r,a)}const o=new Uint8Array(e+16);for(n=0;n<r.length;n++){const a=parseInt(r[n],16);o[e++]=a>>8&255,o[e++]=a&255}return o}throw new Error("invalid ip address")},toString$r=function(t,e=0,r){e=~~e,r=r??t.length-e;const n=new DataView(t.buffer);if(r===4){const o=[];for(let a=0;a<r;a++)o.push(t[e+a]);return o.join(".")}if(r===16){const o=[];for(let a=0;a<r;a+=2)o.push(n.getUint16(e+a).toString(16));return o.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""},V$a=-1,names$a={},codes$d={},table$a=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,V$a,"ip6zone"],[43,8,"ipcidr"],[53,V$a,"dns",!0],[54,V$a,"dns4",!0],[55,V$a,"dns6",!0],[56,V$a,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc"],[281,0,"webrtc-w3c"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,V$a,"unix",!1,!0],[421,V$a,"ipfs"],[421,V$a,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,V$a,"garlic64"],[448,0,"tls"],[449,V$a,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,V$a,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[777,V$a,"memory"]];table$a.forEach(t=>{const e=createProtocol$a(...t);codes$d[e.code]=e,names$a[e.name]=e});function createProtocol$a(t,e,r,n,o){return{code:t,size:e,name:r,resolvable:!!n,path:!!o}}function getProtocol$a(t){if(typeof t=="number"){if(codes$d[t]!=null)return codes$d[t];throw new Error(`no protocol with code: ${t}`)}else if(typeof t=="string"){if(names$a[t]!=null)return names$a[t];throw new Error(`no protocol with name: ${t}`)}throw new Error(`invalid protocol id type: ${typeof t}`)}function convertToString$a(t,e){switch(getProtocol$a(t).code){case 4:case 41:return bytes2ip$a(e);case 42:return bytes2str$a(e);case 6:case 273:case 33:case 132:return bytes2port$a(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return bytes2str$a(e);case 421:return bytes2mh$a(e);case 444:return bytes2onion$a(e);case 445:return bytes2onion$a(e);case 466:return bytes2mb$a(e);default:return toString$D(e,"base16")}}function convertToBytes$a(t,e){switch(getProtocol$a(t).code){case 4:return ip2bytes$a(e);case 41:return ip2bytes$a(e);case 42:return str2bytes$a(e);case 6:case 273:case 33:case 132:return port2bytes$a(parseInt(e,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return str2bytes$a(e);case 421:return mh2bytes$a(e);case 444:return onion2bytes$a(e);case 445:return onion32bytes$a(e);case 466:return mb2bytes$a(e);default:return fromString$y(e,"base16")}}const decoders$a=Object.values(bases$f).map(t=>t.decoder),anybaseDecoder$a=function(){let t=decoders$a[0].or(decoders$a[1]);return decoders$a.slice(2).forEach(e=>t=t.or(e)),t}();function ip2bytes$a(t){if(!isIP(t))throw new Error("invalid ip address");return toBytes$b(t)}function bytes2ip$a(t){const e=toString$r(t,0,t.length);if(e==null)throw new Error("ipBuff is required");if(!isIP(e))throw new Error("invalid ip address");return e}function port2bytes$a(t){const e=new ArrayBuffer(2);return new DataView(e).setUint16(0,t),new Uint8Array(e)}function bytes2port$a(t){return new DataView(t.buffer).getUint16(t.byteOffset)}function str2bytes$a(t){const e=fromString$y(t),r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function bytes2str$a(t){const e=varint$w.decode(t);if(t=t.slice(varint$w.decode.bytes),t.length!==e)throw new Error("inconsistent lengths");return toString$D(t)}function mh2bytes$a(t){let e;t[0]==="Q"||t[0]==="1"?e=decode$24(base58btc$n.decode(`z${t}`)).bytes:e=CID$k.parse(t).multihash.bytes;const r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function mb2bytes$a(t){const e=anybaseDecoder$a.decode(t),r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function bytes2mb$a(t){const e=varint$w.decode(t),r=t.slice(varint$w.decode.bytes);if(r.length!==e)throw new Error("inconsistent lengths");return"u"+toString$D(r,"base64url")}function bytes2mh$a(t){const e=varint$w.decode(t),r=t.slice(varint$w.decode.bytes);if(r.length!==e)throw new Error("inconsistent lengths");return toString$D(r,"base58btc")}function onion2bytes$a(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==16)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion address.`);const r=base32$B.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes$a(n);return concat$8([r,o],r.length+o.length)}function onion32bytes$a(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==56)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion3 address.`);const r=base32$B.decode(`b${e[0]}`),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes$a(n);return concat$8([r,o],r.length+o.length)}function bytes2onion$a(t){const e=t.slice(0,t.length-2),r=t.slice(t.length-2),n=toString$D(e,"base32"),o=bytes2port$a(r);return`${n}:${o}`}function stringToStringTuples$7(t){const e=[],r=t.split("/").slice(1);if(r.length===1&&r[0]==="")return[];for(let n=0;n<r.length;n++){const o=r[n],a=getProtocol$a(o);if(a.size===0){e.push([o]);continue}if(n++,n>=r.length)throw ParseError$a("invalid address: "+t);if(a.path===!0){e.push([o,cleanPath$a(r.slice(n).join("/"))]);break}e.push([o,r[n]])}return e}function stringTuplesToString$a(t){const e=[];return t.map(r=>{const n=protoFromTuple$7(r);return e.push(n.name),r.length>1&&r[1]!=null&&e.push(r[1]),null}),cleanPath$a(e.join("/"))}function stringTuplesToTuples$7(t){return t.map(e=>{Array.isArray(e)||(e=[e]);const r=protoFromTuple$7(e);return e.length>1?[r.code,convertToBytes$a(r.code,e[1])]:[r.code]})}function tuplesToStringTuples$7(t){return t.map(e=>{const r=protoFromTuple$7(e);return e[1]!=null?[r.code,convertToString$a(r.code,e[1])]:[r.code]})}function tuplesToBytes$a(t){return fromBytes$8(concat$8(t.map(e=>{const r=protoFromTuple$7(e);let n=Uint8Array.from(varint$w.encode(r.code));return e.length>1&&e[1]!=null&&(n=concat$8([n,e[1]])),n})))}function sizeForAddr$a(t,e){return t.size>0?t.size/8:t.size===0?0:varint$w.decode(e)+(varint$w.decode.bytes??0)}function bytesToTuples$7(t){const e=[];let r=0;for(;r<t.length;){const n=varint$w.decode(t,r),o=varint$w.decode.bytes??0,a=getProtocol$a(n),c=sizeForAddr$a(a,t.slice(r+o));if(c===0){e.push([n]),r+=o;continue}const u=t.slice(r+o,r+o+c);if(r+=c+o,r>t.length)throw ParseError$a("Invalid address Uint8Array: "+toString$D(t,"base16"));e.push([n,u])}return e}function bytesToString$7(t){const e=bytesToTuples$7(t),r=tuplesToStringTuples$7(e);return stringTuplesToString$a(r)}function stringToBytes$7(t){t=cleanPath$a(t);const e=stringToStringTuples$7(t),r=stringTuplesToTuples$7(e);return tuplesToBytes$a(r)}function fromString$m(t){return stringToBytes$7(t)}function fromBytes$8(t){const e=validateBytes$7(t);if(e!=null)throw e;return Uint8Array.from(t)}function validateBytes$7(t){try{bytesToTuples$7(t)}catch(e){return e}}function cleanPath$a(t){return"/"+t.trim().split("/").filter(e=>e).join("/")}function ParseError$a(t){return new Error("Error parsing address: "+t)}function protoFromTuple$7(t){return getProtocol$a(t[0])}var __classPrivateFieldGet$7=function(t,e,r,n){if(r==="a"&&!n)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?t!==e||!n:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return r==="m"?n:r==="a"?n.call(t):n?n.value:e.get(t)},__classPrivateFieldSet$7=function(t,e,r,n,o){if(n==="m")throw new TypeError("Private method is not writable");if(n==="a"&&!o)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?t!==e||!o:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return n==="a"?o.call(t,r):o?o.value=r:e.set(t,r),r},_DefaultMultiaddr_string$7,_DefaultMultiaddr_tuples$7,_DefaultMultiaddr_stringTuples$7,_a$7;const inspect$b=Symbol.for("nodejs.util.inspect.custom"),DNS_CODES$a=[getProtocol$a("dns").code,getProtocol$a("dns4").code,getProtocol$a("dns6").code,getProtocol$a("dnsaddr").code],resolvers$b=new Map,symbol$f=Symbol.for("@multiformats/js-multiaddr/multiaddr");function isMultiaddr$a(t){return!!t?.[symbol$f]}let DefaultMultiaddr$7=class Mt{constructor(e){if(_DefaultMultiaddr_string$7.set(this,void 0),_DefaultMultiaddr_tuples$7.set(this,void 0),_DefaultMultiaddr_stringTuples$7.set(this,void 0),this[_a$7]=!0,e==null&&(e=""),e instanceof Uint8Array)this.bytes=fromBytes$8(e);else if(typeof e=="string"){if(e.length>0&&e.charAt(0)!=="/")throw new Error(`multiaddr "${e}" must start with a "/"`);this.bytes=fromString$m(e)}else if(isMultiaddr$a(e))this.bytes=fromBytes$8(e.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr")}toString(){return __classPrivateFieldGet$7(this,_DefaultMultiaddr_string$7,"f")==null&&__classPrivateFieldSet$7(this,_DefaultMultiaddr_string$7,bytesToString$7(this.bytes),"f"),__classPrivateFieldGet$7(this,_DefaultMultiaddr_string$7,"f")}toJSON(){return this.toString()}toOptions(){let e,r,n,o,a="";const c=getProtocol$a("tcp"),u=getProtocol$a("udp"),l=getProtocol$a("ip4"),f=getProtocol$a("ip6"),p=getProtocol$a("dns6"),g=getProtocol$a("ip6zone");for(const[$,_]of this.stringTuples())$===g.code&&(a=`%${_??""}`),DNS_CODES$a.includes($)&&(r=c.name,o=443,n=`${_??""}${a}`,e=$===p.code?6:4),($===c.code||$===u.code)&&(r=getProtocol$a($).name,o=parseInt(_??"")),($===l.code||$===f.code)&&(r=getProtocol$a($).name,n=`${_??""}${a}`,e=$===f.code?6:4);if(e==null||r==null||n==null||o==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:e,host:n,transport:r,port:o}}protos(){return this.protoCodes().map(e=>Object.assign({},getProtocol$a(e)))}protoCodes(){const e=[],r=this.bytes;let n=0;for(;n<r.length;){const o=varint$w.decode(r,n),a=varint$w.decode.bytes??0,c=getProtocol$a(o),u=sizeForAddr$a(c,r.slice(n+a));n+=u+a,e.push(o)}return e}protoNames(){return this.protos().map(e=>e.name)}tuples(){return __classPrivateFieldGet$7(this,_DefaultMultiaddr_tuples$7,"f")==null&&__classPrivateFieldSet$7(this,_DefaultMultiaddr_tuples$7,bytesToTuples$7(this.bytes),"f"),__classPrivateFieldGet$7(this,_DefaultMultiaddr_tuples$7,"f")}stringTuples(){return __classPrivateFieldGet$7(this,_DefaultMultiaddr_stringTuples$7,"f")==null&&__classPrivateFieldSet$7(this,_DefaultMultiaddr_stringTuples$7,tuplesToStringTuples$7(this.tuples()),"f"),__classPrivateFieldGet$7(this,_DefaultMultiaddr_stringTuples$7,"f")}encapsulate(e){return e=new Mt(e),new Mt(this.toString()+e.toString())}decapsulate(e){const r=e.toString(),n=this.toString(),o=n.lastIndexOf(r);if(o<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${e.toString()}`);return new Mt(n.slice(0,o))}decapsulateCode(e){const r=this.tuples();for(let n=r.length-1;n>=0;n--)if(r[n][0]===e)return new Mt(tuplesToBytes$a(r.slice(0,n)));return this}getPeerId(){try{const e=this.stringTuples().filter(r=>r[0]===names$a.ipfs.code).pop();if(e?.[1]!=null){const r=e[1];return r[0]==="Q"||r[0]==="1"?toString$D(base58btc$n.decode(`z${r}`),"base58btc"):toString$D(CID$k.parse(r).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){let e=null;try{e=this.stringTuples().filter(r=>getProtocol$a(r[0]).path===!0)[0][1],e==null&&(e=null)}catch{e=null}return e}equals(e){return equals$R(this.bytes,e.bytes)}async resolve(e){const r=this.protos().find(o=>o.resolvable);if(r==null)return[this];const n=resolvers$b.get(r.name);if(n==null)throw errcode(new Error(`no available resolver for ${r.name}`),"ERR_NO_AVAILABLE_RESOLVER");return(await n(this,e)).map(o=>new Mt(o))}nodeAddress(){const e=this.toOptions();if(e.transport!=="tcp"&&e.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${e.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:e.family,address:e.host,port:e.port}}isThinWaistAddress(e){const r=(e??this).protos();return!(r.length!==2||r[0].code!==4&&r[0].code!==41||r[1].code!==6&&r[1].code!==273)}[(_DefaultMultiaddr_string$7=new WeakMap,_DefaultMultiaddr_tuples$7=new WeakMap,_DefaultMultiaddr_stringTuples$7=new WeakMap,_a$7=symbol$f,inspect$b)](){return`Multiaddr(${bytesToString$7(this.bytes)})`}};function multiaddr$a(t){return new DefaultMultiaddr$7(t)}function createClear$1({repo:t}){async function e(r={}){const n=await t.config.getAll(r),o=n.Bootstrap||[];return n.Bootstrap=[],await t.config.replace(n),{Peers:o.map(a=>multiaddr$a(a))}}return withTimeoutOption(e)}function createList$4({repo:t}){async function e(r={}){return{Peers:(await t.config.get("Bootstrap",r)||[]).map(n=>multiaddr$a(n))}}return withTimeoutOption(e)}const getDefaultConfig=()=>({Addresses:{Swarm:[],Announce:[],NoAnnounce:[],API:"",Gateway:"",RPC:"",Delegates:["/dns4/node0.delegate.ipfs.io/tcp/443/https","/dns4/node1.delegate.ipfs.io/tcp/443/https","/dns4/node2.delegate.ipfs.io/tcp/443/https","/dns4/node3.delegate.ipfs.io/tcp/443/https"]},Discovery:{MDNS:{Enabled:!1,Interval:10},webRTCStar:{Enabled:!0}},Bootstrap:["/dnsaddr/bootstrap.libp2p.io/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN","/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb","/dnsaddr/bootstrap.libp2p.io/p2p/QmZa1sAxajnQjVM8WjWXoMbmPd7NsWhfKsPkErzpm9wGkp","/dnsaddr/bootstrap.libp2p.io/p2p/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa","/dnsaddr/bootstrap.libp2p.io/p2p/QmcZf59bWwK5XFi76CZX8cbJ4BhTzzA3gU1ZjYZcYW3dwt","/dns4/node0.preload.ipfs.io/tcp/443/wss/p2p/QmZMxNdpMkewiVZLMRxaNxUeZpDUb34pWjZ1kZvsd16Zic","/dns4/node1.preload.ipfs.io/tcp/443/wss/p2p/Qmbut9Ywz9YEDrz8ySBSgWyJk41Uvm2QJPhwDJzJyGFsD6","/dns4/node2.preload.ipfs.io/tcp/443/wss/p2p/QmV7gnbW5VTcJ3oyM2Xk1rdFBJ3kTkvxc87UFGsun29STS","/dns4/node3.preload.ipfs.io/tcp/443/wss/p2p/QmY7JB6MQXhxHvq7dBDh4HpbH29v4yE9JRadAVpndvzySN"],Pubsub:{Enabled:!0},Swarm:{ConnMgr:{LowWater:5,HighWater:20},DisableNatPortMap:!0},Routing:{Type:"dhtclient"}});function createReset$1({repo:t}){async function e(r={}){const n=await t.config.getAll(r);return n.Bootstrap=getDefaultConfig().Bootstrap,await t.config.replace(n),{Peers:getDefaultConfig().Bootstrap.map(o=>multiaddr$a(o))}}return withTimeoutOption(e)}function createRm$a({repo:t}){async function e(r,n={}){if(!isValidMultiaddr(r))throw new Error(`${r} is not a valid Multiaddr`);const o=await t.config.getAll(n);return o.Bootstrap=(o.Bootstrap||[]).filter(a=>a.toString()!==r.toString()),await t.config.replace(o),{Peers:[r]}}return withTimeoutOption(e)}class BootstrapAPI{constructor({repo:e}){this.add=createAdd$6({repo:e}),this.list=createList$4({repo:e}),this.rm=createRm$a({repo:e}),this.clear=createClear$1({repo:e}),this.reset=createReset$1({repo:e})}}function createGet$9({preload:t,repo:e}){async function r(n,o={}){return o.preload!==!1&&t(n),e.blocks.get(n,o)}return withTimeoutOption(r)}function createPut$6({codecs:t,hashers:e,repo:r,preload:n}){async function o(a,c={}){const u=c.pin?await r.gcLock.readLock():null;try{const l=c.version!=null?c.version:0,f=c.format||(l===0?"dag-pb":"raw"),p=await(await e.getHasher(c.mhtype||"sha2-256")).digest(a),g=await t.getCodec(f),$=CID$k.create(l,g.code,p);return await r.blocks.put($,a,{signal:c.signal}),c.preload!==!1&&n($),c.pin===!0&&await r.pins.pinRecursively($,{signal:c.signal}),$}finally{u&&u()}}return withTimeoutOption(o)}const CustomEvent$1=globalThis.CustomEvent??Event;async function*parallel(t,e={}){let r=e.concurrency??1/0;r<1&&(r=1/0);const n=e.ordered==null?!1:e.ordered,o=new EventTarget,a=[];let c=pDefer$1(),u=pDefer$1(),l=!1,f,p=!1;o.addEventListener("task-complete",()=>{u.resolve()}),Promise.resolve().then(async()=>{try{for await(const b of t){if(a.length===r&&(c=pDefer$1(),await c.promise),p)break;const D={done:!1};a.push(D),b().then(v=>{D.done=!0,D.ok=!0,D.value=v,o.dispatchEvent(new CustomEvent$1("task-complete"))},v=>{D.done=!0,D.err=v,o.dispatchEvent(new CustomEvent$1("task-complete"))})}l=!0,o.dispatchEvent(new CustomEvent$1("task-complete"))}catch(b){f=b,o.dispatchEvent(new CustomEvent$1("task-complete"))}});function g(){return n?a[0]?.done:!!a.find(b=>b.done)}function*$(){for(;a.length>0&&a[0].done;){const b=a[0];if(a.shift(),b.ok)yield b.value;else throw p=!0,c.resolve(),b.err;c.resolve()}}function*_(){for(;g();)for(let b=0;b<a.length;b++)if(a[b].done){const D=a[b];if(a.splice(b,1),b--,D.ok)yield D.value;else throw p=!0,c.resolve(),D.err;c.resolve()}}for(;;){if(g()||(u=pDefer$1(),await u.promise),f!=null)throw f;if(n?yield*$():yield*_(),l&&a.length===0)break}}function cleanCid(t){return t instanceof Uint8Array?CID$k.decode(t):CID$k.parse(t.toString())}const BLOCK_RM_CONCURRENCY$1=8;function createRm$9({repo:t}){async function*e(r,n={}){Array.isArray(r)||(r=[r]);const o=await t.gcLock.writeLock();try{yield*pipe$1(r,a=>map$3(a,c=>async()=>{c=cleanCid(c);const u={cid:c};try{if(!await t.blocks.has(c))throw errcode(new Error("block not found"),"ERR_BLOCK_NOT_FOUND");await t.blocks.delete(c)}catch(l){n.force||(l.message=`cannot remove ${c}: ${l.message}`,u.error=l)}return u}),a=>parallel(a,{concurrency:BLOCK_RM_CONCURRENCY$1}),a=>filter$1(a,()=>!n.quiet))}finally{o()}}return withTimeoutOption(e)}function createStat$8({repo:t,preload:e}){async function r(n,o={}){n=cleanCid(n),o.preload!==!1&&e(n);const a=await t.blocks.get(n);return{cid:n,size:a.length}}return withTimeoutOption(r)}class BlockAPI{constructor({codecs:e,hashers:r,preload:n,repo:o}){this.get=createGet$9({preload:n,repo:o}),this.put=createPut$6({codecs:e,hashers:r,preload:n,repo:o}),this.rm=createRm$9({repo:o}),this.stat=createStat$8({preload:n,repo:o})}}async function*browserReadableStreamToIt(t,e={}){const r=t.getReader();try{for(;;){const n=await r.read();if(n.done)return;yield n.value}}finally{e.preventCancel!==!0&&await r.cancel(),r.releaseLock()}}function blobToIt(t){return typeof t.stream=="function"?browserReadableStreamToIt(t.stream()):browserReadableStreamToIt(new Response(t).body)}function peekableIterator(t){const[e,r]=t[Symbol.asyncIterator]!=null?[t[Symbol.asyncIterator](),Symbol.asyncIterator]:[t[Symbol.iterator](),Symbol.iterator],n=[];return{peek:()=>e.next(),push:o=>{n.push(o)},next:()=>n.length>0?{done:!1,value:n.shift()}:e.next(),[r](){return this}}}function isBytes(t){return ArrayBuffer.isView(t)||t instanceof ArrayBuffer}function isBlob(t){return t.constructor&&(t.constructor.name==="Blob"||t.constructor.name==="File")&&typeof t.stream=="function"}function isFileObject(t){return typeof t=="object"&&(t.path||t.content)}const isReadableStream=t=>t&&typeof t.getReader=="function";async function*toAsyncIterable(t){yield t}async function normaliseContent$1(t){if(isBytes(t))return toAsyncIterable(toBytes$a(t));if(typeof t=="string"||t instanceof String)return toAsyncIterable(toBytes$a(t.toString()));if(isBlob(t))return blobToIt(t);if(isReadableStream(t)&&(t=browserReadableStreamToIt(t)),Symbol.iterator in t||Symbol.asyncIterator in t){const e=peekableIterator(t),{value:r,done:n}=await e.peek();if(n)return toAsyncIterable(new Uint8Array(0));if(e.push(r),Number.isInteger(r))return toAsyncIterable(Uint8Array.from(await all$1(e)));if(isBytes(r)||typeof r=="string"||r instanceof String)return map$3(e,toBytes$a)}throw errcode(new Error(`Unexpected input: ${t}`),"ERR_UNEXPECTED_INPUT")}function toBytes$a(t){return t instanceof Uint8Array?t:ArrayBuffer.isView(t)?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):t instanceof ArrayBuffer?new Uint8Array(t):Array.isArray(t)?Uint8Array.from(t):fromString$y(t.toString())}async function*normaliseCandidateSingle(t,e){if(t==null)throw errcode(new Error(`Unexpected input: ${t}`),"ERR_UNEXPECTED_INPUT");if(typeof t=="string"||t instanceof String){yield toFileObject$1(t.toString(),e);return}if(isBytes(t)||isBlob(t)){yield toFileObject$1(t,e);return}if(isReadableStream(t)&&(t=browserReadableStreamToIt(t)),Symbol.iterator in t||Symbol.asyncIterator in t){const r=peekableIterator(t),{value:n,done:o}=await r.peek();if(o){yield{content:[]};return}if(r.push(n),Number.isInteger(n)||isBytes(n)||typeof n=="string"||n instanceof String){yield toFileObject$1(r,e);return}throw errcode(new Error("Unexpected input: multiple items passed - if you are using ipfs.add, please use ipfs.addAll instead"),"ERR_UNEXPECTED_INPUT")}if(isFileObject(t)){yield toFileObject$1(t,e);return}throw errcode(new Error('Unexpected input: cannot convert "'+typeof t+'" into ImportCandidate'),"ERR_UNEXPECTED_INPUT")}async function toFileObject$1(t,e){const{path:r,mode:n,mtime:o,content:a}=t,c={path:r||"",mode:parseMode(n),mtime:parseMtime$1(o)};return a?c.content=await e(a):r||(c.content=await e(t)),c}function normaliseInput$2(t){return normaliseCandidateSingle(t,normaliseContent$1)}function createAdd$5({addAll:t}){async function e(r,n={}){const o=await last(t(normaliseInput$2(r),n));if(o==null)throw Error("Failed to add a file, if you see this please report a bug");return o}return e}async function*batch(t,e=1){let r=[];e<1&&(e=1);for await(const n of t)for(r.push(n);r.length>=e;)yield r.slice(0,e),r=r.slice(e);for(;r.length>0;)yield r.slice(0,e),r=r.slice(e)}async function*parallelBatch(t,e=1){for await(const r of batch(t,e)){const n=r.map(async o=>await o().then(a=>({ok:!0,value:a}),a=>({ok:!1,err:a})));for(let o=0;o<n.length;o++){const a=await n[o];if(a.ok)yield a.value;else throw a.err}}}const equals$y=(t,e)=>{if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0},coerce$i=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")};var encode_1$j=encode$19,MSB$p=128,REST$p=127,MSBALL$j=~REST$p,INT$j=Math.pow(2,31);function encode$19(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$j;)e[r++]=t&255|MSB$p,t/=128;for(;t&MSBALL$j;)e[r++]=t&255|MSB$p,t>>>=7;return e[r]=t|0,encode$19.bytes=r-n+1,e}var decode$1y=read$k,MSB$1$j=128,REST$1$j=127;function read$k(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$k.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$j)<<o:(c&REST$1$j)*Math.pow(2,o),o+=7}while(c>=MSB$1$j);return read$k.bytes=a-n,r}var N1$o=Math.pow(2,7),N2$o=Math.pow(2,14),N3$o=Math.pow(2,21),N4$o=Math.pow(2,28),N5$o=Math.pow(2,35),N6$o=Math.pow(2,42),N7$o=Math.pow(2,49),N8$k=Math.pow(2,56),N9$k=Math.pow(2,63),length$l=function(t){return t<N1$o?1:t<N2$o?2:t<N3$o?3:t<N4$o?4:t<N5$o?5:t<N6$o?6:t<N7$o?7:t<N8$k?8:t<N9$k?9:10},varint$k={encode:encode_1$j,decode:decode$1y,encodingLength:length$l},_brrp_varint$i=varint$k;const decode$1x=(t,e=0)=>[_brrp_varint$i.decode(t,e),_brrp_varint$i.decode.bytes],encodeTo$i=(t,e,r=0)=>(_brrp_varint$i.encode(t,e,r),e),encodingLength$m=t=>_brrp_varint$i.encodingLength(t),create$n=(t,e)=>{const r=e.byteLength,n=encodingLength$m(t),o=n+encodingLength$m(r),a=new Uint8Array(o+r);return encodeTo$i(t,a,0),encodeTo$i(r,a,n),a.set(e,o),new Digest$i(t,r,e,a)},decode$1w=t=>{const e=coerce$i(t),[r,n]=decode$1x(e),[o,a]=decode$1x(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$i(r,o,c,e)},equals$x=(t,e)=>{if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$y(t.bytes,r.bytes)}};let Digest$i=class{constructor(t,e,r,n){this.code=t,this.size=e,this.digest=r,this.bytes=n}};const from$s=({name:t,code:e,encode:r})=>new Hasher$9(t,e,r);let Hasher$9=class{constructor(t,e,r){this.name=t,this.code=e,this.encode=r}digest(t){if(t instanceof Uint8Array){const e=this.encode(t);return e instanceof Uint8Array?create$n(this.code,e):e.then(r=>create$n(this.code,r))}else throw Error("Unknown type, must be binary type")}};const sha$8=t=>async e=>new Uint8Array(await crypto.subtle.digest(t,e)),sha256$9=from$s({name:"sha2-256",code:18,encode:sha$8("SHA-256")}),empty$1=new Uint8Array(0);function fromHex(t){const e=t.match(/../g);return e!=null?new Uint8Array(e.map(r=>parseInt(r,16))):empty$1}function coerce$h(t){if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")}function base$l(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$l=base$l,_brrp__multiformats_scope_baseX$i=src$l;let Encoder$k=class{constructor(t,e,r){N(this,"name");N(this,"prefix");N(this,"baseEncode");this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$k=class{constructor(t,e,r){N(this,"name");N(this,"prefix");N(this,"baseDecode");N(this,"prefixCodePoint");if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$l(this,t)}},ComposedDecoder$i=class{constructor(t){N(this,"decoders");this.decoders=t}or(t){return or$l(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r!=null)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};function or$l(t,e){return new ComposedDecoder$i({...t.decoders??{[t.prefix]:t},...e.decoders??{[e.prefix]:e}})}let Codec$i=class{constructor(t,e,r,n){N(this,"name");N(this,"prefix");N(this,"baseEncode");N(this,"baseDecode");N(this,"encoder");N(this,"decoder");this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$k(t,e,r),this.decoder=new Decoder$k(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};function from$r({name:t,prefix:e,encode:r,decode:n}){return new Codec$i(t,e,r,n)}function baseX$i({name:t,prefix:e,alphabet:r}){const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$i(r,t);return from$r({prefix:e,name:t,encode:n,decode:a=>coerce$h(o(a))})}function decode$1v(t,e,r,n){const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c}function encode$18(t,e,r){const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c!==0&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a}function rfc4648$i({name:t,prefix:e,bitsPerChar:r,alphabet:n}){return from$r({prefix:e,name:t,encode(o){return encode$18(o,n,r)},decode(o){return decode$1v(o,n,r,t)}})}rfc4648$i({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),rfc4648$i({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),rfc4648$i({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),rfc4648$i({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),rfc4648$i({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),rfc4648$i({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),rfc4648$i({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),rfc4648$i({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),rfc4648$i({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),baseX$i({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),baseX$i({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var encode_1$i=encode$17,MSB$o=128,REST$o=127,MSBALL$i=~REST$o,INT$i=Math.pow(2,31);function encode$17(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$i;)e[r++]=t&255|MSB$o,t/=128;for(;t&MSBALL$i;)e[r++]=t&255|MSB$o,t>>>=7;return e[r]=t|0,encode$17.bytes=r-n+1,e}var decode$1u=read$j,MSB$1$i=128,REST$1$i=127;function read$j(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$j.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$i)<<o:(c&REST$1$i)*Math.pow(2,o),o+=7}while(c>=MSB$1$i);return read$j.bytes=a-n,r}var N1$n=Math.pow(2,7),N2$n=Math.pow(2,14),N3$n=Math.pow(2,21),N4$n=Math.pow(2,28),N5$n=Math.pow(2,35),N6$n=Math.pow(2,42),N7$n=Math.pow(2,49),N8$j=Math.pow(2,56),N9$j=Math.pow(2,63),length$k=function(t){return t<N1$n?1:t<N2$n?2:t<N3$n?3:t<N4$n?4:t<N5$n?5:t<N6$n?6:t<N7$n?7:t<N8$j?8:t<N9$j?9:10},varint$j={encode:encode_1$i,decode:decode$1u,encodingLength:length$k},_brrp_varint$h=varint$j;function encodeTo$h(t,e,r=0){return _brrp_varint$h.encode(t,e,r),e}function encodingLength$l(t){return _brrp_varint$h.encodingLength(t)}function create$m(t,e){const r=e.byteLength,n=encodingLength$l(t),o=n+encodingLength$l(r),a=new Uint8Array(o+r);return encodeTo$h(t,a,0),encodeTo$h(r,a,n),a.set(e,o),new Digest$h(t,r,e,a)}let Digest$h=class{constructor(t,e,r,n){N(this,"code");N(this,"size");N(this,"digest");N(this,"bytes");this.code=t,this.size=e,this.digest=r,this.bytes=n}};function from$q({name:t,code:e,encode:r}){return new Hasher$8(t,e,r)}let Hasher$8=class{constructor(t,e,r){N(this,"name");N(this,"code");N(this,"encode");this.name=t,this.code=e,this.encode=r}digest(t){if(t instanceof Uint8Array){const e=this.encode(t);return e instanceof Uint8Array?create$m(this.code,e):e.then(r=>create$m(this.code,r))}else throw Error("Unknown type, must be binary type")}};var murmurHash3js={exports:{}};(function(t,e){(function(r,n){var o={version:"3.0.0",x86:{},x64:{},inputValidation:!0};function a(D){if(!Array.isArray(D)&&!ArrayBuffer.isView(D))return!1;for(var v=0;v<D.length;v++)if(!Number.isInteger(D[v])||D[v]<0||D[v]>255)return!1;return!0}function c(D,v){return(D&65535)*v+(((D>>>16)*v&65535)<<16)}function u(D,v){return D<<v|D>>>32-v}function l(D){return D^=D>>>16,D=c(D,2246822507),D^=D>>>13,D=c(D,3266489909),D^=D>>>16,D}function f(D,v){D=[D[0]>>>16,D[0]&65535,D[1]>>>16,D[1]&65535],v=[v[0]>>>16,v[0]&65535,v[1]>>>16,v[1]&65535];var S=[0,0,0,0];return S[3]+=D[3]+v[3],S[2]+=S[3]>>>16,S[3]&=65535,S[2]+=D[2]+v[2],S[1]+=S[2]>>>16,S[2]&=65535,S[1]+=D[1]+v[1],S[0]+=S[1]>>>16,S[1]&=65535,S[0]+=D[0]+v[0],S[0]&=65535,[S[0]<<16|S[1],S[2]<<16|S[3]]}function p(D,v){D=[D[0]>>>16,D[0]&65535,D[1]>>>16,D[1]&65535],v=[v[0]>>>16,v[0]&65535,v[1]>>>16,v[1]&65535];var S=[0,0,0,0];return S[3]+=D[3]*v[3],S[2]+=S[3]>>>16,S[3]&=65535,S[2]+=D[2]*v[3],S[1]+=S[2]>>>16,S[2]&=65535,S[2]+=D[3]*v[2],S[1]+=S[2]>>>16,S[2]&=65535,S[1]+=D[1]*v[3],S[0]+=S[1]>>>16,S[1]&=65535,S[1]+=D[2]*v[2],S[0]+=S[1]>>>16,S[1]&=65535,S[1]+=D[3]*v[1],S[0]+=S[1]>>>16,S[1]&=65535,S[0]+=D[0]*v[3]+D[1]*v[2]+D[2]*v[1]+D[3]*v[0],S[0]&=65535,[S[0]<<16|S[1],S[2]<<16|S[3]]}function g(D,v){return v%=64,v===32?[D[1],D[0]]:v<32?[D[0]<<v|D[1]>>>32-v,D[1]<<v|D[0]>>>32-v]:(v-=32,[D[1]<<v|D[0]>>>32-v,D[0]<<v|D[1]>>>32-v])}function $(D,v){return v%=64,v===0?D:v<32?[D[0]<<v|D[1]>>>32-v,D[1]<<v]:[D[1]<<v-32,0]}function _(D,v){return[D[0]^v[0],D[1]^v[1]]}function b(D){return D=_(D,[0,D[0]>>>1]),D=p(D,[4283543511,3981806797]),D=_(D,[0,D[0]>>>1]),D=p(D,[3301882366,444984403]),D=_(D,[0,D[0]>>>1]),D}o.x86.hash32=function(D,v){if(o.inputValidation&&!a(D))return n;v=v||0;for(var S=D.length%4,I=D.length-S,R=v,C=0,T=3432918353,P=461845907,E=0;E<I;E=E+4)C=D[E]|D[E+1]<<8|D[E+2]<<16|D[E+3]<<24,C=c(C,T),C=u(C,15),C=c(C,P),R^=C,R=u(R,13),R=c(R,5)+3864292196;switch(C=0,S){case 3:C^=D[E+2]<<16;case 2:C^=D[E+1]<<8;case 1:C^=D[E],C=c(C,T),C=u(C,15),C=c(C,P),R^=C}return R^=D.length,R=l(R),R>>>0},o.x86.hash128=function(D,v){if(o.inputValidation&&!a(D))return n;v=v||0;for(var S=D.length%16,I=D.length-S,R=v,C=v,T=v,P=v,E=0,A=0,k=0,O=0,M=597399067,L=2869860233,U=951274213,F=2716044179,x=0;x<I;x=x+16)E=D[x]|D[x+1]<<8|D[x+2]<<16|D[x+3]<<24,A=D[x+4]|D[x+5]<<8|D[x+6]<<16|D[x+7]<<24,k=D[x+8]|D[x+9]<<8|D[x+10]<<16|D[x+11]<<24,O=D[x+12]|D[x+13]<<8|D[x+14]<<16|D[x+15]<<24,E=c(E,M),E=u(E,15),E=c(E,L),R^=E,R=u(R,19),R+=C,R=c(R,5)+1444728091,A=c(A,L),A=u(A,16),A=c(A,U),C^=A,C=u(C,17),C+=T,C=c(C,5)+197830471,k=c(k,U),k=u(k,17),k=c(k,F),T^=k,T=u(T,15),T+=P,T=c(T,5)+2530024501,O=c(O,F),O=u(O,18),O=c(O,M),P^=O,P=u(P,13),P+=R,P=c(P,5)+850148119;switch(E=0,A=0,k=0,O=0,S){case 15:O^=D[x+14]<<16;case 14:O^=D[x+13]<<8;case 13:O^=D[x+12],O=c(O,F),O=u(O,18),O=c(O,M),P^=O;case 12:k^=D[x+11]<<24;case 11:k^=D[x+10]<<16;case 10:k^=D[x+9]<<8;case 9:k^=D[x+8],k=c(k,U),k=u(k,17),k=c(k,F),T^=k;case 8:A^=D[x+7]<<24;case 7:A^=D[x+6]<<16;case 6:A^=D[x+5]<<8;case 5:A^=D[x+4],A=c(A,L),A=u(A,16),A=c(A,U),C^=A;case 4:E^=D[x+3]<<24;case 3:E^=D[x+2]<<16;case 2:E^=D[x+1]<<8;case 1:E^=D[x],E=c(E,M),E=u(E,15),E=c(E,L),R^=E}return R^=D.length,C^=D.length,T^=D.length,P^=D.length,R+=C,R+=T,R+=P,C+=R,T+=R,P+=R,R=l(R),C=l(C),T=l(T),P=l(P),R+=C,R+=T,R+=P,C+=R,T+=R,P+=R,("00000000"+(R>>>0).toString(16)).slice(-8)+("00000000"+(C>>>0).toString(16)).slice(-8)+("00000000"+(T>>>0).toString(16)).slice(-8)+("00000000"+(P>>>0).toString(16)).slice(-8)},o.x64.hash128=function(D,v){if(o.inputValidation&&!a(D))return n;v=v||0;for(var S=D.length%16,I=D.length-S,R=[0,v],C=[0,v],T=[0,0],P=[0,0],E=[2277735313,289559509],A=[1291169091,658871167],k=0;k<I;k=k+16)T=[D[k+4]|D[k+5]<<8|D[k+6]<<16|D[k+7]<<24,D[k]|D[k+1]<<8|D[k+2]<<16|D[k+3]<<24],P=[D[k+12]|D[k+13]<<8|D[k+14]<<16|D[k+15]<<24,D[k+8]|D[k+9]<<8|D[k+10]<<16|D[k+11]<<24],T=p(T,E),T=g(T,31),T=p(T,A),R=_(R,T),R=g(R,27),R=f(R,C),R=f(p(R,[0,5]),[0,1390208809]),P=p(P,A),P=g(P,33),P=p(P,E),C=_(C,P),C=g(C,31),C=f(C,R),C=f(p(C,[0,5]),[0,944331445]);switch(T=[0,0],P=[0,0],S){case 15:P=_(P,$([0,D[k+14]],48));case 14:P=_(P,$([0,D[k+13]],40));case 13:P=_(P,$([0,D[k+12]],32));case 12:P=_(P,$([0,D[k+11]],24));case 11:P=_(P,$([0,D[k+10]],16));case 10:P=_(P,$([0,D[k+9]],8));case 9:P=_(P,[0,D[k+8]]),P=p(P,A),P=g(P,33),P=p(P,E),C=_(C,P);case 8:T=_(T,$([0,D[k+7]],56));case 7:T=_(T,$([0,D[k+6]],48));case 6:T=_(T,$([0,D[k+5]],40));case 5:T=_(T,$([0,D[k+4]],32));case 4:T=_(T,$([0,D[k+3]],24));case 3:T=_(T,$([0,D[k+2]],16));case 2:T=_(T,$([0,D[k+1]],8));case 1:T=_(T,[0,D[k]]),T=p(T,E),T=g(T,31),T=p(T,A),R=_(R,T)}return R=_(R,[0,D.length]),C=_(C,[0,D.length]),R=f(R,C),C=f(C,R),R=b(R),C=b(C),R=f(R,C),C=f(C,R),("00000000"+(R[0]>>>0).toString(16)).slice(-8)+("00000000"+(R[1]>>>0).toString(16)).slice(-8)+("00000000"+(C[0]>>>0).toString(16)).slice(-8)+("00000000"+(C[1]>>>0).toString(16)).slice(-8)},t.exports&&(e=t.exports=o),e.murmurHash3=o})()})(murmurHash3js,murmurHash3js.exports);var murmurHash3jsExports=murmurHash3js.exports,murmurhash3jsRevisited=murmurHash3jsExports;const mur=getDefaultExportFromCjs(murmurhash3jsRevisited),murmur3128=from$q({name:"murmur3-128",code:34,encode:t=>fromHex(mur.x64.hash128(t))});async function hamtHashFn$1(t){return(await murmur3128.encode(t)).slice(0,8).reverse()}const defaultOptions$k={chunker:"fixed",strategy:"balanced",rawLeaves:!1,onlyHash:!1,reduceSingleLeafToSelf:!0,hasher:sha256$9,leafType:"file",cidVersion:0,progress:()=>()=>{},shardSplitThreshold:1e3,fileImportConcurrency:50,blockWriteConcurrency:10,minChunkSize:262144,maxChunkSize:262144,avgChunkSize:262144,window:16,polynomial:0x3df305dfb2a804,maxChildrenPerNode:174,layerRepeat:4,wrapWithDirectory:!1,recursive:!1,hidden:!1,timeout:void 0,hamtHashFn:hamtHashFn$1,hamtHashCode:34,hamtBucketBits:8},defaultOptions$l=(t={})=>mergeOptions$h.bind({ignoreUndefined:!0})(defaultOptions$k,t);function base$k(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$k=base$k,_brrp__multiformats_scope_baseX$h=src$k;let Encoder$j=class{constructor(t,e,r){this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$j=class{constructor(t,e,r){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$k(this,t)}},ComposedDecoder$h=class{constructor(t){this.decoders=t}or(t){return or$k(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$k=(t,e)=>new ComposedDecoder$h({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});let Codec$h=class{constructor(t,e,r,n){this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$j(t,e,r),this.decoder=new Decoder$j(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};const from$p=({name:t,prefix:e,encode:r,decode:n})=>new Codec$h(t,e,r,n),baseX$h=({prefix:t,name:e,alphabet:r})=>{const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$h(r,e);return from$p({prefix:t,name:e,encode:n,decode:a=>coerce$i(o(a))})},decode$1t=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode$16=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648$h=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from$p({prefix:e,name:t,encode(o){return encode$16(o,n,r)},decode(o){return decode$1t(o,n,r,t)}}),base58btc$g=baseX$h({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"});baseX$h({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});const base32$q=rfc4648$h({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5});rfc4648$h({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),rfc4648$h({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),rfc4648$h({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),rfc4648$h({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),rfc4648$h({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),rfc4648$h({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),rfc4648$h({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),rfc4648$h({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});const format$g=(t,e)=>{const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$f(r,baseCache$f(t),e||base58btc$g.encoder);default:return toStringV1$f(r,baseCache$f(t),e||base32$q.encoder)}},cache$h=new WeakMap,baseCache$f=t=>{const e=cache$h.get(t);if(e==null){const r=new Map;return cache$h.set(t,r),r}return e};let CID$f=class Be{constructor(e,r,n,o){this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$f)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$f)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return Be.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$n(e,r);return Be.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return Be.equals(this,e)}static equals(e,r){const n=r;return n&&e.code===n.code&&e.version===n.version&&equals$x(e.multihash,n.multihash)}toString(e){return format$g(this,e)}toJSON(){return{"/":format$g(this)}}link(){return this}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof Be)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new Be(n,o,a,c||encodeCID$g(n,o,a.bytes))}else if(r[cidSymbol$f]===!0){const{version:n,multihash:o,code:a}=r,c=decode$1w(o);return Be.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$f)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$f}) block encoding`);return new Be(e,r,n,n.bytes)}case 1:{const o=encodeCID$g(e,r,n.bytes);return new Be(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return Be.create(0,DAG_PB_CODE$f,e)}static createV1(e,r){return Be.create(1,e,r)}static decode(e){const[r,n]=Be.decodeFirst(e);if(n.length)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=Be.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$i(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$i(r.multihashCode,r.digestSize,a,o);return[r.version===0?Be.createV0(c):Be.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$1x(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$f;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$f(e,r),a=Be.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$f(a).set(n,e),a}};const parseCIDtoBytes$f=(t,e)=>{switch(t[0]){case"Q":{const r=e||base58btc$g;return[base58btc$g.prefix,r.decode(`${base58btc$g.prefix}${t}`)]}case base58btc$g.prefix:{const r=e||base58btc$g;return[base58btc$g.prefix,r.decode(t)]}case base32$q.prefix:{const r=e||base32$q;return[base32$q.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}},toStringV0$f=(t,e,r)=>{const{prefix:n}=r;if(n!==base58btc$g.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o},toStringV1$f=(t,e,r)=>{const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o},DAG_PB_CODE$f=112,SHA_256_CODE$f=18,encodeCID$g=(t,e,r)=>{const n=encodingLength$m(t),o=n+encodingLength$m(e),a=new Uint8Array(o+r.byteLength);return encodeTo$i(t,a,0),encodeTo$i(e,a,n),a.set(r,o),a},cidSymbol$f=Symbol.for("@ipld/js-cid/CID"),persist$1=async(t,e,r)=>{r.codec||(r.codec=dagPB),r.hasher||(r.hasher=sha256$9),r.cidVersion===void 0&&(r.cidVersion=1),r.codec===dagPB&&r.hasher!==sha256$9&&(r.cidVersion=1);const n=await r.hasher.digest(t),o=CID$f.create(r.cidVersion,r.codec.code,n);return r.onlyHash||await e.put(o,t,{signal:r.signal}),o},dirBuilder=async(t,e,r)=>{const n=new UnixFS({type:"directory",mtime:t.mtime,mode:t.mode}),o=encode$1L(prepare({Data:n.marshal()})),a=await persist$1(o,e,r),c=t.path;return{cid:a,path:c,unixfs:n,size:o.length}},name$7="raw",code$9=85,encode$15=t=>coerce$i(t),decode$1s=t=>coerce$i(t),raw$1=Object.freeze(Object.defineProperty({__proto__:null,code:code$9,decode:decode$1s,encode:encode$15,name:name$7},Symbol.toStringTag,{value:"Module"}));async function flat(t,e){return e(await all$1(t))}function balanced(t,e,r){return reduceToParents(t,e,r)}async function reduceToParents(t,e,r){const n=[];for await(const o of batch(t,r.maxChildrenPerNode))n.push(await e(o));return n.length>1?reduceToParents(n,e,r):n[0]}async function trickleStream(t,e,r){const n=new Root(r.layerRepeat);let o=0,a=1,c=n;for await(const u of batch(t,r.maxChildrenPerNode))c.isFull()&&(c!==n&&n.addChild(await c.reduce(e)),o&&o%r.layerRepeat===0&&a++,c=new SubTree(a,r.layerRepeat,o),o++),c.append(u);return c&&c!==n&&n.addChild(await c.reduce(e)),n.reduce(e)}class SubTree{constructor(e,r,n=0){this.maxDepth=e,this.layerRepeat=r,this.currentDepth=1,this.iteration=n,this.root=this.node=this.parent={children:[],depth:this.currentDepth,maxDepth:e,maxChildren:(this.maxDepth-this.currentDepth)*this.layerRepeat}}isFull(){if(!this.root.data)return!1;if(this.currentDepth<this.maxDepth&&this.node.maxChildren)return this._addNextNodeToParent(this.node),!1;const e=this._findParent(this.node,this.currentDepth);return e?(this._addNextNodeToParent(e),!1):!0}_addNextNodeToParent(e){this.parent=e;const r={children:[],depth:e.depth+1,parent:e,maxDepth:this.maxDepth,maxChildren:Math.floor(e.children.length/this.layerRepeat)*this.layerRepeat};e.children.push(r),this.currentDepth=r.depth,this.node=r}append(e){this.node.data=e}reduce(e){return this._reduce(this.root,e)}async _reduce(e,r){let n=[];return e.children.length&&(n=await Promise.all(e.children.filter(o=>o.data).map(o=>this._reduce(o,r)))),r((e.data||[]).concat(n))}_findParent(e,r){const n=e.parent;if(!(!n||n.depth===0))return n.children.length===n.maxChildren||!n.maxChildren?this._findParent(n,r):n}}class Root extends SubTree{constructor(e){super(0,e),this.root.depth=0,this.currentDepth=1}addChild(e){this.root.children.push(e)}reduce(e){return e((this.root.data||[]).concat(this.root.children))}}async function*bufferImporter(t,e,r){for await(let n of t.content)yield async()=>{r.progress(n.length,t.path);let o;const a={codec:dagPB,cidVersion:r.cidVersion,hasher:r.hasher,onlyHash:r.onlyHash};return r.rawLeaves?(a.codec=raw$1,a.cidVersion=1):(o=new UnixFS({type:r.leafType,data:n}),n=encode$1L({Data:o.marshal(),Links:[]})),{cid:await persist$1(n,e,a),unixfs:o,size:n.length}}}const dagBuilders={flat,balanced,trickle:trickleStream};async function*buildFileBatch(t,e,r){let n=-1,o,a;typeof r.bufferImporter=="function"?a=r.bufferImporter:a=bufferImporter;for await(const c of parallelBatch(a(t,e,r),r.blockWriteConcurrency)){if(n++,n===0){o=c;continue}else n===1&&o&&(yield o,o=null);yield c}o&&(o.single=!0,yield o)}const reduce=(t,e,r)=>{async function n(o){if(o.length===1&&o[0].single&&r.reduceSingleLeafToSelf){const f=o[0];if(t.mtime!==void 0||t.mode!==void 0){let p=await e.get(f.cid);f.unixfs=new UnixFS({type:"file",mtime:t.mtime,mode:t.mode,data:p}),p=encode$1L(prepare({Data:f.unixfs.marshal()})),f.cid=await persist$1(p,e,{...r,codec:dagPB,hasher:r.hasher,cidVersion:r.cidVersion}),f.size=p.length}return{cid:f.cid,path:t.path,unixfs:f.unixfs,size:f.size}}const a=new UnixFS({type:"file",mtime:t.mtime,mode:t.mode}),c=o.filter(f=>f.cid.code===code$9&&f.size||f.unixfs&&!f.unixfs.data&&f.unixfs.fileSize()?!0:!!(f.unixfs&&f.unixfs.data&&f.unixfs.data.length)).map(f=>f.cid.code===code$9?(a.addBlockSize(f.size),{Name:"",Tsize:f.size,Hash:f.cid}):(!f.unixfs||!f.unixfs.data?a.addBlockSize(f.unixfs&&f.unixfs.fileSize()||0):a.addBlockSize(f.unixfs.data.length),{Name:"",Tsize:f.size,Hash:f.cid})),u={Data:a.marshal(),Links:c},l=encode$1L(prepare(u));return{cid:await persist$1(l,e,r),path:t.path,unixfs:a,size:l.length+u.Links.reduce((f,p)=>f+p.Tsize,0)}}return n};function fileBuilder(t,e,r){const n=dagBuilders[r.strategy];if(!n)throw errcode(new Error(`Unknown importer build strategy name: ${r.strategy}`),"ERR_BAD_STRATEGY");return n(buildFileBatch(t,e,r),reduce(t,e,r),r)}let Rabin$1=class{constructor(t,e=12,r=8*1024,n=32*1024,o=64,a){this.bits=e,this.min=r,this.max=n,this.asModule=t,this.rabin=new t.Rabin(e,r,n,o,a),this.polynomial=a}fingerprint(t){const{__retain:e,__release:r,__allocArray:n,__getInt32Array:o,Int32Array_ID:a,Uint8Array_ID:c}=this.asModule,u=new Int32Array(Math.ceil(t.length/this.min)),l=e(n(a,u)),f=e(n(c,t)),p=this.rabin.fingerprint(f,l),g=o(p);r(f),r(l);const $=g.indexOf(0);return $>=0?g.subarray(0,$):g}};var rabin$1=Rabin$1,loader={};const ID_OFFSET=-8,SIZE_OFFSET=-4,ARRAYBUFFER_ID=0,STRING_ID=1,ARRAYBUFFERVIEW=1,ARRAY=2,VAL_ALIGN_OFFSET=5,VAL_SIGNED=1024,VAL_FLOAT=2048,VAL_MANAGED=8192,ARRAYBUFFERVIEW_BUFFER_OFFSET=0,ARRAYBUFFERVIEW_DATASTART_OFFSET=4,ARRAYBUFFERVIEW_DATALENGTH_OFFSET=8,ARRAYBUFFERVIEW_SIZE=12,ARRAY_LENGTH_OFFSET=12,ARRAY_SIZE=16,BIGINT=typeof BigUint64Array<"u",THIS=Symbol(),CHUNKSIZE=1024;function getStringImpl(t,e){const r=new Uint32Array(t),n=new Uint16Array(t);var o=r[e+SIZE_OFFSET>>>2]>>>1,a=e>>>1;if(o<=CHUNKSIZE)return String.fromCharCode.apply(String,n.subarray(a,a+o));const c=[];do{const u=n[a+CHUNKSIZE-1],l=u>=55296&&u<56320?CHUNKSIZE-1:CHUNKSIZE;c.push(String.fromCharCode.apply(String,n.subarray(a,a+=l))),o-=l}while(o>CHUNKSIZE);return c.join("")+String.fromCharCode.apply(String,n.subarray(a,a+o))}function preInstantiate(t){const e={};function r(o,a){return o?getStringImpl(o.buffer,a):"<yet unknown>"}const n=t.env=t.env||{};return n.abort=n.abort||function(o,a,c,u){const l=e.memory||n.memory;throw Error("abort: "+r(l,o)+" at "+r(l,a)+":"+c+":"+u)},n.trace=n.trace||function(o,a){const c=e.memory||n.memory;console.log("trace: "+r(c,o)+(a?" ":"")+Array.prototype.slice.call(arguments,2,2+a).join(", "))},t.Math=t.Math||Math,t.Date=t.Date||Date,e}function postInstantiate(t,e){const r=e.exports,n=r.memory,o=r.table,a=r.__alloc,c=r.__retain,u=r.__rtti_base||-1;function l(T){const P=new Uint32Array(n.buffer),E=P[u>>>2];if((T>>>=0)>=E)throw Error("invalid id: "+T);return P[(u+4>>>2)+T*2]}function f(T){const P=new Uint32Array(n.buffer),E=P[u>>>2];if((T>>>=0)>=E)throw Error("invalid id: "+T);return P[(u+4>>>2)+T*2+1]}function p(T){return 31-Math.clz32(T>>>VAL_ALIGN_OFFSET&31)}function g(T){const P=T.length,E=a(P<<1,STRING_ID),A=new Uint16Array(n.buffer);for(var k=0,O=E>>>1;k<P;++k)A[O+k]=T.charCodeAt(k);return E}t.__allocString=g;function $(T){const P=n.buffer;if(new Uint32Array(P)[T+ID_OFFSET>>>2]!==STRING_ID)throw Error("not a string: "+T);return getStringImpl(P,T)}t.__getString=$;function _(T,P,E){const A=n.buffer;if(E)switch(T){case 2:return new Float32Array(A);case 3:return new Float64Array(A)}else switch(T){case 0:return new(P?Int8Array:Uint8Array)(A);case 1:return new(P?Int16Array:Uint16Array)(A);case 2:return new(P?Int32Array:Uint32Array)(A);case 3:return new(P?BigInt64Array:BigUint64Array)(A)}throw Error("unsupported align: "+T)}function b(T,P){const E=l(T);if(!(E&(ARRAYBUFFERVIEW|ARRAY)))throw Error("not an array: "+T+" @ "+E);const A=p(E),k=P.length,O=a(k<<A,ARRAYBUFFER_ID),M=a(E&ARRAY?ARRAY_SIZE:ARRAYBUFFERVIEW_SIZE,T),L=new Uint32Array(n.buffer);L[M+ARRAYBUFFERVIEW_BUFFER_OFFSET>>>2]=c(O),L[M+ARRAYBUFFERVIEW_DATASTART_OFFSET>>>2]=O,L[M+ARRAYBUFFERVIEW_DATALENGTH_OFFSET>>>2]=k<<A,E&ARRAY&&(L[M+ARRAY_LENGTH_OFFSET>>>2]=k);const U=_(A,E&VAL_SIGNED,E&VAL_FLOAT);if(E&VAL_MANAGED)for(let F=0;F<k;++F)U[(O>>>A)+F]=c(P[F]);else U.set(P,O>>>A);return M}t.__allocArray=b;function D(T){const P=new Uint32Array(n.buffer),E=P[T+ID_OFFSET>>>2],A=l(E);if(!(A&ARRAYBUFFERVIEW))throw Error("not an array: "+E);const k=p(A);var O=P[T+ARRAYBUFFERVIEW_DATASTART_OFFSET>>>2];const M=A&ARRAY?P[T+ARRAY_LENGTH_OFFSET>>>2]:P[O+SIZE_OFFSET>>>2]>>>k;return _(k,A&VAL_SIGNED,A&VAL_FLOAT).subarray(O>>>=k,O+M)}t.__getArrayView=D;function v(T){const P=D(T),E=P.length,A=new Array(E);for(let k=0;k<E;k++)A[k]=P[k];return A}t.__getArray=v;function S(T){const P=n.buffer,E=new Uint32Array(P)[T+SIZE_OFFSET>>>2];return P.slice(T,T+E)}t.__getArrayBuffer=S;function I(T,P,E){return new T(R(T,P,E))}function R(T,P,E){const A=n.buffer,k=new Uint32Array(A),O=k[E+ARRAYBUFFERVIEW_DATASTART_OFFSET>>>2];return new T(A,O,k[O+SIZE_OFFSET>>>2]>>>P)}t.__getInt8Array=I.bind(null,Int8Array,0),t.__getInt8ArrayView=R.bind(null,Int8Array,0),t.__getUint8Array=I.bind(null,Uint8Array,0),t.__getUint8ArrayView=R.bind(null,Uint8Array,0),t.__getUint8ClampedArray=I.bind(null,Uint8ClampedArray,0),t.__getUint8ClampedArrayView=R.bind(null,Uint8ClampedArray,0),t.__getInt16Array=I.bind(null,Int16Array,1),t.__getInt16ArrayView=R.bind(null,Int16Array,1),t.__getUint16Array=I.bind(null,Uint16Array,1),t.__getUint16ArrayView=R.bind(null,Uint16Array,1),t.__getInt32Array=I.bind(null,Int32Array,2),t.__getInt32ArrayView=R.bind(null,Int32Array,2),t.__getUint32Array=I.bind(null,Uint32Array,2),t.__getUint32ArrayView=R.bind(null,Uint32Array,2),BIGINT&&(t.__getInt64Array=I.bind(null,BigInt64Array,3),t.__getInt64ArrayView=R.bind(null,BigInt64Array,3),t.__getUint64Array=I.bind(null,BigUint64Array,3),t.__getUint64ArrayView=R.bind(null,BigUint64Array,3)),t.__getFloat32Array=I.bind(null,Float32Array,2),t.__getFloat32ArrayView=R.bind(null,Float32Array,2),t.__getFloat64Array=I.bind(null,Float64Array,3),t.__getFloat64ArrayView=R.bind(null,Float64Array,3);function C(T,P){const E=new Uint32Array(n.buffer);var A=E[T+ID_OFFSET>>>2];if(A<=E[u>>>2])do if(A==P)return!0;while(A=f(A));return!1}return t.__instanceof=C,t.memory=t.memory||n,t.table=t.table||o,demangle(r,t)}function isResponse(t){return typeof Response<"u"&&t instanceof Response}async function instantiate$1(t,e){return isResponse(t=await t)?instantiateStreaming(t,e):postInstantiate(preInstantiate(e||(e={})),await WebAssembly.instantiate(t instanceof WebAssembly.Module?t:await WebAssembly.compile(t),e))}loader.instantiate=instantiate$1;function instantiateSync(t,e){return postInstantiate(preInstantiate(e||(e={})),new WebAssembly.Instance(t instanceof WebAssembly.Module?t:new WebAssembly.Module(t),e))}loader.instantiateSync=instantiateSync;async function instantiateStreaming(t,e){return WebAssembly.instantiateStreaming?postInstantiate(preInstantiate(e||(e={})),(await WebAssembly.instantiateStreaming(t,e)).instance):instantiate$1(isResponse(t=await t)?t.arrayBuffer():t,e)}loader.instantiateStreaming=instantiateStreaming;function demangle(t,e){var r=e?Object.create(e):{},n=t.__argumentsLength?function(o){t.__argumentsLength.value=o}:t.__setArgumentsLength||t.__setargc||function(){};for(let o in t){if(!Object.prototype.hasOwnProperty.call(t,o))continue;const a=t[o];let c=o.split("."),u=r;for(;c.length>1;){let p=c.shift();Object.prototype.hasOwnProperty.call(u,p)||(u[p]={}),u=u[p]}let l=c[0],f=l.indexOf("#");if(f>=0){let p=l.substring(0,f),g=u[p];if(typeof g>"u"||!g.prototype){let $=function(..._){return $.wrap($.prototype.constructor(0,..._))};$.prototype={valueOf:function(){return this[THIS]}},$.wrap=function(_){return Object.create($.prototype,{[THIS]:{value:_,writable:!1}})},g&&Object.getOwnPropertyNames(g).forEach(_=>Object.defineProperty($,_,Object.getOwnPropertyDescriptor(g,_))),u[p]=$}if(l=l.substring(f+1),u=u[p].prototype,/^(get|set):/.test(l)){if(!Object.prototype.hasOwnProperty.call(u,l=l.substring(4))){let $=t[o.replace("set:","get:")],_=t[o.replace("get:","set:")];Object.defineProperty(u,l,{get:function(){return $(this[THIS])},set:function(b){_(this[THIS],b)},enumerable:!0})}}else l==="constructor"?(u[l]=(...$)=>(n($.length),a(...$))).original=a:(u[l]=function(...$){return n($.length),a(this[THIS],...$)}).original=a}else/^(get|set):/.test(l)?Object.prototype.hasOwnProperty.call(u,l=l.substring(4))||Object.defineProperty(u,l,{get:t[o.replace("set:","get:")],set:t[o.replace("get:","set:")],enumerable:!0}):typeof a=="function"&&a!==n?(u[l]=(...p)=>(n(p.length),a(...p))).original=a:u[l]=a}return r}loader.demangle=demangle;const{instantiate}=loader;loadWebAssembly.supported=typeof WebAssembly<"u";function loadWebAssembly(t={}){if(!loadWebAssembly.supported)return null;var e=new Uint8Array([0,97,115,109,1,0,0,0,1,78,14,96,2,127,126,0,96,1,127,1,126,96,2,127,127,0,96,1,127,1,127,96,1,127,0,96,2,127,127,1,127,96,3,127,127,127,1,127,96,0,0,96,3,127,127,127,0,96,0,1,127,96,4,127,127,127,127,0,96,5,127,127,127,127,127,1,127,96,1,126,1,127,96,2,126,126,1,126,2,13,1,3,101,110,118,5,97,98,111,114,116,0,10,3,54,53,2,2,8,9,3,5,2,8,6,5,3,4,2,6,9,12,13,2,5,11,3,2,3,2,3,2,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,6,7,7,4,4,5,3,1,0,1,6,47,9,127,1,65,0,11,127,1,65,0,11,127,0,65,3,11,127,0,65,4,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,0,65,240,2,11,127,0,65,6,11,7,240,5,41,6,109,101,109,111,114,121,2,0,7,95,95,97,108,108,111,99,0,10,8,95,95,114,101,116,97,105,110,0,11,9,95,95,114,101,108,101,97,115,101,0,12,9,95,95,99,111,108,108,101,99,116,0,51,11,95,95,114,116,116,105,95,98,97,115,101,3,7,13,73,110,116,51,50,65,114,114,97,121,95,73,68,3,2,13,85,105,110,116,56,65,114,114,97,121,95,73,68,3,3,6,100,101,103,114,101,101,0,16,3,109,111,100,0,17,5,82,97,98,105,110,3,8,16,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,0,21,16,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,0,22,21,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,23,21,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,24,14,82,97,98,105,110,35,103,101,116,58,119,112,111,115,0,25,14,82,97,98,105,110,35,115,101,116,58,119,112,111,115,0,26,15,82,97,98,105,110,35,103,101,116,58,99,111,117,110,116,0,27,15,82,97,98,105,110,35,115,101,116,58,99,111,117,110,116,0,28,13,82,97,98,105,110,35,103,101,116,58,112,111,115,0,29,13,82,97,98,105,110,35,115,101,116,58,112,111,115,0,30,15,82,97,98,105,110,35,103,101,116,58,115,116,97,114,116,0,31,15,82,97,98,105,110,35,115,101,116,58,115,116,97,114,116,0,32,16,82,97,98,105,110,35,103,101,116,58,100,105,103,101,115,116,0,33,16,82,97,98,105,110,35,115,101,116,58,100,105,103,101,115,116,0,34,21,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,35,21,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,36,22,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,37,22,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,38,31,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,39,31,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,40,20,82,97,98,105,110,35,103,101,116,58,112,111,108,121,110,111,109,105,97,108,0,41,20,82,97,98,105,110,35,115,101,116,58,112,111,108,121,110,111,109,105,97,108,0,42,17,82,97,98,105,110,35,103,101,116,58,109,105,110,115,105,122,101,0,43,17,82,97,98,105,110,35,115,101,116,58,109,105,110,115,105,122,101,0,44,17,82,97,98,105,110,35,103,101,116,58,109,97,120,115,105,122,101,0,45,17,82,97,98,105,110,35,115,101,116,58,109,97,120,115,105,122,101,0,46,14,82,97,98,105,110,35,103,101,116,58,109,97,115,107,0,47,14,82,97,98,105,110,35,115,101,116,58,109,97,115,107,0,48,17,82,97,98,105,110,35,99,111,110,115,116,114,117,99,116,111,114,0,20,17,82,97,98,105,110,35,102,105,110,103,101,114,112,114,105,110,116,0,49,8,1,50,10,165,31,53,199,1,1,4,127,32,1,40,2,0,65,124,113,34,2,65,128,2,73,4,127,32,2,65,4,118,33,4,65,0,5,32,2,65,31,32,2,103,107,34,3,65,4,107,118,65,16,115,33,4,32,3,65,7,107,11,33,3,32,1,40,2,20,33,2,32,1,40,2,16,34,5,4,64,32,5,32,2,54,2,20,11,32,2,4,64,32,2,32,5,54,2,16,11,32,1,32,0,32,4,32,3,65,4,116,106,65,2,116,106,40,2,96,70,4,64,32,0,32,4,32,3,65,4,116,106,65,2,116,106,32,2,54,2,96,32,2,69,4,64,32,0,32,3,65,2,116,106,32,0,32,3,65,2,116,106,40,2,4,65,1,32,4,116,65,127,115,113,34,1,54,2,4,32,1,69,4,64,32,0,32,0,40,2,0,65,1,32,3,116,65,127,115,113,54,2,0,11,11,11,11,226,2,1,6,127,32,1,40,2,0,33,3,32,1,65,16,106,32,1,40,2,0,65,124,113,106,34,4,40,2,0,34,5,65,1,113,4,64,32,3,65,124,113,65,16,106,32,5,65,124,113,106,34,2,65,240,255,255,255,3,73,4,64,32,0,32,4,16,1,32,1,32,2,32,3,65,3,113,114,34,3,54,2,0,32,1,65,16,106,32,1,40,2,0,65,124,113,106,34,4,40,2,0,33,5,11,11,32,3,65,2,113,4,64,32,1,65,4,107,40,2,0,34,2,40,2,0,34,6,65,124,113,65,16,106,32,3,65,124,113,106,34,7,65,240,255,255,255,3,73,4,64,32,0,32,2,16,1,32,2,32,7,32,6,65,3,113,114,34,3,54,2,0,32,2,33,1,11,11,32,4,32,5,65,2,114,54,2,0,32,4,65,4,107,32,1,54,2,0,32,0,32,3,65,124,113,34,2,65,128,2,73,4,127,32,2,65,4,118,33,4,65,0,5,32,2,65,31,32,2,103,107,34,2,65,4,107,118,65,16,115,33,4,32,2,65,7,107,11,34,3,65,4,116,32,4,106,65,2,116,106,40,2,96,33,2,32,1,65,0,54,2,16,32,1,32,2,54,2,20,32,2,4,64,32,2,32,1,54,2,16,11,32,0,32,4,32,3,65,4,116,106,65,2,116,106,32,1,54,2,96,32,0,32,0,40,2,0,65,1,32,3,116,114,54,2,0,32,0,32,3,65,2,116,106,32,0,32,3,65,2,116,106,40,2,4,65,1,32,4,116,114,54,2,4,11,119,1,1,127,32,2,2,127,32,0,40,2,160,12,34,2,4,64,32,2,32,1,65,16,107,70,4,64,32,2,40,2,0,33,3,32,1,65,16,107,33,1,11,11,32,1,11,107,34,2,65,48,73,4,64,15,11,32,1,32,3,65,2,113,32,2,65,32,107,65,1,114,114,54,2,0,32,1,65,0,54,2,16,32,1,65,0,54,2,20,32,1,32,2,106,65,16,107,34,2,65,2,54,2,0,32,0,32,2,54,2,160,12,32,0,32,1,16,2,11,155,1,1,3,127,35,0,34,0,69,4,64,65,1,63,0,34,0,74,4,127,65,1,32,0,107,64,0,65,0,72,5,65,0,11,4,64,0,11,65,176,3,34,0,65,0,54,2,0,65,208,15,65,0,54,2,0,3,64,32,1,65,23,73,4,64,32,1,65,2,116,65,176,3,106,65,0,54,2,4,65,0,33,2,3,64,32,2,65,16,73,4,64,32,1,65,4,116,32,2,106,65,2,116,65,176,3,106,65,0,54,2,96,32,2,65,1,106,33,2,12,1,11,11,32,1,65,1,106,33,1,12,1,11,11,65,176,3,65,224,15,63,0,65,16,116,16,3,65,176,3,36,0,11,32,0,11,45,0,32,0,65,240,255,255,255,3,79,4,64,65,32,65,224,0,65,201,3,65,29,16,0,0,11,32,0,65,15,106,65,112,113,34,0,65,16,32,0,65,16,75,27,11,169,1,1,1,127,32,0,32,1,65,128,2,73,4,127,32,1,65,4,118,33,1,65,0,5,32,1,65,248,255,255,255,1,73,4,64,32,1,65,1,65,27,32,1,103,107,116,106,65,1,107,33,1,11,32,1,65,31,32,1,103,107,34,2,65,4,107,118,65,16,115,33,1,32,2,65,7,107,11,34,2,65,2,116,106,40,2,4,65,127,32,1,116,113,34,1,4,127,32,0,32,1,104,32,2,65,4,116,106,65,2,116,106,40,2,96,5,32,0,40,2,0,65,127,32,2,65,1,106,116,113,34,1,4,127,32,0,32,0,32,1,104,34,0,65,2,116,106,40,2,4,104,32,0,65,4,116,106,65,2,116,106,40,2,96,5,65,0,11,11,11,111,1,1,127,63,0,34,2,32,1,65,248,255,255,255,1,73,4,127,32,1,65,1,65,27,32,1,103,107,116,65,1,107,106,5,32,1,11,65,16,32,0,40,2,160,12,32,2,65,16,116,65,16,107,71,116,106,65,255,255,3,106,65,128,128,124,113,65,16,118,34,1,32,2,32,1,74,27,64,0,65,0,72,4,64,32,1,64,0,65,0,72,4,64,0,11,11,32,0,32,2,65,16,116,63,0,65,16,116,16,3,11,113,1,2,127,32,1,40,2,0,34,3,65,124,113,32,2,107,34,4,65,32,79,4,64,32,1,32,2,32,3,65,2,113,114,54,2,0,32,2,32,1,65,16,106,106,34,1,32,4,65,16,107,65,1,114,54,2,0,32,0,32,1,16,2,5,32,1,32,3,65,126,113,54,2,0,32,1,65,16,106,32,1,40,2,0,65,124,113,106,32,1,65,16,106,32,1,40,2,0,65,124,113,106,40,2,0,65,125,113,54,2,0,11,11,91,1,2,127,32,0,32,1,16,5,34,4,16,6,34,3,69,4,64,65,1,36,1,65,0,36,1,32,0,32,4,16,6,34,3,69,4,64,32,0,32,4,16,7,32,0,32,4,16,6,33,3,11,11,32,3,65,0,54,2,4,32,3,32,2,54,2,8,32,3,32,1,54,2,12,32,0,32,3,16,1,32,0,32,3,32,4,16,8,32,3,11,13,0,16,4,32,0,32,1,16,9,65,16,106,11,33,1,1,127,32,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,11,18,0,32,0,65,172,3,75,4,64,32,0,65,16,107,16,52,11,11,140,3,1,1,127,2,64,32,1,69,13,0,32,0,65,0,58,0,0,32,0,32,1,106,65,1,107,65,0,58,0,0,32,1,65,2,77,13,0,32,0,65,1,106,65,0,58,0,0,32,0,65,2,106,65,0,58,0,0,32,0,32,1,106,34,2,65,2,107,65,0,58,0,0,32,2,65,3,107,65,0,58,0,0,32,1,65,6,77,13,0,32,0,65,3,106,65,0,58,0,0,32,0,32,1,106,65,4,107,65,0,58,0,0,32,1,65,8,77,13,0,32,1,65,0,32,0,107,65,3,113,34,1,107,33,2,32,0,32,1,106,34,0,65,0,54,2,0,32,0,32,2,65,124,113,34,1,106,65,4,107,65,0,54,2,0,32,1,65,8,77,13,0,32,0,65,4,106,65,0,54,2,0,32,0,65,8,106,65,0,54,2,0,32,0,32,1,106,34,2,65,12,107,65,0,54,2,0,32,2,65,8,107,65,0,54,2,0,32,1,65,24,77,13,0,32,0,65,12,106,65,0,54,2,0,32,0,65,16,106,65,0,54,2,0,32,0,65,20,106,65,0,54,2,0,32,0,65,24,106,65,0,54,2,0,32,0,32,1,106,34,2,65,28,107,65,0,54,2,0,32,2,65,24,107,65,0,54,2,0,32,2,65,20,107,65,0,54,2,0,32,2,65,16,107,65,0,54,2,0,32,0,32,0,65,4,113,65,24,106,34,2,106,33,0,32,1,32,2,107,33,1,3,64,32,1,65,32,79,4,64,32,0,66,0,55,3,0,32,0,65,8,106,66,0,55,3,0,32,0,65,16,106,66,0,55,3,0,32,0,65,24,106,66,0,55,3,0,32,1,65,32,107,33,1,32,0,65,32,106,33,0,12,1,11,11,11,11,178,1,1,3,127,32,1,65,240,255,255,255,3,32,2,118,75,4,64,65,144,1,65,192,1,65,23,65,56,16,0,0,11,32,1,32,2,116,34,3,65,0,16,10,34,2,32,3,16,13,32,0,69,4,64,65,12,65,2,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,2,34,1,32,0,40,2,0,34,4,71,4,64,32,1,65,172,3,75,4,64,32,1,65,16,107,34,5,32,5,40,2,4,65,1,106,54,2,4,11,32,4,16,12,11,32,0,32,1,54,2,0,32,0,32,2,54,2,4,32,0,32,3,54,2,8,32,0,11,46,1,2,127,65,12,65,5,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,65,128,2,65,3,16,14,11,9,0,65,63,32,0,121,167,107,11,49,1,2,127,65,63,32,1,121,167,107,33,2,3,64,65,63,32,0,121,167,107,32,2,107,34,3,65,0,78,4,64,32,0,32,1,32,3,172,134,133,33,0,12,1,11,11,32,0,11,40,0,32,1,32,0,40,2,8,79,4,64,65,128,2,65,192,2,65,163,1,65,44,16,0,0,11,32,1,32,0,40,2,4,106,65,0,58,0,0,11,38,0,32,1,32,0,40,2,8,79,4,64,65,128,2,65,192,2,65,152,1,65,44,16,0,0,11,32,1,32,0,40,2,4,106,45,0,0,11,254,5,2,1,127,4,126,32,0,69,4,64,65,232,0,65,6,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,5,32,5,40,2,4,65,1,106,54,2,4,11,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,24,32,0,66,0,55,3,32,32,0,66,0,55,3,40,32,0,66,0,55,3,48,32,0,66,0,55,3,56,32,0,66,0,55,3,64,32,0,66,0,55,3,72,32,0,66,0,55,3,80,32,0,66,0,55,3,88,32,0,66,0,55,3,96,32,0,32,2,173,55,3,80,32,0,32,3,173,55,3,88,65,12,65,4,16,10,34,2,65,172,3,75,4,64,32,2,65,16,107,34,3,32,3,40,2,4,65,1,106,54,2,4,11,32,2,32,4,65,0,16,14,33,2,32,0,40,2,0,16,12,32,0,32,2,54,2,0,32,0,32,4,54,2,4,32,0,66,1,32,1,173,134,66,1,125,55,3,96,32,0,66,243,130,183,218,216,230,232,30,55,3,72,35,4,69,4,64,65,0,33,2,3,64,32,2,65,128,2,72,4,64,32,2,65,255,1,113,173,33,6,32,0,41,3,72,34,7,33,8,65,63,32,7,121,167,107,33,1,3,64,65,63,32,6,121,167,107,32,1,107,34,3,65,0,78,4,64,32,6,32,8,32,3,172,134,133,33,6,12,1,11,11,65,0,33,4,3,64,32,4,32,0,40,2,4,65,1,107,72,4,64,32,6,66,8,134,33,6,32,0,41,3,72,34,7,33,8,65,63,32,7,121,167,107,33,1,3,64,65,63,32,6,121,167,107,32,1,107,34,3,65,0,78,4,64,32,6,32,8,32,3,172,134,133,33,6,12,1,11,11,32,4,65,1,106,33,4,12,1,11,11,35,6,40,2,4,32,2,65,3,116,106,32,6,55,3,0,32,2,65,1,106,33,2,12,1,11,11,65,63,32,0,41,3,72,121,167,107,172,33,7,65,0,33,2,3,64,32,2,65,128,2,72,4,64,35,5,33,1,32,2,172,32,7,134,34,8,33,6,65,63,32,0,41,3,72,34,9,121,167,107,33,3,3,64,65,63,32,6,121,167,107,32,3,107,34,4,65,0,78,4,64,32,6,32,9,32,4,172,134,133,33,6,12,1,11,11,32,1,40,2,4,32,2,65,3,116,106,32,6,32,8,132,55,3,0,32,2,65,1,106,33,2,12,1,11,11,65,1,36,4,11,32,0,66,0,55,3,24,32,0,66,0,55,3,32,65,0,33,2,3,64,32,2,32,0,40,2,4,72,4,64,32,0,40,2,0,32,2,16,18,32,2,65,1,106,33,2,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,19,33,1,32,0,40,2,8,32,0,40,2,0,40,2,4,106,65,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,1,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,6,66,45,136,167,65,3,116,106,41,3,0,32,6,66,8,134,66,1,132,133,55,3,40,32,0,11,38,1,1,127,32,0,40,2,0,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,11,55,1,2,127,32,1,32,0,40,2,0,34,2,71,4,64,32,1,65,172,3,75,4,64,32,1,65,16,107,34,3,32,3,40,2,4,65,1,106,54,2,4,11,32,2,16,12,11,32,0,32,1,54,2,0,11,7,0,32,0,40,2,4,11,9,0,32,0,32,1,54,2,4,11,7,0,32,0,40,2,8,11,9,0,32,0,32,1,54,2,8,11,7,0,32,0,41,3,16,11,9,0,32,0,32,1,55,3,16,11,7,0,32,0,41,3,24,11,9,0,32,0,32,1,55,3,24,11,7,0,32,0,41,3,32,11,9,0,32,0,32,1,55,3,32,11,7,0,32,0,41,3,40,11,9,0,32,0,32,1,55,3,40,11,7,0,32,0,41,3,48,11,9,0,32,0,32,1,55,3,48,11,7,0,32,0,41,3,56,11,9,0,32,0,32,1,55,3,56,11,7,0,32,0,41,3,64,11,9,0,32,0,32,1,55,3,64,11,7,0,32,0,41,3,72,11,9,0,32,0,32,1,55,3,72,11,7,0,32,0,41,3,80,11,9,0,32,0,32,1,55,3,80,11,7,0,32,0,41,3,88,11,9,0,32,0,32,1,55,3,88,11,7,0,32,0,41,3,96,11,9,0,32,0,32,1,55,3,96,11,172,4,2,5,127,1,126,32,2,65,172,3,75,4,64,32,2,65,16,107,34,4,32,4,40,2,4,65,1,106,54,2,4,11,32,2,33,4,65,0,33,2,32,1,40,2,8,33,5,32,1,40,2,4,33,6,3,64,2,127,65,0,33,3,3,64,32,3,32,5,72,4,64,32,3,32,6,106,45,0,0,33,1,32,0,40,2,0,32,0,40,2,8,16,19,33,7,32,0,40,2,8,32,0,40,2,0,40,2,4,106,32,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,7,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,8,66,45,136,167,65,3,116,106,41,3,0,32,1,173,32,8,66,8,134,132,133,55,3,40,32,0,32,0,41,3,16,66,1,124,55,3,16,32,0,32,0,41,3,24,66,1,124,55,3,24,32,0,41,3,16,32,0,41,3,80,90,4,127,32,0,41,3,40,32,0,41,3,96,131,80,5,65,0,11,4,127,65,1,5,32,0,41,3,16,32,0,41,3,88,90,11,4,64,32,0,32,0,41,3,32,55,3,48,32,0,32,0,41,3,16,55,3,56,32,0,32,0,41,3,40,55,3,64,65,0,33,1,3,64,32,1,32,0,40,2,4,72,4,64,32,0,40,2,0,32,1,16,18,32,1,65,1,106,33,1,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,19,33,1,32,0,40,2,8,32,0,40,2,0,40,2,4,106,65,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,1,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,8,66,45,136,167,65,3,116,106,41,3,0,32,8,66,8,134,66,1,132,133,55,3,40,32,3,65,1,106,12,3,11,32,3,65,1,106,33,3,12,1,11,11,65,127,11,34,1,65,0,78,4,64,32,5,32,1,107,33,5,32,1,32,6,106,33,6,32,2,34,1,65,1,106,33,2,32,4,40,2,4,32,1,65,2,116,106,32,0,41,3,56,62,2,0,12,1,11,11,32,4,11,10,0,16,15,36,5,16,15,36,6,11,3,0,1,11,73,1,2,127,32,0,40,2,4,34,1,65,255,255,255,255,0,113,34,2,65,1,70,4,64,32,0,65,16,106,16,53,32,0,32,0,40,2,0,65,1,114,54,2,0,35,0,32,0,16,2,5,32,0,32,2,65,1,107,32,1,65,128,128,128,128,127,113,114,54,2,4,11,11,58,0,2,64,2,64,2,64,32,0,65,8,107,40,2,0,14,7,0,0,1,1,1,1,1,2,11,15,11,32,0,40,2,0,34,0,4,64,32,0,65,172,3,79,4,64,32,0,65,16,107,16,52,11,11,15,11,0,11,11,137,3,7,0,65,16,11,55,40,0,0,0,1,0,0,0,1,0,0,0,40,0,0,0,97,0,108,0,108,0,111,0,99,0,97,0,116,0,105,0,111,0,110,0,32,0,116,0,111,0,111,0,32,0,108,0,97,0,114,0,103,0,101,0,65,208,0,11,45,30,0,0,0,1,0,0,0,1,0,0,0,30,0,0,0,126,0,108,0,105,0,98,0,47,0,114,0,116,0,47,0,116,0,108,0,115,0,102,0,46,0,116,0,115,0,65,128,1,11,43,28,0,0,0,1,0,0,0,1,0,0,0,28,0,0,0,73,0,110,0,118,0,97,0,108,0,105,0,100,0,32,0,108,0,101,0,110,0,103,0,116,0,104,0,65,176,1,11,53,38,0,0,0,1,0,0,0,1,0,0,0,38,0,0,0,126,0,108,0,105,0,98,0,47,0,97,0,114,0,114,0,97,0,121,0,98,0,117,0,102,0,102,0,101,0,114,0,46,0,116,0,115,0,65,240,1,11,51,36,0,0,0,1,0,0,0,1,0,0,0,36,0,0,0,73,0,110,0,100,0,101,0,120,0,32,0,111,0,117,0,116,0,32,0,111,0,102,0,32,0,114,0,97,0,110,0,103,0,101,0,65,176,2,11,51,36,0,0,0,1,0,0,0,1,0,0,0,36,0,0,0,126,0,108,0,105,0,98,0,47,0,116,0,121,0,112,0,101,0,100,0,97,0,114,0,114,0,97,0,121,0,46,0,116,0,115,0,65,240,2,11,53,7,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,145,4,0,0,2,0,0,0,49,0,0,0,2,0,0,0,17,1,0,0,2,0,0,0,16,0,34,16,115,111,117,114,99,101,77,97,112,112,105,110,103,85,82,76,16,46,47,114,97,98,105,110,46,119,97,115,109,46,109,97,112]);return instantiate(new Response(new Blob([e],{type:"application/wasm"})),t)}var rabinWasm=loadWebAssembly;const Rabin=rabin$1,getRabin=rabinWasm,create$l=async(t,e,r,n,o)=>{const a=await getRabin();return new Rabin(a,t,e,r,n,o)};var src$j={Rabin,create:create$l};async function*rabinChunker(t,e){let r,n,o;if(e.minChunkSize&&e.maxChunkSize&&e.avgChunkSize)o=e.avgChunkSize,r=e.minChunkSize,n=e.maxChunkSize;else if(e.avgChunkSize)o=e.avgChunkSize,r=o/3,n=o+o/2;else throw errcode(new Error("please specify an average chunk size"),"ERR_INVALID_AVG_CHUNK_SIZE");if(r<16)throw errcode(new Error("rabin min must be greater than 16"),"ERR_INVALID_MIN_CHUNK_SIZE");n<r&&(n=r),o<r&&(o=r);const a=Math.floor(Math.log2(o));for await(const c of rabin(t,{min:r,max:n,bits:a,window:e.window,polynomial:e.polynomial}))yield c}async function*rabin(t,e){const r=await src$j.create(e.bits,e.min,e.max,e.window),n=new Uint8ArrayList;for await(const o of t){n.append(o);const a=r.fingerprint(o);for(let c=0;c<a.length;c++){const u=a[c],l=n.slice(0,u);n.consume(u),yield l}}n.length&&(yield n.subarray(0))}async function*fixedSizeChunker(t,e){let r=new Uint8ArrayList,n=0,o=!1;const a=e.maxChunkSize;for await(const c of t)for(r.append(c),n+=c.length;n>=a;)if(yield r.slice(0,a),o=!0,a===r.length)r=new Uint8ArrayList,n=0;else{const u=new Uint8ArrayList;u.append(r.sublist(a)),r=u,n-=a}(!o||n)&&(yield r.subarray(0,n))}async function*validateChunks(t){for await(const e of t){if(e.length===void 0)throw errcode(new Error("Content was invalid"),"ERR_INVALID_CONTENT");if(typeof e=="string"||e instanceof String)yield fromString$y(e.toString());else if(Array.isArray(e))yield Uint8Array.from(e);else if(e instanceof Uint8Array)yield e;else throw errcode(new Error("Content was invalid"),"ERR_INVALID_CONTENT")}}function isIterable$1(t){return Symbol.iterator in t}function isAsyncIterable$5(t){return Symbol.asyncIterator in t}function contentAsAsyncIterable(t){try{if(t instanceof Uint8Array)return async function*(){yield t}();if(isIterable$1(t))return async function*(){yield*t}();if(isAsyncIterable$5(t))return t}catch{throw errcode(new Error("Content was invalid"),"ERR_INVALID_CONTENT")}throw errcode(new Error("Content was invalid"),"ERR_INVALID_CONTENT")}async function*dagBuilder(t,e,r){for await(const n of t)if(n.path&&(n.path.substring(0,2)==="./"&&(r.wrapWithDirectory=!0),n.path=n.path.split("/").filter(o=>o&&o!==".").join("/")),n.content){let o;typeof r.chunker=="function"?o=r.chunker:r.chunker==="rabin"?o=rabinChunker:o=fixedSizeChunker;let a;typeof r.chunkValidator=="function"?a=r.chunkValidator:a=validateChunks;const c={path:n.path,mtime:n.mtime,mode:n.mode,content:o(a(contentAsAsyncIterable(n.content),r),r)};yield()=>fileBuilder(c,e,r)}else if(n.path){const o={path:n.path,mtime:n.mtime,mode:n.mode};yield()=>dirBuilder(o,e,r)}else throw new Error("Import candidate must have content or path or both")}let Dir$1=class{constructor(t,e){this.options=e||{},this.root=t.root,this.dir=t.dir,this.path=t.path,this.dirty=t.dirty,this.flat=t.flat,this.parent=t.parent,this.parentKey=t.parentKey,this.unixfs=t.unixfs,this.mode=t.mode,this.mtime=t.mtime,this.cid=void 0,this.size=void 0}async put(t,e){}get(t){return Promise.resolve(this)}async*eachChildSeries(){}async*flush(t){}};class DirFlat extends Dir$1{constructor(e,r){super(e,r),this._children={}}async put(e,r){this.cid=void 0,this.size=void 0,this._children[e]=r}get(e){return Promise.resolve(this._children[e])}childCount(){return Object.keys(this._children).length}directChildrenCount(){return this.childCount()}onlyChild(){return this._children[Object.keys(this._children)[0]]}async*eachChildSeries(){const e=Object.keys(this._children);for(let r=0;r<e.length;r++){const n=e[r];yield{key:n,child:this._children[n]}}}async*flush(e){const r=Object.keys(this._children),n=[];for(let f=0;f<r.length;f++){let p=this._children[r[f]];if(p instanceof Dir$1)for await(const g of p.flush(e))p=g,yield p;p.size!=null&&p.cid&&n.push({Name:r[f],Tsize:p.size,Hash:p.cid})}const o=new UnixFS({type:"directory",mtime:this.mtime,mode:this.mode}),a={Data:o.marshal(),Links:n},c=encode$1L(prepare(a)),u=await persist$1(c,e,this.options),l=c.length+a.Links.reduce((f,p)=>f+(p.Tsize==null?0:p.Tsize),0);this.cid=u,this.size=l,yield{cid:u,unixfs:o,path:this.path,size:l}}}const BITS_PER_BYTE=7;var sparseArray=class{constructor(){this._bitArrays=[],this._data=[],this._length=0,this._changedLength=!1,this._changedData=!1}set(t,e){let r=this._internalPositionFor(t,!1);if(e===void 0)r!==-1&&(this._unsetInternalPos(r),this._unsetBit(t),this._changedLength=!0,this._changedData=!0);else{let n=!1;r===-1?(r=this._data.length,this._setBit(t),this._changedData=!0):n=!0,this._setInternalPos(r,t,e,n),this._changedLength=!0}}unset(t){this.set(t,void 0)}get(t){this._sortData();const e=this._internalPositionFor(t,!0);if(e!==-1)return this._data[e][1]}push(t){return this.set(this.length,t),this.length}get length(){if(this._sortData(),this._changedLength){const t=this._data[this._data.length-1];this._length=t?t[0]+1:0,this._changedLength=!1}return this._length}forEach(t){let e=0;for(;e<this.length;)t(this.get(e),e,this),e++}map(t){let e=0,r=new Array(this.length);for(;e<this.length;)r[e]=t(this.get(e),e,this),e++;return r}reduce(t,e){let r=0,n=e;for(;r<this.length;){const o=this.get(r);n=t(n,o,r),r++}return n}find(t){let e=0,r,n;for(;e<this.length&&!r;)n=this.get(e),r=t(n),e++;return r?n:void 0}_internalPositionFor(t,e){const r=this._bytePosFor(t,e);if(r>=this._bitArrays.length)return-1;const n=this._bitArrays[r],o=t-r*BITS_PER_BYTE;if(!((n&1<<o)>0))return-1;const a=this._bitArrays.slice(0,r).reduce(popCountReduce,0),c=~(4294967295<<o+1),u=popCount(n&c);return a+u-1}_bytePosFor(t,e){const r=Math.floor(t/BITS_PER_BYTE),n=r+1;for(;!e&&this._bitArrays.length<n;)this._bitArrays.push(0);return r}_setBit(t){const e=this._bytePosFor(t,!1);this._bitArrays[e]|=1<<t-e*BITS_PER_BYTE}_unsetBit(t){const e=this._bytePosFor(t,!1);this._bitArrays[e]&=~(1<<t-e*BITS_PER_BYTE)}_setInternalPos(t,e,r,n){const o=this._data,a=[e,r];if(n)this._sortData(),o[t]=a;else{if(o.length)if(o[o.length-1][0]>=e)o.push(a);else if(o[0][0]<=e)o.unshift(a);else{const c=Math.round(o.length/2);this._data=o.slice(0,c).concat(a).concat(o.slice(c))}else this._data.push(a);this._changedData=!0,this._changedLength=!0}}_unsetInternalPos(t){this._data.splice(t,1)}_sortData(){this._changedData&&this._data.sort(sortInternal),this._changedData=!1}bitField(){const t=[];let e=8,r=0,n=0,o;const a=this._bitArrays.slice();for(;a.length||r;){r===0&&(o=a.shift(),r=7);const u=Math.min(r,e),l=~(255<<u),f=o&l;n|=f<<8-e,o=o>>>u,r-=u,e-=u,(!e||!r&&!a.length)&&(t.push(n),n=0,e=8)}for(var c=t.length-1;c>0&&t[c]===0;c--)t.pop();return t}compactArray(){return this._sortData(),this._data.map(valueOnly)}};function popCountReduce(t,e){return t+popCount(e)}function popCount(t){let e=t;return e=e-(e>>1&1431655765),e=(e&858993459)+(e>>2&858993459),(e+(e>>4)&252645135)*16843009>>24}function sortInternal(t,e){return t[0]-e[0]}function valueOnly(t){return t[1]}const SparseArray=getDefaultExportFromCjs(sparseArray);class Bucket{constructor(e,r,n=0){this._options=e,this._popCount=0,this._parent=r,this._posAtParent=n,this._children=new SparseArray,this.key=null}async put(e,r){const n=await this._findNewBucketAndPos(e);await n.bucket._putAt(n,e,r)}async get(e){const r=await this._findChild(e);if(r!=null)return r.value}async del(e){const r=await this._findPlace(e),n=r.bucket._at(r.pos);n!=null&&n.key===e&&r.bucket._delAt(r.pos)}leafCount(){return this._children.compactArray().reduce((e,r)=>r instanceof Bucket?e+r.leafCount():e+1,0)}childrenCount(){return this._children.length}onlyChild(){return this._children.get(0)}*eachLeafSeries(){const e=this._children.compactArray();for(const r of e)r instanceof Bucket?yield*r.eachLeafSeries():yield r}serialize(e,r){const n=[];return r(this._children.reduce((o,a,c)=>(a!=null&&(a instanceof Bucket?o.push(a.serialize(e,r)):o.push(e(a,c))),o),n))}async asyncTransform(e,r){return await asyncTransformBucket(this,e,r)}toJSON(){return this.serialize(mapNode,reduceNodes)}prettyPrint(){return JSON.stringify(this.toJSON(),null,"  ")}tableSize(){return Math.pow(2,this._options.bits)}async _findChild(e){const r=await this._findPlace(e),n=r.bucket._at(r.pos);if(!(n instanceof Bucket)&&n!=null&&n.key===e)return n}async _findPlace(e){const r=this._options.hash(typeof e=="string"?fromString$y(e):e),n=await r.take(this._options.bits),o=this._children.get(n);return o instanceof Bucket?await o._findPlace(r):{bucket:this,pos:n,hash:r,existingChild:o}}async _findNewBucketAndPos(e){const r=await this._findPlace(e);if(r.existingChild!=null&&r.existingChild.key!==e){const n=new Bucket(this._options,r.bucket,r.pos);r.bucket._putObjectAt(r.pos,n);const o=await n._findPlace(r.existingChild.hash);return o.bucket._putAt(o,r.existingChild.key,r.existingChild.value),await n._findNewBucketAndPos(r.hash)}return r}_putAt(e,r,n){this._putObjectAt(e.pos,{key:r,value:n,hash:e.hash})}_putObjectAt(e,r){this._children.get(e)==null&&this._popCount++,this._children.set(e,r)}_delAt(e){if(e===-1)throw new Error("Invalid position");this._children.get(e)!=null&&this._popCount--,this._children.unset(e),this._level()}_level(){if(this._parent!=null&&this._popCount<=1)if(this._popCount===1){const e=this._children.find(exists);if(e!=null&&!(e instanceof Bucket)){const r=e.hash;r.untake(this._options.bits);const n={pos:this._posAtParent,hash:r,bucket:this._parent};this._parent._putAt(n,e.key,e.value)}}else this._parent._delAt(this._posAtParent)}_at(e){return this._children.get(e)}}function exists(t){return!!t}function mapNode(t,e){return t.key}function reduceNodes(t){return t}async function asyncTransformBucket(t,e,r){const n=[];for(const o of t._children.compactArray())if(o instanceof Bucket)await asyncTransformBucket(o,e,r);else{const a=await e(o);n.push({bitField:t._children.bitField(),children:a})}return await r(n)}const START_MASKS=[255,254,252,248,240,224,192,128],STOP_MASKS=[1,3,7,15,31,63,127,255];class ConsumableBuffer{constructor(e){this._value=e,this._currentBytePos=e.length-1,this._currentBitPos=7}availableBits(){return this._currentBitPos+1+this._currentBytePos*8}totalBits(){return this._value.length*8}take(e){let r=e,n=0;for(;r>0&&this._haveBits();){const o=this._value[this._currentBytePos],a=this._currentBitPos+1,c=Math.min(a,r),u=byteBitsToInt(o,a-c,c);n=(n<<c)+u,r-=c,this._currentBitPos-=c,this._currentBitPos<0&&(this._currentBitPos=7,this._currentBytePos--)}return n}untake(e){for(this._currentBitPos+=e;this._currentBitPos>7;)this._currentBitPos-=8,this._currentBytePos+=1}_haveBits(){return this._currentBytePos>=0}}function byteBitsToInt(t,e,r){const n=maskFor(e,r);return(t&n)>>>e}function maskFor(t,e){return START_MASKS[t]&STOP_MASKS[Math.min(e+t-1,7)]}function wrapHash(t){function e(r){return r instanceof InfiniteHash?r:new InfiniteHash(r,t)}return e}class InfiniteHash{constructor(e,r){if(!(e instanceof Uint8Array))throw new Error("can only hash Uint8Arrays");this._value=e,this._hashFn=r,this._depth=-1,this._availableBits=0,this._currentBufferIndex=0,this._buffers=[]}async take(e){let r=e;for(;this._availableBits<r;)await this._produceMoreBits();let n=0;for(;r>0;){const o=this._buffers[this._currentBufferIndex],a=Math.min(o.availableBits(),r),c=o.take(a);n=(n<<a)+c,r-=a,this._availableBits-=a,o.availableBits()===0&&this._currentBufferIndex++}return n}untake(e){let r=e;for(;r>0;){const n=this._buffers[this._currentBufferIndex],o=Math.min(n.totalBits()-n.availableBits(),r);n.untake(o),r-=o,this._availableBits+=o,this._currentBufferIndex>0&&n.totalBits()===n.availableBits()&&(this._depth--,this._currentBufferIndex--)}}async _produceMoreBits(){this._depth++;const e=this._depth>0?concat$8([this._value,Uint8Array.from([this._depth])]):this._value,r=await this._hashFn(e),n=new ConsumableBuffer(r);this._buffers.push(n),this._availableBits+=n.availableBits()}}function createHAMT(t){if(t==null||t.hashFn==null)throw new Error("please define an options.hashFn");const e={bits:t.bits??8,hash:wrapHash(t.hashFn)};return new Bucket(e)}let DirSharded$1=class extends Dir$1{constructor(t,e){super(t,e),this._bucket=createHAMT({hashFn:e.hamtHashFn,bits:e.hamtBucketBits})}async put(t,e){await this._bucket.put(t,e)}get(t){return this._bucket.get(t)}childCount(){return this._bucket.leafCount()}directChildrenCount(){return this._bucket.childrenCount()}onlyChild(){return this._bucket.onlyChild()}async*eachChildSeries(){for await(const{key:t,value:e}of this._bucket.eachLeafSeries())yield{key:t,child:e}}async*flush(t){for await(const e of flush$1(this._bucket,t,this,this.options))yield{...e,path:this.path}}};async function*flush$1(t,e,r,n){const o=t._children,a=[];let c=0;for(let _=0;_<o.length;_++){const b=o.get(_);if(!b)continue;const D=_.toString(16).toUpperCase().padStart(2,"0");if(b instanceof Bucket){let v;for await(const S of await flush$1(b,e,null,n))v=S;if(!v)throw new Error("Could not flush sharded directory, no subshard found");a.push({Name:D,Tsize:v.size,Hash:v.cid}),c+=v.size}else if(typeof b.value.flush=="function"){const v=b.value;let S;for await(const R of v.flush(e))S=R,yield S;const I=D+b.key;a.push({Name:I,Tsize:S.size,Hash:S.cid}),c+=S.size}else{const v=b.value;if(!v.cid)continue;const S=D+b.key,I=v.size;a.push({Name:S,Tsize:I,Hash:v.cid}),c+=I}}const u=Uint8Array.from(o.bitField().reverse()),l=new UnixFS({type:"hamt-sharded-directory",data:u,fanout:t.tableSize(),hashType:n.hamtHashCode,mtime:r&&r.mtime,mode:r&&r.mode}),f={Data:l.marshal(),Links:a},p=encode$1L(prepare(f)),g=await persist$1(p,e,n),$=p.length+c;yield{cid:g,unixfs:l,size:$}}async function flatToShard(t,e,r,n){let o=e;e instanceof DirFlat&&e.directChildrenCount()>=r&&(o=await convertToShard(e,n));const a=o.parent;if(a){if(o!==e){if(t&&(t.parent=o),!o.parentKey)throw new Error("No parent key found");await a.put(o.parentKey,o)}return flatToShard(o,a,r,n)}return o}async function convertToShard(t,e){const r=new DirSharded$1({root:t.root,dir:!0,parent:t.parent,parentKey:t.parentKey,path:t.path,dirty:t.dirty,flat:!1,mtime:t.mtime,mode:t.mode},e);for await(const{key:n,child:o}of t.eachChildSeries())await r.put(n,o);return r}const toPathComponents$2=(t="")=>(t.trim().match(/([^\\/]|\\\/)+/g)||[]).filter(Boolean);async function addToTree(t,e,r){const n=toPathComponents$2(t.path||""),o=n.length-1;let a=e,c="";for(let u=0;u<n.length;u++){const l=n[u];c+=`${c?"/":""}${l}`;const f=u===o;if(a.dirty=!0,a.cid=void 0,a.size=void 0,f)await a.put(l,t),e=await flatToShard(null,a,r.shardSplitThreshold,r);else{let p=await a.get(l);(!p||!(p instanceof Dir$1))&&(p=new DirFlat({root:!1,dir:!0,parent:a,parentKey:l,path:c,dirty:!0,flat:!0,mtime:p&&p.unixfs&&p.unixfs.mtime,mode:p&&p.unixfs&&p.unixfs.mode},r)),await a.put(l,p),a=p}}return e}async function*flushAndYield(t,e){if(!(t instanceof Dir$1)){t&&t.unixfs&&t.unixfs.isDirectory()&&(yield t);return}yield*t.flush(e)}async function*treeBuilder(t,e,r){let n=new DirFlat({root:!0,dir:!0,path:"",dirty:!0,flat:!0},r);for await(const o of t)o&&(n=await addToTree(o,n,r),(!o.unixfs||!o.unixfs.isDirectory())&&(yield o));if(r.wrapWithDirectory)yield*flushAndYield(n,e);else for await(const o of n.eachChildSeries())o&&(yield*flushAndYield(o.child,e))}async function*importer(t,e,r={}){const n=defaultOptions$l(r);let o;typeof r.dagBuilder=="function"?o=r.dagBuilder:o=dagBuilder;let a;typeof r.treeBuilder=="function"?a=r.treeBuilder:a=treeBuilder;let c;Symbol.asyncIterator in t||Symbol.iterator in t?c=t:c=[t];for await(const u of a(parallelBatch(o(c,e,n),n.fileImportConcurrency),e,n))yield{cid:u.cid,path:u.path,unixfs:u.unixfs,size:u.size}}async function*normaliseCandidateMultiple(t,e){if(typeof t=="string"||t instanceof String||isBytes(t)||isBlob(t)||t._readableState)throw errcode(new Error("Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead"),"ERR_UNEXPECTED_INPUT");if(isReadableStream(t)&&(t=browserReadableStreamToIt(t)),Symbol.iterator in t||Symbol.asyncIterator in t){const r=peekableIterator(t),{value:n,done:o}=await r.peek();if(o){yield*[];return}if(r.push(n),Number.isInteger(n))throw errcode(new Error("Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead"),"ERR_UNEXPECTED_INPUT");if(n._readableState){yield*map$3(r,a=>toFileObject({content:a},e));return}if(isBytes(n)){yield toFileObject({content:r},e);return}if(isFileObject(n)||n[Symbol.iterator]||n[Symbol.asyncIterator]||isReadableStream(n)||isBlob(n)){yield*map$3(r,a=>toFileObject(a,e));return}}throw isFileObject(t)?errcode(new Error("Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead"),"ERR_UNEXPECTED_INPUT"):errcode(new Error("Unexpected input: "+typeof t),"ERR_UNEXPECTED_INPUT")}async function toFileObject(t,e){const{path:r,mode:n,mtime:o,content:a}=t,c={path:r||"",mode:parseMode(n),mtime:parseMtime$1(o)};return a?c.content=await e(a):r||(c.content=await e(t)),c}function normaliseInput$1(t){return normaliseCandidateMultiple(t,normaliseContent$1)}const parseChunkerString=t=>{if(t)if(t.startsWith("size-")){const e=t.split("-")[1],r=parseInt(e);if(isNaN(r))throw new Error("Chunker parameter size must be an integer");return{chunker:"fixed",maxChunkSize:r}}else{if(t.startsWith("rabin"))return{chunker:"rabin",...parseRabinString(t)};throw new Error(`Unrecognized chunker option: ${t}`)}else return{chunker:"fixed"}},parseRabinString=t=>{const e={},r=t.split("-");switch(r.length){case 1:e.avgChunkSize=262144;break;case 2:e.avgChunkSize=parseChunkSize(r[1],"avg");break;case 4:e.minChunkSize=parseChunkSize(r[1],"min"),e.avgChunkSize=parseChunkSize(r[2],"avg"),e.maxChunkSize=parseChunkSize(r[3],"max");break;default:throw new Error('Incorrect chunker format (expected "rabin" "rabin-[avg]" or "rabin-[min]-[avg]-[max]"')}return e},parseChunkSize=(t,e)=>{const r=parseInt(t);if(isNaN(r))throw new Error(`Chunker parameter ${e} must be an integer`);return r},mergeOptions$d=mergeOptions$h.bind({ignoreUndefined:!0});function createAddAll$2({repo:t,preload:e,hashers:r,options:n}){const o=n&&n.sharding;async function*a(c,u={}){const l=mergeOptions$d({shardSplitThreshold:o?1e3:1/0,strategy:"balanced"},u,{...parseChunkerString(u.chunker)});l.hashAlg&&l.hashAlg!=="sha2-256"&&l.cidVersion!==1&&(l.cidVersion=1),l.trickle&&(l.strategy="trickle"),l.strategy==="trickle"&&(l.leafType="raw",l.reduceSingleLeafToSelf=!1),l.cidVersion>0&&l.rawLeaves===void 0&&(l.rawLeaves=!0),l.hashAlg!==void 0&&l.rawLeaves===void 0&&(l.rawLeaves=!0),delete l.trickle;const f={};if(l.progress){const _=l.progress;l.progress=(b,D)=>{f[D]||(f[D]=0),f[D]+=b,_(f[D],D)}}let p;l.hashAlg!=null&&(p=await r.getHasher(l.hashAlg));const g=pipe$1(normaliseInput$1(c),_=>importer(_,t.blocks,{...l,hasher:p,pin:!1}),transformFile(l),preloadFile(e,l),pinFile(t,l)),$=await t.gcLock.readLock();try{for await(const _ of g){const b=_.path??_.cid.toString();delete f[b],yield{..._,path:b}}}finally{$()}}return withTimeoutOption(a)}function transformFile(t){async function*e(r){for await(const n of r){let o=n.cid;t.cidVersion===1&&(o=o.toV1());let a=n.path?n.path:o.toString();t.wrapWithDirectory&&!n.path&&(a=""),yield{path:a,cid:o,size:n.size,mode:n.unixfs&&n.unixfs.mode,mtime:n.unixfs&&n.unixfs.mtime}}}return e}function preloadFile(t,e){async function*r(n){for await(const o of n)(!o.path||e.wrapWithDirectory?o.path==="":!o.path.includes("/"))&&!e.onlyHash&&e.preload!==!1&&t(o.cid),yield o}return r}function pinFile(t,e){async function*r(n){for await(const o of n){const a=!(o.path&&o.path.includes("/"));(e.pin==null||e.pin)&&a&&!e.onlyHash&&await t.pins.pinRecursively(o.cid),yield o}}return r}var encode_1$h=encode$14,MSB$n=128,REST$n=127,MSBALL$h=~REST$n,INT$h=Math.pow(2,31);function encode$14(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$h;)e[r++]=t&255|MSB$n,t/=128;for(;t&MSBALL$h;)e[r++]=t&255|MSB$n,t>>>=7;return e[r]=t|0,encode$14.bytes=r-n+1,e}var decode$1r=read$i,MSB$1$h=128,REST$1$h=127;function read$i(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$i.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$h)<<o:(c&REST$1$h)*Math.pow(2,o),o+=7}while(c>=MSB$1$h);return read$i.bytes=a-n,r}var N1$m=Math.pow(2,7),N2$m=Math.pow(2,14),N3$m=Math.pow(2,21),N4$m=Math.pow(2,28),N5$m=Math.pow(2,35),N6$m=Math.pow(2,42),N7$m=Math.pow(2,49),N8$i=Math.pow(2,56),N9$i=Math.pow(2,63),length$j=function(t){return t<N1$m?1:t<N2$m?2:t<N3$m?3:t<N4$m?4:t<N5$m?5:t<N6$m?6:t<N7$m?7:t<N8$i?8:t<N9$i?9:10},varint$i={encode:encode_1$h,decode:decode$1r,encodingLength:length$j},_brrp_varint$g=varint$i;const decode$1q=(t,e=0)=>[_brrp_varint$g.decode(t,e),_brrp_varint$g.decode.bytes],encodeTo$g=(t,e,r=0)=>(_brrp_varint$g.encode(t,e,r),e),encodingLength$k=t=>_brrp_varint$g.encodingLength(t),equals$w=(t,e)=>{if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0},coerce$g=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")},create$k=(t,e)=>{const r=e.byteLength,n=encodingLength$k(t),o=n+encodingLength$k(r),a=new Uint8Array(o+r);return encodeTo$g(t,a,0),encodeTo$g(r,a,n),a.set(e,o),new Digest$g(t,r,e,a)},decode$1p=t=>{const e=coerce$g(t),[r,n]=decode$1q(e),[o,a]=decode$1q(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$g(r,o,c,e)},equals$v=(t,e)=>{if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$w(t.bytes,r.bytes)}};let Digest$g=class{constructor(t,e,r,n){this.code=t,this.size=e,this.digest=r,this.bytes=n}};function base$j(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$i=base$j,_brrp__multiformats_scope_baseX$g=src$i;let Encoder$i=class{constructor(t,e,r){this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$i=class{constructor(t,e,r){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$j(this,t)}},ComposedDecoder$g=class{constructor(t){this.decoders=t}or(t){return or$j(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$j=(t,e)=>new ComposedDecoder$g({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});let Codec$g=class{constructor(t,e,r,n){this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$i(t,e,r),this.decoder=new Decoder$i(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};const from$o=({name:t,prefix:e,encode:r,decode:n})=>new Codec$g(t,e,r,n),baseX$g=({prefix:t,name:e,alphabet:r})=>{const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$g(r,e);return from$o({prefix:t,name:e,encode:n,decode:a=>coerce$g(o(a))})},decode$1o=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode$13=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648$g=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from$o({prefix:e,name:t,encode(o){return encode$13(o,n,r)},decode(o){return decode$1o(o,n,r,t)}}),base58btc$f=baseX$g({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"});baseX$g({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});const base32$p=rfc4648$g({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5});rfc4648$g({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),rfc4648$g({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),rfc4648$g({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),rfc4648$g({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),rfc4648$g({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),rfc4648$g({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),rfc4648$g({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),rfc4648$g({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});const format$f=(t,e)=>{const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$e(r,baseCache$e(t),e||base58btc$f.encoder);default:return toStringV1$e(r,baseCache$e(t),e||base32$p.encoder)}},cache$g=new WeakMap,baseCache$e=t=>{const e=cache$g.get(t);if(e==null){const r=new Map;return cache$g.set(t,r),r}return e};let CID$e=class Ue{constructor(e,r,n,o){this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$e)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$e)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return Ue.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$k(e,r);return Ue.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return Ue.equals(this,e)}static equals(e,r){const n=r;return n&&e.code===n.code&&e.version===n.version&&equals$v(e.multihash,n.multihash)}toString(e){return format$f(this,e)}toJSON(){return{"/":format$f(this)}}link(){return this}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof Ue)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new Ue(n,o,a,c||encodeCID$f(n,o,a.bytes))}else if(r[cidSymbol$e]===!0){const{version:n,multihash:o,code:a}=r,c=decode$1p(o);return Ue.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$e)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$e}) block encoding`);return new Ue(e,r,n,n.bytes)}case 1:{const o=encodeCID$f(e,r,n.bytes);return new Ue(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return Ue.create(0,DAG_PB_CODE$e,e)}static createV1(e,r){return Ue.create(1,e,r)}static decode(e){const[r,n]=Ue.decodeFirst(e);if(n.length)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=Ue.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$g(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$g(r.multihashCode,r.digestSize,a,o);return[r.version===0?Ue.createV0(c):Ue.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$1q(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$e;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$e(e,r),a=Ue.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$e(a).set(n,e),a}};const parseCIDtoBytes$e=(t,e)=>{switch(t[0]){case"Q":{const r=e||base58btc$f;return[base58btc$f.prefix,r.decode(`${base58btc$f.prefix}${t}`)]}case base58btc$f.prefix:{const r=e||base58btc$f;return[base58btc$f.prefix,r.decode(t)]}case base32$p.prefix:{const r=e||base32$p;return[base32$p.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}},toStringV0$e=(t,e,r)=>{const{prefix:n}=r;if(n!==base58btc$f.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o},toStringV1$e=(t,e,r)=>{const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o},DAG_PB_CODE$e=112,SHA_256_CODE$e=18,encodeCID$f=(t,e,r)=>{const n=encodingLength$k(t),o=n+encodingLength$k(e),a=new Uint8Array(o+r.byteLength);return encodeTo$g(t,a,0),encodeTo$g(e,a,n),a.set(r,o),a},cidSymbol$e=Symbol.for("@ipld/js-cid/CID"),code$8=85,code$7=0,name$6="identity",encode$12=coerce$g,digest$3=t=>create$k(code$7,encode$12(t)),identity$f={code:code$7,name:name$6,encode:encode$12,digest:digest$3},hashFn=async function(t){return(await murmur3128.encode(t)).slice(0,8).reverse()},addLinksToHamtBucket$1=(t,e,r)=>Promise.all(t.map(n=>{if(n.Name==null)throw new Error("Unexpected Link without a Name");if(n.Name.length===2){const o=parseInt(n.Name,16);return e._putObjectAt(o,new Bucket({hash:r._options.hash,bits:r._options.bits},e,o))}return r.put(n.Name.substring(2),!0)})),toPrefix$1=t=>t.toString(16).toUpperCase().padStart(2,"0").substring(0,2),toBucketPath$1=t=>{let e=t.bucket;const r=[];for(;e._parent;)r.push(e),e=e._parent;return r.push(e),r.reverse()},findShardCid=async(t,e,r,n,o)=>{if(!n){const p=createHAMT({hashFn});n={rootBucket:p,hamtDepth:1,lastBucket:p}}await addLinksToHamtBucket$1(t.Links,n.lastBucket,n.rootBucket);const a=await n.rootBucket._findNewBucketAndPos(e);let c=toPrefix$1(a.pos);const u=toBucketPath$1(a);u.length>n.hamtDepth&&(n.lastBucket=u[n.hamtDepth],c=toPrefix$1(n.lastBucket._posAtParent));const l=t.Links.find(p=>{if(p.Name==null)return!1;const g=p.Name.substring(0,2),$=p.Name.substring(2);return!(g!==c||$&&$!==e)});if(!l)return null;if(l.Name!=null&&l.Name.substring(2)===e)return l.Hash;n.hamtDepth++;const f=await r.get(l.Hash,o);return t=decode$2k(f),findShardCid(t,e,r,n,o)};function extractDataFromBlock(t,e,r,n){const o=t.length,a=e+o;return r>=a||n<e?new Uint8Array(0):(n>=e&&n<a&&(t=t.subarray(0,n-e)),r>=e&&r<a&&(t=t.subarray(r-e)),t)}const validateOffsetAndLength=(t,e,r)=>{if(e||(e=0),e<0)throw errcode(new Error("Offset must be greater than or equal to 0"),"ERR_INVALID_PARAMS");if(e>t)throw errcode(new Error("Offset must be less than the file size"),"ERR_INVALID_PARAMS");if(!r&&r!==0&&(r=t-e),r<0)throw errcode(new Error("Length must be greater than or equal to 0"),"ERR_INVALID_PARAMS");return e+r>t&&(r=t-e),{offset:e,length:r}};async function walkDAG(t,e,r,n,o,a,c,u){if(e instanceof Uint8Array){r.push(extractDataFromBlock(e,n,o,a));return}if(e.Data==null)throw errcode(new Error("no data in PBNode"),"ERR_NOT_UNIXFS");let l;try{l=UnixFS.unmarshal(e.Data)}catch(p){throw errcode(p,"ERR_NOT_UNIXFS")}if(l.data!=null){const p=l.data,g=extractDataFromBlock(p,n,o,a);r.push(g),n+=g.byteLength}const f=[];for(let p=0;p<e.Links.length;p++){const g=e.Links[p],$=n,_=$+l.blockSizes[p];if((o>=$&&o<_||a>=$&&a<=_||o<$&&a>_)&&f.push({link:g,blockStart:n}),n=_,n>a)break}await pipe$1(f,p=>map$3(p,g=>async()=>{const $=await t.get(g.link.Hash,{signal:u.signal});return{...g,block:$}}),p=>parallel(p,{ordered:!0}),async p=>{for await(const{link:g,block:$,blockStart:_}of p){let b;switch(g.Hash.code){case code$i:b=decode$2k($);break;case code$8:b=$;break;default:r.end(errcode(new Error(`Unsupported codec: ${g.Hash.code}`),"ERR_NOT_UNIXFS"));return}c.add(async()=>{await walkDAG(t,b,r,_,o,a,c,u)})}})}const fileContent=(t,e,r,n,o,a,c)=>{async function*u(l={}){const f=r.fileSize();if(f===void 0)throw new Error("File was a directory");const{offset:p,length:g}=validateOffsetAndLength(f,l.offset,l.length);if(g===0)return;const $=new PQueue$1({concurrency:1}),_=pushable();$.add(async()=>{await walkDAG(c,e,_,0,p,p+g,$,l)}),$.on("error",D=>{_.end(D)});let b=0;for await(const D of _)D!=null&&(b+=D.byteLength,b===g&&_.end(),yield D)}return u},directoryContent=(t,e,r,n,o,a,c)=>{async function*u(l={}){const f=l.offset||0,p=l.length||e.Links.length,g=e.Links.slice(f,p);for(const $ of g){const _=await o($.Hash,$.Name||"",`${n}/${$.Name||""}`,[],a+1,c,l);_.entry&&(yield _.entry)}}return u},hamtShardedDirectoryContent=(t,e,r,n,o,a,c)=>{function u(l={}){return listDirectory(e,n,o,a,c,l)}return u};async function*listDirectory(t,e,r,n,o,a){const c=t.Links;for(const u of c){const l=u.Name!=null?u.Name.substring(2):null;if(l)yield(await r(u.Hash,l,`${e}/${l}`,[],n+1,o,a)).entry;else{const f=await o.get(u.Hash);t=decode$2k(f);for await(const p of listDirectory(t,e,r,n,o,a))yield p}}}const findLinkCid=(t,e)=>{const r=t.Links.find(n=>n.Name===e);return r&&r.Hash},contentExporters={raw:fileContent,file:fileContent,directory:directoryContent,"hamt-sharded-directory":hamtShardedDirectoryContent,metadata:(t,e,r,n,o,a,c)=>()=>[],symlink:(t,e,r,n,o,a,c)=>()=>[]},unixFsResolver=async(t,e,r,n,o,a,c,u)=>{const l=await c.get(t,u),f=decode$2k(l);let p,g;if(e||(e=t.toString()),f.Data==null)throw errcode(new Error("no data in PBNode"),"ERR_NOT_UNIXFS");try{p=UnixFS.unmarshal(f.Data)}catch($){throw errcode($,"ERR_NOT_UNIXFS")}if(r||(r=e),n.length){let $;if(p&&p.type==="hamt-sharded-directory"?$=await findShardCid(f,n[0],c):$=findLinkCid(f,n[0]),!$)throw errcode(new Error("file does not exist"),"ERR_NOT_FOUND");const _=n.shift(),b=`${r}/${_}`;g={cid:$,toResolve:n,name:_||"",path:b}}return{entry:{type:p.isDirectory()?"directory":"file",name:e,path:r,cid:t,content:contentExporters[p.type](t,f,p,r,o,a,c),unixfs:p,depth:a,node:f,size:p.fileSize()},next:g}},rawContent$1=t=>{async function*e(r={}){const{offset:n,length:o}=validateOffsetAndLength(t.length,r.offset,r.length);yield extractDataFromBlock(t,0,n,n+o)}return e},resolve$4=async(t,e,r,n,o,a,c,u)=>{if(n.length)throw errcode(new Error(`No link named ${r} found in raw node ${t}`),"ERR_NOT_FOUND");const l=await c.get(t,u);return{entry:{type:"raw",name:e,path:r,cid:t,content:rawContent$1(l),depth:a,size:l.length,node:l}}},resolve$3=async(t,e,r,n,o,a,c,u)=>{const l=await c.get(t),f=decode$2u(l);let p=f,g=r;for(;n.length;){const $=n[0];if($ in p){n.shift(),g=`${g}/${$}`;const _=CID$e.asCID(p[$]);if(_)return{entry:{type:"object",name:e,path:r,cid:t,node:l,depth:a,size:l.length,content:async function*(){yield f}},next:{cid:_,name:$,path:g,toResolve:n}};p=p[$]}else throw errcode(new Error(`No property named ${$} found in cbor node ${t}`),"ERR_NO_PROP")}return{entry:{type:"object",name:e,path:r,cid:t,node:l,depth:a,size:l.length,content:async function*(){yield f}}}},rawContent=t=>{async function*e(r={}){const{offset:n,length:o}=validateOffsetAndLength(t.length,r.offset,r.length);yield extractDataFromBlock(t,0,n,n+o)}return e},resolve$2=async(t,e,r,n,o,a,c,u)=>{if(n.length)throw errcode(new Error(`No link named ${r} found in raw node ${t}`),"ERR_NOT_FOUND");const l=await decode$1p(t.multihash.bytes);return{entry:{type:"identity",name:e,path:r,cid:t,content:rawContent(l.digest),depth:a,size:l.digest.length,node:l.digest}}},resolvers$a={[code$i]:unixFsResolver,[code$8]:resolve$4,[code$j]:resolve$3,[identity$f.code]:resolve$2};function resolve$1(t,e,r,n,o,a,c){const u=resolvers$a[t.code];if(!u)throw errcode(new Error(`No resolver for code ${t.code}`),"ERR_NO_RESOLVER");return u(t,e,r,n,resolve$1,o,a,c)}const toPathComponents$1=(t="")=>(t.trim().match(/([^\\^/]|\\\/)+/g)||[]).filter(Boolean),cidAndRest=t=>{if(t instanceof Uint8Array)return{cid:CID$e.decode(t),toResolve:[]};const e=CID$e.asCID(t);if(e)return{cid:e,toResolve:[]};if(typeof t=="string"){t.indexOf("/ipfs/")===0&&(t=t.substring(6));const r=toPathComponents$1(t);return{cid:CID$e.parse(r[0]),toResolve:r.slice(1)}}throw errcode(new Error(`Unknown path type ${t}`),"ERR_BAD_PATH")};async function*walkPath(t,e,r={}){let{cid:n,toResolve:o}=cidAndRest(t),a=n.toString(),c=a;const u=o.length;for(;;){const l=await resolve$1(n,a,c,o,u,e,r);if(!l.entry&&!l.next)throw errcode(new Error(`Could not resolve ${t}`),"ERR_NOT_FOUND");if(l.entry&&(yield l.entry),!l.next)return;o=l.next.toResolve,n=l.next.cid,a=l.next.name,c=l.next.path}}async function exporter(t,e,r={}){const n=await last(walkPath(t,e,r));if(!n)throw errcode(new Error(`Could not resolve ${t}`),"ERR_NOT_FOUND");return n}async function*recursive(t,e,r={}){const n=await exporter(t,e,r);if(!n)return;if(yield n,n.type==="directory")for await(const a of o(n,r))yield a;async function*o(a,c){for await(const u of a.content(c))yield u,!(u instanceof Uint8Array)&&u.type==="directory"&&(yield*o(u,c))}}function createCat$1({repo:t,preload:e}){async function*r(n,o={}){if(n=normalizeCidPath(n),o.preload!==!1){const c=n.split("/");e(CID$k.parse(c[0]))}const a=await exporter(n,t.blocks,o);if(a.type==="directory")throw new Error("this dag node is a directory");if(!a.content)throw new Error("this dag node has no content");yield*a.content(o)}return withTimeoutOption(r)}fromString$y("ustar\0","binary"),fromString$y("ustar ","binary"),fromString$y(" \0","binary");function reader$2(t){const e=async function*(){let r=yield,n=new Uint8ArrayList;for await(const o of t){if(r==null){n.append(o),r=yield n,n=new Uint8ArrayList;continue}for(n.append(o);n.length>=r;){const a=n.sublist(0,r);if(n.consume(r),r=yield a,r==null){n.length>0&&(r=yield n,n=new Uint8ArrayList);break}}}if(r!=null)throw Object.assign(new Error(`stream ended before ${r} bytes became available`),{code:"ERR_UNDER_READ",buffer:n})}();return e.next(),e}var index_browser={RTLD_LAZY:1,RTLD_NOW:2,RTLD_GLOBAL:256,RTLD_LOCAL:0,RTLD_DEEPBIND:8,E2BIG:7,EACCES:13,EADDRINUSE:98,EADDRNOTAVAIL:99,EAFNOSUPPORT:97,EAGAIN:11,EALREADY:114,EBADF:9,EBADMSG:74,EBUSY:16,ECANCELED:125,ECHILD:10,ECONNABORTED:103,ECONNREFUSED:111,ECONNRESET:104,EDEADLK:35,EDESTADDRREQ:89,EDOM:33,EDQUOT:122,EEXIST:17,EFAULT:14,EFBIG:27,EHOSTUNREACH:113,EIDRM:43,EILSEQ:84,EINPROGRESS:115,EINTR:4,EINVAL:22,EIO:5,EISCONN:106,EISDIR:21,ELOOP:40,EMFILE:24,EMLINK:31,EMSGSIZE:90,EMULTIHOP:72,ENAMETOOLONG:36,ENETDOWN:100,ENETRESET:102,ENETUNREACH:101,ENFILE:23,ENOBUFS:105,ENODATA:61,ENODEV:19,ENOENT:2,ENOEXEC:8,ENOLCK:37,ENOLINK:67,ENOMEM:12,ENOMSG:42,ENOPROTOOPT:92,ENOSPC:28,ENOSR:63,ENOSTR:60,ENOSYS:38,ENOTCONN:107,ENOTDIR:20,ENOTEMPTY:39,ENOTSOCK:88,ENOTSUP:95,ENOTTY:25,ENXIO:6,EOPNOTSUPP:95,EOVERFLOW:75,EPERM:1,EPIPE:32,EPROTO:71,EPROTONOSUPPORT:93,EPROTOTYPE:91,ERANGE:34,EROFS:30,ESPIPE:29,ESRCH:3,ESTALE:116,ETIME:62,ETIMEDOUT:110,ETXTBSY:26,EWOULDBLOCK:11,EXDEV:18,PRIORITY_LOW:19,PRIORITY_BELOW_NORMAL:10,PRIORITY_NORMAL:0,PRIORITY_ABOVE_NORMAL:-7,PRIORITY_HIGH:-14,PRIORITY_HIGHEST:-20,SIGHUP:1,SIGINT:2,SIGQUIT:3,SIGILL:4,SIGTRAP:5,SIGABRT:6,SIGIOT:6,SIGBUS:7,SIGFPE:8,SIGKILL:9,SIGUSR1:10,SIGSEGV:11,SIGUSR2:12,SIGPIPE:13,SIGALRM:14,SIGTERM:15,SIGCHLD:17,SIGSTKFLT:16,SIGCONT:18,SIGSTOP:19,SIGTSTP:20,SIGTTIN:21,SIGTTOU:22,SIGURG:23,SIGXCPU:24,SIGXFSZ:25,SIGVTALRM:26,SIGPROF:27,SIGWINCH:28,SIGIO:29,SIGPOLL:29,SIGPWR:30,SIGSYS:31,SIGUNUSED:31,UV_FS_SYMLINK_DIR:1,UV_FS_SYMLINK_JUNCTION:2,O_RDONLY:0,O_WRONLY:1,O_RDWR:2,UV_DIRENT_UNKNOWN:0,UV_DIRENT_FILE:1,UV_DIRENT_DIR:2,UV_DIRENT_LINK:3,UV_DIRENT_FIFO:4,UV_DIRENT_SOCKET:5,UV_DIRENT_CHAR:6,UV_DIRENT_BLOCK:7,S_IFMT:61440,S_IFREG:32768,S_IFDIR:16384,S_IFCHR:8192,S_IFBLK:24576,S_IFIFO:4096,S_IFLNK:40960,S_IFSOCK:49152,O_CREAT:64,O_EXCL:128,UV_FS_O_FILEMAP:0,O_NOCTTY:256,O_TRUNC:512,O_APPEND:1024,O_DIRECTORY:65536,O_NOATIME:262144,O_NOFOLLOW:131072,O_SYNC:1052672,O_DSYNC:4096,O_DIRECT:16384,O_NONBLOCK:2048,S_IRWXU:448,S_IRUSR:256,S_IWUSR:128,S_IXUSR:64,S_IRWXG:56,S_IRGRP:32,S_IWGRP:16,S_IXGRP:8,S_IRWXO:7,S_IROTH:4,S_IWOTH:2,S_IXOTH:1,F_OK:0,R_OK:4,W_OK:2,X_OK:1,UV_FS_COPYFILE_EXCL:1,COPYFILE_EXCL:1,UV_FS_COPYFILE_FICLONE:2,COPYFILE_FICLONE:2,UV_FS_COPYFILE_FICLONE_FORCE:4,COPYFILE_FICLONE_FORCE:4,OPENSSL_VERSION_NUMBER:269488495,SSL_OP_ALL:2147485780,SSL_OP_ALLOW_NO_DHE_KEX:1024,SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION:262144,SSL_OP_CIPHER_SERVER_PREFERENCE:4194304,SSL_OP_CISCO_ANYCONNECT:32768,SSL_OP_COOKIE_EXCHANGE:8192,SSL_OP_CRYPTOPRO_TLSEXT_BUG:2147483648,SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS:2048,SSL_OP_EPHEMERAL_RSA:0,SSL_OP_LEGACY_SERVER_CONNECT:4,SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER:0,SSL_OP_MICROSOFT_SESS_ID_BUG:0,SSL_OP_MSIE_SSLV2_RSA_PADDING:0,SSL_OP_NETSCAPE_CA_DN_BUG:0,SSL_OP_NETSCAPE_CHALLENGE_BUG:0,SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG:0,SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG:0,SSL_OP_NO_COMPRESSION:131072,SSL_OP_NO_ENCRYPT_THEN_MAC:524288,SSL_OP_NO_QUERY_MTU:4096,SSL_OP_NO_RENEGOTIATION:1073741824,SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION:65536,SSL_OP_NO_SSLv2:0,SSL_OP_NO_SSLv3:33554432,SSL_OP_NO_TICKET:16384,SSL_OP_NO_TLSv1:67108864,SSL_OP_NO_TLSv1_1:268435456,SSL_OP_NO_TLSv1_2:134217728,SSL_OP_NO_TLSv1_3:536870912,SSL_OP_PKCS1_CHECK_1:0,SSL_OP_PKCS1_CHECK_2:0,SSL_OP_PRIORITIZE_CHACHA:2097152,SSL_OP_SINGLE_DH_USE:0,SSL_OP_SINGLE_ECDH_USE:0,SSL_OP_SSLEAY_080_CLIENT_DH_BUG:0,SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG:0,SSL_OP_TLS_BLOCK_PADDING_BUG:0,SSL_OP_TLS_D5_BUG:0,SSL_OP_TLS_ROLLBACK_BUG:8388608,ENGINE_METHOD_RSA:1,ENGINE_METHOD_DSA:2,ENGINE_METHOD_DH:4,ENGINE_METHOD_RAND:8,ENGINE_METHOD_EC:2048,ENGINE_METHOD_CIPHERS:64,ENGINE_METHOD_DIGESTS:128,ENGINE_METHOD_PKEY_METHS:512,ENGINE_METHOD_PKEY_ASN1_METHS:1024,ENGINE_METHOD_ALL:65535,ENGINE_METHOD_NONE:0,DH_CHECK_P_NOT_SAFE_PRIME:2,DH_CHECK_P_NOT_PRIME:1,DH_UNABLE_TO_CHECK_GENERATOR:4,DH_NOT_SUITABLE_GENERATOR:8,ALPN_ENABLED:1,RSA_PKCS1_PADDING:1,RSA_SSLV23_PADDING:2,RSA_NO_PADDING:3,RSA_PKCS1_OAEP_PADDING:4,RSA_X931_PADDING:5,RSA_PKCS1_PSS_PADDING:6,RSA_PSS_SALTLEN_DIGEST:-1,RSA_PSS_SALTLEN_MAX_SIGN:-2,RSA_PSS_SALTLEN_AUTO:-2,defaultCoreCipherList:"TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA",TLS1_VERSION:769,TLS1_1_VERSION:770,TLS1_2_VERSION:771,TLS1_3_VERSION:772,POINT_CONVERSION_COMPRESSED:2,POINT_CONVERSION_UNCOMPRESSED:4,POINT_CONVERSION_HYBRID:6};const isoConstants=getDefaultExportFromCjs(index_browser);async function toBuffer(t){let e=new Uint8Array(0);for await(const r of t)e=concat$8([e,r],e.length+r.length);return e}const ZEROS="0000000000000000000",SEVENS="7777777777777777777",ZERO_OFFSET=48,USTAR_MAGIC=fromString$y("ustar\0","binary"),USTAR_VER=fromString$y("00","binary"),MASK=parseInt("7777",8),MAGIC_OFFSET=257,VERSION_OFFSET=263,toTypeflag=function(t){switch(t){case"file":return 0;case"link":return 1;case"symlink":return 2;case"character-device":return 3;case"block-device":return 4;case"directory":return 5;case"fifo":return 6;case"contiguous-file":return 7;case"pax-header":return 72;default:return 0}},cksum=function(t){let e=256;for(let r=0;r<148;r++)e+=t[r];for(let r=156;r<512;r++)e+=t[r];return e},encodeOct=function(t,e){const r=t.toString(8);return r.length>e?fromString$y(SEVENS.slice(0,e)+" "):fromString$y(ZEROS.slice(0,e-r.length)+r+" ")},addLength=function(t){const e=fromString$y(t).byteLength;let r=Math.floor(Math.log(e)/Math.log(10))+1;return e+r>=Math.pow(10,r)&&r++,`${e+r}${t}`};function encodePax$1(t){let e="";t.name!=null&&(e+=addLength(" path="+t.name+`
`)),t.linkname!=null&&(e+=addLength(" linkpath="+t.linkname+`
`));const r=t.pax;if(r!=null)for(const n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e+=addLength(" "+n+"="+r[n]+`
`));return fromString$y(e)}function encode$11(t){const e=new Uint8Array(512);let r=t.name,n="";if(t.typeflag===5&&r[r.length-1]!=="/"&&(r+="/"),fromString$y(r).byteLength!==r.length)return null;for(;fromString$y(r).byteLength>100;){const o=r.indexOf("/");if(o===-1)return null;n+=n!==""?"/"+r.slice(0,o):r.slice(0,o),r=r.slice(o+1)}return fromString$y(r).byteLength>100||fromString$y(n).byteLength>155||t.linkname!=null&&fromString$y(t.linkname).byteLength>100?null:(e.set(fromString$y(r),0),e.set(encodeOct(t.mode&MASK,6),100),e.set(encodeOct(t.uid,6),108),e.set(encodeOct(t.gid,6),116),e.set(encodeOct(t.size,11),124),e.set(encodeOct(t.mtime.getTime()/1e3|0,11),136),e[156]=ZERO_OFFSET+toTypeflag(t.type),t.linkname!=null&&e.set(fromString$y(t.linkname),157),e.set(USTAR_MAGIC,MAGIC_OFFSET),e.set(USTAR_VER,VERSION_OFFSET),t.uname!=null&&e.set(fromString$y(t.uname),265),t.gname!=null&&e.set(fromString$y(t.gname),297),e.set(encodeOct(t.devmajor??0,6),329),e.set(encodeOct(t.devminor??0,6),337),n!=null&&e.set(fromString$y(n),345),e.set(encodeOct(cksum(e),6),148),e)}const{S_IFMT,S_IFBLK,S_IFCHR,S_IFDIR,S_IFIFO,S_IFLNK}=isoConstants,DMODE=parseInt("755",8),FMODE=parseInt("644",8),END_OF_TAR=new Uint8Array(1024);function modeToType(t=0){switch(t&S_IFMT){case S_IFBLK:return"block-device";case S_IFCHR:return"character-device";case S_IFDIR:return"directory";case S_IFIFO:return"fifo";case S_IFLNK:return"symlink";default:return"file"}}function getPadding(t){return t&=511,t!==0?END_OF_TAR.subarray(0,512-t):new Uint8Array(0)}function encode$10(t){if(t.pax==null){const e=encode$11(t);if(e!=null)return e}return encodePax(t)}function encodePax(t){const e=encodePax$1(t),r={name:"PaxHeader",mode:t.mode,uid:t.uid,gid:t.gid,size:e.length,mtime:t.mtime,type:"pax-header",linkname:t.linkname,uname:t.uname,gname:t.gname,devmajor:t.devmajor,devminor:t.devminor};return new Uint8ArrayList(encode$11(r)??new Uint8Array(0),e,getPadding(e.length),encode$11({...r,size:t.size,type:t.type})??new Uint8Array(0)).subarray()}function pack(){return async function*(t){for await(let{header:e,body:r}of t){const n={...e,size:e.type==="symlink"?0:e.size??0,type:e.type??modeToType(e.mode),mode:e.mode??(e.type==="directory"?DMODE:FMODE),uid:e.uid??0,gid:e.gid??0,mtime:e.mtime??new Date};if(typeof r=="string"&&(r=fromString$y(r)),r instanceof Uint8Array||isUint8ArrayList(r)){n.size=r.length,yield encode$10(n),yield isUint8ArrayList(r)?r.subarray():r,yield getPadding(n.size);continue}if(n.type==="symlink"&&n.linkname==null){if(r==null)throw new Error("type was symlink but no linkname or body specified");n.linkname=toString$D(await toBuffer(r)),yield encode$10(n);continue}if(yield encode$10(n),n.type!=="file"&&n.type!=="contiguous-file")continue;let o=0;for await(const a of r??[])o+=a.length,yield isUint8ArrayList(a)?a.subarray():a;if(o!==n.size)throw new Error(`size mismatch, wrote ${o} of ${n.size} bytes`);yield getPadding(n.size)}yield END_OF_TAR}}const Z_FIXED$1=4,Z_BINARY=0,Z_TEXT=1,Z_UNKNOWN$1=2;function zero$1(t){let e=t.length;for(;--e>=0;)t[e]=0}const STORED_BLOCK=0,STATIC_TREES=1,DYN_TREES=2,MIN_MATCH$1=3,MAX_MATCH$1=258,LENGTH_CODES$1=29,LITERALS$1=256,L_CODES$1=LITERALS$1+1+LENGTH_CODES$1,D_CODES$1=30,BL_CODES$1=19,HEAP_SIZE$1=2*L_CODES$1+1,MAX_BITS$1=15,Buf_size=16,MAX_BL_BITS=7,END_BLOCK=256,REP_3_6=16,REPZ_3_10=17,REPZ_11_138=18,extra_lbits=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),extra_dbits=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),extra_blbits=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),bl_order=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),DIST_CODE_LEN=512,static_ltree=new Array((L_CODES$1+2)*2);zero$1(static_ltree);const static_dtree=new Array(D_CODES$1*2);zero$1(static_dtree);const _dist_code=new Array(DIST_CODE_LEN);zero$1(_dist_code);const _length_code=new Array(MAX_MATCH$1-MIN_MATCH$1+1);zero$1(_length_code);const base_length=new Array(LENGTH_CODES$1);zero$1(base_length);const base_dist=new Array(D_CODES$1);zero$1(base_dist);function StaticTreeDesc(t,e,r,n,o){this.static_tree=t,this.extra_bits=e,this.extra_base=r,this.elems=n,this.max_length=o,this.has_stree=t&&t.length}let static_l_desc,static_d_desc,static_bl_desc;function TreeDesc(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}const d_code=t=>t<256?_dist_code[t]:_dist_code[256+(t>>>7)],put_short=(t,e)=>{t.pending_buf[t.pending++]=e&255,t.pending_buf[t.pending++]=e>>>8&255},send_bits=(t,e,r)=>{t.bi_valid>Buf_size-r?(t.bi_buf|=e<<t.bi_valid&65535,put_short(t,t.bi_buf),t.bi_buf=e>>Buf_size-t.bi_valid,t.bi_valid+=r-Buf_size):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=r)},send_code=(t,e,r)=>{send_bits(t,r[e*2],r[e*2+1])},bi_reverse=(t,e)=>{let r=0;do r|=t&1,t>>>=1,r<<=1;while(--e>0);return r>>>1},bi_flush=t=>{t.bi_valid===16?(put_short(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):t.bi_valid>=8&&(t.pending_buf[t.pending++]=t.bi_buf&255,t.bi_buf>>=8,t.bi_valid-=8)},gen_bitlen=(t,e)=>{const r=e.dyn_tree,n=e.max_code,o=e.stat_desc.static_tree,a=e.stat_desc.has_stree,c=e.stat_desc.extra_bits,u=e.stat_desc.extra_base,l=e.stat_desc.max_length;let f,p,g,$,_,b,D=0;for($=0;$<=MAX_BITS$1;$++)t.bl_count[$]=0;for(r[t.heap[t.heap_max]*2+1]=0,f=t.heap_max+1;f<HEAP_SIZE$1;f++)p=t.heap[f],$=r[r[p*2+1]*2+1]+1,$>l&&($=l,D++),r[p*2+1]=$,!(p>n)&&(t.bl_count[$]++,_=0,p>=u&&(_=c[p-u]),b=r[p*2],t.opt_len+=b*($+_),a&&(t.static_len+=b*(o[p*2+1]+_)));if(D!==0){do{for($=l-1;t.bl_count[$]===0;)$--;t.bl_count[$]--,t.bl_count[$+1]+=2,t.bl_count[l]--,D-=2}while(D>0);for($=l;$!==0;$--)for(p=t.bl_count[$];p!==0;)g=t.heap[--f],!(g>n)&&(r[g*2+1]!==$&&(t.opt_len+=($-r[g*2+1])*r[g*2],r[g*2+1]=$),p--)}},gen_codes=(t,e,r)=>{const n=new Array(MAX_BITS$1+1);let o=0,a,c;for(a=1;a<=MAX_BITS$1;a++)o=o+r[a-1]<<1,n[a]=o;for(c=0;c<=e;c++){let u=t[c*2+1];u!==0&&(t[c*2]=bi_reverse(n[u]++,u))}},tr_static_init=()=>{let t,e,r,n,o;const a=new Array(MAX_BITS$1+1);for(r=0,n=0;n<LENGTH_CODES$1-1;n++)for(base_length[n]=r,t=0;t<1<<extra_lbits[n];t++)_length_code[r++]=n;for(_length_code[r-1]=n,o=0,n=0;n<16;n++)for(base_dist[n]=o,t=0;t<1<<extra_dbits[n];t++)_dist_code[o++]=n;for(o>>=7;n<D_CODES$1;n++)for(base_dist[n]=o<<7,t=0;t<1<<extra_dbits[n]-7;t++)_dist_code[256+o++]=n;for(e=0;e<=MAX_BITS$1;e++)a[e]=0;for(t=0;t<=143;)static_ltree[t*2+1]=8,t++,a[8]++;for(;t<=255;)static_ltree[t*2+1]=9,t++,a[9]++;for(;t<=279;)static_ltree[t*2+1]=7,t++,a[7]++;for(;t<=287;)static_ltree[t*2+1]=8,t++,a[8]++;for(gen_codes(static_ltree,L_CODES$1+1,a),t=0;t<D_CODES$1;t++)static_dtree[t*2+1]=5,static_dtree[t*2]=bi_reverse(t,5);static_l_desc=new StaticTreeDesc(static_ltree,extra_lbits,LITERALS$1+1,L_CODES$1,MAX_BITS$1),static_d_desc=new StaticTreeDesc(static_dtree,extra_dbits,0,D_CODES$1,MAX_BITS$1),static_bl_desc=new StaticTreeDesc(new Array(0),extra_blbits,0,BL_CODES$1,MAX_BL_BITS)},init_block=t=>{let e;for(e=0;e<L_CODES$1;e++)t.dyn_ltree[e*2]=0;for(e=0;e<D_CODES$1;e++)t.dyn_dtree[e*2]=0;for(e=0;e<BL_CODES$1;e++)t.bl_tree[e*2]=0;t.dyn_ltree[END_BLOCK*2]=1,t.opt_len=t.static_len=0,t.sym_next=t.matches=0},bi_windup=t=>{t.bi_valid>8?put_short(t,t.bi_buf):t.bi_valid>0&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0},smaller=(t,e,r,n)=>{const o=e*2,a=r*2;return t[o]<t[a]||t[o]===t[a]&&n[e]<=n[r]},pqdownheap=(t,e,r)=>{const n=t.heap[r];let o=r<<1;for(;o<=t.heap_len&&(o<t.heap_len&&smaller(e,t.heap[o+1],t.heap[o],t.depth)&&o++,!smaller(e,n,t.heap[o],t.depth));)t.heap[r]=t.heap[o],r=o,o<<=1;t.heap[r]=n},compress_block=(t,e,r)=>{let n,o,a=0,c,u;if(t.sym_next!==0)do n=t.pending_buf[t.sym_buf+a++]&255,n+=(t.pending_buf[t.sym_buf+a++]&255)<<8,o=t.pending_buf[t.sym_buf+a++],n===0?send_code(t,o,e):(c=_length_code[o],send_code(t,c+LITERALS$1+1,e),u=extra_lbits[c],u!==0&&(o-=base_length[c],send_bits(t,o,u)),n--,c=d_code(n),send_code(t,c,r),u=extra_dbits[c],u!==0&&(n-=base_dist[c],send_bits(t,n,u)));while(a<t.sym_next);send_code(t,END_BLOCK,e)},build_tree=(t,e)=>{const r=e.dyn_tree,n=e.stat_desc.static_tree,o=e.stat_desc.has_stree,a=e.stat_desc.elems;let c,u,l=-1,f;for(t.heap_len=0,t.heap_max=HEAP_SIZE$1,c=0;c<a;c++)r[c*2]!==0?(t.heap[++t.heap_len]=l=c,t.depth[c]=0):r[c*2+1]=0;for(;t.heap_len<2;)f=t.heap[++t.heap_len]=l<2?++l:0,r[f*2]=1,t.depth[f]=0,t.opt_len--,o&&(t.static_len-=n[f*2+1]);for(e.max_code=l,c=t.heap_len>>1;c>=1;c--)pqdownheap(t,r,c);f=a;do c=t.heap[1],t.heap[1]=t.heap[t.heap_len--],pqdownheap(t,r,1),u=t.heap[1],t.heap[--t.heap_max]=c,t.heap[--t.heap_max]=u,r[f*2]=r[c*2]+r[u*2],t.depth[f]=(t.depth[c]>=t.depth[u]?t.depth[c]:t.depth[u])+1,r[c*2+1]=r[u*2+1]=f,t.heap[1]=f++,pqdownheap(t,r,1);while(t.heap_len>=2);t.heap[--t.heap_max]=t.heap[1],gen_bitlen(t,e),gen_codes(r,l,t.bl_count)},scan_tree=(t,e,r)=>{let n,o=-1,a,c=e[0*2+1],u=0,l=7,f=4;for(c===0&&(l=138,f=3),e[(r+1)*2+1]=65535,n=0;n<=r;n++)a=c,c=e[(n+1)*2+1],!(++u<l&&a===c)&&(u<f?t.bl_tree[a*2]+=u:a!==0?(a!==o&&t.bl_tree[a*2]++,t.bl_tree[REP_3_6*2]++):u<=10?t.bl_tree[REPZ_3_10*2]++:t.bl_tree[REPZ_11_138*2]++,u=0,o=a,c===0?(l=138,f=3):a===c?(l=6,f=3):(l=7,f=4))},send_tree=(t,e,r)=>{let n,o=-1,a,c=e[0*2+1],u=0,l=7,f=4;for(c===0&&(l=138,f=3),n=0;n<=r;n++)if(a=c,c=e[(n+1)*2+1],!(++u<l&&a===c)){if(u<f)do send_code(t,a,t.bl_tree);while(--u!==0);else a!==0?(a!==o&&(send_code(t,a,t.bl_tree),u--),send_code(t,REP_3_6,t.bl_tree),send_bits(t,u-3,2)):u<=10?(send_code(t,REPZ_3_10,t.bl_tree),send_bits(t,u-3,3)):(send_code(t,REPZ_11_138,t.bl_tree),send_bits(t,u-11,7));u=0,o=a,c===0?(l=138,f=3):a===c?(l=6,f=3):(l=7,f=4)}},build_bl_tree=t=>{let e;for(scan_tree(t,t.dyn_ltree,t.l_desc.max_code),scan_tree(t,t.dyn_dtree,t.d_desc.max_code),build_tree(t,t.bl_desc),e=BL_CODES$1-1;e>=3&&t.bl_tree[bl_order[e]*2+1]===0;e--);return t.opt_len+=3*(e+1)+5+5+4,e},send_all_trees=(t,e,r,n)=>{let o;for(send_bits(t,e-257,5),send_bits(t,r-1,5),send_bits(t,n-4,4),o=0;o<n;o++)send_bits(t,t.bl_tree[bl_order[o]*2+1],3);send_tree(t,t.dyn_ltree,e-1),send_tree(t,t.dyn_dtree,r-1)},detect_data_type=t=>{let e=4093624447,r;for(r=0;r<=31;r++,e>>>=1)if(e&1&&t.dyn_ltree[r*2]!==0)return Z_BINARY;if(t.dyn_ltree[9*2]!==0||t.dyn_ltree[10*2]!==0||t.dyn_ltree[13*2]!==0)return Z_TEXT;for(r=32;r<LITERALS$1;r++)if(t.dyn_ltree[r*2]!==0)return Z_TEXT;return Z_BINARY};let static_init_done=!1;const _tr_init$1=t=>{static_init_done||(tr_static_init(),static_init_done=!0),t.l_desc=new TreeDesc(t.dyn_ltree,static_l_desc),t.d_desc=new TreeDesc(t.dyn_dtree,static_d_desc),t.bl_desc=new TreeDesc(t.bl_tree,static_bl_desc),t.bi_buf=0,t.bi_valid=0,init_block(t)},_tr_stored_block$1=(t,e,r,n)=>{send_bits(t,(STORED_BLOCK<<1)+(n?1:0),3),bi_windup(t),put_short(t,r),put_short(t,~r),r&&t.pending_buf.set(t.window.subarray(e,e+r),t.pending),t.pending+=r},_tr_align$1=t=>{send_bits(t,STATIC_TREES<<1,3),send_code(t,END_BLOCK,static_ltree),bi_flush(t)},_tr_flush_block$1=(t,e,r,n)=>{let o,a,c=0;t.level>0?(t.strm.data_type===Z_UNKNOWN$1&&(t.strm.data_type=detect_data_type(t)),build_tree(t,t.l_desc),build_tree(t,t.d_desc),c=build_bl_tree(t),o=t.opt_len+3+7>>>3,a=t.static_len+3+7>>>3,a<=o&&(o=a)):o=a=r+5,r+4<=o&&e!==-1?_tr_stored_block$1(t,e,r,n):t.strategy===Z_FIXED$1||a===o?(send_bits(t,(STATIC_TREES<<1)+(n?1:0),3),compress_block(t,static_ltree,static_dtree)):(send_bits(t,(DYN_TREES<<1)+(n?1:0),3),send_all_trees(t,t.l_desc.max_code+1,t.d_desc.max_code+1,c+1),compress_block(t,t.dyn_ltree,t.dyn_dtree)),init_block(t),n&&bi_windup(t)},_tr_tally$1=(t,e,r)=>(t.pending_buf[t.sym_buf+t.sym_next++]=e,t.pending_buf[t.sym_buf+t.sym_next++]=e>>8,t.pending_buf[t.sym_buf+t.sym_next++]=r,e===0?t.dyn_ltree[r*2]++:(t.matches++,e--,t.dyn_ltree[(_length_code[r]+LITERALS$1+1)*2]++,t.dyn_dtree[d_code(e)*2]++),t.sym_next===t.sym_end);var _tr_init_1=_tr_init$1,_tr_stored_block_1=_tr_stored_block$1,_tr_flush_block_1=_tr_flush_block$1,_tr_tally_1=_tr_tally$1,_tr_align_1=_tr_align$1,trees={_tr_init:_tr_init_1,_tr_stored_block:_tr_stored_block_1,_tr_flush_block:_tr_flush_block_1,_tr_tally:_tr_tally_1,_tr_align:_tr_align_1};const adler32=(t,e,r,n)=>{let o=t&65535|0,a=t>>>16&65535|0,c=0;for(;r!==0;){c=r>2e3?2e3:r,r-=c;do o=o+e[n++]|0,a=a+o|0;while(--c);o%=65521,a%=65521}return o|a<<16|0};var adler32_1=adler32;const makeTable=()=>{let t,e=[];for(var r=0;r<256;r++){t=r;for(var n=0;n<8;n++)t=t&1?3988292384^t>>>1:t>>>1;e[r]=t}return e},crcTable=new Uint32Array(makeTable()),crc32=(t,e,r,n)=>{const o=crcTable,a=n+r;t^=-1;for(let c=n;c<a;c++)t=t>>>8^o[(t^e[c])&255];return t^-1};var crc32_1=crc32,messages$1={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},constants$2={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init,_tr_stored_block,_tr_flush_block,_tr_tally,_tr_align}=trees,{Z_NO_FLUSH:Z_NO_FLUSH$2,Z_PARTIAL_FLUSH,Z_FULL_FLUSH:Z_FULL_FLUSH$1,Z_FINISH:Z_FINISH$3,Z_BLOCK:Z_BLOCK$1,Z_OK:Z_OK$3,Z_STREAM_END:Z_STREAM_END$3,Z_STREAM_ERROR:Z_STREAM_ERROR$2,Z_DATA_ERROR:Z_DATA_ERROR$2,Z_BUF_ERROR:Z_BUF_ERROR$1,Z_DEFAULT_COMPRESSION:Z_DEFAULT_COMPRESSION$1,Z_FILTERED,Z_HUFFMAN_ONLY,Z_RLE,Z_FIXED,Z_DEFAULT_STRATEGY:Z_DEFAULT_STRATEGY$1,Z_UNKNOWN,Z_DEFLATED:Z_DEFLATED$2}=constants$2,MAX_MEM_LEVEL=9,MAX_WBITS$1=15,DEF_MEM_LEVEL=8,LENGTH_CODES=29,LITERALS=256,L_CODES=LITERALS+1+LENGTH_CODES,D_CODES=30,BL_CODES=19,HEAP_SIZE=2*L_CODES+1,MAX_BITS=15,MIN_MATCH=3,MAX_MATCH=258,MIN_LOOKAHEAD=MAX_MATCH+MIN_MATCH+1,PRESET_DICT=32,INIT_STATE=42,GZIP_STATE=57,EXTRA_STATE=69,NAME_STATE=73,COMMENT_STATE=91,HCRC_STATE=103,BUSY_STATE=113,FINISH_STATE=666,BS_NEED_MORE=1,BS_BLOCK_DONE=2,BS_FINISH_STARTED=3,BS_FINISH_DONE=4,OS_CODE=3,err=(t,e)=>(t.msg=messages$1[e],e),rank=t=>t*2-(t>4?9:0),zero=t=>{let e=t.length;for(;--e>=0;)t[e]=0},slide_hash=t=>{let e,r,n,o=t.w_size;e=t.hash_size,n=e;do r=t.head[--n],t.head[n]=r>=o?r-o:0;while(--e);e=o,n=e;do r=t.prev[--n],t.prev[n]=r>=o?r-o:0;while(--e)};let HASH_ZLIB=(t,e,r)=>(e<<t.hash_shift^r)&t.hash_mask,HASH=HASH_ZLIB;const flush_pending=t=>{const e=t.state;let r=e.pending;r>t.avail_out&&(r=t.avail_out),r!==0&&(t.output.set(e.pending_buf.subarray(e.pending_out,e.pending_out+r),t.next_out),t.next_out+=r,e.pending_out+=r,t.total_out+=r,t.avail_out-=r,e.pending-=r,e.pending===0&&(e.pending_out=0))},flush_block_only=(t,e)=>{_tr_flush_block(t,t.block_start>=0?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,flush_pending(t.strm)},put_byte=(t,e)=>{t.pending_buf[t.pending++]=e},putShortMSB=(t,e)=>{t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=e&255},read_buf=(t,e,r,n)=>{let o=t.avail_in;return o>n&&(o=n),o===0?0:(t.avail_in-=o,e.set(t.input.subarray(t.next_in,t.next_in+o),r),t.state.wrap===1?t.adler=adler32_1(t.adler,e,o,r):t.state.wrap===2&&(t.adler=crc32_1(t.adler,e,o,r)),t.next_in+=o,t.total_in+=o,o)},longest_match=(t,e)=>{let r=t.max_chain_length,n=t.strstart,o,a,c=t.prev_length,u=t.nice_match;const l=t.strstart>t.w_size-MIN_LOOKAHEAD?t.strstart-(t.w_size-MIN_LOOKAHEAD):0,f=t.window,p=t.w_mask,g=t.prev,$=t.strstart+MAX_MATCH;let _=f[n+c-1],b=f[n+c];t.prev_length>=t.good_match&&(r>>=2),u>t.lookahead&&(u=t.lookahead);do if(o=e,!(f[o+c]!==b||f[o+c-1]!==_||f[o]!==f[n]||f[++o]!==f[n+1])){n+=2,o++;do;while(f[++n]===f[++o]&&f[++n]===f[++o]&&f[++n]===f[++o]&&f[++n]===f[++o]&&f[++n]===f[++o]&&f[++n]===f[++o]&&f[++n]===f[++o]&&f[++n]===f[++o]&&n<$);if(a=MAX_MATCH-($-n),n=$-MAX_MATCH,a>c){if(t.match_start=e,c=a,a>=u)break;_=f[n+c-1],b=f[n+c]}}while((e=g[e&p])>l&&--r!==0);return c<=t.lookahead?c:t.lookahead},fill_window=t=>{const e=t.w_size;let r,n,o;do{if(n=t.window_size-t.lookahead-t.strstart,t.strstart>=e+(e-MIN_LOOKAHEAD)&&(t.window.set(t.window.subarray(e,e+e-n),0),t.match_start-=e,t.strstart-=e,t.block_start-=e,t.insert>t.strstart&&(t.insert=t.strstart),slide_hash(t),n+=e),t.strm.avail_in===0)break;if(r=read_buf(t.strm,t.window,t.strstart+t.lookahead,n),t.lookahead+=r,t.lookahead+t.insert>=MIN_MATCH)for(o=t.strstart-t.insert,t.ins_h=t.window[o],t.ins_h=HASH(t,t.ins_h,t.window[o+1]);t.insert&&(t.ins_h=HASH(t,t.ins_h,t.window[o+MIN_MATCH-1]),t.prev[o&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=o,o++,t.insert--,!(t.lookahead+t.insert<MIN_MATCH)););}while(t.lookahead<MIN_LOOKAHEAD&&t.strm.avail_in!==0)},deflate_stored=(t,e)=>{let r=t.pending_buf_size-5>t.w_size?t.w_size:t.pending_buf_size-5,n,o,a,c=0,u=t.strm.avail_in;do{if(n=65535,a=t.bi_valid+42>>3,t.strm.avail_out<a||(a=t.strm.avail_out-a,o=t.strstart-t.block_start,n>o+t.strm.avail_in&&(n=o+t.strm.avail_in),n>a&&(n=a),n<r&&(n===0&&e!==Z_FINISH$3||e===Z_NO_FLUSH$2||n!==o+t.strm.avail_in)))break;c=e===Z_FINISH$3&&n===o+t.strm.avail_in?1:0,_tr_stored_block(t,0,0,c),t.pending_buf[t.pending-4]=n,t.pending_buf[t.pending-3]=n>>8,t.pending_buf[t.pending-2]=~n,t.pending_buf[t.pending-1]=~n>>8,flush_pending(t.strm),o&&(o>n&&(o=n),t.strm.output.set(t.window.subarray(t.block_start,t.block_start+o),t.strm.next_out),t.strm.next_out+=o,t.strm.avail_out-=o,t.strm.total_out+=o,t.block_start+=o,n-=o),n&&(read_buf(t.strm,t.strm.output,t.strm.next_out,n),t.strm.next_out+=n,t.strm.avail_out-=n,t.strm.total_out+=n)}while(c===0);return u-=t.strm.avail_in,u&&(u>=t.w_size?(t.matches=2,t.window.set(t.strm.input.subarray(t.strm.next_in-t.w_size,t.strm.next_in),0),t.strstart=t.w_size,t.insert=t.strstart):(t.window_size-t.strstart<=u&&(t.strstart-=t.w_size,t.window.set(t.window.subarray(t.w_size,t.w_size+t.strstart),0),t.matches<2&&t.matches++,t.insert>t.strstart&&(t.insert=t.strstart)),t.window.set(t.strm.input.subarray(t.strm.next_in-u,t.strm.next_in),t.strstart),t.strstart+=u,t.insert+=u>t.w_size-t.insert?t.w_size-t.insert:u),t.block_start=t.strstart),t.high_water<t.strstart&&(t.high_water=t.strstart),c?BS_FINISH_DONE:e!==Z_NO_FLUSH$2&&e!==Z_FINISH$3&&t.strm.avail_in===0&&t.strstart===t.block_start?BS_BLOCK_DONE:(a=t.window_size-t.strstart,t.strm.avail_in>a&&t.block_start>=t.w_size&&(t.block_start-=t.w_size,t.strstart-=t.w_size,t.window.set(t.window.subarray(t.w_size,t.w_size+t.strstart),0),t.matches<2&&t.matches++,a+=t.w_size,t.insert>t.strstart&&(t.insert=t.strstart)),a>t.strm.avail_in&&(a=t.strm.avail_in),a&&(read_buf(t.strm,t.window,t.strstart,a),t.strstart+=a,t.insert+=a>t.w_size-t.insert?t.w_size-t.insert:a),t.high_water<t.strstart&&(t.high_water=t.strstart),a=t.bi_valid+42>>3,a=t.pending_buf_size-a>65535?65535:t.pending_buf_size-a,r=a>t.w_size?t.w_size:a,o=t.strstart-t.block_start,(o>=r||(o||e===Z_FINISH$3)&&e!==Z_NO_FLUSH$2&&t.strm.avail_in===0&&o<=a)&&(n=o>a?a:o,c=e===Z_FINISH$3&&t.strm.avail_in===0&&n===o?1:0,_tr_stored_block(t,t.block_start,n,c),t.block_start+=n,flush_pending(t.strm)),c?BS_FINISH_STARTED:BS_NEED_MORE)},deflate_fast=(t,e)=>{let r,n;for(;;){if(t.lookahead<MIN_LOOKAHEAD){if(fill_window(t),t.lookahead<MIN_LOOKAHEAD&&e===Z_NO_FLUSH$2)return BS_NEED_MORE;if(t.lookahead===0)break}if(r=0,t.lookahead>=MIN_MATCH&&(t.ins_h=HASH(t,t.ins_h,t.window[t.strstart+MIN_MATCH-1]),r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),r!==0&&t.strstart-r<=t.w_size-MIN_LOOKAHEAD&&(t.match_length=longest_match(t,r)),t.match_length>=MIN_MATCH)if(n=_tr_tally(t,t.strstart-t.match_start,t.match_length-MIN_MATCH),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=MIN_MATCH){t.match_length--;do t.strstart++,t.ins_h=HASH(t,t.ins_h,t.window[t.strstart+MIN_MATCH-1]),r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart;while(--t.match_length!==0);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=HASH(t,t.ins_h,t.window[t.strstart+1]);else n=_tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(n&&(flush_block_only(t,!1),t.strm.avail_out===0))return BS_NEED_MORE}return t.insert=t.strstart<MIN_MATCH-1?t.strstart:MIN_MATCH-1,e===Z_FINISH$3?(flush_block_only(t,!0),t.strm.avail_out===0?BS_FINISH_STARTED:BS_FINISH_DONE):t.sym_next&&(flush_block_only(t,!1),t.strm.avail_out===0)?BS_NEED_MORE:BS_BLOCK_DONE},deflate_slow=(t,e)=>{let r,n,o;for(;;){if(t.lookahead<MIN_LOOKAHEAD){if(fill_window(t),t.lookahead<MIN_LOOKAHEAD&&e===Z_NO_FLUSH$2)return BS_NEED_MORE;if(t.lookahead===0)break}if(r=0,t.lookahead>=MIN_MATCH&&(t.ins_h=HASH(t,t.ins_h,t.window[t.strstart+MIN_MATCH-1]),r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=MIN_MATCH-1,r!==0&&t.prev_length<t.max_lazy_match&&t.strstart-r<=t.w_size-MIN_LOOKAHEAD&&(t.match_length=longest_match(t,r),t.match_length<=5&&(t.strategy===Z_FILTERED||t.match_length===MIN_MATCH&&t.strstart-t.match_start>4096)&&(t.match_length=MIN_MATCH-1)),t.prev_length>=MIN_MATCH&&t.match_length<=t.prev_length){o=t.strstart+t.lookahead-MIN_MATCH,n=_tr_tally(t,t.strstart-1-t.prev_match,t.prev_length-MIN_MATCH),t.lookahead-=t.prev_length-1,t.prev_length-=2;do++t.strstart<=o&&(t.ins_h=HASH(t,t.ins_h,t.window[t.strstart+MIN_MATCH-1]),r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart);while(--t.prev_length!==0);if(t.match_available=0,t.match_length=MIN_MATCH-1,t.strstart++,n&&(flush_block_only(t,!1),t.strm.avail_out===0))return BS_NEED_MORE}else if(t.match_available){if(n=_tr_tally(t,0,t.window[t.strstart-1]),n&&flush_block_only(t,!1),t.strstart++,t.lookahead--,t.strm.avail_out===0)return BS_NEED_MORE}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(n=_tr_tally(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<MIN_MATCH-1?t.strstart:MIN_MATCH-1,e===Z_FINISH$3?(flush_block_only(t,!0),t.strm.avail_out===0?BS_FINISH_STARTED:BS_FINISH_DONE):t.sym_next&&(flush_block_only(t,!1),t.strm.avail_out===0)?BS_NEED_MORE:BS_BLOCK_DONE},deflate_rle=(t,e)=>{let r,n,o,a;const c=t.window;for(;;){if(t.lookahead<=MAX_MATCH){if(fill_window(t),t.lookahead<=MAX_MATCH&&e===Z_NO_FLUSH$2)return BS_NEED_MORE;if(t.lookahead===0)break}if(t.match_length=0,t.lookahead>=MIN_MATCH&&t.strstart>0&&(o=t.strstart-1,n=c[o],n===c[++o]&&n===c[++o]&&n===c[++o])){a=t.strstart+MAX_MATCH;do;while(n===c[++o]&&n===c[++o]&&n===c[++o]&&n===c[++o]&&n===c[++o]&&n===c[++o]&&n===c[++o]&&n===c[++o]&&o<a);t.match_length=MAX_MATCH-(a-o),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=MIN_MATCH?(r=_tr_tally(t,1,t.match_length-MIN_MATCH),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(r=_tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),r&&(flush_block_only(t,!1),t.strm.avail_out===0))return BS_NEED_MORE}return t.insert=0,e===Z_FINISH$3?(flush_block_only(t,!0),t.strm.avail_out===0?BS_FINISH_STARTED:BS_FINISH_DONE):t.sym_next&&(flush_block_only(t,!1),t.strm.avail_out===0)?BS_NEED_MORE:BS_BLOCK_DONE},deflate_huff=(t,e)=>{let r;for(;;){if(t.lookahead===0&&(fill_window(t),t.lookahead===0)){if(e===Z_NO_FLUSH$2)return BS_NEED_MORE;break}if(t.match_length=0,r=_tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,r&&(flush_block_only(t,!1),t.strm.avail_out===0))return BS_NEED_MORE}return t.insert=0,e===Z_FINISH$3?(flush_block_only(t,!0),t.strm.avail_out===0?BS_FINISH_STARTED:BS_FINISH_DONE):t.sym_next&&(flush_block_only(t,!1),t.strm.avail_out===0)?BS_NEED_MORE:BS_BLOCK_DONE};function Config(t,e,r,n,o){this.good_length=t,this.max_lazy=e,this.nice_length=r,this.max_chain=n,this.func=o}const configuration_table=[new Config(0,0,0,0,deflate_stored),new Config(4,4,8,4,deflate_fast),new Config(4,5,16,8,deflate_fast),new Config(4,6,32,32,deflate_fast),new Config(4,4,16,16,deflate_slow),new Config(8,16,32,32,deflate_slow),new Config(8,16,128,128,deflate_slow),new Config(8,32,128,256,deflate_slow),new Config(32,128,258,1024,deflate_slow),new Config(32,258,258,4096,deflate_slow)],lm_init=t=>{t.window_size=2*t.w_size,zero(t.head),t.max_lazy_match=configuration_table[t.level].max_lazy,t.good_match=configuration_table[t.level].good_length,t.nice_match=configuration_table[t.level].nice_length,t.max_chain_length=configuration_table[t.level].max_chain,t.strstart=0,t.block_start=0,t.lookahead=0,t.insert=0,t.match_length=t.prev_length=MIN_MATCH-1,t.match_available=0,t.ins_h=0};function DeflateState(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=Z_DEFLATED$2,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(HEAP_SIZE*2),this.dyn_dtree=new Uint16Array((2*D_CODES+1)*2),this.bl_tree=new Uint16Array((2*BL_CODES+1)*2),zero(this.dyn_ltree),zero(this.dyn_dtree),zero(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(MAX_BITS+1),this.heap=new Uint16Array(2*L_CODES+1),zero(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(2*L_CODES+1),zero(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const deflateStateCheck=t=>{if(!t)return 1;const e=t.state;return!e||e.strm!==t||e.status!==INIT_STATE&&e.status!==GZIP_STATE&&e.status!==EXTRA_STATE&&e.status!==NAME_STATE&&e.status!==COMMENT_STATE&&e.status!==HCRC_STATE&&e.status!==BUSY_STATE&&e.status!==FINISH_STATE?1:0},deflateResetKeep=t=>{if(deflateStateCheck(t))return err(t,Z_STREAM_ERROR$2);t.total_in=t.total_out=0,t.data_type=Z_UNKNOWN;const e=t.state;return e.pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=e.wrap===2?GZIP_STATE:e.wrap?INIT_STATE:BUSY_STATE,t.adler=e.wrap===2?0:1,e.last_flush=-2,_tr_init(e),Z_OK$3},deflateReset=t=>{const e=deflateResetKeep(t);return e===Z_OK$3&&lm_init(t.state),e},deflateSetHeader=(t,e)=>deflateStateCheck(t)||t.state.wrap!==2?Z_STREAM_ERROR$2:(t.state.gzhead=e,Z_OK$3),deflateInit2=(t,e,r,n,o,a)=>{if(!t)return Z_STREAM_ERROR$2;let c=1;if(e===Z_DEFAULT_COMPRESSION$1&&(e=6),n<0?(c=0,n=-n):n>15&&(c=2,n-=16),o<1||o>MAX_MEM_LEVEL||r!==Z_DEFLATED$2||n<8||n>15||e<0||e>9||a<0||a>Z_FIXED||n===8&&c!==1)return err(t,Z_STREAM_ERROR$2);n===8&&(n=9);const u=new DeflateState;return t.state=u,u.strm=t,u.status=INIT_STATE,u.wrap=c,u.gzhead=null,u.w_bits=n,u.w_size=1<<u.w_bits,u.w_mask=u.w_size-1,u.hash_bits=o+7,u.hash_size=1<<u.hash_bits,u.hash_mask=u.hash_size-1,u.hash_shift=~~((u.hash_bits+MIN_MATCH-1)/MIN_MATCH),u.window=new Uint8Array(u.w_size*2),u.head=new Uint16Array(u.hash_size),u.prev=new Uint16Array(u.w_size),u.lit_bufsize=1<<o+6,u.pending_buf_size=u.lit_bufsize*4,u.pending_buf=new Uint8Array(u.pending_buf_size),u.sym_buf=u.lit_bufsize,u.sym_end=(u.lit_bufsize-1)*3,u.level=e,u.strategy=a,u.method=r,deflateReset(t)},deflateInit=(t,e)=>deflateInit2(t,e,Z_DEFLATED$2,MAX_WBITS$1,DEF_MEM_LEVEL,Z_DEFAULT_STRATEGY$1),deflate$2=(t,e)=>{if(deflateStateCheck(t)||e>Z_BLOCK$1||e<0)return t?err(t,Z_STREAM_ERROR$2):Z_STREAM_ERROR$2;const r=t.state;if(!t.output||t.avail_in!==0&&!t.input||r.status===FINISH_STATE&&e!==Z_FINISH$3)return err(t,t.avail_out===0?Z_BUF_ERROR$1:Z_STREAM_ERROR$2);const n=r.last_flush;if(r.last_flush=e,r.pending!==0){if(flush_pending(t),t.avail_out===0)return r.last_flush=-1,Z_OK$3}else if(t.avail_in===0&&rank(e)<=rank(n)&&e!==Z_FINISH$3)return err(t,Z_BUF_ERROR$1);if(r.status===FINISH_STATE&&t.avail_in!==0)return err(t,Z_BUF_ERROR$1);if(r.status===INIT_STATE&&r.wrap===0&&(r.status=BUSY_STATE),r.status===INIT_STATE){let o=Z_DEFLATED$2+(r.w_bits-8<<4)<<8,a=-1;if(r.strategy>=Z_HUFFMAN_ONLY||r.level<2?a=0:r.level<6?a=1:r.level===6?a=2:a=3,o|=a<<6,r.strstart!==0&&(o|=PRESET_DICT),o+=31-o%31,putShortMSB(r,o),r.strstart!==0&&(putShortMSB(r,t.adler>>>16),putShortMSB(r,t.adler&65535)),t.adler=1,r.status=BUSY_STATE,flush_pending(t),r.pending!==0)return r.last_flush=-1,Z_OK$3}if(r.status===GZIP_STATE){if(t.adler=0,put_byte(r,31),put_byte(r,139),put_byte(r,8),r.gzhead)put_byte(r,(r.gzhead.text?1:0)+(r.gzhead.hcrc?2:0)+(r.gzhead.extra?4:0)+(r.gzhead.name?8:0)+(r.gzhead.comment?16:0)),put_byte(r,r.gzhead.time&255),put_byte(r,r.gzhead.time>>8&255),put_byte(r,r.gzhead.time>>16&255),put_byte(r,r.gzhead.time>>24&255),put_byte(r,r.level===9?2:r.strategy>=Z_HUFFMAN_ONLY||r.level<2?4:0),put_byte(r,r.gzhead.os&255),r.gzhead.extra&&r.gzhead.extra.length&&(put_byte(r,r.gzhead.extra.length&255),put_byte(r,r.gzhead.extra.length>>8&255)),r.gzhead.hcrc&&(t.adler=crc32_1(t.adler,r.pending_buf,r.pending,0)),r.gzindex=0,r.status=EXTRA_STATE;else if(put_byte(r,0),put_byte(r,0),put_byte(r,0),put_byte(r,0),put_byte(r,0),put_byte(r,r.level===9?2:r.strategy>=Z_HUFFMAN_ONLY||r.level<2?4:0),put_byte(r,OS_CODE),r.status=BUSY_STATE,flush_pending(t),r.pending!==0)return r.last_flush=-1,Z_OK$3}if(r.status===EXTRA_STATE){if(r.gzhead.extra){let o=r.pending,a=(r.gzhead.extra.length&65535)-r.gzindex;for(;r.pending+a>r.pending_buf_size;){let u=r.pending_buf_size-r.pending;if(r.pending_buf.set(r.gzhead.extra.subarray(r.gzindex,r.gzindex+u),r.pending),r.pending=r.pending_buf_size,r.gzhead.hcrc&&r.pending>o&&(t.adler=crc32_1(t.adler,r.pending_buf,r.pending-o,o)),r.gzindex+=u,flush_pending(t),r.pending!==0)return r.last_flush=-1,Z_OK$3;o=0,a-=u}let c=new Uint8Array(r.gzhead.extra);r.pending_buf.set(c.subarray(r.gzindex,r.gzindex+a),r.pending),r.pending+=a,r.gzhead.hcrc&&r.pending>o&&(t.adler=crc32_1(t.adler,r.pending_buf,r.pending-o,o)),r.gzindex=0}r.status=NAME_STATE}if(r.status===NAME_STATE){if(r.gzhead.name){let o=r.pending,a;do{if(r.pending===r.pending_buf_size){if(r.gzhead.hcrc&&r.pending>o&&(t.adler=crc32_1(t.adler,r.pending_buf,r.pending-o,o)),flush_pending(t),r.pending!==0)return r.last_flush=-1,Z_OK$3;o=0}r.gzindex<r.gzhead.name.length?a=r.gzhead.name.charCodeAt(r.gzindex++)&255:a=0,put_byte(r,a)}while(a!==0);r.gzhead.hcrc&&r.pending>o&&(t.adler=crc32_1(t.adler,r.pending_buf,r.pending-o,o)),r.gzindex=0}r.status=COMMENT_STATE}if(r.status===COMMENT_STATE){if(r.gzhead.comment){let o=r.pending,a;do{if(r.pending===r.pending_buf_size){if(r.gzhead.hcrc&&r.pending>o&&(t.adler=crc32_1(t.adler,r.pending_buf,r.pending-o,o)),flush_pending(t),r.pending!==0)return r.last_flush=-1,Z_OK$3;o=0}r.gzindex<r.gzhead.comment.length?a=r.gzhead.comment.charCodeAt(r.gzindex++)&255:a=0,put_byte(r,a)}while(a!==0);r.gzhead.hcrc&&r.pending>o&&(t.adler=crc32_1(t.adler,r.pending_buf,r.pending-o,o))}r.status=HCRC_STATE}if(r.status===HCRC_STATE){if(r.gzhead.hcrc){if(r.pending+2>r.pending_buf_size&&(flush_pending(t),r.pending!==0))return r.last_flush=-1,Z_OK$3;put_byte(r,t.adler&255),put_byte(r,t.adler>>8&255),t.adler=0}if(r.status=BUSY_STATE,flush_pending(t),r.pending!==0)return r.last_flush=-1,Z_OK$3}if(t.avail_in!==0||r.lookahead!==0||e!==Z_NO_FLUSH$2&&r.status!==FINISH_STATE){let o=r.level===0?deflate_stored(r,e):r.strategy===Z_HUFFMAN_ONLY?deflate_huff(r,e):r.strategy===Z_RLE?deflate_rle(r,e):configuration_table[r.level].func(r,e);if((o===BS_FINISH_STARTED||o===BS_FINISH_DONE)&&(r.status=FINISH_STATE),o===BS_NEED_MORE||o===BS_FINISH_STARTED)return t.avail_out===0&&(r.last_flush=-1),Z_OK$3;if(o===BS_BLOCK_DONE&&(e===Z_PARTIAL_FLUSH?_tr_align(r):e!==Z_BLOCK$1&&(_tr_stored_block(r,0,0,!1),e===Z_FULL_FLUSH$1&&(zero(r.head),r.lookahead===0&&(r.strstart=0,r.block_start=0,r.insert=0))),flush_pending(t),t.avail_out===0))return r.last_flush=-1,Z_OK$3}return e!==Z_FINISH$3?Z_OK$3:r.wrap<=0?Z_STREAM_END$3:(r.wrap===2?(put_byte(r,t.adler&255),put_byte(r,t.adler>>8&255),put_byte(r,t.adler>>16&255),put_byte(r,t.adler>>24&255),put_byte(r,t.total_in&255),put_byte(r,t.total_in>>8&255),put_byte(r,t.total_in>>16&255),put_byte(r,t.total_in>>24&255)):(putShortMSB(r,t.adler>>>16),putShortMSB(r,t.adler&65535)),flush_pending(t),r.wrap>0&&(r.wrap=-r.wrap),r.pending!==0?Z_OK$3:Z_STREAM_END$3)},deflateEnd=t=>{if(deflateStateCheck(t))return Z_STREAM_ERROR$2;const e=t.state.status;return t.state=null,e===BUSY_STATE?err(t,Z_DATA_ERROR$2):Z_OK$3},deflateSetDictionary=(t,e)=>{let r=e.length;if(deflateStateCheck(t))return Z_STREAM_ERROR$2;const n=t.state,o=n.wrap;if(o===2||o===1&&n.status!==INIT_STATE||n.lookahead)return Z_STREAM_ERROR$2;if(o===1&&(t.adler=adler32_1(t.adler,e,r,0)),n.wrap=0,r>=n.w_size){o===0&&(zero(n.head),n.strstart=0,n.block_start=0,n.insert=0);let l=new Uint8Array(n.w_size);l.set(e.subarray(r-n.w_size,r),0),e=l,r=n.w_size}const a=t.avail_in,c=t.next_in,u=t.input;for(t.avail_in=r,t.next_in=0,t.input=e,fill_window(n);n.lookahead>=MIN_MATCH;){let l=n.strstart,f=n.lookahead-(MIN_MATCH-1);do n.ins_h=HASH(n,n.ins_h,n.window[l+MIN_MATCH-1]),n.prev[l&n.w_mask]=n.head[n.ins_h],n.head[n.ins_h]=l,l++;while(--f);n.strstart=l,n.lookahead=MIN_MATCH-1,fill_window(n)}return n.strstart+=n.lookahead,n.block_start=n.strstart,n.insert=n.lookahead,n.lookahead=0,n.match_length=n.prev_length=MIN_MATCH-1,n.match_available=0,t.next_in=c,t.input=u,t.avail_in=a,n.wrap=o,Z_OK$3};var deflateInit_1=deflateInit,deflateInit2_1=deflateInit2,deflateReset_1=deflateReset,deflateResetKeep_1=deflateResetKeep,deflateSetHeader_1=deflateSetHeader,deflate_2$1=deflate$2,deflateEnd_1=deflateEnd,deflateSetDictionary_1=deflateSetDictionary,deflateInfo="pako deflate (from Nodeca project)",deflate_1$2={deflateInit:deflateInit_1,deflateInit2:deflateInit2_1,deflateReset:deflateReset_1,deflateResetKeep:deflateResetKeep_1,deflateSetHeader:deflateSetHeader_1,deflate:deflate_2$1,deflateEnd:deflateEnd_1,deflateSetDictionary:deflateSetDictionary_1,deflateInfo};const _has=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var assign=function(t){const e=Array.prototype.slice.call(arguments,1);for(;e.length;){const r=e.shift();if(r){if(typeof r!="object")throw new TypeError(r+"must be non-object");for(const n in r)_has(r,n)&&(t[n]=r[n])}}return t},flattenChunks=t=>{let e=0;for(let n=0,o=t.length;n<o;n++)e+=t[n].length;const r=new Uint8Array(e);for(let n=0,o=0,a=t.length;n<a;n++){let c=t[n];r.set(c,o),o+=c.length}return r},common$1={assign,flattenChunks};let STR_APPLY_UIA_OK=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){STR_APPLY_UIA_OK=!1}const _utf8len=new Uint8Array(256);for(let t=0;t<256;t++)_utf8len[t]=t>=252?6:t>=248?5:t>=240?4:t>=224?3:t>=192?2:1;_utf8len[254]=_utf8len[254]=1;var string2buf=t=>{if(typeof TextEncoder=="function"&&TextEncoder.prototype.encode)return new TextEncoder().encode(t);let e,r,n,o,a,c=t.length,u=0;for(o=0;o<c;o++)r=t.charCodeAt(o),(r&64512)===55296&&o+1<c&&(n=t.charCodeAt(o+1),(n&64512)===56320&&(r=65536+(r-55296<<10)+(n-56320),o++)),u+=r<128?1:r<2048?2:r<65536?3:4;for(e=new Uint8Array(u),a=0,o=0;a<u;o++)r=t.charCodeAt(o),(r&64512)===55296&&o+1<c&&(n=t.charCodeAt(o+1),(n&64512)===56320&&(r=65536+(r-55296<<10)+(n-56320),o++)),r<128?e[a++]=r:r<2048?(e[a++]=192|r>>>6,e[a++]=128|r&63):r<65536?(e[a++]=224|r>>>12,e[a++]=128|r>>>6&63,e[a++]=128|r&63):(e[a++]=240|r>>>18,e[a++]=128|r>>>12&63,e[a++]=128|r>>>6&63,e[a++]=128|r&63);return e};const buf2binstring=(t,e)=>{if(e<65534&&t.subarray&&STR_APPLY_UIA_OK)return String.fromCharCode.apply(null,t.length===e?t:t.subarray(0,e));let r="";for(let n=0;n<e;n++)r+=String.fromCharCode(t[n]);return r};var buf2string=(t,e)=>{const r=e||t.length;if(typeof TextDecoder=="function"&&TextDecoder.prototype.decode)return new TextDecoder().decode(t.subarray(0,e));let n,o;const a=new Array(r*2);for(o=0,n=0;n<r;){let c=t[n++];if(c<128){a[o++]=c;continue}let u=_utf8len[c];if(u>4){a[o++]=65533,n+=u-1;continue}for(c&=u===2?31:u===3?15:7;u>1&&n<r;)c=c<<6|t[n++]&63,u--;if(u>1){a[o++]=65533;continue}c<65536?a[o++]=c:(c-=65536,a[o++]=55296|c>>10&1023,a[o++]=56320|c&1023)}return buf2binstring(a,o)},utf8border=(t,e)=>{e=e||t.length,e>t.length&&(e=t.length);let r=e-1;for(;r>=0&&(t[r]&192)===128;)r--;return r<0||r===0?e:r+_utf8len[t[r]]>e?r:e},strings={string2buf,buf2string,utf8border};function ZStream(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}var zstream=ZStream;const toString$1$1=Object.prototype.toString,{Z_NO_FLUSH:Z_NO_FLUSH$1,Z_SYNC_FLUSH,Z_FULL_FLUSH,Z_FINISH:Z_FINISH$2,Z_OK:Z_OK$2,Z_STREAM_END:Z_STREAM_END$2,Z_DEFAULT_COMPRESSION,Z_DEFAULT_STRATEGY,Z_DEFLATED:Z_DEFLATED$1}=constants$2;function Deflate$1(t){this.options=common$1.assign({level:Z_DEFAULT_COMPRESSION,method:Z_DEFLATED$1,chunkSize:16384,windowBits:15,memLevel:8,strategy:Z_DEFAULT_STRATEGY},t||{});let e=this.options;e.raw&&e.windowBits>0?e.windowBits=-e.windowBits:e.gzip&&e.windowBits>0&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new zstream,this.strm.avail_out=0;let r=deflate_1$2.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(r!==Z_OK$2)throw new Error(messages$1[r]);if(e.header&&deflate_1$2.deflateSetHeader(this.strm,e.header),e.dictionary){let n;if(typeof e.dictionary=="string"?n=strings.string2buf(e.dictionary):toString$1$1.call(e.dictionary)==="[object ArrayBuffer]"?n=new Uint8Array(e.dictionary):n=e.dictionary,r=deflate_1$2.deflateSetDictionary(this.strm,n),r!==Z_OK$2)throw new Error(messages$1[r]);this._dict_set=!0}}Deflate$1.prototype.push=function(t,e){const r=this.strm,n=this.options.chunkSize;let o,a;if(this.ended)return!1;for(e===~~e?a=e:a=e===!0?Z_FINISH$2:Z_NO_FLUSH$1,typeof t=="string"?r.input=strings.string2buf(t):toString$1$1.call(t)==="[object ArrayBuffer]"?r.input=new Uint8Array(t):r.input=t,r.next_in=0,r.avail_in=r.input.length;;){if(r.avail_out===0&&(r.output=new Uint8Array(n),r.next_out=0,r.avail_out=n),(a===Z_SYNC_FLUSH||a===Z_FULL_FLUSH)&&r.avail_out<=6){this.onData(r.output.subarray(0,r.next_out)),r.avail_out=0;continue}if(o=deflate_1$2.deflate(r,a),o===Z_STREAM_END$2)return r.next_out>0&&this.onData(r.output.subarray(0,r.next_out)),o=deflate_1$2.deflateEnd(this.strm),this.onEnd(o),this.ended=!0,o===Z_OK$2;if(r.avail_out===0){this.onData(r.output);continue}if(a>0&&r.next_out>0){this.onData(r.output.subarray(0,r.next_out)),r.avail_out=0;continue}if(r.avail_in===0)break}return!0},Deflate$1.prototype.onData=function(t){this.chunks.push(t)},Deflate$1.prototype.onEnd=function(t){t===Z_OK$2&&(this.result=common$1.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};function deflate$1(t,e){const r=new Deflate$1(e);if(r.push(t,!0),r.err)throw r.msg||messages$1[r.err];return r.result}function deflateRaw$1(t,e){return e=e||{},e.raw=!0,deflate$1(t,e)}function gzip$1(t,e){return e=e||{},e.gzip=!0,deflate$1(t,e)}var Deflate_1$1=Deflate$1,deflate_2=deflate$1,deflateRaw_1$1=deflateRaw$1,gzip_1$1=gzip$1,constants$1=constants$2,deflate_1$1={Deflate:Deflate_1$1,deflate:deflate_2,deflateRaw:deflateRaw_1$1,gzip:gzip_1$1,constants:constants$1};const BAD$1=16209,TYPE$1=16191;var inffast=function t(e,r){let n,o,a,c,u,l,f,p,g,$,_,b,D,v,S,I,R,C,T,P,E,A,k,O;const M=e.state;n=e.next_in,k=e.input,o=n+(e.avail_in-5),a=e.next_out,O=e.output,c=a-(r-e.avail_out),u=a+(e.avail_out-257),l=M.dmax,f=M.wsize,p=M.whave,g=M.wnext,$=M.window,_=M.hold,b=M.bits,D=M.lencode,v=M.distcode,S=(1<<M.lenbits)-1,I=(1<<M.distbits)-1;e:do{b<15&&(_+=k[n++]<<b,b+=8,_+=k[n++]<<b,b+=8),R=D[_&S];t:for(;;){if(C=R>>>24,_>>>=C,b-=C,C=R>>>16&255,C===0)O[a++]=R&65535;else if(C&16){T=R&65535,C&=15,C&&(b<C&&(_+=k[n++]<<b,b+=8),T+=_&(1<<C)-1,_>>>=C,b-=C),b<15&&(_+=k[n++]<<b,b+=8,_+=k[n++]<<b,b+=8),R=v[_&I];r:for(;;){if(C=R>>>24,_>>>=C,b-=C,C=R>>>16&255,C&16){if(P=R&65535,C&=15,b<C&&(_+=k[n++]<<b,b+=8,b<C&&(_+=k[n++]<<b,b+=8)),P+=_&(1<<C)-1,P>l){e.msg="invalid distance too far back",M.mode=BAD$1;break e}if(_>>>=C,b-=C,C=a-c,P>C){if(C=P-C,C>p&&M.sane){e.msg="invalid distance too far back",M.mode=BAD$1;break e}if(E=0,A=$,g===0){if(E+=f-C,C<T){T-=C;do O[a++]=$[E++];while(--C);E=a-P,A=O}}else if(g<C){if(E+=f+g-C,C-=g,C<T){T-=C;do O[a++]=$[E++];while(--C);if(E=0,g<T){C=g,T-=C;do O[a++]=$[E++];while(--C);E=a-P,A=O}}}else if(E+=g-C,C<T){T-=C;do O[a++]=$[E++];while(--C);E=a-P,A=O}for(;T>2;)O[a++]=A[E++],O[a++]=A[E++],O[a++]=A[E++],T-=3;T&&(O[a++]=A[E++],T>1&&(O[a++]=A[E++]))}else{E=a-P;do O[a++]=O[E++],O[a++]=O[E++],O[a++]=O[E++],T-=3;while(T>2);T&&(O[a++]=O[E++],T>1&&(O[a++]=O[E++]))}}else if(C&64){e.msg="invalid distance code",M.mode=BAD$1;break e}else{R=v[(R&65535)+(_&(1<<C)-1)];continue r}break}}else if(C&64)if(C&32){M.mode=TYPE$1;break e}else{e.msg="invalid literal/length code",M.mode=BAD$1;break e}else{R=D[(R&65535)+(_&(1<<C)-1)];continue t}break}}while(n<o&&a<u);T=b>>3,n-=T,b-=T<<3,_&=(1<<b)-1,e.next_in=n,e.next_out=a,e.avail_in=n<o?5+(o-n):5-(n-o),e.avail_out=a<u?257+(u-a):257-(a-u),M.hold=_,M.bits=b};const MAXBITS=15,ENOUGH_LENS$1=852,ENOUGH_DISTS$1=592,CODES$1=0,LENS$1=1,DISTS$1=2,lbase=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),lext=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),dbase=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),dext=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]),inflate_table=(t,e,r,n,o,a,c,u)=>{const l=u.bits;let f=0,p=0,g=0,$=0,_=0,b=0,D=0,v=0,S=0,I=0,R,C,T,P,E,A=null,k;const O=new Uint16Array(MAXBITS+1),M=new Uint16Array(MAXBITS+1);let L=null,U,F,x;for(f=0;f<=MAXBITS;f++)O[f]=0;for(p=0;p<n;p++)O[e[r+p]]++;for(_=l,$=MAXBITS;$>=1&&O[$]===0;$--);if(_>$&&(_=$),$===0)return o[a++]=1<<24|64<<16|0,o[a++]=1<<24|64<<16|0,u.bits=1,0;for(g=1;g<$&&O[g]===0;g++);for(_<g&&(_=g),v=1,f=1;f<=MAXBITS;f++)if(v<<=1,v-=O[f],v<0)return-1;if(v>0&&(t===CODES$1||$!==1))return-1;for(M[1]=0,f=1;f<MAXBITS;f++)M[f+1]=M[f]+O[f];for(p=0;p<n;p++)e[r+p]!==0&&(c[M[e[r+p]]++]=p);if(t===CODES$1?(A=L=c,k=20):t===LENS$1?(A=lbase,L=lext,k=257):(A=dbase,L=dext,k=0),I=0,p=0,f=g,E=a,b=_,D=0,T=-1,S=1<<_,P=S-1,t===LENS$1&&S>ENOUGH_LENS$1||t===DISTS$1&&S>ENOUGH_DISTS$1)return 1;for(;;){U=f-D,c[p]+1<k?(F=0,x=c[p]):c[p]>=k?(F=L[c[p]-k],x=A[c[p]-k]):(F=96,x=0),R=1<<f-D,C=1<<b,g=C;do C-=R,o[E+(I>>D)+C]=U<<24|F<<16|x|0;while(C!==0);for(R=1<<f-1;I&R;)R>>=1;if(R!==0?(I&=R-1,I+=R):I=0,p++,--O[f]===0){if(f===$)break;f=e[r+c[p]]}if(f>_&&(I&P)!==T){for(D===0&&(D=_),E+=g,b=f-D,v=1<<b;b+D<$&&(v-=O[b+D],!(v<=0));)b++,v<<=1;if(S+=1<<b,t===LENS$1&&S>ENOUGH_LENS$1||t===DISTS$1&&S>ENOUGH_DISTS$1)return 1;T=I&P,o[T]=_<<24|b<<16|E-a|0}}return I!==0&&(o[E+I]=f-D<<24|64<<16|0),u.bits=_,0};var inftrees=inflate_table;const CODES=0,LENS=1,DISTS=2,{Z_FINISH:Z_FINISH$1,Z_BLOCK,Z_TREES,Z_OK:Z_OK$1,Z_STREAM_END:Z_STREAM_END$1,Z_NEED_DICT:Z_NEED_DICT$1,Z_STREAM_ERROR:Z_STREAM_ERROR$1,Z_DATA_ERROR:Z_DATA_ERROR$1,Z_MEM_ERROR:Z_MEM_ERROR$1,Z_BUF_ERROR,Z_DEFLATED}=constants$2,HEAD=16180,FLAGS=16181,TIME=16182,OS=16183,EXLEN=16184,EXTRA=16185,NAME=16186,COMMENT=16187,HCRC=16188,DICTID=16189,DICT=16190,TYPE=16191,TYPEDO=16192,STORED=16193,COPY_=16194,COPY=16195,TABLE=16196,LENLENS=16197,CODELENS=16198,LEN_=16199,LEN=16200,LENEXT=16201,DIST=16202,DISTEXT=16203,MATCH=16204,LIT=16205,CHECK=16206,LENGTH=16207,DONE$2=16208,BAD=16209,MEM=16210,SYNC=16211,ENOUGH_LENS=852,ENOUGH_DISTS=592,MAX_WBITS=15,DEF_WBITS=MAX_WBITS,zswap32=t=>(t>>>24&255)+(t>>>8&65280)+((t&65280)<<8)+((t&255)<<24);function InflateState(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const inflateStateCheck=t=>{if(!t)return 1;const e=t.state;return!e||e.strm!==t||e.mode<HEAD||e.mode>SYNC?1:0},inflateResetKeep=t=>{if(inflateStateCheck(t))return Z_STREAM_ERROR$1;const e=t.state;return t.total_in=t.total_out=e.total=0,t.msg="",e.wrap&&(t.adler=e.wrap&1),e.mode=HEAD,e.last=0,e.havedict=0,e.flags=-1,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new Int32Array(ENOUGH_LENS),e.distcode=e.distdyn=new Int32Array(ENOUGH_DISTS),e.sane=1,e.back=-1,Z_OK$1},inflateReset=t=>{if(inflateStateCheck(t))return Z_STREAM_ERROR$1;const e=t.state;return e.wsize=0,e.whave=0,e.wnext=0,inflateResetKeep(t)},inflateReset2=(t,e)=>{let r;if(inflateStateCheck(t))return Z_STREAM_ERROR$1;const n=t.state;return e<0?(r=0,e=-e):(r=(e>>4)+5,e<48&&(e&=15)),e&&(e<8||e>15)?Z_STREAM_ERROR$1:(n.window!==null&&n.wbits!==e&&(n.window=null),n.wrap=r,n.wbits=e,inflateReset(t))},inflateInit2=(t,e)=>{if(!t)return Z_STREAM_ERROR$1;const r=new InflateState;t.state=r,r.strm=t,r.window=null,r.mode=HEAD;const n=inflateReset2(t,e);return n!==Z_OK$1&&(t.state=null),n},inflateInit=t=>inflateInit2(t,DEF_WBITS);let virgin=!0,lenfix,distfix;const fixedtables=t=>{if(virgin){lenfix=new Int32Array(512),distfix=new Int32Array(32);let e=0;for(;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(inftrees(LENS,t.lens,0,288,lenfix,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;inftrees(DISTS,t.lens,0,32,distfix,0,t.work,{bits:5}),virgin=!1}t.lencode=lenfix,t.lenbits=9,t.distcode=distfix,t.distbits=5},updatewindow=(t,e,r,n)=>{let o;const a=t.state;return a.window===null&&(a.wsize=1<<a.wbits,a.wnext=0,a.whave=0,a.window=new Uint8Array(a.wsize)),n>=a.wsize?(a.window.set(e.subarray(r-a.wsize,r),0),a.wnext=0,a.whave=a.wsize):(o=a.wsize-a.wnext,o>n&&(o=n),a.window.set(e.subarray(r-n,r-n+o),a.wnext),n-=o,n?(a.window.set(e.subarray(r-n,r),0),a.wnext=n,a.whave=a.wsize):(a.wnext+=o,a.wnext===a.wsize&&(a.wnext=0),a.whave<a.wsize&&(a.whave+=o))),0},inflate$2=(t,e)=>{let r,n,o,a,c,u,l,f,p,g,$,_,b,D,v=0,S,I,R,C,T,P,E,A;const k=new Uint8Array(4);let O,M;const L=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(inflateStateCheck(t)||!t.output||!t.input&&t.avail_in!==0)return Z_STREAM_ERROR$1;r=t.state,r.mode===TYPE&&(r.mode=TYPEDO),c=t.next_out,o=t.output,l=t.avail_out,a=t.next_in,n=t.input,u=t.avail_in,f=r.hold,p=r.bits,g=u,$=l,A=Z_OK$1;e:for(;;)switch(r.mode){case HEAD:if(r.wrap===0){r.mode=TYPEDO;break}for(;p<16;){if(u===0)break e;u--,f+=n[a++]<<p,p+=8}if(r.wrap&2&&f===35615){r.wbits===0&&(r.wbits=15),r.check=0,k[0]=f&255,k[1]=f>>>8&255,r.check=crc32_1(r.check,k,2,0),f=0,p=0,r.mode=FLAGS;break}if(r.head&&(r.head.done=!1),!(r.wrap&1)||(((f&255)<<8)+(f>>8))%31){t.msg="incorrect header check",r.mode=BAD;break}if((f&15)!==Z_DEFLATED){t.msg="unknown compression method",r.mode=BAD;break}if(f>>>=4,p-=4,E=(f&15)+8,r.wbits===0&&(r.wbits=E),E>15||E>r.wbits){t.msg="invalid window size",r.mode=BAD;break}r.dmax=1<<r.wbits,r.flags=0,t.adler=r.check=1,r.mode=f&512?DICTID:TYPE,f=0,p=0;break;case FLAGS:for(;p<16;){if(u===0)break e;u--,f+=n[a++]<<p,p+=8}if(r.flags=f,(r.flags&255)!==Z_DEFLATED){t.msg="unknown compression method",r.mode=BAD;break}if(r.flags&57344){t.msg="unknown header flags set",r.mode=BAD;break}r.head&&(r.head.text=f>>8&1),r.flags&512&&r.wrap&4&&(k[0]=f&255,k[1]=f>>>8&255,r.check=crc32_1(r.check,k,2,0)),f=0,p=0,r.mode=TIME;case TIME:for(;p<32;){if(u===0)break e;u--,f+=n[a++]<<p,p+=8}r.head&&(r.head.time=f),r.flags&512&&r.wrap&4&&(k[0]=f&255,k[1]=f>>>8&255,k[2]=f>>>16&255,k[3]=f>>>24&255,r.check=crc32_1(r.check,k,4,0)),f=0,p=0,r.mode=OS;case OS:for(;p<16;){if(u===0)break e;u--,f+=n[a++]<<p,p+=8}r.head&&(r.head.xflags=f&255,r.head.os=f>>8),r.flags&512&&r.wrap&4&&(k[0]=f&255,k[1]=f>>>8&255,r.check=crc32_1(r.check,k,2,0)),f=0,p=0,r.mode=EXLEN;case EXLEN:if(r.flags&1024){for(;p<16;){if(u===0)break e;u--,f+=n[a++]<<p,p+=8}r.length=f,r.head&&(r.head.extra_len=f),r.flags&512&&r.wrap&4&&(k[0]=f&255,k[1]=f>>>8&255,r.check=crc32_1(r.check,k,2,0)),f=0,p=0}else r.head&&(r.head.extra=null);r.mode=EXTRA;case EXTRA:if(r.flags&1024&&(_=r.length,_>u&&(_=u),_&&(r.head&&(E=r.head.extra_len-r.length,r.head.extra||(r.head.extra=new Uint8Array(r.head.extra_len)),r.head.extra.set(n.subarray(a,a+_),E)),r.flags&512&&r.wrap&4&&(r.check=crc32_1(r.check,n,_,a)),u-=_,a+=_,r.length-=_),r.length))break e;r.length=0,r.mode=NAME;case NAME:if(r.flags&2048){if(u===0)break e;_=0;do E=n[a+_++],r.head&&E&&r.length<65536&&(r.head.name+=String.fromCharCode(E));while(E&&_<u);if(r.flags&512&&r.wrap&4&&(r.check=crc32_1(r.check,n,_,a)),u-=_,a+=_,E)break e}else r.head&&(r.head.name=null);r.length=0,r.mode=COMMENT;case COMMENT:if(r.flags&4096){if(u===0)break e;_=0;do E=n[a+_++],r.head&&E&&r.length<65536&&(r.head.comment+=String.fromCharCode(E));while(E&&_<u);if(r.flags&512&&r.wrap&4&&(r.check=crc32_1(r.check,n,_,a)),u-=_,a+=_,E)break e}else r.head&&(r.head.comment=null);r.mode=HCRC;case HCRC:if(r.flags&512){for(;p<16;){if(u===0)break e;u--,f+=n[a++]<<p,p+=8}if(r.wrap&4&&f!==(r.check&65535)){t.msg="header crc mismatch",r.mode=BAD;break}f=0,p=0}r.head&&(r.head.hcrc=r.flags>>9&1,r.head.done=!0),t.adler=r.check=0,r.mode=TYPE;break;case DICTID:for(;p<32;){if(u===0)break e;u--,f+=n[a++]<<p,p+=8}t.adler=r.check=zswap32(f),f=0,p=0,r.mode=DICT;case DICT:if(r.havedict===0)return t.next_out=c,t.avail_out=l,t.next_in=a,t.avail_in=u,r.hold=f,r.bits=p,Z_NEED_DICT$1;t.adler=r.check=1,r.mode=TYPE;case TYPE:if(e===Z_BLOCK||e===Z_TREES)break e;case TYPEDO:if(r.last){f>>>=p&7,p-=p&7,r.mode=CHECK;break}for(;p<3;){if(u===0)break e;u--,f+=n[a++]<<p,p+=8}switch(r.last=f&1,f>>>=1,p-=1,f&3){case 0:r.mode=STORED;break;case 1:if(fixedtables(r),r.mode=LEN_,e===Z_TREES){f>>>=2,p-=2;break e}break;case 2:r.mode=TABLE;break;case 3:t.msg="invalid block type",r.mode=BAD}f>>>=2,p-=2;break;case STORED:for(f>>>=p&7,p-=p&7;p<32;){if(u===0)break e;u--,f+=n[a++]<<p,p+=8}if((f&65535)!==(f>>>16^65535)){t.msg="invalid stored block lengths",r.mode=BAD;break}if(r.length=f&65535,f=0,p=0,r.mode=COPY_,e===Z_TREES)break e;case COPY_:r.mode=COPY;case COPY:if(_=r.length,_){if(_>u&&(_=u),_>l&&(_=l),_===0)break e;o.set(n.subarray(a,a+_),c),u-=_,a+=_,l-=_,c+=_,r.length-=_;break}r.mode=TYPE;break;case TABLE:for(;p<14;){if(u===0)break e;u--,f+=n[a++]<<p,p+=8}if(r.nlen=(f&31)+257,f>>>=5,p-=5,r.ndist=(f&31)+1,f>>>=5,p-=5,r.ncode=(f&15)+4,f>>>=4,p-=4,r.nlen>286||r.ndist>30){t.msg="too many length or distance symbols",r.mode=BAD;break}r.have=0,r.mode=LENLENS;case LENLENS:for(;r.have<r.ncode;){for(;p<3;){if(u===0)break e;u--,f+=n[a++]<<p,p+=8}r.lens[L[r.have++]]=f&7,f>>>=3,p-=3}for(;r.have<19;)r.lens[L[r.have++]]=0;if(r.lencode=r.lendyn,r.lenbits=7,O={bits:r.lenbits},A=inftrees(CODES,r.lens,0,19,r.lencode,0,r.work,O),r.lenbits=O.bits,A){t.msg="invalid code lengths set",r.mode=BAD;break}r.have=0,r.mode=CODELENS;case CODELENS:for(;r.have<r.nlen+r.ndist;){for(;v=r.lencode[f&(1<<r.lenbits)-1],S=v>>>24,I=v>>>16&255,R=v&65535,!(S<=p);){if(u===0)break e;u--,f+=n[a++]<<p,p+=8}if(R<16)f>>>=S,p-=S,r.lens[r.have++]=R;else{if(R===16){for(M=S+2;p<M;){if(u===0)break e;u--,f+=n[a++]<<p,p+=8}if(f>>>=S,p-=S,r.have===0){t.msg="invalid bit length repeat",r.mode=BAD;break}E=r.lens[r.have-1],_=3+(f&3),f>>>=2,p-=2}else if(R===17){for(M=S+3;p<M;){if(u===0)break e;u--,f+=n[a++]<<p,p+=8}f>>>=S,p-=S,E=0,_=3+(f&7),f>>>=3,p-=3}else{for(M=S+7;p<M;){if(u===0)break e;u--,f+=n[a++]<<p,p+=8}f>>>=S,p-=S,E=0,_=11+(f&127),f>>>=7,p-=7}if(r.have+_>r.nlen+r.ndist){t.msg="invalid bit length repeat",r.mode=BAD;break}for(;_--;)r.lens[r.have++]=E}}if(r.mode===BAD)break;if(r.lens[256]===0){t.msg="invalid code -- missing end-of-block",r.mode=BAD;break}if(r.lenbits=9,O={bits:r.lenbits},A=inftrees(LENS,r.lens,0,r.nlen,r.lencode,0,r.work,O),r.lenbits=O.bits,A){t.msg="invalid literal/lengths set",r.mode=BAD;break}if(r.distbits=6,r.distcode=r.distdyn,O={bits:r.distbits},A=inftrees(DISTS,r.lens,r.nlen,r.ndist,r.distcode,0,r.work,O),r.distbits=O.bits,A){t.msg="invalid distances set",r.mode=BAD;break}if(r.mode=LEN_,e===Z_TREES)break e;case LEN_:r.mode=LEN;case LEN:if(u>=6&&l>=258){t.next_out=c,t.avail_out=l,t.next_in=a,t.avail_in=u,r.hold=f,r.bits=p,inffast(t,$),c=t.next_out,o=t.output,l=t.avail_out,a=t.next_in,n=t.input,u=t.avail_in,f=r.hold,p=r.bits,r.mode===TYPE&&(r.back=-1);break}for(r.back=0;v=r.lencode[f&(1<<r.lenbits)-1],S=v>>>24,I=v>>>16&255,R=v&65535,!(S<=p);){if(u===0)break e;u--,f+=n[a++]<<p,p+=8}if(I&&!(I&240)){for(C=S,T=I,P=R;v=r.lencode[P+((f&(1<<C+T)-1)>>C)],S=v>>>24,I=v>>>16&255,R=v&65535,!(C+S<=p);){if(u===0)break e;u--,f+=n[a++]<<p,p+=8}f>>>=C,p-=C,r.back+=C}if(f>>>=S,p-=S,r.back+=S,r.length=R,I===0){r.mode=LIT;break}if(I&32){r.back=-1,r.mode=TYPE;break}if(I&64){t.msg="invalid literal/length code",r.mode=BAD;break}r.extra=I&15,r.mode=LENEXT;case LENEXT:if(r.extra){for(M=r.extra;p<M;){if(u===0)break e;u--,f+=n[a++]<<p,p+=8}r.length+=f&(1<<r.extra)-1,f>>>=r.extra,p-=r.extra,r.back+=r.extra}r.was=r.length,r.mode=DIST;case DIST:for(;v=r.distcode[f&(1<<r.distbits)-1],S=v>>>24,I=v>>>16&255,R=v&65535,!(S<=p);){if(u===0)break e;u--,f+=n[a++]<<p,p+=8}if(!(I&240)){for(C=S,T=I,P=R;v=r.distcode[P+((f&(1<<C+T)-1)>>C)],S=v>>>24,I=v>>>16&255,R=v&65535,!(C+S<=p);){if(u===0)break e;u--,f+=n[a++]<<p,p+=8}f>>>=C,p-=C,r.back+=C}if(f>>>=S,p-=S,r.back+=S,I&64){t.msg="invalid distance code",r.mode=BAD;break}r.offset=R,r.extra=I&15,r.mode=DISTEXT;case DISTEXT:if(r.extra){for(M=r.extra;p<M;){if(u===0)break e;u--,f+=n[a++]<<p,p+=8}r.offset+=f&(1<<r.extra)-1,f>>>=r.extra,p-=r.extra,r.back+=r.extra}if(r.offset>r.dmax){t.msg="invalid distance too far back",r.mode=BAD;break}r.mode=MATCH;case MATCH:if(l===0)break e;if(_=$-l,r.offset>_){if(_=r.offset-_,_>r.whave&&r.sane){t.msg="invalid distance too far back",r.mode=BAD;break}_>r.wnext?(_-=r.wnext,b=r.wsize-_):b=r.wnext-_,_>r.length&&(_=r.length),D=r.window}else D=o,b=c-r.offset,_=r.length;_>l&&(_=l),l-=_,r.length-=_;do o[c++]=D[b++];while(--_);r.length===0&&(r.mode=LEN);break;case LIT:if(l===0)break e;o[c++]=r.length,l--,r.mode=LEN;break;case CHECK:if(r.wrap){for(;p<32;){if(u===0)break e;u--,f|=n[a++]<<p,p+=8}if($-=l,t.total_out+=$,r.total+=$,r.wrap&4&&$&&(t.adler=r.check=r.flags?crc32_1(r.check,o,$,c-$):adler32_1(r.check,o,$,c-$)),$=l,r.wrap&4&&(r.flags?f:zswap32(f))!==r.check){t.msg="incorrect data check",r.mode=BAD;break}f=0,p=0}r.mode=LENGTH;case LENGTH:if(r.wrap&&r.flags){for(;p<32;){if(u===0)break e;u--,f+=n[a++]<<p,p+=8}if(r.wrap&4&&f!==(r.total&4294967295)){t.msg="incorrect length check",r.mode=BAD;break}f=0,p=0}r.mode=DONE$2;case DONE$2:A=Z_STREAM_END$1;break e;case BAD:A=Z_DATA_ERROR$1;break e;case MEM:return Z_MEM_ERROR$1;case SYNC:default:return Z_STREAM_ERROR$1}return t.next_out=c,t.avail_out=l,t.next_in=a,t.avail_in=u,r.hold=f,r.bits=p,(r.wsize||$!==t.avail_out&&r.mode<BAD&&(r.mode<CHECK||e!==Z_FINISH$1))&&updatewindow(t,t.output,t.next_out,$-t.avail_out),g-=t.avail_in,$-=t.avail_out,t.total_in+=g,t.total_out+=$,r.total+=$,r.wrap&4&&$&&(t.adler=r.check=r.flags?crc32_1(r.check,o,$,t.next_out-$):adler32_1(r.check,o,$,t.next_out-$)),t.data_type=r.bits+(r.last?64:0)+(r.mode===TYPE?128:0)+(r.mode===LEN_||r.mode===COPY_?256:0),(g===0&&$===0||e===Z_FINISH$1)&&A===Z_OK$1&&(A=Z_BUF_ERROR),A},inflateEnd=t=>{if(inflateStateCheck(t))return Z_STREAM_ERROR$1;let e=t.state;return e.window&&(e.window=null),t.state=null,Z_OK$1},inflateGetHeader=(t,e)=>{if(inflateStateCheck(t))return Z_STREAM_ERROR$1;const r=t.state;return r.wrap&2?(r.head=e,e.done=!1,Z_OK$1):Z_STREAM_ERROR$1},inflateSetDictionary=(t,e)=>{const r=e.length;let n,o,a;return inflateStateCheck(t)||(n=t.state,n.wrap!==0&&n.mode!==DICT)?Z_STREAM_ERROR$1:n.mode===DICT&&(o=1,o=adler32_1(o,e,r,0),o!==n.check)?Z_DATA_ERROR$1:(a=updatewindow(t,e,r,r),a?(n.mode=MEM,Z_MEM_ERROR$1):(n.havedict=1,Z_OK$1))};var inflateReset_1=inflateReset,inflateReset2_1=inflateReset2,inflateResetKeep_1=inflateResetKeep,inflateInit_1=inflateInit,inflateInit2_1=inflateInit2,inflate_2$1=inflate$2,inflateEnd_1=inflateEnd,inflateGetHeader_1=inflateGetHeader,inflateSetDictionary_1=inflateSetDictionary,inflateInfo="pako inflate (from Nodeca project)",inflate_1$2={inflateReset:inflateReset_1,inflateReset2:inflateReset2_1,inflateResetKeep:inflateResetKeep_1,inflateInit:inflateInit_1,inflateInit2:inflateInit2_1,inflate:inflate_2$1,inflateEnd:inflateEnd_1,inflateGetHeader:inflateGetHeader_1,inflateSetDictionary:inflateSetDictionary_1,inflateInfo};function GZheader(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}var gzheader=GZheader;const toString$q=Object.prototype.toString,{Z_NO_FLUSH,Z_FINISH,Z_OK,Z_STREAM_END,Z_NEED_DICT,Z_STREAM_ERROR,Z_DATA_ERROR,Z_MEM_ERROR}=constants$2;function Inflate$1(t){this.options=common$1.assign({chunkSize:1024*64,windowBits:15,to:""},t||{});const e=this.options;e.raw&&e.windowBits>=0&&e.windowBits<16&&(e.windowBits=-e.windowBits,e.windowBits===0&&(e.windowBits=-15)),e.windowBits>=0&&e.windowBits<16&&!(t&&t.windowBits)&&(e.windowBits+=32),e.windowBits>15&&e.windowBits<48&&(e.windowBits&15||(e.windowBits|=15)),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new zstream,this.strm.avail_out=0;let r=inflate_1$2.inflateInit2(this.strm,e.windowBits);if(r!==Z_OK)throw new Error(messages$1[r]);if(this.header=new gzheader,inflate_1$2.inflateGetHeader(this.strm,this.header),e.dictionary&&(typeof e.dictionary=="string"?e.dictionary=strings.string2buf(e.dictionary):toString$q.call(e.dictionary)==="[object ArrayBuffer]"&&(e.dictionary=new Uint8Array(e.dictionary)),e.raw&&(r=inflate_1$2.inflateSetDictionary(this.strm,e.dictionary),r!==Z_OK)))throw new Error(messages$1[r])}Inflate$1.prototype.push=function(t,e){const r=this.strm,n=this.options.chunkSize,o=this.options.dictionary;let a,c,u;if(this.ended)return!1;for(e===~~e?c=e:c=e===!0?Z_FINISH:Z_NO_FLUSH,toString$q.call(t)==="[object ArrayBuffer]"?r.input=new Uint8Array(t):r.input=t,r.next_in=0,r.avail_in=r.input.length;;){for(r.avail_out===0&&(r.output=new Uint8Array(n),r.next_out=0,r.avail_out=n),a=inflate_1$2.inflate(r,c),a===Z_NEED_DICT&&o&&(a=inflate_1$2.inflateSetDictionary(r,o),a===Z_OK?a=inflate_1$2.inflate(r,c):a===Z_DATA_ERROR&&(a=Z_NEED_DICT));r.avail_in>0&&a===Z_STREAM_END&&r.state.wrap>0&&t[r.next_in]!==0;)inflate_1$2.inflateReset(r),a=inflate_1$2.inflate(r,c);switch(a){case Z_STREAM_ERROR:case Z_DATA_ERROR:case Z_NEED_DICT:case Z_MEM_ERROR:return this.onEnd(a),this.ended=!0,!1}if(u=r.avail_out,r.next_out&&(r.avail_out===0||a===Z_STREAM_END))if(this.options.to==="string"){let l=strings.utf8border(r.output,r.next_out),f=r.next_out-l,p=strings.buf2string(r.output,l);r.next_out=f,r.avail_out=n-f,f&&r.output.set(r.output.subarray(l,l+f),0),this.onData(p)}else this.onData(r.output.length===r.next_out?r.output:r.output.subarray(0,r.next_out));if(!(a===Z_OK&&u===0)){if(a===Z_STREAM_END)return a=inflate_1$2.inflateEnd(this.strm),this.onEnd(a),this.ended=!0,!0;if(r.avail_in===0)break}}return!0},Inflate$1.prototype.onData=function(t){this.chunks.push(t)},Inflate$1.prototype.onEnd=function(t){t===Z_OK&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=common$1.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};function inflate$1(t,e){const r=new Inflate$1(e);if(r.push(t),r.err)throw r.msg||messages$1[r.err];return r.result}function inflateRaw$1(t,e){return e=e||{},e.raw=!0,inflate$1(t,e)}var Inflate_1$1=Inflate$1,inflate_2=inflate$1,inflateRaw_1$1=inflateRaw$1,ungzip$1=inflate$1,constants=constants$2,inflate_1$1={Inflate:Inflate_1$1,inflate:inflate_2,inflateRaw:inflateRaw_1$1,ungzip:ungzip$1,constants};const{Deflate,deflate,deflateRaw,gzip}=deflate_1$1,{Inflate,inflate,inflateRaw,ungzip}=inflate_1$1;var Deflate_1=Deflate,deflate_1=deflate,deflateRaw_1=deflateRaw,gzip_1=gzip,Inflate_1=Inflate,inflate_1=inflate,inflateRaw_1=inflateRaw,ungzip_1=ungzip,constants_1=constants$2,pako={Deflate:Deflate_1,deflate:deflate_1,deflateRaw:deflateRaw_1,gzip:gzip_1,Inflate:Inflate_1,inflate:inflate_1,inflateRaw:inflateRaw_1,ungzip:ungzip_1,constants:constants_1};const DEFAULT_COMPRESSION_LEVEL=6;function createGet$8({repo:t,preload:e}){async function*r(n,o={}){if(o.compressionLevel!=null&&(o.compressionLevel<-1||o.compressionLevel>9))throw errcode(new Error("Compression level must be between -1 and 9"),"ERR_INVALID_PARAMS");if(o.preload!==!1){let u;try{u=normalizeCidPath(n).split("/")}catch(l){throw errcode(l,"ERR_INVALID_PATH")}e(CID$k.parse(u[0]))}const a=CID$k.asCID(n)||n,c=await exporter(a,t.blocks,o);if(c.type==="file"||c.type==="raw"){const u=[];!o.compress||o.archive===!0?u.push([{header:{name:c.path,mode:c.type==="file"&&c.unixfs.mode,mtime:c.type==="file"&&c.unixfs.mtime?new Date(c.unixfs.mtime.secs*1e3):void 0,size:c.size,type:"file"},body:c.content()}],pack()):u.push(c.content),o.compress&&u.push(async function*(l){const f=await toBuffer(l);yield pako.gzip(f,{level:o.compressionLevel||DEFAULT_COMPRESSION_LEVEL})}),yield*pipe$1(...u);return}if(c.type==="directory"){const u=[recursive(a,t.blocks,o),async function*(l){for await(const f of l){const p={header:{name:f.path,size:f.size}};if(f.type==="file")p.header.type="file",p.header.mode=f.unixfs.mode!=null?f.unixfs.mode:void 0,p.header.mtime=f.unixfs.mtime?new Date(f.unixfs.mtime.secs*1e3):void 0,p.body=f.content();else if(f.type==="raw")p.header.type="file",p.body=f.content();else if(f.type==="directory")p.header.type="directory",p.header.mode=f.unixfs.mode!=null?f.unixfs.mode:void 0,p.header.mtime=f.unixfs.mtime?new Date(f.unixfs.mtime.secs*1e3):void 0;else throw errcode(new Error("Not a UnixFS node"),"ERR_NOT_UNIXFS");yield p}},pack()];if(o.compress){if(!o.archive)throw errcode(new Error("file is not regular"),"ERR_INVALID_PATH");o.compress&&u.push(async function*(l){const f=await toBuffer(l);yield pako.gzip(f,{level:o.compressionLevel||DEFAULT_COMPRESSION_LEVEL})})}yield*pipe$1(...u);return}throw errcode(new Error("Not a UnixFS node"),"ERR_NOT_UNIXFS")}return withTimeoutOption(r)}function createLs$8({repo:t,preload:e}){async function*r(n,o={}){const a=normalizeCidPath(n),c=a.split("/");o.preload!==!1&&e(CID$k.parse(c[0]));const u=CID$k.asCID(a)||a,l=await exporter(u,t.blocks,o);if(l.type==="file"){yield mapFile(l);return}if(l.type==="directory"){for await(const f of l.content())yield mapFile(f);return}throw errcode(new Error(`Unknown UnixFS type ${l.type}`),"ERR_UNKNOWN_UNIXFS_TYPE")}return withTimeoutOption(r)}class RootAPI{constructor({preload:e,repo:r,hashers:n,options:o}){const a=createAddAll$2({preload:e,repo:r,options:o,hashers:n});this.addAll=a,this.add=createAdd$5({addAll:a}),this.cat=createCat$1({repo:r,preload:e}),this.get=createGet$8({repo:r,preload:e}),this.ls=createLs$8({repo:r,preload:e})}}const ipfsCore="0.18.1",commit="",interfaceIpfsCore="^0.158.1";function createVersion$3({repo:t}){async function e(r={}){const n=await t.version.get();return{version:ipfsCore,commit,repo:`${n}`,"ipfs-core":ipfsCore,"interface-ipfs-core":interfaceIpfsCore}}return withTimeoutOption(e)}const log$1q=logger$3("ipfs:components:id");function createId$1({peerId:t,network:e}){async function r(n={}){const o=e.try();if(!o){if(n.peerId)throw new NotStartedError;if(t.publicKey==null)throw errcode(new Error("Public key missing"),"ERR_MISSING_PUBLIC_KEY");return{id:t,publicKey:toString$D(t.publicKey,"base64pad"),addresses:[],agentVersion:`js-ipfs/${ipfsCore}`,protocolVersion:"9000",protocols:[]}}const{libp2p:a}=o,c=n.peerId?n.peerId:t,u=await findPeer(c,a,n),l=toString$D(u.metadata.get("AgentVersion")||new Uint8Array),f=toString$D(u.metadata.get("ProtocolVersion")||new Uint8Array),p=u.id.toString(),g=u.publicKey?toString$D(u.publicKey,"base64pad"):"";return{id:c,publicKey:g,addresses:(u.addresses||[]).map($=>{const _=$.toString();return _.endsWith(`/p2p/${p}`)?_:`${_}/p2p/${p}`}).sort().map($=>multiaddr$a($)),agentVersion:l,protocolVersion:f,protocols:(u.protocols||[]).sort()}}return withTimeoutOption(r)}async function findPeer(t,e,r){let n=await e.peerStore.get(t);n||(n=await findPeerOnDht(t,e,r));let o=t.publicKey?t.publicKey:await e.peerStore.keyBook.get(t);if(o==null)try{o=await e.getPublicKey(t,r)}catch(a){log$1q.error("Could not load public key for",t.toString(),a)}return{...n,publicKey:o,metadata:n.metadata||new Map,addresses:n.addresses.map(a=>a.multiaddr)}}async function findPeerOnDht(t,e,r){if(e.dht==null)throw errcode(new Error("dht not configured"),"ERR_DHT_NOT_CONFIGURED");for await(const o of e.dht.findPeer(t,r))if(o.name==="FINAL_PEER")break;const n=await e.peerStore.get(t);if(!n)throw errcode(new Error("Could not find peer"),"ERR_NOT_FOUND");return n}var objectSafeSet=set;function set(t,e,r){var n,o;if(Array.isArray(e)&&(n=e.slice(0)),typeof e=="string"&&(n=e.split(".")),typeof e=="symbol"&&(n=[e]),!Array.isArray(n))throw new Error("props arg must be an array, a string or a symbol");if(o=n.pop(),!o)return!1;prototypeCheck(o);for(var a;a=n.shift();)if(prototypeCheck(a),typeof t[a]>"u"&&(t[a]={}),t=t[a],!t||typeof t!="object")return!1;return t[o]=r,!0}function prototypeCheck(t){if(t=="__proto__"||t=="constructor"||t=="prototype")throw new Error("setting of prototype values not supported")}const profiles={server:{description:"Recommended for nodes with public IPv4 address (servers, VPSes, etc.), disables host and content discovery and UPnP in local networks.",transform:t=>(objectSafeSet(t,"Discovery.MDNS.Enabled",!1),objectSafeSet(t,"Discovery.webRTCStar.Enabled",!1),t.Swarm={...t.Swarm||{},DisableNatPortMap:!0},t)},"local-discovery":{description:"Sets default values to fields affected by `server` profile, enables discovery and UPnP in local networks.",transform:t=>(objectSafeSet(t,"Discovery.MDNS.Enabled",!0),objectSafeSet(t,"Discovery.webRTCStar.Enabled",!0),objectSafeSet(t,"Swarm",{...t.Swarm||{},DisableNatPortMap:!1}),t)},test:{description:"Reduces external interference, useful for running ipfs in test environments. Note that with these settings node won't be able to talk to the rest of the network without manual bootstrap.",transform:t=>{const e=getDefaultConfig();return objectSafeSet(t,"Addresses.API",e.Addresses.API?"/ip4/127.0.0.1/tcp/0":""),objectSafeSet(t,"Addresses.Gateway",e.Addresses.Gateway?"/ip4/127.0.0.1/tcp/0":""),objectSafeSet(t,"Addresses.Swarm",e.Addresses.Swarm.length?["/ip4/127.0.0.1/tcp/0"]:[]),objectSafeSet(t,"Addresses.Delegates",[]),objectSafeSet(t,"Bootstrap",[]),objectSafeSet(t,"Discovery.MDNS.Enabled",!1),objectSafeSet(t,"Discovery.webRTCStar.Enabled",!1),objectSafeSet(t,"Swarm",{...t.Swarm||{},DisableNatPortMap:!0}),t}},"default-networking":{description:"Restores default network settings. Inverse profile of the `test` profile.",transform:t=>{const e=getDefaultConfig();return objectSafeSet(t,"Addresses.API",e.Addresses.API),objectSafeSet(t,"Addresses.Gateway",e.Addresses.Gateway),objectSafeSet(t,"Addresses.Swarm",e.Addresses.Swarm),objectSafeSet(t,"Addresses.Delegates",e.Addresses.Delegates),objectSafeSet(t,"Bootstrap",e.Bootstrap),objectSafeSet(t,"Discovery.MDNS.Enabled",e.Discovery.MDNS.Enabled),objectSafeSet(t,"Discovery.webRTCStar.Enabled",e.Discovery.webRTCStar.Enabled),objectSafeSet(t,"Swarm",{...t.Swarm||{},DisableNatPortMap:!1}),t}},lowpower:{description:"Reduces daemon overhead on the system. May affect node functionality,performance of content discovery and data fetching may be degraded. Recommended for low power systems.",transform:t=>{const e=t.Swarm||{},r=e.ConnMgr||{};return r.LowWater=20,r.HighWater=40,e.ConnMgr=r,t.Swarm=e,t}},"default-power":{description:'Inverse of "lowpower" profile.',transform:t=>{const e=getDefaultConfig();return t.Swarm=e.Swarm,t}}},log$1p=logger$3("ipfs:core:config");function createConfig$1({repo:t}){return{getAll:withTimeoutOption(e),get:withTimeoutOption(r),set:withTimeoutOption(n),replace:withTimeoutOption(o),profiles:{apply:withTimeoutOption(a),list:withTimeoutOption(listProfiles)}};async function e(c={}){return t.config.getAll(c)}async function r(c,u){return c?t.config.get(c,u):Promise.reject(new Error("key argument is required"))}async function n(c,u,l){return t.config.set(c,u,l)}async function o(c,u){return t.config.replace(c,u)}async function a(c,u={dryRun:!1}){const{dryRun:l}=u,f=profiles[c];if(!f)throw new Error(`No profile with name '${c}' exists`);try{const p=await t.config.getAll(u);let g=JSON.parse(JSON.stringify(p));return g=f.transform(g),l||await t.config.replace(g,u),delete p.Identity.PrivKey,delete g.Identity.PrivKey,{original:p,updated:g}}catch(p){throw log$1p(p),new Error(`Could not apply profile '${c}' to config: ${p.message}`)}}}async function listProfiles(t){return Object.keys(profiles).map(e=>({name:e,description:profiles[e].description}))}function readonly$1({enumerable:t=!0,configurable:e=!1}={}){return{enumerable:t,configurable:e,writable:!1}}function*linksWithin$1(t,e){if(e!=null&&typeof e=="object")if(Array.isArray(e))for(const[r,n]of e.entries()){const o=[...t,r],a=CID$k.asCID(n);a?yield[o.join("/"),a]:typeof n=="object"&&(yield*links$1(n,o))}else{const r=CID$k.asCID(e);r?yield[t.join("/"),r]:yield*links$1(e,t)}}function*links$1(t,e){if(t==null||t instanceof Uint8Array)return;const r=CID$k.asCID(t);r&&(yield[e.join("/"),r]);for(const[n,o]of Object.entries(t)){const a=[...e,n];yield*linksWithin$1(a,o)}}function*treeWithin$1(t,e){if(Array.isArray(e))for(const[r,n]of e.entries()){const o=[...t,r];yield o.join("/"),typeof n=="object"&&!CID$k.asCID(n)&&(yield*tree$1(n,o))}else yield*tree$1(e,t)}function*tree$1(t,e){if(!(t==null||typeof t!="object"))for(const[r,n]of Object.entries(t)){const o=[...e,r];yield o.join("/"),n!=null&&!(n instanceof Uint8Array)&&typeof n=="object"&&!CID$k.asCID(n)&&(yield*treeWithin$1(o,n))}}function get$2(t,e){let r=t;for(const[n,o]of e.entries()){if(r=r[o],r==null)throw new Error(`Object has no property at ${e.slice(0,n+1).map(c=>`[${JSON.stringify(c)}]`).join("")}`);const a=CID$k.asCID(r);if(a)return{value:a,remaining:e.slice(n+1).join("/")}}return{value:r}}let Block$1=class{constructor({cid:t,bytes:e,value:r}){if(!t||!e||typeof r>"u")throw new Error("Missing required argument");this.cid=t,this.bytes=e,this.value=r,this.asBlock=this,Object.defineProperties(this,{cid:readonly$1(),bytes:readonly$1(),value:readonly$1(),asBlock:readonly$1()})}links(){return links$1(this.value,[])}tree(){return tree$1(this.value,[])}get(t="/"){return get$2(this.value,t.split("/").filter(Boolean))}};function createUnsafe$1({bytes:t,cid:e,value:r,codec:n}){const o=r!==void 0?r:n&&n.decode(t);if(o===void 0)throw new Error('Missing required argument, must either provide "value" or "codec"');return new Block$1({cid:e,bytes:t,value:o})}function equals$u(t,e){if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0}function coerce$f(t){if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")}function base$i(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$h=base$i,_brrp__multiformats_scope_baseX$f=src$h;let Encoder$h=class{constructor(t,e,r){N(this,"name");N(this,"prefix");N(this,"baseEncode");this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$h=class{constructor(t,e,r){N(this,"name");N(this,"prefix");N(this,"baseDecode");N(this,"prefixCodePoint");if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$i(this,t)}},ComposedDecoder$f=class{constructor(t){N(this,"decoders");this.decoders=t}or(t){return or$i(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r!=null)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};function or$i(t,e){return new ComposedDecoder$f({...t.decoders??{[t.prefix]:t},...e.decoders??{[e.prefix]:e}})}let Codec$f=class{constructor(t,e,r,n){N(this,"name");N(this,"prefix");N(this,"baseEncode");N(this,"baseDecode");N(this,"encoder");N(this,"decoder");this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$h(t,e,r),this.decoder=new Decoder$h(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};function from$n({name:t,prefix:e,encode:r,decode:n}){return new Codec$f(t,e,r,n)}function baseX$f({name:t,prefix:e,alphabet:r}){const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$f(r,t);return from$n({prefix:e,name:t,encode:n,decode:a=>coerce$f(o(a))})}function decode$1n(t,e,r,n){const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c}function encode$$(t,e,r){const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c!==0&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a}function rfc4648$f({name:t,prefix:e,bitsPerChar:r,alphabet:n}){return from$n({prefix:e,name:t,encode(o){return encode$$(o,n,r)},decode(o){return decode$1n(o,n,r,t)}})}const base32$o=rfc4648$f({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5});rfc4648$f({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),rfc4648$f({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),rfc4648$f({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),rfc4648$f({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),rfc4648$f({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),rfc4648$f({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),rfc4648$f({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),rfc4648$f({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});const base58btc$e=baseX$f({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"});baseX$f({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var encode_1$g=encode$_,MSB$m=128,REST$m=127,MSBALL$g=~REST$m,INT$g=Math.pow(2,31);function encode$_(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$g;)e[r++]=t&255|MSB$m,t/=128;for(;t&MSBALL$g;)e[r++]=t&255|MSB$m,t>>>=7;return e[r]=t|0,encode$_.bytes=r-n+1,e}var decode$1m=read$h,MSB$1$g=128,REST$1$g=127;function read$h(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$h.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$g)<<o:(c&REST$1$g)*Math.pow(2,o),o+=7}while(c>=MSB$1$g);return read$h.bytes=a-n,r}var N1$l=Math.pow(2,7),N2$l=Math.pow(2,14),N3$l=Math.pow(2,21),N4$l=Math.pow(2,28),N5$l=Math.pow(2,35),N6$l=Math.pow(2,42),N7$l=Math.pow(2,49),N8$h=Math.pow(2,56),N9$h=Math.pow(2,63),length$i=function(t){return t<N1$l?1:t<N2$l?2:t<N3$l?3:t<N4$l?4:t<N5$l?5:t<N6$l?6:t<N7$l?7:t<N8$h?8:t<N9$h?9:10},varint$h={encode:encode_1$g,decode:decode$1m,encodingLength:length$i},_brrp_varint$f=varint$h;function decode$1l(t,e=0){return[_brrp_varint$f.decode(t,e),_brrp_varint$f.decode.bytes]}function encodeTo$f(t,e,r=0){return _brrp_varint$f.encode(t,e,r),e}function encodingLength$j(t){return _brrp_varint$f.encodingLength(t)}function create$j(t,e){const r=e.byteLength,n=encodingLength$j(t),o=n+encodingLength$j(r),a=new Uint8Array(o+r);return encodeTo$f(t,a,0),encodeTo$f(r,a,n),a.set(e,o),new Digest$f(t,r,e,a)}function decode$1k(t){const e=coerce$f(t),[r,n]=decode$1l(e),[o,a]=decode$1l(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$f(r,o,c,e)}function equals$t(t,e){if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$u(t.bytes,r.bytes)}}let Digest$f=class{constructor(t,e,r,n){N(this,"code");N(this,"size");N(this,"digest");N(this,"bytes");this.code=t,this.size=e,this.digest=r,this.bytes=n}};function format$e(t,e){const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$d(r,baseCache$d(t),e??base58btc$e.encoder);default:return toStringV1$d(r,baseCache$d(t),e??base32$o.encoder)}}const cache$f=new WeakMap;function baseCache$d(t){const e=cache$f.get(t);if(e==null){const r=new Map;return cache$f.set(t,r),r}return e}let CID$d=class Fe{constructor(e,r,n,o){N(this,"code");N(this,"version");N(this,"multihash");N(this,"bytes");N(this,"/");N(this,Br,"CID");this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$d)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$d)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return Fe.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$j(e,r);return Fe.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return Fe.equals(this,e)}static equals(e,r){const n=r;return n!=null&&e.code===n.code&&e.version===n.version&&equals$t(e.multihash,n.multihash)}toString(e){return format$e(this,e)}toJSON(){return{"/":format$e(this)}}link(){return this}[(Br=Symbol.toStringTag,Symbol.for("nodejs.util.inspect.custom"))](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof Fe)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new Fe(n,o,a,c??encodeCID$e(n,o,a.bytes))}else if(r[cidSymbol$d]===!0){const{version:n,multihash:o,code:a}=r,c=decode$1k(o);return Fe.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$d)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$d}) block encoding`);return new Fe(e,r,n,n.bytes)}case 1:{const o=encodeCID$e(e,r,n.bytes);return new Fe(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return Fe.create(0,DAG_PB_CODE$d,e)}static createV1(e,r){return Fe.create(1,e,r)}static decode(e){const[r,n]=Fe.decodeFirst(e);if(n.length!==0)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=Fe.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$f(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$f(r.multihashCode,r.digestSize,a,o);return[r.version===0?Fe.createV0(c):Fe.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$1l(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$d;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$d(e,r),a=Fe.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$d(a).set(n,e),a}};function parseCIDtoBytes$d(t,e){switch(t[0]){case"Q":{const r=e??base58btc$e;return[base58btc$e.prefix,r.decode(`${base58btc$e.prefix}${t}`)]}case base58btc$e.prefix:{const r=e??base58btc$e;return[base58btc$e.prefix,r.decode(t)]}case base32$o.prefix:{const r=e??base32$o;return[base32$o.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}}function toStringV0$d(t,e,r){const{prefix:n}=r;if(n!==base58btc$e.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o}function toStringV1$d(t,e,r){const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o}const DAG_PB_CODE$d=112,SHA_256_CODE$d=18;function encodeCID$e(t,e,r){const n=encodingLength$j(t),o=n+encodingLength$j(e),a=new Uint8Array(o+r.byteLength);return encodeTo$f(t,a,0),encodeTo$f(e,a,n),a.set(r,o),a}const cidSymbol$d=Symbol.for("@ipld/js-cid/CID"),CIDV0_BYTES={SHA2_256:18,LENGTH:32,DAG_PB:112},V2_HEADER_LENGTH=40;function decodeVarint(t,e){if(!t.length)throw new Error("Unexpected end of data");const r=varint$w.decode(t);return e.seek(varint$w.decode.bytes),r}function decodeV2Header(t){const e=new DataView(t.buffer,t.byteOffset,t.byteLength);let r=0;return{version:2,characteristics:[e.getBigUint64(r,!0),e.getBigUint64(r+=8,!0)],dataOffset:Number(e.getBigUint64(r+=8,!0)),dataSize:Number(e.getBigUint64(r+=8,!0)),indexOffset:Number(e.getBigUint64(r+=8,!0))}}function getMultihashLength(t){varint$w.decode(t);const e=varint$w.decode.bytes,r=varint$w.decode(t.subarray(varint$w.decode.bytes)),n=varint$w.decode.bytes;return e+n+r}const Kinds={Null:t=>t===null?t:void 0,Int:t=>Number.isInteger(t)?t:void 0,Float:t=>typeof t=="number"&&Number.isFinite(t)?t:void 0,String:t=>typeof t=="string"?t:void 0,Bool:t=>typeof t=="boolean"?t:void 0,Bytes:t=>t instanceof Uint8Array?t:void 0,Link:t=>t!==null&&typeof t=="object"&&t.asCID===t?t:void 0,List:t=>Array.isArray(t)?t:void 0,Map:t=>t!==null&&typeof t=="object"&&t.asCID!==t&&!Array.isArray(t)&&!(t instanceof Uint8Array)?t:void 0},Types={"CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)":Kinds.Link,"CarV1HeaderOrV2Pragma > roots (anon)":t=>{if(Kinds.List(t)!==void 0){for(let e=0;e<t.length;e++){let r=t[e];if(r=Types["CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)"](r),r===void 0)return;if(r!==t[e]){const n=t.slice(0,e);for(let o=e;o<t.length;o++){let a=t[o];if(a=Types["CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)"](a),a===void 0)return;n.push(a)}return n}}return t}},Int:Kinds.Int,CarV1HeaderOrV2Pragma:t=>{if(Kinds.Map(t)===void 0)return;const e=Object.entries(t);let r=t,n=1;for(let o=0;o<e.length;o++){const[a,c]=e[o];switch(a){case"roots":{const u=Types["CarV1HeaderOrV2Pragma > roots (anon)"](t[a]);if(u===void 0)return;if(u!==c||r!==t){if(r===t){r={};for(let l=0;l<o;l++)r[e[l][0]]=e[l][1]}r.roots=u}}break;case"version":{n--;const u=Types.Int(t[a]);if(u===void 0)return;if(u!==c||r!==t){if(r===t){r={};for(let l=0;l<o;l++)r[e[l][0]]=e[l][1]}r.version=u}}break;default:return}}if(!(n>0))return r}},Reprs={"CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)":Kinds.Link,"CarV1HeaderOrV2Pragma > roots (anon)":t=>{if(Kinds.List(t)!==void 0){for(let e=0;e<t.length;e++){let r=t[e];if(r=Reprs["CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)"](r),r===void 0)return;if(r!==t[e]){const n=t.slice(0,e);for(let o=e;o<t.length;o++){let a=t[o];if(a=Reprs["CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)"](a),a===void 0)return;n.push(a)}return n}}return t}},Int:Kinds.Int,CarV1HeaderOrV2Pragma:t=>{if(Kinds.Map(t)===void 0)return;const e=Object.entries(t);let r=t,n=1;for(let o=0;o<e.length;o++){const[a,c]=e[o];switch(a){case"roots":{const u=Reprs["CarV1HeaderOrV2Pragma > roots (anon)"](c);if(u===void 0)return;if(u!==c||r!==t){if(r===t){r={};for(let l=0;l<o;l++)r[e[l][0]]=e[l][1]}r.roots=u}}break;case"version":{n--;const u=Reprs.Int(c);if(u===void 0)return;if(u!==c||r!==t){if(r===t){r={};for(let l=0;l<o;l++)r[e[l][0]]=e[l][1]}r.version=u}}break;default:return}}if(!(n>0))return r}},CarV1HeaderOrV2Pragma={toTyped:Types.CarV1HeaderOrV2Pragma,toRepresentation:Reprs.CarV1HeaderOrV2Pragma};async function readHeader$1(t,e){const r=decodeVarint(await t.upTo(8),t);if(r===0)throw new Error("Invalid CAR header (zero length)");const n=await t.exactly(r,!0),o=decode$2u(n);if(CarV1HeaderOrV2Pragma.toTyped(o)===void 0)throw new Error("Invalid CAR header format");if(o.version!==1&&o.version!==2||e!==void 0&&o.version!==e)throw new Error(`Invalid CAR version: ${o.version}${e!==void 0?` (expected ${e})`:""}`);if(o.version===1){if(!Array.isArray(o.roots))throw new Error("Invalid CAR header format");return o}if(o.roots!==void 0)throw new Error("Invalid CAR header format");const a=decodeV2Header(await t.exactly(V2_HEADER_LENGTH,!0));t.seek(a.dataOffset-t.pos);const c=await readHeader$1(t,1);return Object.assign(c,a)}async function readCid(t){const e=await t.exactly(2,!1);if(e[0]===CIDV0_BYTES.SHA2_256&&e[1]===CIDV0_BYTES.LENGTH){const c=await t.exactly(34,!0),u=decode$1k(c);return CID$d.create(0,CIDV0_BYTES.DAG_PB,u)}const r=decodeVarint(await t.upTo(8),t);if(r!==1)throw new Error(`Unexpected CID version (${r})`);const n=decodeVarint(await t.upTo(8),t),o=await t.exactly(getMultihashLength(await t.upTo(8)),!0),a=decode$1k(o);return CID$d.create(r,n,a)}async function readBlockHead(t){const e=t.pos;let r=decodeVarint(await t.upTo(8),t);if(r===0)throw new Error("Invalid CAR section (zero length)");r+=t.pos-e;const n=await readCid(t),o=r-Number(t.pos-e);return{cid:n,length:r,blockLength:o}}async function readBlock(t){const{cid:e,blockLength:r}=await readBlockHead(t);return{bytes:await t.exactly(r,!0),cid:e}}async function readBlockIndex(t){const e=t.pos,{cid:r,length:n,blockLength:o}=await readBlockHead(t),a={cid:r,length:n,blockLength:o,offset:e,blockOffset:t.pos};return t.seek(a.blockLength),a}function createDecoder(t){const e=(async()=>{const r=await readHeader$1(t);if(r.version===2){const n=t.pos-r.dataOffset;t=limitReader(t,r.dataSize-n)}return r})();return{header:()=>e,async*blocks(){for(await e;(await t.upTo(8)).length>0;)yield await readBlock(t)},async*blocksIndex(){for(await e;(await t.upTo(8)).length>0;)yield await readBlockIndex(t)}}}function bytesReader(t){let e=0;return{async upTo(r){return t.subarray(e,e+Math.min(r,t.length-e))},async exactly(r,n=!1){if(r>t.length-e)throw new Error("Unexpected end of data");const o=t.subarray(e,e+r);return n&&(e+=r),o},seek(r){e+=r},get pos(){return e}}}function chunkReader(t){let e=0,r=0,n=0,o=new Uint8Array(0);const a=async c=>{r=o.length-n;const u=[o.subarray(n)];for(;r<c;){const f=await t();if(f==null)break;r<0?f.length>r&&u.push(f.subarray(-r)):u.push(f),r+=f.length}o=new Uint8Array(u.reduce((f,p)=>f+p.length,0));let l=0;for(const f of u)o.set(f,l),l+=f.length;n=0};return{async upTo(c){return o.length-n<c&&await a(c),o.subarray(n,n+Math.min(o.length-n,c))},async exactly(c,u=!1){if(o.length-n<c&&await a(c),o.length-n<c)throw new Error("Unexpected end of data");const l=o.subarray(n,n+c);return u&&(e+=c,n+=c),l},seek(c){e+=c,n+=c},get pos(){return e}}}function asyncIterableReader(t){const e=t[Symbol.asyncIterator]();async function r(){const n=await e.next();return n.done?null:n.value}return chunkReader(r)}function limitReader(t,e){let r=0;return{async upTo(n){let o=await t.upTo(n);return o.length+r>e&&(o=o.subarray(0,e-r)),o},async exactly(n,o=!1){const a=await t.exactly(n,o);if(a.length+r>e)throw new Error("Unexpected end of data");return o&&(r+=n),a},seek(n){r+=n,t.seek(n)},get pos(){return t.pos}}}function createHeader(t){const e=encode$1T({version:1,roots:t}),r=varint$w.encode(e.length),n=new Uint8Array(r.length+e.length);return n.set(r,0),n.set(e,r.length),n}function createEncoder(t){return{async setRoots(e){const r=createHeader(e);await t.write(r)},async writeBlock(e){const{cid:r,bytes:n}=e;await t.write(new Uint8Array(varint$w.encode(r.bytes.length+n.length))),await t.write(r.bytes),n.length&&await t.write(n)},async close(){await t.end()}}}function noop$3(){}function create$i(){const t=[];let e=null,r=noop$3,n=!1,o=null,a=noop$3;const c=()=>(e||(e=new Promise(f=>{r=()=>{e=null,r=noop$3,f()}})),e),u={write(f){t.push(f);const p=c();return a(),p},async end(){n=!0;const f=c();a(),await f}},l={async next(){const f=t.shift();return f?(t.length===0&&r(),{done:!1,value:f}):n?(r(),{done:!0,value:void 0}):(o||(o=new Promise(p=>{a=()=>(o=null,a=noop$3,p(l.next()))})),o)}};return{writer:u,iterator:l}}class CarWriter{constructor(e,r){this._encoder=r,this._mutex=r.setRoots(e),this._ended=!1}async put(e){if(!(e.bytes instanceof Uint8Array)||!e.cid)throw new TypeError("Can only write {cid, bytes} objects");if(this._ended)throw new Error("Already closed");const r=CID$d.asCID(e.cid);if(!r)throw new TypeError("Can only write {cid, bytes} objects");return this._mutex=this._mutex.then(()=>this._encoder.writeBlock({cid:r,bytes:e.bytes})),this._mutex}async close(){if(this._ended)throw new Error("Already closed");return await this._mutex,this._ended=!0,this._encoder.close()}static create(e){e=toRoots(e);const{encoder:r,iterator:n}=encodeWriter(),o=new CarWriter(e,r),a=new CarWriterOut(n);return{writer:o,out:a}}static createAppender(){const{encoder:e,iterator:r}=encodeWriter();e.setRoots=()=>Promise.resolve();const n=new CarWriter([],e),o=new CarWriterOut(r);return{writer:n,out:o}}static async updateRootsInBytes(e,r){const n=bytesReader(e);await readHeader$1(n);const o=createHeader(r);if(Number(n.pos)!==o.length)throw new Error(`updateRoots() can only overwrite a header of the same length (old header is ${n.pos} bytes, new header is ${o.length} bytes)`);return e.set(o,0),e}}class CarWriterOut{constructor(e){this._iterator=e}[Symbol.asyncIterator](){if(this._iterating)throw new Error("Multiple iterator not supported");return this._iterating=!0,this._iterator}}function encodeWriter(){const t=create$i(),{writer:e,iterator:r}=t;return{encoder:createEncoder(e),iterator:r}}function toRoots(t){if(t===void 0)return[];if(!Array.isArray(t)){const r=CID$d.asCID(t);if(!r)throw new TypeError("roots must be a single CID or an array of CIDs");return[r]}const e=[];for(const r of t){const n=CID$d.asCID(r);if(!n)throw new TypeError("roots must be a single CID or an array of CIDs");e.push(n)}return e}const walk=async({cid:t,load:e,seen:r})=>{r=r||new Set;const n=t.toString(base58btc$n);if(r.has(n))return;const o=await e(t);if(r.add(n),o!==null)for(const[,a]of o.links())await walk({cid:a,load:e,seen:r})},log$1o=logger$3("ipfs:components:dag:import"),NO_LINKS_CODECS=[code$e,code$d];function createExport$3({repo:t,preload:e,codecs:r}){async function*n(o,a={}){a.preload!==!1&&e(o);const c=CID$k.asCID(o);if(!c)throw new Error(`Unexpected error converting CID type: ${o}`);log$1o(`Exporting ${c} as car`);const{writer:u,out:l}=await CarWriter.create([c]);let f=null;(async()=>{try{const p=makeLoader(t,u,{signal:a.signal,timeout:a.timeout},r);await walk({cid:c,load:p})}catch(p){f=p}finally{u.close()}})();for await(const p of l){if(f)break;yield p}if(f)throw f}return withTimeoutOption(n)}function makeLoader(t,e,r,n){return async o=>{const a=await n.getCodec(o.code);if(!a)throw new Error(`Can't decode links in block with codec 0x${o.code.toString(16)} to form complete DAG`);const c=await t.blocks.get(o,r);return log$1o(`Adding block ${o} to car`),await e.put({cid:o,bytes:c}),NO_LINKS_CODECS.includes(o.code)?null:createUnsafe$1({bytes:c,cid:o,codec:a})}}async function first$1(t){for await(const e of t)return e}function createGet$7({codecs:t,repo:e,preload:r}){return withTimeoutOption(async function(n,o={}){if(o.preload!==!1&&r(n),o.path){const u=o.localResolve?await first$1(resolve$5(n,o.path,t,e,o)):await last(resolve$5(n,o.path,t,e,o));if(!u)throw errcode(new Error("Not found"),"ERR_NOT_FOUND");return u}const a=await t.getCodec(n.code),c=await e.blocks.get(n,o);return{value:a.decode(c),remainderPath:""}})}class CarIteratorBase{constructor(e,r,n){this._version=e,this._roots=r,this._iterable=n,this._decoded=!1}get version(){return this._version}async getRoots(){return this._roots}}class CarBlockIterator extends CarIteratorBase{[Symbol.asyncIterator](){if(this._decoded)throw new Error("Cannot decode more than once");if(!this._iterable)throw new Error("Block iterable not found");return this._decoded=!0,this._iterable[Symbol.asyncIterator]()}static async fromBytes(e){const{version:r,roots:n,iterator:o}=await fromBytes$7(e);return new CarBlockIterator(r,n,o)}static async fromIterable(e){const{version:r,roots:n,iterator:o}=await fromIterable(e);return new CarBlockIterator(r,n,o)}}async function fromBytes$7(t){if(!(t instanceof Uint8Array))throw new TypeError("fromBytes() requires a Uint8Array");return decodeIterator(bytesReader(t))}async function fromIterable(t){if(!t||typeof t[Symbol.asyncIterator]!="function")throw new TypeError("fromIterable() requires an async iterable");return decodeIterator(asyncIterableReader(t))}async function decodeIterator(t){const e=createDecoder(t),{version:r,roots:n}=await e.header();return{version:r,roots:n,iterator:e.blocks()}}const log$1n=logger$3("ipfs:components:dag:import");function createImport$3({repo:t}){async function*e(r,n={}){const o=await t.gcLock.readLock();try{const a={signal:n.signal,timeout:n.timeout},c=peekableIterator(r),{value:u,done:l}=await c.peek();if(l)return;u&&c.push(u);let f;u instanceof Uint8Array?f=[c]:f=c;for await(const p of f){const g=await importCar(t,a,p);if(n.pinRoots!==!1)for(const $ of g){let _="";try{await t.blocks.has($)?(log$1n(`Pinning root ${$}`),await t.pins.pinRecursively($)):_="blockstore: block not found"}catch(b){_=b.message}yield{root:{cid:$,pinErrorMsg:_}}}}}finally{o()}}return withTimeoutOption(e)}async function importCar(t,e,r){const n=await CarBlockIterator.fromIterable(r),o=await n.getRoots();return await drain$1(t.blocks.putMany(map$3(n,({cid:a,bytes:c})=>(log$1n(`Import block ${a}`),{key:a,value:c})),{signal:e.signal})),o}function createPut$5({repo:t,codecs:e,hashers:r,preload:n}){async function o(a,c={}){const u=c.pin?await t.gcLock.readLock():null;try{const l=await e.getCodec(c.storeCodec||"dag-cbor");if(!l)throw new Error(`Unknown storeCodec ${c.storeCodec}, please configure additional BlockCodecs for this IPFS instance`);if(c.inputCodec){if(!(a instanceof Uint8Array))throw new Error("Can only inputCodec on raw bytes that can be decoded");const b=await e.getCodec(c.inputCodec);if(!b)throw new Error(`Unknown inputCodec ${c.inputCodec}, please configure additional BlockCodecs for this IPFS instance`);a=b.decode(a)}const f=c.version!=null?c.version:1,p=await r.getHasher(c.hashAlg||"sha2-256");if(!p)throw new Error(`Unknown hash algorithm ${c.hashAlg}, please configure additional MultihashHashers for this IPFS instance`);const g=l.encode(a),$=await p.digest(g),_=CID$k.create(f,l.code,$);return await t.blocks.put(_,g,{signal:c.signal}),c.pin&&await t.pins.pinRecursively(_),c.preload!==!1&&n(_),_}finally{u&&u()}}return withTimeoutOption(o)}function createResolve$3({repo:t,codecs:e,preload:r}){async function n(o,a={}){const{cid:c}=toCidAndPath(o);return a.preload!==!1&&r(c),resolvePath$1(t,e,o,a)}return withTimeoutOption(n)}class DagAPI{constructor({repo:e,codecs:r,hashers:n,preload:o}){this.export=createExport$3({repo:e,preload:o,codecs:r}),this.get=createGet$7({codecs:r,repo:e,preload:o}),this.import=createImport$3({repo:e}),this.resolve=createResolve$3({repo:e,codecs:r,preload:o}),this.put=createPut$5({repo:e,codecs:r,hashers:n,preload:o})}}var TopicValidatorResult$3;(function(t){t.Accept="accept",t.Ignore="ignore",t.Reject="reject"})(TopicValidatorResult$3||(TopicValidatorResult$3={}));var FaultTolerance$4;(function(t){t[t.FATAL_ALL=0]="FATAL_ALL",t[t.NO_FATAL=1]="NO_FATAL"})(FaultTolerance$4||(FaultTolerance$4={}));let CodeError$2=class extends Error{constructor(e,r,n){super(e);N(this,"code");N(this,"props");this.code=r,this.name=n?.name??"CodeError",this.props=n??{}}},AggregateCodeError$2=class extends AggregateError{constructor(e,r,n,o){super(e,r);N(this,"code");N(this,"props");this.code=n,this.name=o?.name??"AggregateCodeError",this.props=o??{}}};function equals$s(t,e){if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0}function coerce$e(t){if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")}function fromString$l(t){return new TextEncoder().encode(t)}function toString$p(t){return new TextDecoder().decode(t)}function base$h(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$g=base$h,_brrp__multiformats_scope_baseX$e=src$g;let Encoder$g=class{constructor(t,e,r){N(this,"name");N(this,"prefix");N(this,"baseEncode");this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$g=class{constructor(t,e,r){N(this,"name");N(this,"prefix");N(this,"baseDecode");N(this,"prefixCodePoint");if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$h(this,t)}},ComposedDecoder$e=class{constructor(t){N(this,"decoders");this.decoders=t}or(t){return or$h(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r!=null)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};function or$h(t,e){return new ComposedDecoder$e({...t.decoders??{[t.prefix]:t},...e.decoders??{[e.prefix]:e}})}let Codec$e=class{constructor(t,e,r,n){N(this,"name");N(this,"prefix");N(this,"baseEncode");N(this,"baseDecode");N(this,"encoder");N(this,"decoder");this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$g(t,e,r),this.decoder=new Decoder$g(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};function from$m({name:t,prefix:e,encode:r,decode:n}){return new Codec$e(t,e,r,n)}function baseX$e({name:t,prefix:e,alphabet:r}){const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$e(r,t);return from$m({prefix:e,name:t,encode:n,decode:a=>coerce$e(o(a))})}function decode$1j(t,e,r,n){const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c}function encode$Z(t,e,r){const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c!==0&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a}function rfc4648$e({name:t,prefix:e,bitsPerChar:r,alphabet:n}){return from$m({prefix:e,name:t,encode(o){return encode$Z(o,n,r)},decode(o){return decode$1j(o,n,r,t)}})}const base58btc$d=baseX$e({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),base58flickr$9=baseX$e({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),base58$9=Object.freeze(Object.defineProperty({__proto__:null,base58btc:base58btc$d,base58flickr:base58flickr$9},Symbol.toStringTag,{value:"Module"})),base32$m=rfc4648$e({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),base32upper$9=rfc4648$e({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),base32pad$a=rfc4648$e({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),base32padupper$9=rfc4648$e({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),base32hex$9=rfc4648$e({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),base32hexupper$9=rfc4648$e({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),base32hexpad$9=rfc4648$e({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),base32hexpadupper$9=rfc4648$e({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),base32z$9=rfc4648$e({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),base32$n=Object.freeze(Object.defineProperty({__proto__:null,base32:base32$m,base32hex:base32hex$9,base32hexpad:base32hexpad$9,base32hexpadupper:base32hexpadupper$9,base32hexupper:base32hexupper$9,base32pad:base32pad$a,base32padupper:base32padupper$9,base32upper:base32upper$9,base32z:base32z$9},Symbol.toStringTag,{value:"Module"}));var encode_1$f=encode$Y,MSB$l=128,REST$l=127,MSBALL$f=~REST$l,INT$f=Math.pow(2,31);function encode$Y(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$f;)e[r++]=t&255|MSB$l,t/=128;for(;t&MSBALL$f;)e[r++]=t&255|MSB$l,t>>>=7;return e[r]=t|0,encode$Y.bytes=r-n+1,e}var decode$1i=read$g,MSB$1$f=128,REST$1$f=127;function read$g(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$g.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$f)<<o:(c&REST$1$f)*Math.pow(2,o),o+=7}while(c>=MSB$1$f);return read$g.bytes=a-n,r}var N1$k=Math.pow(2,7),N2$k=Math.pow(2,14),N3$k=Math.pow(2,21),N4$k=Math.pow(2,28),N5$k=Math.pow(2,35),N6$k=Math.pow(2,42),N7$k=Math.pow(2,49),N8$g=Math.pow(2,56),N9$g=Math.pow(2,63),length$h=function(t){return t<N1$k?1:t<N2$k?2:t<N3$k?3:t<N4$k?4:t<N5$k?5:t<N6$k?6:t<N7$k?7:t<N8$g?8:t<N9$g?9:10},varint$g={encode:encode_1$f,decode:decode$1i,encodingLength:length$h},_brrp_varint$e=varint$g;function decode$1h(t,e=0){return[_brrp_varint$e.decode(t,e),_brrp_varint$e.decode.bytes]}function encodeTo$e(t,e,r=0){return _brrp_varint$e.encode(t,e,r),e}function encodingLength$i(t){return _brrp_varint$e.encodingLength(t)}function create$h(t,e){const r=e.byteLength,n=encodingLength$i(t),o=n+encodingLength$i(r),a=new Uint8Array(o+r);return encodeTo$e(t,a,0),encodeTo$e(r,a,n),a.set(e,o),new Digest$e(t,r,e,a)}function decode$1g(t){const e=coerce$e(t),[r,n]=decode$1h(e),[o,a]=decode$1h(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$e(r,o,c,e)}function equals$r(t,e){if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$s(t.bytes,r.bytes)}}let Digest$e=class{constructor(t,e,r,n){N(this,"code");N(this,"size");N(this,"digest");N(this,"bytes");this.code=t,this.size=e,this.digest=r,this.bytes=n}};function format$d(t,e){const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$c(r,baseCache$c(t),e??base58btc$d.encoder);default:return toStringV1$c(r,baseCache$c(t),e??base32$m.encoder)}}const cache$e=new WeakMap;function baseCache$c(t){const e=cache$e.get(t);if(e==null){const r=new Map;return cache$e.set(t,r),r}return e}let CID$c=class je{constructor(e,r,n,o){N(this,"code");N(this,"version");N(this,"multihash");N(this,"bytes");N(this,"/");N(this,Ur,"CID");this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$c)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$c)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return je.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$h(e,r);return je.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return je.equals(this,e)}static equals(e,r){const n=r;return n!=null&&e.code===n.code&&e.version===n.version&&equals$r(e.multihash,n.multihash)}toString(e){return format$d(this,e)}toJSON(){return{"/":format$d(this)}}link(){return this}[(Ur=Symbol.toStringTag,Symbol.for("nodejs.util.inspect.custom"))](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof je)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new je(n,o,a,c??encodeCID$d(n,o,a.bytes))}else if(r[cidSymbol$c]===!0){const{version:n,multihash:o,code:a}=r,c=decode$1g(o);return je.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$c)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$c}) block encoding`);return new je(e,r,n,n.bytes)}case 1:{const o=encodeCID$d(e,r,n.bytes);return new je(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return je.create(0,DAG_PB_CODE$c,e)}static createV1(e,r){return je.create(1,e,r)}static decode(e){const[r,n]=je.decodeFirst(e);if(n.length!==0)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=je.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$e(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$e(r.multihashCode,r.digestSize,a,o);return[r.version===0?je.createV0(c):je.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$1h(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$c;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$c(e,r),a=je.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$c(a).set(n,e),a}};function parseCIDtoBytes$c(t,e){switch(t[0]){case"Q":{const r=e??base58btc$d;return[base58btc$d.prefix,r.decode(`${base58btc$d.prefix}${t}`)]}case base58btc$d.prefix:{const r=e??base58btc$d;return[base58btc$d.prefix,r.decode(t)]}case base32$m.prefix:{const r=e??base32$m;return[base32$m.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}}function toStringV0$c(t,e,r){const{prefix:n}=r;if(n!==base58btc$d.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o}function toStringV1$c(t,e,r){const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o}const DAG_PB_CODE$c=112,SHA_256_CODE$c=18;function encodeCID$d(t,e,r){const n=encodingLength$i(t),o=n+encodingLength$i(e),a=new Uint8Array(o+r.byteLength);return encodeTo$e(t,a,0),encodeTo$e(e,a,n),a.set(r,o),a}const cidSymbol$c=Symbol.for("@ipld/js-cid/CID");function equals$q(t,e){if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0}const base10$k=baseX$e({prefix:"9",name:"base10",alphabet:"0123456789"}),base10$l=Object.freeze(Object.defineProperty({__proto__:null,base10:base10$k},Symbol.toStringTag,{value:"Module"})),base16$k=rfc4648$e({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),base16upper$a=rfc4648$e({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),base16$l=Object.freeze(Object.defineProperty({__proto__:null,base16:base16$k,base16upper:base16upper$a},Symbol.toStringTag,{value:"Module"})),base2$k=rfc4648$e({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),base2$l=Object.freeze(Object.defineProperty({__proto__:null,base2:base2$k},Symbol.toStringTag,{value:"Module"})),alphabet$b=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),alphabetBytesToChars$a=alphabet$b.reduce((t,e,r)=>(t[r]=e,t),[]),alphabetCharsToBytes$a=alphabet$b.reduce((t,e,r)=>(t[e.codePointAt(0)]=r,t),[]);function encode$X(t){return t.reduce((e,r)=>(e+=alphabetBytesToChars$a[r],e),"")}function decode$1f(t){const e=[];for(const r of t){const n=alphabetCharsToBytes$a[r.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${r}`);e.push(n)}return new Uint8Array(e)}const base256emoji$k=from$m({prefix:"\u{1F680}",name:"base256emoji",encode:encode$X,decode:decode$1f}),base256emoji$l=Object.freeze(Object.defineProperty({__proto__:null,base256emoji:base256emoji$k},Symbol.toStringTag,{value:"Module"})),base36$k=baseX$e({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),base36upper$a=baseX$e({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),base36$l=Object.freeze(Object.defineProperty({__proto__:null,base36:base36$k,base36upper:base36upper$a},Symbol.toStringTag,{value:"Module"})),base64$l=rfc4648$e({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),base64pad$a=rfc4648$e({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),base64url$a=rfc4648$e({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),base64urlpad$a=rfc4648$e({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),base64$m=Object.freeze(Object.defineProperty({__proto__:null,base64:base64$l,base64pad:base64pad$a,base64url:base64url$a,base64urlpad:base64urlpad$a},Symbol.toStringTag,{value:"Module"})),base8$k=rfc4648$e({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),base8$l=Object.freeze(Object.defineProperty({__proto__:null,base8:base8$k},Symbol.toStringTag,{value:"Module"})),identity$e=from$m({prefix:"\0",name:"identity",encode:t=>toString$p(t),decode:t=>fromString$l(t)}),identityBase$a=Object.freeze(Object.defineProperty({__proto__:null,identity:identity$e},Symbol.toStringTag,{value:"Module"}));new TextEncoder,new TextDecoder;const bases$a={...identityBase$a,...base2$l,...base8$l,...base10$l,...base16$l,...base32$n,...base36$l,...base58$9,...base64$m,...base256emoji$l};function asUint8Array$4(t){return globalThis.Buffer!=null?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):t}function allocUnsafe$a(t=0){return globalThis.Buffer?.allocUnsafe!=null?asUint8Array$4(globalThis.Buffer.allocUnsafe(t)):new Uint8Array(t)}function createCodec$3(t,e,r,n){return{name:t,prefix:e,encoder:{name:t,prefix:e,encode:r},decoder:{decode:n}}}const string$2=createCodec$3("utf8","u",t=>"u"+new TextDecoder("utf8").decode(t),t=>new TextEncoder().encode(t.substring(1))),ascii$2=createCodec$3("ascii","a",t=>{let e="a";for(let r=0;r<t.length;r++)e+=String.fromCharCode(t[r]);return e},t=>{t=t.substring(1);const e=allocUnsafe$a(t.length);for(let r=0;r<t.length;r++)e[r]=t.charCodeAt(r);return e}),BASES$2={utf8:string$2,"utf-8":string$2,hex:bases$a.base16,latin1:ascii$2,ascii:ascii$2,binary:ascii$2,...bases$a};function toString$o(t,e="utf8"){const r=BASES$2[e];if(r==null)throw new Error(`Unsupported encoding "${e}"`);return(e==="utf8"||e==="utf-8")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?globalThis.Buffer.from(t.buffer,t.byteOffset,t.byteLength).toString("utf8"):r.encoder.encode(t).substring(1)}const N1$j=Math.pow(2,7),N2$j=Math.pow(2,14),N3$j=Math.pow(2,21),N4$j=Math.pow(2,28),N5$j=Math.pow(2,35),N6$j=Math.pow(2,42),N7$j=Math.pow(2,49),MSB$k=128,REST$k=127;function encodingLength$h(t){if(t<N1$j)return 1;if(t<N2$j)return 2;if(t<N3$j)return 3;if(t<N4$j)return 4;if(t<N5$j)return 5;if(t<N6$j)return 6;if(t<N7$j)return 7;if(Number.MAX_SAFE_INTEGER!=null&&t>Number.MAX_SAFE_INTEGER)throw new RangeError("Could not encode varint");return 8}function encodeUint8Array$3(t,e,r=0){switch(encodingLength$h(t)){case 8:e[r++]=t&255|MSB$k,t/=128;case 7:e[r++]=t&255|MSB$k,t/=128;case 6:e[r++]=t&255|MSB$k,t/=128;case 5:e[r++]=t&255|MSB$k,t/=128;case 4:e[r++]=t&255|MSB$k,t>>>=7;case 3:e[r++]=t&255|MSB$k,t>>>=7;case 2:e[r++]=t&255|MSB$k,t>>>=7;case 1:{e[r++]=t&255,t>>>=7;break}default:throw new Error("unreachable")}return e}function encodeUint8ArrayList$3(t,e,r=0){switch(encodingLength$h(t)){case 8:e.set(r++,t&255|MSB$k),t/=128;case 7:e.set(r++,t&255|MSB$k),t/=128;case 6:e.set(r++,t&255|MSB$k),t/=128;case 5:e.set(r++,t&255|MSB$k),t/=128;case 4:e.set(r++,t&255|MSB$k),t>>>=7;case 3:e.set(r++,t&255|MSB$k),t>>>=7;case 2:e.set(r++,t&255|MSB$k),t>>>=7;case 1:{e.set(r++,t&255),t>>>=7;break}default:throw new Error("unreachable")}return e}function decodeUint8Array$3(t,e){let r=t[e],n=0;if(n+=r&REST$k,r<MSB$k||(r=t[e+1],n+=(r&REST$k)<<7,r<MSB$k)||(r=t[e+2],n+=(r&REST$k)<<14,r<MSB$k)||(r=t[e+3],n+=(r&REST$k)<<21,r<MSB$k)||(r=t[e+4],n+=(r&REST$k)*N4$j,r<MSB$k)||(r=t[e+5],n+=(r&REST$k)*N5$j,r<MSB$k)||(r=t[e+6],n+=(r&REST$k)*N6$j,r<MSB$k)||(r=t[e+7],n+=(r&REST$k)*N7$j,r<MSB$k))return n;throw new RangeError("Could not decode varint")}function decodeUint8ArrayList$3(t,e){let r=t.get(e),n=0;if(n+=r&REST$k,r<MSB$k||(r=t.get(e+1),n+=(r&REST$k)<<7,r<MSB$k)||(r=t.get(e+2),n+=(r&REST$k)<<14,r<MSB$k)||(r=t.get(e+3),n+=(r&REST$k)<<21,r<MSB$k)||(r=t.get(e+4),n+=(r&REST$k)*N4$j,r<MSB$k)||(r=t.get(e+5),n+=(r&REST$k)*N5$j,r<MSB$k)||(r=t.get(e+6),n+=(r&REST$k)*N6$j,r<MSB$k)||(r=t.get(e+7),n+=(r&REST$k)*N7$j,r<MSB$k))return n;throw new RangeError("Could not decode varint")}function encode$W(t,e,r=0){return e==null&&(e=allocUnsafe$a(encodingLength$h(t))),e instanceof Uint8Array?encodeUint8Array$3(t,e,r):encodeUint8ArrayList$3(t,e,r)}function decode$1e(t,e=0){return t instanceof Uint8Array?decodeUint8Array$3(t,e):decodeUint8ArrayList$3(t,e)}function concat$4(t,e){if(globalThis.Buffer!=null)return asUint8Array$4(globalThis.Buffer.concat(t,e));e==null&&(e=t.reduce((o,a)=>o+a.length,0));const r=allocUnsafe$a(e);let n=0;for(const o of t)r.set(o,n),n+=o.length;return asUint8Array$4(r)}function fromString$k(t,e="utf8"){const r=BASES$2[e];if(r==null)throw new Error(`Unsupported encoding "${e}"`);return(e==="utf8"||e==="utf-8")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?asUint8Array$4(globalThis.Buffer.from(t,"utf-8")):r.decoder.decode(`${r.prefix}${t}`)}const isV4$9=isIPv4,isV6$9=isIPv6,toBytes$9=function(t){let e=0;if(t=t.toString().trim(),isV4$9(t)){const r=new Uint8Array(e+4);return t.split(/\./g).forEach(n=>{r[e++]=parseInt(n,10)&255}),r}if(isV6$9(t)){const r=t.split(":",8);let n;for(n=0;n<r.length;n++){const a=isV4$9(r[n]);let c;a&&(c=toBytes$9(r[n]),r[n]=toString$o(c.slice(0,2),"base16")),c!=null&&++n<8&&r.splice(n,0,toString$o(c.slice(2,4),"base16"))}if(r[0]==="")for(;r.length<8;)r.unshift("0");else if(r[r.length-1]==="")for(;r.length<8;)r.push("0");else if(r.length<8){for(n=0;n<r.length&&r[n]!=="";n++);const a=[n,1];for(n=9-r.length;n>0;n--)a.push("0");r.splice.apply(r,a)}const o=new Uint8Array(e+16);for(n=0;n<r.length;n++){const a=parseInt(r[n],16);o[e++]=a>>8&255,o[e++]=a&255}return o}throw new Error("invalid ip address")},toString$n=function(t,e=0,r){e=~~e,r=r??t.length-e;const n=new DataView(t.buffer);if(r===4){const o=[];for(let a=0;a<r;a++)o.push(t[e+a]);return o.join(".")}if(r===16){const o=[];for(let a=0;a<r;a+=2)o.push(n.getUint16(e+a).toString(16));return o.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""},V$9=-1,names$9={},codes$c={},table$9=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,V$9,"ip6zone"],[43,8,"ipcidr"],[53,V$9,"dns",!0],[54,V$9,"dns4",!0],[55,V$9,"dns6",!0],[56,V$9,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc-direct"],[281,0,"webrtc"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,V$9,"unix",!1,!0],[421,V$9,"ipfs"],[421,V$9,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,V$9,"garlic64"],[448,0,"tls"],[449,V$9,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,V$9,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[777,V$9,"memory"]];table$9.forEach(t=>{const e=createProtocol$9(...t);codes$c[e.code]=e,names$9[e.name]=e});function createProtocol$9(t,e,r,n,o){return{code:t,size:e,name:r,resolvable:!!n,path:!!o}}getProtocol$9=function(t){if(typeof t=="number"){if(codes$c[t]!=null)return codes$c[t];throw new Error(`no protocol with code: ${t}`)}else if(typeof t=="string"){if(names$9[t]!=null)return names$9[t];throw new Error(`no protocol with name: ${t}`)}throw new Error(`invalid protocol id type: ${typeof t}`)},getProtocol$9("ip4"),getProtocol$9("ip6"),getProtocol$9("ipcidr");function convertToString$9(t,e){switch(getProtocol$9(t).code){case 4:case 41:return bytes2ip$9(e);case 42:return bytes2str$9(e);case 6:case 273:case 33:case 132:return bytes2port$9(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return bytes2str$9(e);case 421:return bytes2mh$9(e);case 444:return bytes2onion$9(e);case 445:return bytes2onion$9(e);case 466:return bytes2mb$9(e);default:return toString$o(e,"base16")}}function convertToBytes$9(t,e){switch(getProtocol$9(t).code){case 4:return ip2bytes$9(e);case 41:return ip2bytes$9(e);case 42:return str2bytes$9(e);case 6:case 273:case 33:case 132:return port2bytes$9(parseInt(e,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return str2bytes$9(e);case 421:return mh2bytes$9(e);case 444:return onion2bytes$9(e);case 445:return onion32bytes$9(e);case 466:return mb2bytes$9(e);default:return fromString$k(e,"base16")}}const decoders$9=Object.values(bases$a).map(t=>t.decoder),anybaseDecoder$9=function(){let t=decoders$9[0].or(decoders$9[1]);return decoders$9.slice(2).forEach(e=>t=t.or(e)),t}();function ip2bytes$9(t){if(!isIP(t))throw new Error("invalid ip address");return toBytes$9(t)}function bytes2ip$9(t){const e=toString$n(t,0,t.length);if(e==null)throw new Error("ipBuff is required");if(!isIP(e))throw new Error("invalid ip address");return e}function port2bytes$9(t){const e=new ArrayBuffer(2);return new DataView(e).setUint16(0,t),new Uint8Array(e)}function bytes2port$9(t){return new DataView(t.buffer).getUint16(t.byteOffset)}function str2bytes$9(t){const e=fromString$k(t),r=Uint8Array.from(encode$W(e.length));return concat$4([r,e],r.length+e.length)}function bytes2str$9(t){const e=decode$1e(t);if(t=t.slice(encodingLength$h(e)),t.length!==e)throw new Error("inconsistent lengths");return toString$o(t)}function mh2bytes$9(t){let e;t[0]==="Q"||t[0]==="1"?e=decode$1g(base58btc$d.decode(`z${t}`)).bytes:e=CID$c.parse(t).multihash.bytes;const r=Uint8Array.from(encode$W(e.length));return concat$4([r,e],r.length+e.length)}function mb2bytes$9(t){const e=anybaseDecoder$9.decode(t),r=Uint8Array.from(encode$W(e.length));return concat$4([r,e],r.length+e.length)}function bytes2mb$9(t){const e=decode$1e(t),r=t.slice(encodingLength$h(e));if(r.length!==e)throw new Error("inconsistent lengths");return"u"+toString$o(r,"base64url")}function bytes2mh$9(t){const e=decode$1e(t),r=t.slice(encodingLength$h(e));if(r.length!==e)throw new Error("inconsistent lengths");return toString$o(r,"base58btc")}function onion2bytes$9(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==16)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion address.`);const r=base32$m.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes$9(n);return concat$4([r,o],r.length+o.length)}function onion32bytes$9(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==56)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion3 address.`);const r=base32$m.decode(`b${e[0]}`),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes$9(n);return concat$4([r,o],r.length+o.length)}function bytes2onion$9(t){const e=t.slice(0,t.length-2),r=t.slice(t.length-2),n=toString$o(e,"base32"),o=bytes2port$9(r);return`${n}:${o}`}function stringToMultiaddrParts$2(t){t=cleanPath$9(t);const e=[],r=[];let n=null;const o=t.split("/").slice(1);if(o.length===1&&o[0]==="")return{bytes:new Uint8Array,string:"/",tuples:[],stringTuples:[],path:null};for(let a=0;a<o.length;a++){const c=o[a],u=getProtocol$9(c);if(u.size===0){e.push([u.code]),r.push([u.code]);continue}if(a++,a>=o.length)throw ParseError$9("invalid address: "+t);if(u.path===!0){n=cleanPath$9(o.slice(a).join("/")),e.push([u.code,convertToBytes$9(u.code,n)]),r.push([u.code,n]);break}const l=convertToBytes$9(u.code,o[a]);e.push([u.code,l]),r.push([u.code,convertToString$9(u.code,l)])}return{string:stringTuplesToString$9(r),bytes:tuplesToBytes$9(e),tuples:e,stringTuples:r,path:n}}function bytesToMultiaddrParts$2(t){const e=[],r=[];let n=null,o=0;for(;o<t.length;){const a=decode$1e(t,o),c=encodingLength$h(a),u=getProtocol$9(a),l=sizeForAddr$9(u,t.slice(o+c));if(l===0){e.push([a]),r.push([a]),o+=c;continue}const f=t.slice(o+c,o+c+l);if(o+=l+c,o>t.length)throw ParseError$9("Invalid address Uint8Array: "+toString$o(t,"base16"));e.push([a,f]);const p=convertToString$9(a,f);if(r.push([a,p]),u.path===!0){n=p;break}}return{bytes:Uint8Array.from(t),string:stringTuplesToString$9(r),tuples:e,stringTuples:r,path:n}}function stringTuplesToString$9(t){const e=[];return t.map(r=>{const n=getProtocol$9(r[0]);return e.push(n.name),r.length>1&&r[1]!=null&&e.push(r[1]),null}),cleanPath$9(e.join("/"))}function tuplesToBytes$9(t){return concat$4(t.map(e=>{const r=getProtocol$9(e[0]);let n=Uint8Array.from(encode$W(r.code));return e.length>1&&e[1]!=null&&(n=concat$4([n,e[1]])),n}))}function sizeForAddr$9(t,e){if(t.size>0)return t.size/8;if(t.size===0)return 0;{const r=decode$1e(e instanceof Uint8Array?e:Uint8Array.from(e));return r+encodingLength$h(r)}}function cleanPath$9(t){return"/"+t.trim().split("/").filter(e=>e).join("/")}function ParseError$9(t){return new Error("Error parsing address: "+t)}const inspect$a=Symbol.for("nodejs.util.inspect.custom"),symbol$e=Symbol.for("@multiformats/js-multiaddr/multiaddr"),DNS_CODES$9=[getProtocol$9("dns").code,getProtocol$9("dns4").code,getProtocol$9("dns6").code,getProtocol$9("dnsaddr").code];let Multiaddr$2=(it=class{constructor(e){N(this,"bytes");G(this,wt,void 0);G(this,dt,void 0);G(this,Kt,void 0);G(this,qt,void 0);N(this,Fr,!0);e==null&&(e="");let r;if(e instanceof Uint8Array)r=bytesToMultiaddrParts$2(e);else if(typeof e=="string"){if(e.length>0&&e.charAt(0)!=="/")throw new Error(`multiaddr "${e}" must start with a "/"`);r=stringToMultiaddrParts$2(e)}else if(isMultiaddr$9(e))r=bytesToMultiaddrParts$2(e.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr");this.bytes=r.bytes,W(this,wt,r.string),W(this,dt,r.tuples),W(this,Kt,r.stringTuples),W(this,qt,r.path)}toString(){return B(this,wt)}toJSON(){return this.toString()}toOptions(){let e,r,n,o,a="";const c=getProtocol$9("tcp"),u=getProtocol$9("udp"),l=getProtocol$9("ip4"),f=getProtocol$9("ip6"),p=getProtocol$9("dns6"),g=getProtocol$9("ip6zone");for(const[$,_]of this.stringTuples())$===g.code&&(a=`%${_??""}`),DNS_CODES$9.includes($)&&(r=c.name,o=443,n=`${_??""}${a}`,e=$===p.code?6:4),($===c.code||$===u.code)&&(r=getProtocol$9($).name,o=parseInt(_??"")),($===l.code||$===f.code)&&(r=getProtocol$9($).name,n=`${_??""}${a}`,e=$===f.code?6:4);if(e==null||r==null||n==null||o==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:e,host:n,transport:r,port:o}}protos(){return B(this,dt).map(([e])=>Object.assign({},getProtocol$9(e)))}protoCodes(){return B(this,dt).map(([e])=>e)}protoNames(){return B(this,dt).map(([e])=>getProtocol$9(e).name)}tuples(){return B(this,dt)}stringTuples(){return B(this,Kt)}encapsulate(e){return e=new it(e),new it(this.toString()+e.toString())}decapsulate(e){const r=e.toString(),n=this.toString(),o=n.lastIndexOf(r);if(o<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${e.toString()}`);return new it(n.slice(0,o))}decapsulateCode(e){const r=this.tuples();for(let n=r.length-1;n>=0;n--)if(r[n][0]===e)return new it(tuplesToBytes$9(r.slice(0,n)));return this}getPeerId(){try{let e=[];this.stringTuples().forEach(([n,o])=>{n===names$9.p2p.code&&e.push([n,o]),n===names$9["p2p-circuit"].code&&(e=[])});const r=e.pop();if(r?.[1]!=null){const n=r[1];return n[0]==="Q"||n[0]==="1"?toString$o(base58btc$d.decode(`z${n}`),"base58btc"):toString$o(CID$c.parse(n).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){return B(this,qt)}equals(e){return equals$q(this.bytes,e.bytes)}async resolve(e){const r=this.protos().find(o=>o.resolvable);if(r==null)return[this];const n=resolvers$9.get(r.name);if(n==null)throw new CodeError$2(`no available resolver for ${r.name}`,"ERR_NO_AVAILABLE_RESOLVER");return(await n(this,e)).map(o=>new it(o))}nodeAddress(){const e=this.toOptions();if(e.transport!=="tcp"&&e.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${e.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:e.family,address:e.host,port:e.port}}isThinWaistAddress(e){const r=(e??this).protos();return!(r.length!==2||r[0].code!==4&&r[0].code!==41||r[1].code!==6&&r[1].code!==273)}[(Fr=symbol$e,inspect$a)](){return`Multiaddr(${B(this,wt)})`}},wt=new WeakMap,dt=new WeakMap,Kt=new WeakMap,qt=new WeakMap,it);const resolvers$9=new Map;isName$1=function(t){return isMultiaddr$9(t)?t.protos().some(e=>e.resolvable):!1};function isMultiaddr$9(t){return!!t?.[symbol$e]}multiaddr$9=function(t){return new Multiaddr$2(t)};function extractSNI(t){let e;try{e=getProtocol$9("sni").code}catch{return null}for(const[r,n]of t)if(r===e&&n!==void 0)return n;return null}function hasTLS(t){return t.some(([e,r])=>e===getProtocol$9("tls").code)}function interpretNext(t,e,r){const n=interpreters[getProtocol$9(t).name];if(n===void 0)throw new Error(`Can't interpret protocol ${getProtocol$9(t).name}`);const o=n(e,r);return t===getProtocol$9("ip6").code?`[${o}]`:o}const interpreters={ip4:(t,e)=>t,ip6:(t,e)=>e.length===0?t:`[${t}]`,tcp:(t,e)=>{const r=e.pop();if(r===void 0)throw new Error("Unexpected end of multiaddr");return`tcp://${interpretNext(r[0],r[1]??"",e)}:${t}`},udp:(t,e)=>{const r=e.pop();if(r===void 0)throw new Error("Unexpected end of multiaddr");return`udp://${interpretNext(r[0],r[1]??"",e)}:${t}`},dnsaddr:(t,e)=>t,dns4:(t,e)=>t,dns6:(t,e)=>t,dns:(t,e)=>t,ipfs:(t,e)=>{const r=e.pop();if(r===void 0)throw new Error("Unexpected end of multiaddr");return`${interpretNext(r[0],r[1]??"",e)}/ipfs/${t}`},p2p:(t,e)=>{const r=e.pop();if(r===void 0)throw new Error("Unexpected end of multiaddr");return`${interpretNext(r[0],r[1]??"",e)}/p2p/${t}`},http:(t,e)=>{const r=hasTLS(e),n=extractSNI(e);if(r&&n!==null)return`https://${n}`;const o=r?"https://":"http://",a=e.pop();if(a===void 0)throw new Error("Unexpected end of multiaddr");let c=interpretNext(a[0],a[1]??"",e);return c=c.replace("tcp://",""),`${o}${c}`},tls:(t,e)=>{const r=e.pop();if(r===void 0)throw new Error("Unexpected end of multiaddr");return interpretNext(r[0],r[1]??"",e)},sni:(t,e)=>{const r=e.pop();if(r===void 0)throw new Error("Unexpected end of multiaddr");return interpretNext(r[0],r[1]??"",e)},https:(t,e)=>{const r=e.pop();if(r===void 0)throw new Error("Unexpected end of multiaddr");let n=interpretNext(r[0],r[1]??"",e);return n=n.replace("tcp://",""),`https://${n}`},ws:(t,e)=>{const r=hasTLS(e),n=extractSNI(e);if(r&&n!==null)return`wss://${n}`;const o=r?"wss://":"ws://",a=e.pop();if(a===void 0)throw new Error("Unexpected end of multiaddr");let c=interpretNext(a[0],a[1]??"",e);return c=c.replace("tcp://",""),`${o}${c}`},wss:(t,e)=>{const r=e.pop();if(r===void 0)throw new Error("Unexpected end of multiaddr");let n=interpretNext(r[0],r[1]??"",e);return n=n.replace("tcp://",""),`wss://${n}`},"p2p-websocket-star":(t,e)=>{const r=e.pop();if(r===void 0)throw new Error("Unexpected end of multiaddr");return`${interpretNext(r[0],r[1]??"",e)}/p2p-websocket-star`},"p2p-webrtc-star":(t,e)=>{const r=e.pop();if(r===void 0)throw new Error("Unexpected end of multiaddr");return`${interpretNext(r[0],r[1]??"",e)}/p2p-webrtc-star`},"p2p-webrtc-direct":(t,e)=>{const r=e.pop();if(r===void 0)throw new Error("Unexpected end of multiaddr");return`${interpretNext(r[0],r[1]??"",e)}/p2p-webrtc-direct`}};function multiaddrToUri(t,e){const r=multiaddr$9(t).stringTuples(),n=r.pop();if(n===void 0)throw new Error("Unexpected end of multiaddr");const o=getProtocol$9(n[0]),a=interpreters[o.name];if(a==null)throw new Error(`No interpreter found for ${o.name}`);let c=a(n[1]??"",r);return e?.assumeHttp!==!1&&n[0]===getProtocol$9("tcp").code&&(c=c.replace("tcp://","http://"),(n[1]==="443"||n[1]==="80")&&(n[1]==="443"&&(c=c.replace("http://","https://")),c=c.substring(0,c.lastIndexOf(":")))),c}function arrayShuffle(t){if(!Array.isArray(t))throw new TypeError(`Expected an array, got ${typeof t}`);t=[...t];for(let e=t.length-1;e>0;e--){const r=Math.floor(Math.random()*(e+1));[t[e],t[r]]=[t[r],t[e]]}return t}const log$1m=logger$3("ipfs:preload"),Queue$2=PQueue$1.default?PQueue$1.default:PQueue$1,httpQueue=new Queue$2({concurrency:4});function preload(t,e={}){return log$1m(t),httpQueue.add(async()=>{const r=(await HTTP$4.post(t,{signal:e.signal})).body.getReader();try{for(;;){const{done:n}=await r.read();if(n)return}}finally{r.releaseLock()}})}const log$1l=logger$3("ipfs:preload");function createPreloader(t={}){if(t.enabled=!!t.enabled,t.addresses=t.addresses||[],t.cache=t.cache||1e3,!t.enabled||!t.addresses.length)return log$1l("preload disabled"),Object.assign(()=>{},{start:()=>{},stop:()=>{}});let e=!0,r=[];const n=t.addresses.map(c=>multiaddrToUri(c)),o=cache$l(t.cache),a=async c=>{try{if(e)throw new Error(`preload ${c} but preloader is not started`);const u=c.toString();if(o.has(u))return;o.set(u,!0);const l=arrayShuffle(n);let f=!1;const p=Date.now();for(const g of l){if(e)throw new Error(`preload aborted for ${u}`);let $;try{$=new AbortController,r=r.concat($),await preload(`${g}/api/v0/refs?r=true&arg=${encodeURIComponent(u)}`,{signal:$.signal}),f=!0}catch(_){_.type!=="aborted"&&log$1l.error(_)}finally{r=r.filter(_=>_!==$)}if(f)break}log$1l(`${f?"":"un"}successfully preloaded ${u} in ${Date.now()-p}ms`)}catch(u){log$1l.error(u)}};return a.start=()=>{e=!1},a.stop=()=>{e=!0,log$1l(`aborting ${r.length} pending preload request(s)`),r.forEach(c=>c.abort()),r=[]},a}const log$1k=logger$3("ipfs:mfs-preload");function createMfsPreloader({preload:t,files:e,options:r={}}){if(r.interval=r.interval||30*1e3,!r.enabled){log$1k("MFS preload disabled");const c=async()=>{};return{start:c,stop:c}}let n="",o;const a=async()=>{try{const c=await e.stat("/"),u=c.cid.toString();n!==u&&(log$1k(`preloading updated MFS root ${n} -> ${c.cid}`),await t(c.cid),n=u)}catch(c){log$1k.error("failed to preload MFS root",c)}finally{o=setTimeout(a,r.interval)}};return{async start(){const c=await e.stat("/");n=c.cid.toString(),log$1k(`monitoring MFS root ${c.cid}`),o=setTimeout(a,r.interval)},stop(){clearTimeout(o)}}}let TimeoutError$1=class extends Error{constructor(t){super(t),this.name="TimeoutError"}},AbortError$8=class extends Error{constructor(t){super(),this.name="AbortError",this.message=t}};const getDOMException$1=t=>globalThis.DOMException===void 0?new AbortError$8(t):new DOMException(t),getAbortedReason$1=t=>{const e=t.reason===void 0?getDOMException$1("This operation was aborted."):t.reason;return e instanceof Error?e:getDOMException$1(e)};function pTimeout$1(t,e){const{milliseconds:r,fallback:n,message:o,customTimers:a={setTimeout,clearTimeout}}=e;let c;const u=new Promise((l,f)=>{if(typeof r!="number"||Math.sign(r)!==1)throw new TypeError(`Expected \`milliseconds\` to be a positive number, got \`${r}\``);if(e.signal){const{signal:g}=e;g.aborted&&f(getAbortedReason$1(g)),g.addEventListener("abort",()=>{f(getAbortedReason$1(g))})}if(r===Number.POSITIVE_INFINITY){t.then(l,f);return}const p=new TimeoutError$1;c=a.setTimeout.call(void 0,()=>{if(n){try{l(n())}catch(g){f(g)}return}typeof t.cancel=="function"&&t.cancel(),o===!1?l():o instanceof Error?f(o):(p.message=o??`Promise timed out after ${r} milliseconds`,f(p))},r),(async()=>{try{l(await t)}catch(g){f(g)}})()}).finally(()=>{u.clear()});return u.clear=()=>{a.clearTimeout.call(void 0,c),c=void 0},u}function lowerBound(t,e,r){let n=0,o=t.length;for(;o>0;){const a=Math.trunc(o/2);let c=n+a;r(t[c],e)<=0?(n=++c,o-=a+1):o=a}return n}class PriorityQueue{constructor(){G(this,rt,[])}enqueue(e,r){r={priority:0,...r};const n={priority:r.priority,run:e};if(this.size&&B(this,rt)[this.size-1].priority>=r.priority){B(this,rt).push(n);return}const o=lowerBound(B(this,rt),n,(a,c)=>c.priority-a.priority);B(this,rt).splice(o,0,n)}dequeue(){return B(this,rt).shift()?.run}filter(e){return B(this,rt).filter(r=>r.priority===e.priority).map(r=>r.run)}get size(){return B(this,rt).length}}rt=new WeakMap;class PQueue extends EventEmitter$3{constructor(r){super();G(this,sr);G(this,ir);G(this,ar);G(this,cr);G(this,ur);G(this,At);G(this,Qt);G(this,Zt);G(this,Rt);G(this,lr);G(this,It);G(this,_t,void 0);G(this,vt,void 0);G(this,ht,0);G(this,Gt,void 0);G(this,St,void 0);G(this,Wt,0);G(this,et,void 0);G(this,Ct,void 0);G(this,Je,void 0);G(this,Xt,void 0);G(this,tt,0);G(this,Tt,void 0);G(this,at,void 0);G(this,Yt,void 0);N(this,"timeout");if(r={carryoverConcurrencyCount:!1,intervalCap:Number.POSITIVE_INFINITY,interval:0,concurrency:Number.POSITIVE_INFINITY,autoStart:!0,queueClass:PriorityQueue,...r},!(typeof r.intervalCap=="number"&&r.intervalCap>=1))throw new TypeError(`Expected \`intervalCap\` to be a number from 1 and up, got \`${r.intervalCap?.toString()??""}\` (${typeof r.intervalCap})`);if(r.interval===void 0||!(Number.isFinite(r.interval)&&r.interval>=0))throw new TypeError(`Expected \`interval\` to be a finite number >= 0, got \`${r.interval?.toString()??""}\` (${typeof r.interval})`);W(this,_t,r.carryoverConcurrencyCount),W(this,vt,r.intervalCap===Number.POSITIVE_INFINITY||r.interval===0),W(this,Gt,r.intervalCap),W(this,St,r.interval),W(this,Je,new r.queueClass),W(this,Xt,r.queueClass),this.concurrency=r.concurrency,this.timeout=r.timeout,W(this,Yt,r.throwOnTimeout===!0),W(this,at,r.autoStart===!1)}get concurrency(){return B(this,Tt)}set concurrency(r){if(!(typeof r=="number"&&r>=1))throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${r}\` (${typeof r})`);W(this,Tt,r),pe(this,Rt,pr).call(this)}async add(r,n={}){return n={timeout:this.timeout,throwOnTimeout:B(this,Yt),...n},new Promise((o,a)=>{B(this,Je).enqueue(async()=>{Ot(this,tt)._++,Ot(this,ht)._++;try{n.signal?.throwIfAborted();let c=r({signal:n.signal});n.timeout&&(c=pTimeout$1(Promise.resolve(c),{milliseconds:n.timeout})),n.signal&&(c=Promise.race([c,pe(this,lr,kr).call(this,n.signal)]));const u=await c;o(u),this.emit("completed",u)}catch(c){if(c instanceof TimeoutError$1&&!n.throwOnTimeout){o();return}a(c),this.emit("error",c)}finally{pe(this,ar,Rr).call(this)}},n),this.emit("add"),pe(this,At,hr).call(this)})}async addAll(r,n){return Promise.all(r.map(async o=>this.add(o,n)))}start(){return B(this,at)?(W(this,at,!1),pe(this,Rt,pr).call(this),this):this}pause(){W(this,at,!0)}clear(){W(this,Je,new(B(this,Xt)))}async onEmpty(){B(this,Je).size!==0&&await pe(this,It,fr).call(this,"empty")}async onSizeLessThan(r){B(this,Je).size<r||await pe(this,It,fr).call(this,"next",()=>B(this,Je).size<r)}async onIdle(){B(this,tt)===0&&B(this,Je).size===0||await pe(this,It,fr).call(this,"idle")}get size(){return B(this,Je).size}sizeBy(r){return B(this,Je).filter(r).length}get pending(){return B(this,tt)}get isPaused(){return B(this,at)}}_t=new WeakMap,vt=new WeakMap,ht=new WeakMap,Gt=new WeakMap,St=new WeakMap,Wt=new WeakMap,et=new WeakMap,Ct=new WeakMap,Je=new WeakMap,Xt=new WeakMap,tt=new WeakMap,Tt=new WeakMap,at=new WeakMap,Yt=new WeakMap,sr=new WeakSet,Tr=function(){return B(this,vt)||B(this,ht)<B(this,Gt)},ir=new WeakSet,Ar=function(){return B(this,tt)<B(this,Tt)},ar=new WeakSet,Rr=function(){Ot(this,tt)._--,pe(this,At,hr).call(this),this.emit("next")},cr=new WeakSet,Ir=function(){pe(this,Zt,Dr).call(this),pe(this,Qt,mr).call(this),W(this,Ct,void 0)},ur=new WeakSet,Pr=function(){const r=Date.now();if(B(this,et)===void 0){const n=B(this,Wt)-r;if(n<0)W(this,ht,B(this,_t)?B(this,tt):0);else return B(this,Ct)===void 0&&W(this,Ct,setTimeout(()=>{pe(this,cr,Ir).call(this)},n)),!0}return!1},At=new WeakSet,hr=function(){if(B(this,Je).size===0)return B(this,et)&&clearInterval(B(this,et)),W(this,et,void 0),this.emit("empty"),B(this,tt)===0&&this.emit("idle"),!1;if(!B(this,at)){const r=!B(this,ur,Pr);if(B(this,sr,Tr)&&B(this,ir,Ar)){const n=B(this,Je).dequeue();return n?(this.emit("active"),n(),r&&pe(this,Qt,mr).call(this),!0):!1}}return!1},Qt=new WeakSet,mr=function(){B(this,vt)||B(this,et)!==void 0||(W(this,et,setInterval(()=>{pe(this,Zt,Dr).call(this)},B(this,St))),W(this,Wt,Date.now()+B(this,St)))},Zt=new WeakSet,Dr=function(){B(this,ht)===0&&B(this,tt)===0&&B(this,et)&&(clearInterval(B(this,et)),W(this,et,void 0)),W(this,ht,B(this,_t)?B(this,tt):0),pe(this,Rt,pr).call(this)},Rt=new WeakSet,pr=function(){for(;pe(this,At,hr).call(this););},lr=new WeakSet,kr=async function(r){return new Promise((n,o)=>{r.addEventListener("abort",()=>{o(r.reason)},{once:!0})})},It=new WeakSet,fr=async function(r,n){return new Promise(o=>{const a=()=>{n&&!n()||(this.off(r,a),o())};this.on(r,a)})};const events={},observable=t=>{t.addEventListener("message",e=>{observable.dispatchEvent("message",t,e)}),t.port!=null&&t.port.addEventListener("message",e=>{observable.dispatchEvent("message",t,e)})};observable.addEventListener=(t,e)=>{events[t]==null&&(events[t]=[]),events[t].push(e)},observable.removeEventListener=(t,e)=>{events[t]!=null&&(events[t]=events[t].filter(r=>r===e))},observable.dispatchEvent=function(t,e,r){events[t]!=null&&events[t].forEach(n=>n(e,r))};const WORKER_REQUEST_READ_LOCK="lock:worker:request-read",WORKER_RELEASE_READ_LOCK="lock:worker:release-read",MASTER_GRANT_READ_LOCK="lock:master:grant-read",WORKER_REQUEST_WRITE_LOCK="lock:worker:request-write",WORKER_RELEASE_WRITE_LOCK="lock:worker:release-write",MASTER_GRANT_WRITE_LOCK="lock:master:grant-write",nanoid=(t=21)=>Math.random().toString().substring(2),handleWorkerLockRequest=(t,e,r,n,o)=>(a,c)=>{if(c.data.type!==r)return;const u={type:c.data.type,name:c.data.name,identifier:c.data.identifier};t.dispatchEvent(new MessageEvent(e,{data:{name:u.name,handler:async()=>{a.postMessage({type:o,name:u.name,identifier:u.identifier}),await new Promise(l=>{const f=p=>{if(p==null||p.data==null)return;const g={type:p.data.type,name:p.data.name,identifier:p.data.identifier};g.type===n&&g.identifier===u.identifier&&(a.removeEventListener("message",f),l())};a.addEventListener("message",f)})}}}))},makeWorkerLockRequest=(t,e,r,n)=>async()=>{const o=nanoid();return globalThis.postMessage({type:e,identifier:o,name:t}),new Promise(a=>{const c=u=>{if(u==null||u.data==null)return;const l={type:u.data.type,identifier:u.data.identifier};l.type===r&&l.identifier===o&&(globalThis.removeEventListener("message",c),a(()=>{globalThis.postMessage({type:n,identifier:o,name:t})}))};globalThis.addEventListener("message",c)})},defaultOptions$j={singleProcess:!1},impl=t=>{if(t=Object.assign({},defaultOptions$j,t),!!globalThis.document||t.singleProcess){const e=new EventTarget;return observable.addEventListener("message",handleWorkerLockRequest(e,"requestReadLock",WORKER_REQUEST_READ_LOCK,WORKER_RELEASE_READ_LOCK,MASTER_GRANT_READ_LOCK)),observable.addEventListener("message",handleWorkerLockRequest(e,"requestWriteLock",WORKER_REQUEST_WRITE_LOCK,WORKER_RELEASE_WRITE_LOCK,MASTER_GRANT_WRITE_LOCK)),e}return{isWorker:!0,readLock:e=>makeWorkerLockRequest(e,WORKER_REQUEST_READ_LOCK,MASTER_GRANT_READ_LOCK,WORKER_RELEASE_READ_LOCK),writeLock:e=>makeWorkerLockRequest(e,WORKER_REQUEST_WRITE_LOCK,MASTER_GRANT_WRITE_LOCK,WORKER_RELEASE_WRITE_LOCK)}},mutexes={};let implementation;async function createReleaseable(t,e){let r;const n=new Promise(o=>{r=o});return t.add(async()=>pTimeout$1((async()=>{await new Promise(o=>{r(()=>{o()})})})(),{milliseconds:e.timeout})),n}const createMutex=(t,e)=>{if(implementation.isWorker===!0)return{readLock:implementation.readLock(t,e),writeLock:implementation.writeLock(t,e)};const r=new PQueue({concurrency:1});let n;return{async readLock(){if(n!=null)return createReleaseable(n,e);n=new PQueue({concurrency:e.concurrency,autoStart:!1});const o=n,a=createReleaseable(n,e);return r.add(async()=>{o.start(),await o.onIdle().then(()=>{n===o&&(n=null)})}),a},async writeLock(){return n=null,createReleaseable(r,e)}}},defaultOptions$i={name:"lock",concurrency:1/0,timeout:846e5,singleProcess:!1};function createMortice(t){const e=Object.assign({},defaultOptions$i,t);return implementation==null&&(implementation=impl(e),implementation.isWorker!==!0&&(implementation.addEventListener("requestReadLock",r=>{mutexes[r.data.name]!=null&&mutexes[r.data.name].readLock().then(async n=>r.data.handler().finally(()=>{n()}))}),implementation.addEventListener("requestWriteLock",async r=>{mutexes[r.data.name]!=null&&mutexes[r.data.name].writeLock().then(async n=>r.data.handler().finally(()=>{n()}))}))),mutexes[e.name]==null&&(mutexes[e.name]=createMutex(e.name,e)),mutexes[e.name]}let lock$1;function createLock(t=!1){if(lock$1)return lock$1;const e=createMortice({singleProcess:t});return lock$1={readLock:r=>async(...n)=>{const o=await e.readLock();try{return await r.apply(null,n)}finally{o()}},writeLock:r=>async(...n)=>{const o=await e.writeLock();try{return await r.apply(null,n)}finally{o()}}},lock$1}const log$1j=logger$3("ipfs:mfs:utils:with-mfs-root");async function loadMfsRoot(t,e){if(e&&e.signal&&e.signal.aborted)throw errcode(new Error("Request aborted"),"ERR_ABORTED",{name:"Aborted"});await t.repo.datastore.open();let r;try{const n=await t.repo.datastore.get(MFS_ROOT_KEY$2);r=CID$k.decode(n)}catch(n){if(n.code!=="ERR_NOT_FOUND")throw n;log$1j("Creating new MFS root");const o=encode$1L({Data:new UnixFS({type:"directory"}).marshal(),Links:[]}),a=await sha256$c.digest(o);if(r=CID$k.createV0(a),await t.repo.blocks.put(r,o),e&&e.signal&&e.signal.aborted)throw errcode(new Error("Request aborted"),"ERR_ABORTED",{name:"Aborted"});await t.repo.datastore.put(MFS_ROOT_KEY$2,r.bytes)}return log$1j(`Loaded MFS root /ipfs/${r}`),r}function toPathComponents(t=""){return(t.trim().match(/([^\\^/]|\\\/)+/g)||[]).filter(Boolean)}const IPFS_PREFIX="ipfs",toMfsPath=async(t,e,r)=>{const n=await loadMfsRoot(t,r);let o={entryType:"file"},a="";if(CID$k.asCID(e)?a=`/ipfs/${e}`:a=e.toString(),a=a.trim(),a=a.replace(/(\/\/+)/g,"/"),a.endsWith("/")&&a.length>1&&(a=a.substring(0,a.length-1)),!a)throw errcode(new Error("paths must not be empty"),"ERR_NO_PATH");if(a.substring(0,1)!=="/")throw errcode(new Error("paths must start with a leading slash"),"ERR_INVALID_PATH");a.substring(a.length-1)==="/"&&(a=a.substring(0,a.length-1));const c=toPathComponents(a);if(c[0]===IPFS_PREFIX){let l;c.length===2?l=`/${c.join("/")}`:l=`/${c.slice(0,c.length-1).join("/")}`,o={type:"ipfs",depth:c.length-2,entryType:"file",mfsPath:`/${c.join("/")}`,mfsDirectory:l,parts:c,path:`/${c.join("/")}`,name:c[c.length-1]}}else{const l=`/${IPFS_PREFIX}/${n}${c.length?"/"+c.join("/"):""}`,f=`/${IPFS_PREFIX}/${n}/${c.slice(0,c.length-1).join("/")}`;o={type:"mfs",depth:c.length,entryType:"file",mfsDirectory:f,mfsPath:l,parts:c,path:`/${c.join("/")}`,name:c[c.length-1]}}const u=o.type==="mfs"?o.mfsPath:o.path;try{const l=await exporter(u,t.repo.blocks,r);o.cid=l.cid,o.mfsPath=`/ipfs/${l.path}`,o.entryType=l.type,o.content=l.content,(o.entryType==="file"||o.entryType==="directory")&&(l.type==="file"||l.type==="directory")&&(o.unixfs=l.unixfs)}catch(l){if(l.code!=="ERR_NOT_FOUND")throw l}return o.exists=!!o.cid,o},mergeOptions$c=mergeOptions$h.bind({ignoreUndefined:!0}),log$1i=logger$3("ipfs:mfs:stat"),defaultOptions$h={withLocal:!1};function createStat$7(t){async function e(r,n={}){n=mergeOptions$c(defaultOptions$h,n),log$1i(`Fetching stats for ${r}`);const{type:o,cid:a,mfsPath:c}=await toMfsPath(t,r,n),u=o==="ipfs"&&a?a:c;let l;try{l=await exporter(u,t.repo.blocks)}catch(f){throw f.code==="ERR_NOT_FOUND"?errcode(new Error(`${r} does not exist`),"ERR_NOT_FOUND"):f}if(!statters[l.type])throw new Error(`Cannot stat codec ${l.cid.code}`);return statters[l.type](l)}return withTimeoutOption(e)}const statters={raw:t=>({cid:t.cid,size:t.node.length,cumulativeSize:t.node.length,blocks:0,type:"file",local:void 0,sizeLocal:void 0,withLocality:!1}),file:t=>{const e={cid:t.cid,type:"file",size:t.unixfs.fileSize(),cumulativeSize:encode$1L(t.node).length+(t.node.Links||[]).reduce((r,n)=>r+(n.Tsize||0),0),blocks:t.unixfs.blockSizes.length,local:void 0,sizeLocal:void 0,withLocality:!1,mode:t.unixfs.mode};return t.unixfs.mtime&&(e.mtime=t.unixfs.mtime),e},directory:t=>{const e={cid:t.cid,type:"directory",size:0,cumulativeSize:encode$1L(t.node).length+(t.node.Links||[]).reduce((r,n)=>r+(n.Tsize||0),0),blocks:t.node.Links.length,local:void 0,sizeLocal:void 0,withLocality:!1,mode:t.unixfs.mode};return t.unixfs.mtime&&(e.mtime=t.unixfs.mtime),e},object:t=>({cid:t.cid,size:t.node.length,cumulativeSize:t.node.length,type:"file",blocks:0,local:void 0,sizeLocal:void 0,withLocality:!1}),identity:t=>({cid:t.cid,size:t.node.length,cumulativeSize:t.node.length,blocks:0,type:"file",local:void 0,sizeLocal:void 0,withLocality:!1})},log$1h=logger$3("ipfs:mfs:utils:to-trail");async function toTrail(t,e){log$1h(`Creating trail for path ${e}`);const r=[];for await(const n of walkPath(e,t.repo.blocks))r.push({name:n.name,cid:n.cid,size:n.size,type:n.type});return r}const persist=async(t,e,r)=>{r.codec||(r.codec=dagPB),r.hasher||(r.hasher=sha256$c),r.cidVersion===void 0&&(r.cidVersion=1),r.codec===dagPB&&r.hasher!==sha256$c&&(r.cidVersion=1);const n=await r.hasher.digest(t),o=CID$k.create(r.cidVersion,r.codec.code,n);return r.onlyHash||await e.put(o,t,{signal:r.signal}),o},hamtHashCode=murmur3128.code,hamtBucketBits=8;async function hamtHashFn(t){return(await murmur3128.encode(t)).subarray(0,8).reverse()}class Dir{constructor(e,r){this.options=r||{},this.root=e.root,this.dir=e.dir,this.path=e.path,this.dirty=e.dirty,this.flat=e.flat,this.parent=e.parent,this.parentKey=e.parentKey,this.unixfs=e.unixfs,this.mode=e.mode,this.mtime=e.mtime,this.cid=void 0,this.size=void 0}async put(e,r){}get(e){return Promise.resolve(this)}async*eachChildSeries(){}async*flush(e){}}class DirSharded extends Dir{constructor(e,r){super(e,r),this._bucket=createHAMT({hashFn:hamtHashFn,bits:hamtBucketBits})}async put(e,r){await this._bucket.put(e,r)}get(e){return this._bucket.get(e)}childCount(){return this._bucket.leafCount()}directChildrenCount(){return this._bucket.childrenCount()}onlyChild(){return this._bucket.onlyChild()}async*eachChildSeries(){for await(const{key:e,value:r}of this._bucket.eachLeafSeries())yield{key:e,child:r}}async*flush(e){yield*flush(this._bucket,e,this,this.options)}}async function*flush(t,e,r,n){const o=t._children,a=[];let c=0;for(let $=0;$<o.length;$++){const _=o.get($);if(!_)continue;const b=$.toString(16).toUpperCase().padStart(2,"0");if(_ instanceof Bucket){let D;for await(const v of await flush(_,e,null,n))D=v;if(!D)throw new Error("Could not flush sharded directory, no subshard found");a.push({Name:b,Tsize:D.size,Hash:D.cid}),c+=D.size}else if(typeof _.value.flush=="function"){const D=_.value;let v;for await(const I of D.flush(e))v=I,yield v;const S=b+_.key;a.push({Name:S,Tsize:v.size,Hash:v.cid}),c+=v.size}else{const D=_.value;if(!D.cid)continue;const v=b+_.key,S=D.size;a.push({Name:v,Tsize:S,Hash:D.cid}),c+=S}}const u=Uint8Array.from(o.bitField().reverse()),l={Data:new UnixFS({type:"hamt-sharded-directory",data:u,fanout:t.tableSize(),hashType:hamtHashCode,mtime:r&&r.mtime,mode:r&&r.mode}).marshal(),Links:a},f=encode$1L(prepare(l)),p=await persist(f,e,n),g=f.length+c;yield{cid:p,node:l,size:g}}const log$1g=logger$3("ipfs:mfs:core:utils:hamt-utils"),updateHamtDirectory=async(t,e,r,n)=>{if(!n.parent.Data)throw new Error("Could not update HAMT directory because parent had no data");const o=Uint8Array.from(r._children.bitField().reverse()),a=UnixFS.unmarshal(n.parent.Data),c=new UnixFS({type:"hamt-sharded-directory",data:o,fanout:r.tableSize(),hashType:hamtHashCode,mode:a.mode,mtime:a.mtime}),u=await t.hashers.getHasher(n.hashAlg),l={Data:c.marshal(),Links:e.sort(($,_)=>($.Name||"").localeCompare(_.Name||""))},f=encode$1L(l),p=await u.digest(f),g=CID$k.create(n.cidVersion,code$i,p);return n.flush&&await t.repo.blocks.put(g,f),{node:l,cid:g,size:e.reduce(($,_)=>$+(_.Tsize||0),f.length)}},recreateHamtLevel=async(t,e,r,n,o)=>{const a=new Bucket({hash:r._options.hash,bits:r._options.bits},n,o);return n._putObjectAt(o,a),await addLinksToHamtBucket(t,e,a,r),a},recreateInitialHamtLevel=async t=>{const e=createHAMT({hashFn:hamtHashFn,bits:hamtBucketBits});return await Promise.all(t.map(async r=>{const n=r.Name||"";if(n.length===2){const o=parseInt(n,16),a=new Bucket({hash:e._options.hash,bits:e._options.bits},e,o);return e._putObjectAt(o,a),Promise.resolve()}return e.put(n.substring(2),{size:r.Tsize,cid:r.Hash})})),e},addLinksToHamtBucket=async(t,e,r,n)=>{await Promise.all(e.map(async o=>{const a=o.Name||"";if(a.length===2){log$1g("Populating sub bucket",a);const c=parseInt(a,16),u=await t.repo.blocks.get(o.Hash),l=decode$2k(u),f=new Bucket({hash:n._options.hash,bits:n._options.bits},r,c);return r._putObjectAt(c,f),await addLinksToHamtBucket(t,l.Links,f,n),Promise.resolve()}return n.put(a.substring(2),{size:o.Tsize,cid:o.Hash})}))},toPrefix=t=>t.toString(16).toUpperCase().padStart(2,"0").substring(0,2),generatePath=async(t,e,r)=>{const n=await recreateInitialHamtLevel(r.Links),o=await n._findNewBucketAndPos(e),a=[{bucket:o.bucket,prefix:toPrefix(o.pos)}];let c=o.bucket;for(;c!==n;)a.push({bucket:c,prefix:toPrefix(c._posAtParent)}),c=c._parent;a.reverse(),a[0].node=r;for(let u=0;u<a.length;u++){const l=a[u];if(!l.node)throw new Error("Could not generate HAMT path");const f=l.node.Links.filter(_=>(_.Name||"").substring(0,2)===l.prefix).pop();if(!f){log$1g(`Link ${l.prefix}${e} will be added`);continue}if(f.Name===`${l.prefix}${e}`){log$1g(`Link ${l.prefix}${e} will be replaced`);continue}log$1g(`Found subshard ${l.prefix}`);const p=await t.repo.blocks.get(f.Hash),g=decode$2k(p);if(!a[u+1]){log$1g(`Loaded new subshard ${l.prefix}`),await recreateHamtLevel(t,g.Links,n,l.bucket,parseInt(l.prefix,16));const _=await n._findNewBucketAndPos(e);a.push({bucket:_.bucket,prefix:toPrefix(_.pos),node:g});continue}const $=a[u+1];await addLinksToHamtBucket(t,g.Links,$.bucket,n),$.node=g}return await n.put(e,!0),a.reverse(),{rootBucket:n,path:a}},createShard=async(t,e,r={})=>{const n=new DirSharded({root:!0,dir:!0,parent:void 0,parentKey:void 0,path:"",dirty:!0,flat:!1,mtime:r.mtime,mode:r.mode},r);for(let a=0;a<e.length;a++)await n._bucket.put(e[a].name,{size:e[a].size,cid:e[a].cid});const o=await last(n.flush(t.repo.blocks));if(!o)throw new Error("Flushing shard yielded no result");return o},log$1f=logger$3("ipfs:mfs:core:utils:add-link");async function addLink(t,e){let r=e.parent;if(e.parentCid){const o=CID$k.asCID(e.parentCid);if(o===null)throw errcode(new Error("Invalid CID passed to addLink"),"EINVALIDPARENTCID");if(o.code!==code$i)throw errcode(new Error("Unsupported codec. Only DAG-PB is supported"),"EINVALIDPARENTCID");log$1f(`Loading parent node ${o}`);const a=await t.repo.blocks.get(o);r=decode$2k(a)}if(!r)throw errcode(new Error("No parent node or CID passed to addLink"),"EINVALIDPARENT");if(!e.cid)throw errcode(new Error("No child cid passed to addLink"),"EINVALIDCHILDCID");if(!e.name)throw errcode(new Error("No child name passed to addLink"),"EINVALIDCHILDNAME");if(!e.size&&e.size!==0)throw errcode(new Error("No child size passed to addLink"),"EINVALIDCHILDSIZE");if(!r.Data)throw errcode(new Error("Parent node with no data passed to addLink"),"ERR_INVALID_PARENT");const n=UnixFS.unmarshal(r.Data);return n.type==="hamt-sharded-directory"?(log$1f("Adding link to sharded directory"),addToShardedDirectory(t,{...e,parent:r})):r.Links.length>=e.shardSplitThreshold?(log$1f("Converting directory to sharded directory"),convertToShardedDirectory(t,{...e,parent:r,mtime:n.mtime,mode:n.mode})):(log$1f(`Adding ${e.name} (${e.cid}) to regular directory`),addToDirectory(t,{...e,parent:r}))}const convertToShardedDirectory=async(t,e)=>{const r=await createShard(t,e.parent.Links.map(n=>({name:n.Name||"",size:n.Tsize||0,cid:n.Hash})).concat({name:e.name,size:e.size,cid:e.cid}),e);return log$1f(`Converted directory to sharded directory ${r.cid}`),r},addToDirectory=async(t,e)=>{const r=e.parent.Links.filter(f=>f.Name!==e.name);if(r.push({Name:e.name,Tsize:e.size,Hash:e.cid}),!e.parent.Data)throw errcode(new Error("Parent node with no data passed to addToDirectory"),"ERR_INVALID_PARENT");const n=UnixFS.unmarshal(e.parent.Data);let o;if(n.mtime){const f=Date.now(),p=Math.floor(f/1e3);n.mtime={secs:p,nsecs:(f-p*1e3)*1e3},o=n.marshal()}else o=e.parent.Data;e.parent=prepare({Data:o,Links:r});const a=await t.hashers.getHasher(e.hashAlg),c=encode$1L(e.parent),u=await a.digest(c),l=CID$k.create(e.cidVersion,code$i,u);return e.flush&&await t.repo.blocks.put(l,c),{node:e.parent,cid:l,size:c.length}},addToShardedDirectory=async(t,e)=>{const{shard:r,path:n}=await addFileToShardedDirectory(t,e),o=await last(r.flush(t.repo.blocks));if(!o)throw new Error("No result from flushing shard");const a=await t.repo.blocks.get(o.cid),c=decode$2k(a),u=e.parent.Links.filter(f=>(f.Name||"").substring(0,2)!==n[0].prefix),l=c.Links.find(f=>(f.Name||"").substring(0,2)===n[0].prefix);if(!l)throw new Error(`No link found with prefix ${n[0].prefix}`);return u.push(l),updateHamtDirectory(t,u,n[0].bucket,e)},addFileToShardedDirectory=async(t,e)=>{const r={name:e.name,cid:e.cid,size:e.size};if(!e.parent.Data)throw errcode(new Error("Parent node with no data passed to addFileToShardedDirectory"),"ERR_INVALID_PARENT");const n=await recreateInitialHamtLevel(e.parent.Links),o=UnixFS.unmarshal(e.parent.Data),a=new DirSharded({root:!0,dir:!0,parent:void 0,parentKey:void 0,path:"",dirty:!0,flat:!1,mode:o.mode},e);a._bucket=n,o.mtime&&(a.mtime={secs:Math.round(Date.now()/1e3)});const c=await n._findNewBucketAndPos(r.name),u=toBucketPath(c);u[0].node=e.parent;let l=0;for(;l<u.length;){const f=u[l];l++;const p=f.node;if(!p)throw new Error("Segment had no node");const g=p.Links.find(D=>(D.Name||"").substring(0,2)===f.prefix);if(!g){log$1f(`Link ${f.prefix}${r.name} will be added`),l=u.length;break}if(g.Name===`${f.prefix}${r.name}`){log$1f(`Link ${f.prefix}${r.name} will be replaced`),l=u.length;break}if((g.Name||"").length>2){log$1f(`Link ${g.Name} ${g.Hash} will be replaced with a subshard`),l=u.length;break}log$1f(`Found subshard ${f.prefix}`);const $=await t.repo.blocks.get(g.Hash),_=decode$2k($);if(!u[l]){log$1f(`Loaded new subshard ${f.prefix}`),await recreateHamtLevel(t,_.Links,n,f.bucket,parseInt(f.prefix,16));const D=await n._findNewBucketAndPos(r.name);u.push({bucket:D.bucket,prefix:toPrefix(D.pos),node:_});break}const b=u[l];await addLinksToHamtBucket(t,_.Links,b.bucket,n),b.node=_}return await a._bucket.put(r.name,{size:r.size,cid:r.cid}),{shard:a,path:u}},toBucketPath=t=>{const e=[{bucket:t.bucket,prefix:toPrefix(t.pos)}];let r=t.bucket._parent,n=t.bucket._posAtParent;for(;r;)e.push({bucket:r,prefix:toPrefix(n)}),n=r._posAtParent,r=r._parent;return e.reverse(),e},log$1e=logger$3("ipfs:mfs:utils:update-tree"),defaultOptions$g={shardSplitThreshold:1e3};async function updateTree(t,e,r){r=Object.assign({},defaultOptions$g,r),log$1e("Trail",e),e=e.slice().reverse();let n=0,o;for await(const c of t.repo.blocks.getMany(e.map(u=>u.cid))){const u=decode$2k(c),l=e[n].cid,f=e[n].name;if(n++,!o){o={cid:l,name:f,size:c.length};continue}const p=await addLink(t,{parent:u,name:o.name,cid:o.cid,size:o.size,flush:r.flush,shardSplitThreshold:r.shardSplitThreshold,hashAlg:r.hashAlg,cidVersion:r.cidVersion});o={cid:p.cid,name:f,size:p.size}}const{cid:a}=o;return log$1e(`Final CID ${a}`),a}const log$1d=logger$3("ipfs:mfs:utils:update-mfs-root");async function updateMfsRoot(t,e,r){if(r&&r.signal&&r.signal.aborted)throw errcode(new Error("Request aborted"),"ERR_ABORTED",{name:"Aborted"});return log$1d(`New MFS root will be ${e}`),await t.repo.datastore.put(MFS_ROOT_KEY$2,e.bytes),e}async function createNode$1(t,e,r){const n=new UnixFS({type:e,mode:r.mode,mtime:r.mtime}),o=await t.hashers.getHasher(r.hashAlg),a={Data:n.marshal(),Links:[]},c=encode$1L(a),u=await o.digest(c),l=CID$k.create(r.cidVersion,code$i,u);return r.flush&&await t.repo.blocks.put(l,c),{cid:l,node:a}}const mergeOptions$b=mergeOptions$h.bind({ignoreUndefined:!0}),log$1c=logger$3("ipfs:mfs:mkdir"),defaultOptions$f={parents:!1,hashAlg:"sha2-256",cidVersion:0,shardSplitThreshold:1e3,flush:!0};function createMkdir$1(t){async function e(r,n={}){const o=mergeOptions$b(defaultOptions$f,n);if(!r)throw new Error("no path given to Mkdir");if(r=r.trim(),r==="/"){if(o.parents)return;throw errcode(new Error("cannot create directory '/': Already exists"),"ERR_INVALID_PATH")}if(r.substring(0,1)!=="/")throw errcode(new Error("paths must start with a leading slash"),"ERR_INVALID_PATH");log$1c(`Creating ${r}`);const a=toPathComponents(r);if(a[0]==="ipfs")throw errcode(new Error("path cannot have the prefix 'ipfs'"),"ERR_INVALID_PATH");const c=await loadMfsRoot(t,o);let u;const l=[],f=await createNode$1(t,"directory",o);for(let g=0;g<=a.length;g++){const $=a.slice(0,g),_=`/ipfs/${c}/${$.join("/")}`;try{if(u=await exporter(_,t.repo.blocks),u.type!=="file"&&u.type!=="directory")throw errcode(new Error(`${r} was not a UnixFS node`),"ERR_NOT_UNIXFS");if(g===a.length){if(o.parents)return;throw errcode(new Error("file already exists"),"ERR_ALREADY_EXISTS")}l.push({name:u.name,cid:u.cid})}catch(b){if(b.code==="ERR_NOT_FOUND"){if(g<a.length&&!o.parents)throw errcode(new Error(`Intermediate directory path ${_} does not exist, use the -p flag to create it`),"ERR_NOT_FOUND");await addEmptyDir$1(t,$[$.length-1],f,l[l.length-1],l,o)}else throw b}}const p=await updateTree(t,l,o);await updateMfsRoot(t,p,o)}return withTimeoutOption(e)}const addEmptyDir$1=async(t,e,r,n,o,a)=>{log$1c(`Adding empty dir called ${e} to ${n.cid}`);const c=await addLink(t,{parent:n.node,parentCid:n.cid,size:0,cid:r.cid,name:e,hashAlg:a.hashAlg,cidVersion:a.cidVersion,flush:a.flush,shardSplitThreshold:a.shardSplitThreshold});o[o.length-1].cid=c.cid,o.push({name:e,cid:r.cid})},mergeOptions$a=mergeOptions$h.bind({ignoreUndefined:!0}),log$1b=logger$3("ipfs:mfs:cp"),defaultOptions$e={parents:!1,flush:!0,hashAlg:"sha2-256",cidVersion:0,shardSplitThreshold:1e3};function createCp$1(t){async function e(r,n,o={}){const a=mergeOptions$a(defaultOptions$e,o);Array.isArray(r)||(r=[r]);const c=await Promise.all(r.map($=>toMfsPath(t,$,a)));let u=await toMfsPath(t,n,a);if(!c.length||!u)throw errcode(new Error("Please supply at least one source"),"ERR_INVALID_PARAMS");const l=c.find($=>!$.exists);if(l)throw errcode(new Error(`${l.path} does not exist`),"ERR_INVALID_PARAMS");const f=isDirectory(u);if(u.exists){if(log$1b("Destination exists"),c.length===1&&!f)throw errcode(new Error("directory already has entry by that name"),"ERR_ALREADY_EXISTS")}else if(log$1b("Destination does not exist"),c.length>1){if(!a.parents)throw errcode(new Error("destination did not exist, pass -p to create intermediate directories"),"ERR_INVALID_PARAMS");await createMkdir$1(t)(u.path,a),u=await toMfsPath(t,u.path,a)}else if(u.parts.length>1){const $=`/${u.parts.slice(0,-1).join("/")}`;try{await createStat$7(t)($,a)}catch(_){if(_.code!=="ERR_NOT_FOUND")throw _;if(!a.parents)throw errcode(new Error("destination did not exist, pass -p to create intermediate directories"),"ERR_INVALID_PARAMS");await createMkdir$1(t)($,a),u=await toMfsPath(t,u.path,a)}}const p=isDirectory(u)?u.mfsPath:u.mfsDirectory,g=await toTrail(t,p);if(c.length===1){const $=c.pop();if(!$)throw errcode(new Error("could not find source"),"ERR_INVALID_PARAMS");const _=f?$.name:u.name;return log$1b(`Only one source, copying to destination ${f?"directory":"file"} ${_}`),copyToFile(t,$,_,g,a)}return log$1b("Multiple sources, wrapping in a directory"),copyToDirectory(t,c,u,g,a)}return withTimeoutOption(e)}const isDirectory=t=>t.unixfs&&t.unixfs.type&&t.unixfs.type.includes("directory"),copyToFile=async(t,e,r,n,o)=>{let a=n.pop();if(!a)throw errcode(new Error("destination had no parent"),"ERR_INVALID_PARAMS");a=await addSourceToParent(t,e,r,a,o),n.push(a);const c=await updateTree(t,n,o);await updateMfsRoot(t,c,o)},copyToDirectory=async(t,e,r,n,o)=>{for(let c=0;c<e.length;c++){const u=e[c];r=await addSourceToParent(t,u,u.name,r,o)}n[n.length-1]=r;const a=await updateTree(t,n,o);await updateMfsRoot(t,a,o)},addSourceToParent=async(t,e,r,n,o)=>{const a=await t.repo.blocks.get(e.cid),{node:c,cid:u,size:l}=await addLink(t,{parentCid:n.cid,size:a.length,cid:e.cid,name:r,hashAlg:o.hashAlg,cidVersion:o.cidVersion,flush:o.flush,shardSplitThreshold:o.shardSplitThreshold});return n.node=c,n.cid=u,n.size=l,n},log$1a=logger$3("ipfs:mfs:core:utils:remove-link");async function removeLink(t,e){let r=e.parent;if(e.parentCid){const n=CID$k.asCID(e.parentCid);if(n===null)throw errcode(new Error("Invalid CID passed to removeLink"),"EINVALIDPARENTCID");log$1a(`Loading parent node ${n}`);const o=await t.repo.blocks.get(n);r=decode$2k(o)}if(!r)throw errcode(new Error("No parent node or CID passed to removeLink"),"EINVALIDPARENT");if(!e.name)throw errcode(new Error("No child name passed to removeLink"),"EINVALIDCHILDNAME");if(!r.Data)throw errcode(new Error("Parent node had no data"),"ERR_INVALID_NODE");return UnixFS.unmarshal(r.Data).type==="hamt-sharded-directory"?(log$1a(`Removing ${e.name} from sharded directory`),removeFromShardedDirectory(t,{...e,parent:r})):(log$1a(`Removing link ${e.name} regular directory`),removeFromDirectory(t,{...e,parent:r}))}const removeFromDirectory=async(t,e)=>{e.parent.Links=e.parent.Links.filter(a=>a.Name!==e.name);const r=await encode$1L(e.parent),n=await(await t.hashers.getHasher(e.hashAlg)).digest(r),o=CID$k.create(e.cidVersion,code$i,n);return await t.repo.blocks.put(o,r),log$1a(`Updated regular directory ${o}`),{node:e.parent,cid:o}},removeFromShardedDirectory=async(t,e)=>{const{rootBucket:r,path:n}=await generatePath(t,e.name,e.parent);await r.del(e.name);const{node:o}=await updateShard(t,n,e.name,e);return updateHamtDirectory(t,o.Links,r,e)},updateShard=async(t,e,r,n)=>{const o=e.pop();if(!o)throw errcode(new Error("Could not find parent"),"EINVALIDPARENT");const{bucket:a,prefix:c,node:u}=o;if(!u)throw errcode(new Error("Could not find parent"),"EINVALIDPARENT");const l=u.Links.find(_=>(_.Name||"").substring(0,2)===c);if(!l)throw errcode(new Error(`No link found with prefix ${c} for file ${r}`),"ERR_NOT_FOUND");if(l.Name===`${c}${r}`){log$1a(`Removing existing link ${l.Name}`);const _=u.Links.filter(b=>b.Name!==l.Name);return await a.del(r),updateHamtDirectory(t,_,a,n)}log$1a(`Descending into sub-shard ${l.Name} for ${c}${r}`);const f=await updateShard(t,e,r,n);let p=f.cid,g=f.size,$=c;if(f.node.Links.length===1){log$1a(`Removing subshard for ${c}`);const _=f.node.Links[0];$=`${c}${(_.Name||"").substring(2)}`,p=_.Hash,g=_.Tsize||0}return log$1a(`Updating shard ${c} with name ${$}`),updateShardParent(t,a,u,c,$,g,p,n)},updateShardParent=(t,e,r,n,o,a,c,u)=>{const l=r.Links.filter(f=>f.Name!==n);return l.push({Name:o,Tsize:a,Hash:c}),updateHamtDirectory(t,l,e,u)},mergeOptions$9=mergeOptions$h.bind({ignoreUndefined:!0}),defaultOptions$d={recursive:!1,cidVersion:0,hashAlg:"sha2-256",flush:!0,shardSplitThreshold:1e3};function createRm$8(t){async function e(r,n={}){const o=mergeOptions$9(defaultOptions$d,n);Array.isArray(r)||(r=[r]);const a=await Promise.all(r.map(c=>toMfsPath(t,c,o)));if(!a.length)throw errcode(new Error("Please supply at least one path to remove"),"ERR_INVALID_PARAMS");a.forEach(c=>{if(c.path==="/")throw errcode(new Error("Cannot delete root"),"ERR_INVALID_PARAMS")});for(const c of a)await removePath(t,c.path,o)}return withTimeoutOption(e)}const removePath=async(t,e,r)=>{const n=await toMfsPath(t,e,r),o=await toTrail(t,n.mfsPath),a=o[o.length-1];o.pop();const c=o[o.length-1];if(!c)throw errcode(new Error(`${e} does not exist`),"ERR_NOT_FOUND");if(a.type==="directory"&&!r.recursive)throw errcode(new Error(`${e} is a directory, use -r to remove directories`),"ERR_WAS_DIR");const{cid:u}=await removeLink(t,{parentCid:c.cid,name:a.name,hashAlg:r.hashAlg,cidVersion:r.cidVersion,flush:r.flush,shardSplitThreshold:r.shardSplitThreshold});c.cid=u;const l=await updateTree(t,o,r);await updateMfsRoot(t,l,r)},mergeOptions$8=mergeOptions$h.bind({ignoreUndefined:!0}),log$19=logger$3("ipfs:mfs:touch"),defaultOptions$c={flush:!0,shardSplitThreshold:1e3,hashAlg:"sha2-256",cidVersion:0,recursive:!1};function calculateModification(t,e,r){let n=0;return(t.includes("x")||t.includes("X")&&(r||e&1||e&8||e&64))&&(n+=1),t.includes("w")&&(n+=2),t.includes("r")&&(n+=4),n}function calculateUGO(t,e){let r=0;return t.includes("u")&&(r+=e<<6),t.includes("g")&&(r+=e<<3),t.includes("o")&&(r+=e),r}function calculateSpecial(t,e,r){return e.includes("t")&&(r+=parseInt("1000",8)),e.includes("s")&&(t.includes("u")&&(r+=parseInt("4000",8)),t.includes("g")&&(r+=parseInt("2000",8))),r}function parseSymbolicMode(t,e,r){e||(e=0);const n=t.match(/^(u?g?o?a?)(-?\+?=?)?(r?w?x?X?s?t?)$/);if(!n)throw new Error(`Invalid file mode: ${t}`);let[,o,a,c]=n;(o==="a"||!o)&&(o="ugo");let u=calculateModification(c,e,r);return u=calculateUGO(o,u),u=calculateSpecial(o,c,u),a==="="?(o.includes("u")&&(e=e&parseInt("7077",8),e=e|u),o.includes("g")&&(e=e&parseInt("7707",8),e=e|u),o.includes("o")&&(e=e&parseInt("7770",8),e=e|u),e):a==="+"?u|e:a==="-"?u^e:e}function calculateMode(t,e){if(t instanceof String||typeof t=="string"){const r=`${t}`;r.match(/^\d+$/g)?t=parseInt(r,8):t=0+r.split(",").reduce((n,o)=>parseSymbolicMode(o,n,e.isDirectory()),e.mode||0)}return t}function createChmod$1(t){async function e(r,n,o={}){const a=mergeOptions$8(defaultOptions$c,o);log$19(`Fetching stats for ${r}`);const{cid:c,mfsDirectory:u,name:l}=await toMfsPath(t,r,a);if(c.code!==code$i)throw errcode(new Error(`${r} was not a UnixFS node`),"ERR_NOT_UNIXFS");if(a.recursive){const E=await pipe$1(async function*(){for await(const A of recursive(c,t.repo.blocks)){if(A.type!=="file"&&A.type!=="directory")throw errcode(new Error(`${r} was not a UnixFS node`),"ERR_NOT_UNIXFS");A.unixfs.mode=calculateMode(n,A.unixfs);const k=prepare({Data:A.unixfs.marshal(),Links:A.node.Links});yield{path:A.path,content:k}}},A=>importer(A,t.repo.blocks,{...a,pin:!1,dagBuilder:async function*(k,O,M){for await(const L of k)yield async function(){const U=L.content,F=encode$1L(U),x=await persist(F,O,M);if(!U.Data)throw errcode(new Error(`${x} had no data`),"ERR_INVALID_NODE");const z=UnixFS.unmarshal(U.Data);return{cid:x,size:F.length,path:L.path,unixfs:z}}}}),A=>last(A));if(!E)throw errcode(new Error(`Could not chmod ${r}`),"ERR_COULD_NOT_CHMOD");await createRm$8(t)(r,a),await createCp$1(t)(`/ipfs/${E.cid}`,r,a);return}const f=await t.repo.blocks.get(c),p=decode$2k(f);if(!p.Data)throw errcode(new Error(`${c} had no data`),"ERR_INVALID_NODE");const g=UnixFS.unmarshal(p.Data);g.mode=calculateMode(n,g);const $=encode$1L({Data:g.marshal(),Links:p.Links}),_=a.hashAlg||defaultOptions$c.hashAlg,b=await(await t.hashers.getHasher(_)).digest($),D=CID$k.create(a.cidVersion,code$i,b);a.flush&&await t.repo.blocks.put(D,$);const v=await toTrail(t,u),S=v[v.length-1],I=CID$k.decode(S.cid.bytes),R=await t.repo.blocks.get(I),C=decode$2k(R),T=await addLink(t,{parent:C,name:l,cid:D,size:$.length,flush:a.flush,hashAlg:_,cidVersion:c.version,shardSplitThreshold:1/0});S.cid=T.cid;const P=await updateTree(t,v,a);await updateMfsRoot(t,P,a)}return withTimeoutOption(e)}const mergeOptions$7=mergeOptions$h.bind({ignoreUndefined:!0}),defaultOptions$b={};function createFlush$1(t){async function e(r,n={}){n=mergeOptions$7(defaultOptions$b,n);const{cid:o}=await createStat$7(t)(r,n);return o}return withTimeoutOption(e)}const mergeOptions$6=mergeOptions$h.bind({ignoreUndefined:!0}),defaultOptions$a={parents:!1,flush:!0,cidVersion:0,hashAlg:"sha2-256",shardSplitThreshold:1e3};function createMv$1(t){async function e(r,n,o={}){const a=mergeOptions$6(defaultOptions$a,o);await createCp$1(t)(r,n,a),await createRm$8(t)(r,{...a,recursive:!0})}return withTimeoutOption(e)}const mergeOptions$5=mergeOptions$h.bind({ignoreUndefined:!0}),log$18=logger$3("ipfs:mfs:touch"),defaultOptions$9={flush:!0,shardSplitThreshold:1e3,cidVersion:0,hashAlg:"sha2-256"};function createTouch$1(t){async function e(r,n={}){const o=mergeOptions$5(defaultOptions$9,n);o.mtime=o.mtime||new Date,log$18(`Touching ${r} mtime: ${o.mtime}`);const{cid:a,mfsDirectory:c,name:u,exists:l}=await toMfsPath(t,r,o),f=n.hashAlg||defaultOptions$9.hashAlg,p=await t.hashers.getHasher(f);let g,$,_=o.cidVersion;if(l){if(a.code!==code$i)throw errcode(new Error(`${r} was not a UnixFS node`),"ERR_NOT_UNIXFS");_=a.version;const T=await t.repo.blocks.get(a),P=decode$2k(T);if(!P.Data)throw errcode(new Error(`${r} had no data`),"ERR_INVALID_NODE");const E=UnixFS.unmarshal(P.Data);E.mtime=o.mtime,g=encode$1L({Data:E.marshal(),Links:P.Links});const A=await p.digest(g);$=CID$k.create(o.cidVersion,code$i,A),o.flush&&await t.repo.blocks.put($,g)}else{const T=new UnixFS({type:"file",mtime:o.mtime});g=encode$1L({Data:T.marshal(),Links:[]});const P=await p.digest(g);$=CID$k.create(o.cidVersion,code$i,P),o.flush&&await t.repo.blocks.put($,g)}const b=await toTrail(t,c),D=b[b.length-1],v=D.cid,S=await t.repo.blocks.get(v),I=decode$2k(S),R=await addLink(t,{parent:I,name:u,cid:$,size:g.length,flush:o.flush,shardSplitThreshold:o.shardSplitThreshold,hashAlg:o.hashAlg,cidVersion:_});D.cid=R.cid;const C=await updateTree(t,b,o);await updateMfsRoot(t,C,o)}return withTimeoutOption(e)}const mergeOptions$4=mergeOptions$h.bind({ignoreUndefined:!0}),defaultOptions$8={offset:0,length:1/0};function createRead$1(t){function e(r,n={}){return n=mergeOptions$4(defaultOptions$8,n),{[Symbol.asyncIterator]:async function*(){const o=await toMfsPath(t,r,n),a=await exporter(o.mfsPath,t.repo.blocks);if(a.type!=="file"&&a.type!=="raw")throw errcode(new Error(`${r} was not a file or raw bytes`),"ERR_NOT_FILE");if(!a.content)throw errcode(new Error(`Could not load content stream from ${r}`),"ERR_NO_CONTENT");for await(const c of a.content({offset:n.offset,length:n.length}))yield c}}}return withTimeoutOption(e)}const log$17=logger$3("ipfs:mfs:utils:to-async-iterator");function toAsyncIterator(t){if(!t)throw errcode(new Error("paths must start with a leading slash"),"ERR_INVALID_PATH");if((typeof t=="string"||t instanceof String)&&(log$17("Content was a string"),t=fromString$y(t.toString())),t.length)return log$17("Content was array-like"),{[Symbol.asyncIterator]:function*(){yield t}};if(t[Symbol.asyncIterator])return log$17("Content was an async iterator"),t;if(t[Symbol.iterator])return log$17("Content was an iterator"),t;if(global.Blob&&t instanceof global.Blob)return log$17("Content was an HTML5 Blob"),browserReadableStreamToIt(t.stream());throw errcode(new Error(`Don't know how to convert ${t} into an async iterator`),"ERR_INVALID_PARAMS")}const mergeOptions$3=mergeOptions$h.bind({ignoreUndefined:!0}),log$16=logger$3("ipfs:mfs:write"),defaultOptions$7={offset:0,length:1/0,create:!1,truncate:!1,rawLeaves:!1,reduceSingleLeafToSelf:!1,cidVersion:0,hashAlg:"sha2-256",parents:!1,progress:(t,e)=>{},strategy:"trickle",flush:!0,leafType:"raw",shardSplitThreshold:1e3};function createWrite$1(t){async function e(r,n,o={}){const a=mergeOptions$3(defaultOptions$7,o);let c,u,l;if(log$16("Reading source, destination and parent"),await createLock().readLock(async()=>{c=await toAsyncIterator(n),u=await toMfsPath(t,r,a),l=await toMfsPath(t,u.mfsDirectory,a)})(),log$16("Read source, destination and parent"),!a.parents&&!l.exists)throw errcode(new Error("directory does not exist"),"ERR_NO_EXIST");if(c==null)throw errcode(new Error("could not create source"),"ERR_NO_SOURCE");if(u==null)throw errcode(new Error("could not create destination"),"ERR_NO_DESTINATION");if(!a.create&&!u.exists)throw errcode(new Error("file does not exist"),"ERR_NO_EXIST");if(u.entryType!=="file")throw errcode(new Error("not a file"),"ERR_NOT_A_FILE");return updateOrImport(t,r,c,u,a)}return withTimeoutOption(e)}const updateOrImport=async(t,e,r,n,o)=>{const a=await write$1(t,r,n,o);await createLock().writeLock(async()=>{const c=toPathComponents(e),u=c.pop();if(u==null)throw errcode(new Error("source does not exist"),"ERR_NO_EXIST");let l=!1;try{await createStat$7(t)(`/${c.join("/")}`,o),l=!0}catch(v){if(v.code!=="ERR_NOT_FOUND")throw v}l||await createMkdir$1(t)(`/${c.join("/")}`,o);const f=await toMfsPath(t,e,o),p=await toTrail(t,f.mfsDirectory),g=p[p.length-1];if(!g)throw errcode(new Error("directory does not exist"),"ERR_NO_EXIST");if(!g.type||!g.type.includes("directory"))throw errcode(new Error(`cannot write to ${g.name}: Not a directory`),"ERR_NOT_A_DIRECTORY");const $=await t.repo.blocks.get(g.cid),_=decode$2k($),b=await addLink(t,{parent:_,name:u,cid:a.cid,size:a.size,flush:o.flush,shardSplitThreshold:o.shardSplitThreshold,hashAlg:o.hashAlg,cidVersion:o.cidVersion});g.cid=b.cid;const D=await updateTree(t,p,o);await updateMfsRoot(t,D,o)})()},write$1=async(t,e,r,n)=>{r.exists?log$16(`Overwriting file ${r.cid} offset ${n.offset} length ${n.length}`):log$16(`Writing file offset ${n.offset} length ${n.length}`);const o=[];if(n.offset>0)if(r.unixfs){if(log$16(`Writing first ${n.offset} bytes of original file`),o.push(()=>r.content({offset:0,length:n.offset})),r.unixfs.fileSize()<n.offset){const p=n.offset-r.unixfs.fileSize();log$16(`Writing zeros for extra ${p} bytes`),o.push(asyncZeroes(p))}}else log$16(`Writing zeros for first ${n.offset} bytes`),o.push(asyncZeroes(n.offset));o.push(limitAsyncStreamBytes(e,n.length));const a=countBytesStreamed(catAsyncIterators(o),p=>{if(r.unixfs&&!n.truncate){const g=r.unixfs.fileSize();if(g>p)return log$16(`Writing last ${g-p} of ${g} bytes from original file starting at offset ${p}`),r.content({offset:p});log$16("Not writing last bytes from original file")}return{[Symbol.asyncIterator]:async function*(){}}});let c;n.mode!==void 0&&n.mode!==null?c=parseMode(n.mode):r&&r.unixfs&&(c=r.unixfs.mode);let u;n.mtime!=null?u=parseMtime$1(n.mtime):r&&r.unixfs&&(u=r.unixfs.mtime);const l=await t.hashers.getHasher(n.hashAlg),f=await last(importer([{content:a,mode:c,mtime:u}],t.repo.blocks,{progress:n.progress,hasher:l,cidVersion:n.cidVersion,strategy:n.strategy,rawLeaves:n.rawLeaves,reduceSingleLeafToSelf:n.reduceSingleLeafToSelf,leafType:n.leafType}));if(!f)throw errcode(new Error(`cannot write to ${parent.name}`),"ERR_COULD_NOT_WRITE");return log$16(`Wrote ${f.cid}`),{cid:f.cid,size:f.size}},limitAsyncStreamBytes=(t,e)=>async function*(){let r=0;for await(const n of t){if(r+=n.length,r>e){yield n.subarray(0,e-r);return}yield n}},asyncZeroes=(t,e=MFS_MAX_CHUNK_SIZE)=>{const r=new Uint8Array(e);async function*n(){for(;;)yield r}return limitAsyncStreamBytes(n(),t)},catAsyncIterators=async function*(t){for(let e=0;e<t.length;e++)yield*t[e]()},countBytesStreamed=async function*(t,e){let r=0;for await(const n of t)r+=n.length,yield n;for await(const n of e(r))r+=n.length,yield n},toOutput=t=>{const e={cid:t.cid,name:t.name,type:t.type==="directory"?"directory":"file",size:t.size};return(t.type==="file"||t.type==="directory")&&(e.mode=t.unixfs.mode,e.mtime=t.unixfs.mtime),e};function createLs$7(t){async function*e(r,n={}){const o=await toMfsPath(t,r,n),a=await exporter(o.mfsPath,t.repo.blocks);if(a.type==="directory"){yield*map$3(a.content(n),toOutput);return}yield toOutput(a)}return withTimeoutOption(e)}const readOperations={stat:createStat$7},writeOperations={chmod:createChmod$1,cp:createCp$1,flush:createFlush$1,mkdir:createMkdir$1,mv:createMv$1,rm:createRm$8,touch:createTouch$1},unwrappedOperations={write:createWrite$1,read:createRead$1,ls:createLs$7},wrap=({options:t,mfs:e,operations:r,lock:n})=>{Object.keys(r).forEach(o=>{e[o]=n(r[o](t))})},defaultOptions$6={repoOwner:!0,repo:null};function createMfs(t){const{repoOwner:e}=Object.assign({},defaultOptions$6||{},t),r=createLock(e),n=c=>r.readLock(c),o=c=>r.writeLock(c),a={};return wrap({options:t,mfs:a,operations:readOperations,lock:n}),wrap({options:t,mfs:a,operations:writeOperations,lock:o}),Object.keys(unwrappedOperations).forEach(c=>{a[c]=unwrappedOperations[c](t)}),a}function createFiles$1({repo:t,preload:e,hashers:r,options:n}){const o=createMfs({repo:t,repoOwner:n.repoOwner!==!1,hashers:r}),a=c=>(...u)=>{const l=u.filter(f=>ipfsPath$1(f)||isCID$1(f));if(l.length){const f=u[u.length-1];f&&f.preload!==!1&&l.forEach(p=>e(p))}return c(...u)};return{...o,chmod:o.chmod,cp:a(o.cp),mkdir:o.mkdir,stat:a(o.stat),rm:o.rm,read:a(o.read),touch:o.touch,write:o.write,mv:a(o.mv),flush:o.flush,ls:a(async function*(...c){for await(const u of o.ls(...c))yield{...u,size:u.size||0}})}}function createExport$2({keychain:t}){return withTimeoutOption((e,r)=>t.exportKey(e,r))}const DEFAULT_KEY_TYPE="Ed25519",DEFAULT_KEY_SIZE=2048;function createGen$1({keychain:t}){return withTimeoutOption((e,r={type:DEFAULT_KEY_TYPE,size:DEFAULT_KEY_SIZE})=>t.createKey(e,r.type||DEFAULT_KEY_TYPE,r.size||DEFAULT_KEY_SIZE))}function createImport$2({keychain:t}){return withTimeoutOption((e,r,n)=>t.importKey(e,r,n))}function createInfo$1({keychain:t}){return withTimeoutOption(e=>t.findKeyByName(e))}function createList$3({keychain:t}){return withTimeoutOption(()=>t.listKeys())}function createRename$1({keychain:t}){return withTimeoutOption(async(e,r)=>{const n=await t.renameKey(e,r);return{was:e,now:n.name,id:n.id,overwrite:!1}})}function createRm$7({keychain:t}){return withTimeoutOption(e=>t.removeKey(e))}class KeyAPI{constructor({keychain:e}){this.gen=createGen$1({keychain:e}),this.list=createList$3({keychain:e}),this.rm=createRm$7({keychain:e}),this.rename=createRename$1({keychain:e}),this.export=createExport$2({keychain:e}),this.import=createImport$2({keychain:e}),this.info=createInfo$1({keychain:e})}}function createGet$6({repo:t,preload:e}){async function r(n,o={}){o.preload!==!1&&e(n);const a=await t.blocks.get(n,o);return decode$2k(a)}return withTimeoutOption(r)}function createData$1({repo:t,preload:e}){const r=createGet$6({repo:t,preload:e});async function n(o,a={}){return(await r(o,a)).Data||new Uint8Array(0)}return withTimeoutOption(n)}function findLinks(t,e=[]){for(const r in t){const n=t[r];if(r==="/"&&Object.keys(t).length===1)try{e.push({Name:"",Tsize:0,Hash:CID$k.parse(n)});continue}catch{}const o=CID$k.asCID(n);if(o){e.push({Name:"",Tsize:0,Hash:o});continue}Array.isArray(n)&&findLinks(n,e),n&&typeof n=="object"&&findLinks(n,e)}return e}function createLinks$1({repo:t,codecs:e}){async function r(n,o={}){const a=await e.getCodec(n.code),c=await t.blocks.get(n,o),u=a.decode(c);switch(n.code){case code$e:return[];case code$i:return u.Links;case code$j:case code$h:return findLinks(u);default:throw new Error(`Cannot resolve links from codec ${n.code}`)}}return withTimeoutOption(r)}function createNew$1({repo:t,preload:e}){async function r(n={}){let o;if(n.template)if(n.template==="unixfs-dir")o=new UnixFS({type:"directory"}).marshal();else throw new Error("unknown template");const a=encode$1L({Data:o,Links:[]}),c=await sha256$c.digest(a),u=CID$k.createV0(c);return await t.blocks.put(u,a,{signal:n.signal}),n.preload!==!1&&e(u),u}return withTimeoutOption(r)}function createPut$4({repo:t,preload:e}){async function r(n,o={}){const a=await t.gcLock.readLock();try{const c=encode$1L(n),u=await sha256$c.digest(c),l=CID$k.createV1(code$i,u);return await t.blocks.put(l,c,{signal:o.signal}),o.preload!==!1&&e(l),o.pin&&await t.pins.pinRecursively(l,{signal:o.signal}),l}finally{a()}}return withTimeoutOption(r)}function createStat$6({repo:t,preload:e}){const r=createGet$6({repo:t,preload:e});async function n(o,a={}){const c=await r(o,a),u=encode$1L(c).length,l=c.Links.reduce((f,p)=>f+(p.Tsize||0),0);return{Hash:o,NumLinks:c.Links.length,BlockSize:u,LinksSize:u-(c.Data||[]).length,DataSize:(c.Data||[]).length,CumulativeSize:u+l}}return withTimeoutOption(n)}function createAddLink$1({repo:t,preload:e}){const r=createGet$6({repo:t,preload:e}),n=createPut$4({repo:t,preload:e});async function o(a,c,u={}){const l=await r(a,u);return n({...l,Links:l.Links.concat([c])},u)}return withTimeoutOption(o)}function createAppendData$1({repo:t,preload:e}){const r=createGet$6({repo:t,preload:e}),n=createPut$4({repo:t,preload:e});async function o(a,c,u={}){const l=await r(a,u),f=concat$8([l.Data||[],c]);return n({...l,Data:f},u)}return withTimeoutOption(o)}function createRmLink$1({repo:t,preload:e}){const r=createGet$6({repo:t,preload:e}),n=createPut$4({repo:t,preload:e});async function o(a,c,u={}){const l=await r(a,u),f=(typeof c=="string"?c:c.Name)||"";return l.Links=l.Links.filter(p=>p.Name!==f),n(l,u)}return withTimeoutOption(o)}function createSetData$1({repo:t,preload:e}){const r=createGet$6({repo:t,preload:e}),n=createPut$4({repo:t,preload:e});async function o(a,c,u={}){const l=await r(a,u);return n({...l,Data:c},u)}return withTimeoutOption(o)}class ObjectPatchAPI{constructor({repo:e,preload:r}){this.addLink=createAddLink$1({repo:e,preload:r}),this.appendData=createAppendData$1({repo:e,preload:r}),this.rmLink=createRmLink$1({repo:e,preload:r}),this.setData=createSetData$1({repo:e,preload:r})}}class ObjectAPI{constructor({repo:e,codecs:r,preload:n}){this.data=createData$1({repo:e,preload:n}),this.get=createGet$6({repo:e,preload:n}),this.links=createLinks$1({repo:e,codecs:r}),this.new=createNew$1({repo:e,preload:n}),this.put=createPut$4({repo:e,preload:n}),this.stat=createStat$6({repo:e,preload:n}),this.patch=new ObjectPatchAPI({repo:e,preload:n})}}const log$15=logger$3("ipfs:repo:gc");function createGc$1({repo:t,hashers:e}){async function*r(n={}){const o=Date.now();let a;try{a=await loadMfsRoot({repo:t,hashers:e},n),await t.pins.pinRecursively(a),yield*t.gc()}finally{a&&await t.pins.unpin(a)}log$15(`Complete (${Date.now()-o}ms)`)}return withTimeoutOption(r)}function createStat$5({repo:t}){async function e(r={}){const n=await t.stat();return{numObjects:BigInt(n.numObjects.toString()),repoSize:BigInt(n.repoSize.toString()),repoPath:n.repoPath,version:`${n.version}`,storageMax:BigInt(n.storageMax.toString())}}return withTimeoutOption(e)}const repoVersion=12;function createVersion$2({repo:t}){async function e(r={}){try{await t._checkInitialized(r)}catch(n){if([/Key not found in database \[\/version\]/,/ENOENT/,/repo is not initialized yet/].some(o=>o.test(n.message)))return repoVersion;throw n}return t.version.get()}return withTimeoutOption(e)}class RepoAPI{constructor({repo:e,hashers:r}){this.gc=createGc$1({repo:e,hashers:r}),this.stat=createStat$5({repo:e}),this.version=createVersion$2({repo:e}),this.setApiAddr=n=>e.apiAddr.set(n)}}function getBandwidthStats(t,e){return{totalIn:BigInt(0),totalOut:BigInt(0),rateIn:0,rateOut:0}}function createBw$1({network:t}){return withTimeoutOption(async function*(e={}){const{libp2p:r}=await t.use(e);if(!e.poll){yield getBandwidthStats();return}const n=e.interval||1e3;let o=-1;try{if(o=typeof n=="string"?parse$4(n)||-1:n,!o||o<0)throw new Error("invalid duration")}catch(c){throw errcode(c,"ERR_INVALID_POLL_INTERVAL")}let a;try{for(;;)yield getBandwidthStats(r,e),await new Promise(c=>{a=setTimeout(c,o)})}finally{clearTimeout(a)}})}class StatsAPI{constructor({repo:e,network:r}){this.repo=createStat$5({repo:e}),this.bw=createBw$1({network:r}),this.bitswap=createStat$9({network:r})}}var objectSafeGet=get$1;function get$1(t,e,r){if(!t)return r;var n,o;if(Array.isArray(e)&&(n=e.slice(0)),typeof e=="string"&&(n=e.split(".")),typeof e=="symbol"&&(n=[e]),!Array.isArray(n))throw new Error("props arg must be an array, a string or a symbol");for(;n.length;)if(o=n.shift(),!t||(t=t[o],t===void 0))return r;return t}var encode_1$e=encode$V,MSB$j=128,REST$j=127,MSBALL$e=~REST$j,INT$e=Math.pow(2,31);function encode$V(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$e;)e[r++]=t&255|MSB$j,t/=128;for(;t&MSBALL$e;)e[r++]=t&255|MSB$j,t>>>=7;return e[r]=t|0,encode$V.bytes=r-n+1,e}var decode$1d=read$f,MSB$1$e=128,REST$1$e=127;function read$f(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$f.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$e)<<o:(c&REST$1$e)*Math.pow(2,o),o+=7}while(c>=MSB$1$e);return read$f.bytes=a-n,r}var N1$i=Math.pow(2,7),N2$i=Math.pow(2,14),N3$i=Math.pow(2,21),N4$i=Math.pow(2,28),N5$i=Math.pow(2,35),N6$i=Math.pow(2,42),N7$i=Math.pow(2,49),N8$f=Math.pow(2,56),N9$f=Math.pow(2,63),length$g=function(t){return t<N1$i?1:t<N2$i?2:t<N3$i?3:t<N4$i?4:t<N5$i?5:t<N6$i?6:t<N7$i?7:t<N8$f?8:t<N9$f?9:10},varint$f={encode:encode_1$e,decode:decode$1d,encodingLength:length$g},_brrp_varint$d=varint$f;const decode$1c=(t,e=0)=>[_brrp_varint$d.decode(t,e),_brrp_varint$d.decode.bytes],encodeTo$d=(t,e,r=0)=>(_brrp_varint$d.encode(t,e,r),e),encodingLength$g=t=>_brrp_varint$d.encodingLength(t),equals$p=(t,e)=>{if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0},coerce$d=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")},fromString$j=t=>new TextEncoder().encode(t),toString$m=t=>new TextDecoder().decode(t),create$g=(t,e)=>{const r=e.byteLength,n=encodingLength$g(t),o=n+encodingLength$g(r),a=new Uint8Array(o+r);return encodeTo$d(t,a,0),encodeTo$d(r,a,n),a.set(e,o),new Digest$d(t,r,e,a)},decode$1b=t=>{const e=coerce$d(t),[r,n]=decode$1c(e),[o,a]=decode$1c(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$d(r,o,c,e)},equals$o=(t,e)=>{if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$p(t.bytes,r.bytes)}};let Digest$d=class{constructor(t,e,r,n){this.code=t,this.size=e,this.digest=r,this.bytes=n}};function base$g(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$f=base$g,_brrp__multiformats_scope_baseX$d=src$f;let Encoder$f=class{constructor(t,e,r){this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$f=class{constructor(t,e,r){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$g(this,t)}},ComposedDecoder$d=class{constructor(t){this.decoders=t}or(t){return or$g(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$g=(t,e)=>new ComposedDecoder$d({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});let Codec$d=class{constructor(t,e,r,n){this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$f(t,e,r),this.decoder=new Decoder$f(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};const from$l=({name:t,prefix:e,encode:r,decode:n})=>new Codec$d(t,e,r,n),baseX$d=({prefix:t,name:e,alphabet:r})=>{const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$d(r,e);return from$l({prefix:t,name:e,encode:n,decode:a=>coerce$d(o(a))})},decode$1a=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode$U=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648$d=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from$l({prefix:e,name:t,encode(o){return encode$U(o,n,r)},decode(o){return decode$1a(o,n,r,t)}}),base58btc$c=baseX$d({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),base58flickr$8=baseX$d({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),base58$8=Object.freeze(Object.defineProperty({__proto__:null,base58btc:base58btc$c,base58flickr:base58flickr$8},Symbol.toStringTag,{value:"Module"})),base32$k=rfc4648$d({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),base32upper$8=rfc4648$d({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),base32pad$9=rfc4648$d({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),base32padupper$8=rfc4648$d({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),base32hex$8=rfc4648$d({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),base32hexupper$8=rfc4648$d({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),base32hexpad$8=rfc4648$d({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),base32hexpadupper$8=rfc4648$d({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),base32z$8=rfc4648$d({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),base32$l=Object.freeze(Object.defineProperty({__proto__:null,base32:base32$k,base32hex:base32hex$8,base32hexpad:base32hexpad$8,base32hexpadupper:base32hexpadupper$8,base32hexupper:base32hexupper$8,base32pad:base32pad$9,base32padupper:base32padupper$8,base32upper:base32upper$8,base32z:base32z$8},Symbol.toStringTag,{value:"Module"})),format$c=(t,e)=>{const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$b(r,baseCache$b(t),e||base58btc$c.encoder);default:return toStringV1$b(r,baseCache$b(t),e||base32$k.encoder)}},cache$d=new WeakMap,baseCache$b=t=>{const e=cache$d.get(t);if(e==null){const r=new Map;return cache$d.set(t,r),r}return e};let CID$b=class Ve{constructor(e,r,n,o){this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$b)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$b)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return Ve.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$g(e,r);return Ve.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return Ve.equals(this,e)}static equals(e,r){const n=r;return n&&e.code===n.code&&e.version===n.version&&equals$o(e.multihash,n.multihash)}toString(e){return format$c(this,e)}toJSON(){return{"/":format$c(this)}}link(){return this}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof Ve)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new Ve(n,o,a,c||encodeCID$c(n,o,a.bytes))}else if(r[cidSymbol$b]===!0){const{version:n,multihash:o,code:a}=r,c=decode$1b(o);return Ve.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$b)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$b}) block encoding`);return new Ve(e,r,n,n.bytes)}case 1:{const o=encodeCID$c(e,r,n.bytes);return new Ve(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return Ve.create(0,DAG_PB_CODE$b,e)}static createV1(e,r){return Ve.create(1,e,r)}static decode(e){const[r,n]=Ve.decodeFirst(e);if(n.length)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=Ve.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$d(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$d(r.multihashCode,r.digestSize,a,o);return[r.version===0?Ve.createV0(c):Ve.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$1c(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$b;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$b(e,r),a=Ve.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$b(a).set(n,e),a}};const parseCIDtoBytes$b=(t,e)=>{switch(t[0]){case"Q":{const r=e||base58btc$c;return[base58btc$c.prefix,r.decode(`${base58btc$c.prefix}${t}`)]}case base58btc$c.prefix:{const r=e||base58btc$c;return[base58btc$c.prefix,r.decode(t)]}case base32$k.prefix:{const r=e||base32$k;return[base32$k.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}},toStringV0$b=(t,e,r)=>{const{prefix:n}=r;if(n!==base58btc$c.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o},toStringV1$b=(t,e,r)=>{const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o},DAG_PB_CODE$b=112,SHA_256_CODE$b=18,encodeCID$c=(t,e,r)=>{const n=encodingLength$g(t),o=n+encodingLength$g(e),a=new Uint8Array(o+r.byteLength);return encodeTo$d(t,a,0),encodeTo$d(e,a,n),a.set(r,o),a},cidSymbol$b=Symbol.for("@ipld/js-cid/CID");async function length$f(t){let e=0;for await(const r of t)e++;return e}const code$6=85,log$14=debug$1("ipfs:repo:migrator:migration-8");function unwrap$1(t){return t.child?unwrap$1(t.child):t}function keyToMultihash$1(t){try{const e=base32$k.decode(`b${t.toString().toLowerCase().slice(1)}`),r=CID$b.decode(e).multihash.bytes,n=base32$k.encode(r).slice(1).toUpperCase();return new Key(`/${n}`,!1)}catch{return t}}function keyToCid$1(t){try{const e=base32$k.decode(`b${t.toString().toLowerCase().slice(1)}`),r=decode$1b(e),n=base32$k.encode(CID$b.createV1(code$6,r).bytes).slice(1);return new Key(`/${n.toUpperCase()}`,!1)}catch{return t}}async function process$2(t,e,r){const n=t.blocks;await n.open();const o=unwrap$1(n),a=await length$f(o.queryKeys({filters:[c=>r(c).toString()!==c.toString()]}));try{let c=0;for await(const u of o.query({})){const l=r(u.key);l.toString()!==u.key.toString()&&(c+=1,log$14(`Migrating Block from ${u.key} to ${l}`,await o.has(u.key)),await o.delete(u.key),await o.put(l,u.value),e(c/a*100,`Migrated Block from ${u.key} to ${l}`))}}finally{await n.close()}}const migration$4={version:8,description:"Transforms key names into base32 encoding and converts Block store to use bare multihashes encoded as base32",migrate:(t,e=()=>{})=>process$2(t,e,keyToMultihash$1),revert:(t,e=()=>{})=>process$2(t,e,keyToCid$1)},typeofs$1=["string","number","bigint","symbol"],objectTypeNames$1=["Function","Generator","AsyncGenerator","GeneratorFunction","AsyncGeneratorFunction","AsyncFunction","Observable","Array","Buffer","Object","RegExp","Date","Error","Map","Set","WeakMap","WeakSet","ArrayBuffer","SharedArrayBuffer","DataView","Promise","URL","HTMLElement","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array"];function is$1(t){if(t===null)return"null";if(t===void 0)return"undefined";if(t===!0||t===!1)return"boolean";const e=typeof t;return typeofs$1.includes(e)?e:e==="function"?"Function":Array.isArray(t)?"Array":isBuffer$3(t)?"Buffer":getObjectType$1(t)||"Object"}function isBuffer$3(t){return t&&t.constructor&&t.constructor.isBuffer&&t.constructor.isBuffer.call(null,t)}function getObjectType$1(t){const e=Object.prototype.toString.call(t).slice(8,-1);if(objectTypeNames$1.includes(e))return e}let Type$1=class{constructor(t,e,r){this.major=t,this.majorEncoded=t<<5,this.name=e,this.terminal=r}toString(){return`Type[${this.major}].${this.name}`}compare(t){return this.major<t.major?-1:this.major>t.major?1:0}};Type$1.uint=new Type$1(0,"uint",!0),Type$1.negint=new Type$1(1,"negint",!0),Type$1.bytes=new Type$1(2,"bytes",!0),Type$1.string=new Type$1(3,"string",!0),Type$1.array=new Type$1(4,"array",!1),Type$1.map=new Type$1(5,"map",!1),Type$1.tag=new Type$1(6,"tag",!1),Type$1.float=new Type$1(7,"float",!0),Type$1.false=new Type$1(7,"false",!0),Type$1.true=new Type$1(7,"true",!0),Type$1.null=new Type$1(7,"null",!0),Type$1.undefined=new Type$1(7,"undefined",!0),Type$1.break=new Type$1(7,"break",!0);let Token$1=class{constructor(t,e,r){this.type=t,this.value=e,this.encodedLength=r,this.encodedBytes=void 0,this.byteValue=void 0}toString(){return`Token[${this.type}].${this.value}`}};const useBuffer$1=globalThis.process&&!globalThis.process.browser&&globalThis.Buffer&&typeof globalThis.Buffer.isBuffer=="function",textDecoder$2=new TextDecoder,textEncoder$2=new TextEncoder;function isBuffer$2(t){return useBuffer$1&&globalThis.Buffer.isBuffer(t)}function asU8A$1(t){return t instanceof Uint8Array?isBuffer$2(t)?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):t:Uint8Array.from(t)}const toString$l=useBuffer$1?(t,e,r)=>r-e>64?globalThis.Buffer.from(t.subarray(e,r)).toString("utf8"):utf8Slice$1(t,e,r):(t,e,r)=>r-e>64?textDecoder$2.decode(t.subarray(e,r)):utf8Slice$1(t,e,r),fromString$i=useBuffer$1?t=>t.length>64?globalThis.Buffer.from(t):utf8ToBytes$1(t):t=>t.length>64?textEncoder$2.encode(t):utf8ToBytes$1(t),fromArray$1=t=>Uint8Array.from(t),slice$1=useBuffer$1?(t,e,r)=>isBuffer$2(t)?new Uint8Array(t.subarray(e,r)):t.slice(e,r):(t,e,r)=>t.slice(e,r),concat$3=useBuffer$1?(t,e)=>(t=t.map(r=>r instanceof Uint8Array?r:globalThis.Buffer.from(r)),asU8A$1(globalThis.Buffer.concat(t,e))):(t,e)=>{const r=new Uint8Array(e);let n=0;for(let o of t)n+o.length>r.length&&(o=o.subarray(0,r.length-n)),r.set(o,n),n+=o.length;return r},alloc$1=useBuffer$1?t=>globalThis.Buffer.allocUnsafe(t):t=>new Uint8Array(t);function compare$2(t,e){if(isBuffer$2(t)&&isBuffer$2(e))return t.compare(e);for(let r=0;r<t.length;r++)if(t[r]!==e[r])return t[r]<e[r]?-1:1;return 0}function utf8ToBytes$1(t,e=1/0){let r;const n=t.length;let o=null;const a=[];for(let c=0;c<n;++c){if(r=t.charCodeAt(c),r>55295&&r<57344){if(!o){if(r>56319){(e-=3)>-1&&a.push(239,191,189);continue}else if(c+1===n){(e-=3)>-1&&a.push(239,191,189);continue}o=r;continue}if(r<56320){(e-=3)>-1&&a.push(239,191,189),o=r;continue}r=(o-55296<<10|r-56320)+65536}else o&&(e-=3)>-1&&a.push(239,191,189);if(o=null,r<128){if((e-=1)<0)break;a.push(r)}else if(r<2048){if((e-=2)<0)break;a.push(r>>6|192,r&63|128)}else if(r<65536){if((e-=3)<0)break;a.push(r>>12|224,r>>6&63|128,r&63|128)}else if(r<1114112){if((e-=4)<0)break;a.push(r>>18|240,r>>12&63|128,r>>6&63|128,r&63|128)}else throw new Error("Invalid code point")}return a}function utf8Slice$1(t,e,r){const n=[];for(;e<r;){const o=t[e];let a=null,c=o>239?4:o>223?3:o>191?2:1;if(e+c<=r){let u,l,f,p;switch(c){case 1:o<128&&(a=o);break;case 2:u=t[e+1],(u&192)===128&&(p=(o&31)<<6|u&63,p>127&&(a=p));break;case 3:u=t[e+1],l=t[e+2],(u&192)===128&&(l&192)===128&&(p=(o&15)<<12|(u&63)<<6|l&63,p>2047&&(p<55296||p>57343)&&(a=p));break;case 4:u=t[e+1],l=t[e+2],f=t[e+3],(u&192)===128&&(l&192)===128&&(f&192)===128&&(p=(o&15)<<18|(u&63)<<12|(l&63)<<6|f&63,p>65535&&p<1114112&&(a=p))}}a===null?(a=65533,c=1):a>65535&&(a-=65536,n.push(a>>>10&1023|55296),a=56320|a&1023),n.push(a),e+=c}return decodeCodePointsArray$1(n)}const MAX_ARGUMENTS_LENGTH$1=4096;function decodeCodePointsArray$1(t){const e=t.length;if(e<=MAX_ARGUMENTS_LENGTH$1)return String.fromCharCode.apply(String,t);let r="",n=0;for(;n<e;)r+=String.fromCharCode.apply(String,t.slice(n,n+=MAX_ARGUMENTS_LENGTH$1));return r}const defaultChunkSize$1=256;let Bl$1=class{constructor(t=defaultChunkSize$1){this.chunkSize=t,this.cursor=0,this.maxCursor=-1,this.chunks=[],this._initReuseChunk=null}reset(){this.cursor=0,this.maxCursor=-1,this.chunks.length&&(this.chunks=[]),this._initReuseChunk!==null&&(this.chunks.push(this._initReuseChunk),this.maxCursor=this._initReuseChunk.length-1)}push(t){let e=this.chunks[this.chunks.length-1];if(this.cursor+t.length<=this.maxCursor+1){const r=e.length-(this.maxCursor-this.cursor)-1;e.set(t,r)}else{if(e){const r=e.length-(this.maxCursor-this.cursor)-1;r<e.length&&(this.chunks[this.chunks.length-1]=e.subarray(0,r),this.maxCursor=this.cursor-1)}t.length<64&&t.length<this.chunkSize?(e=alloc$1(this.chunkSize),this.chunks.push(e),this.maxCursor+=e.length,this._initReuseChunk===null&&(this._initReuseChunk=e),e.set(t,0)):(this.chunks.push(t),this.maxCursor+=t.length)}this.cursor+=t.length}toBytes(t=!1){let e;if(this.chunks.length===1){const r=this.chunks[0];t&&this.cursor>r.length/2?(e=this.cursor===r.length?r:r.subarray(0,this.cursor),this._initReuseChunk=null,this.chunks=[]):e=slice$1(r,0,this.cursor)}else e=concat$3(this.chunks,this.cursor);return t&&this.reset(),e}};const decodeErrPrefix$1="CBOR decode error:",encodeErrPrefix$1="CBOR encode error:";function assertEnoughData$1(t,e,r){if(t.length-e<r)throw new Error(`${decodeErrPrefix$1} not enough data for type`)}const uintBoundaries$1=[24,256,65536,4294967296,BigInt("18446744073709551616")];function readUint8$1(t,e,r){assertEnoughData$1(t,e,1);const n=t[e];if(r.strict===!0&&n<uintBoundaries$1[0])throw new Error(`${decodeErrPrefix$1} integer encoded in more bytes than necessary (strict decode)`);return n}function readUint16$1(t,e,r){assertEnoughData$1(t,e,2);const n=t[e]<<8|t[e+1];if(r.strict===!0&&n<uintBoundaries$1[1])throw new Error(`${decodeErrPrefix$1} integer encoded in more bytes than necessary (strict decode)`);return n}function readUint32$1(t,e,r){assertEnoughData$1(t,e,4);const n=t[e]*16777216+(t[e+1]<<16)+(t[e+2]<<8)+t[e+3];if(r.strict===!0&&n<uintBoundaries$1[2])throw new Error(`${decodeErrPrefix$1} integer encoded in more bytes than necessary (strict decode)`);return n}function readUint64$1(t,e,r){assertEnoughData$1(t,e,8);const n=t[e]*16777216+(t[e+1]<<16)+(t[e+2]<<8)+t[e+3],o=t[e+4]*16777216+(t[e+5]<<16)+(t[e+6]<<8)+t[e+7],a=(BigInt(n)<<BigInt(32))+BigInt(o);if(r.strict===!0&&a<uintBoundaries$1[3])throw new Error(`${decodeErrPrefix$1} integer encoded in more bytes than necessary (strict decode)`);if(a<=Number.MAX_SAFE_INTEGER)return Number(a);if(r.allowBigInt===!0)return a;throw new Error(`${decodeErrPrefix$1} integers outside of the safe integer range are not supported`)}function decodeUint8$1(t,e,r,n){return new Token$1(Type$1.uint,readUint8$1(t,e+1,n),2)}function decodeUint16$1(t,e,r,n){return new Token$1(Type$1.uint,readUint16$1(t,e+1,n),3)}function decodeUint32$1(t,e,r,n){return new Token$1(Type$1.uint,readUint32$1(t,e+1,n),5)}function decodeUint64$1(t,e,r,n){return new Token$1(Type$1.uint,readUint64$1(t,e+1,n),9)}function encodeUint$1(t,e){return encodeUintValue$1(t,0,e.value)}function encodeUintValue$1(t,e,r){if(r<uintBoundaries$1[0]){const n=Number(r);t.push([e|n])}else if(r<uintBoundaries$1[1]){const n=Number(r);t.push([e|24,n])}else if(r<uintBoundaries$1[2]){const n=Number(r);t.push([e|25,n>>>8,n&255])}else if(r<uintBoundaries$1[3]){const n=Number(r);t.push([e|26,n>>>24&255,n>>>16&255,n>>>8&255,n&255])}else{const n=BigInt(r);if(n<uintBoundaries$1[4]){const o=[e|27,0,0,0,0,0,0,0];let a=Number(n&BigInt(4294967295)),c=Number(n>>BigInt(32)&BigInt(4294967295));o[8]=a&255,a=a>>8,o[7]=a&255,a=a>>8,o[6]=a&255,a=a>>8,o[5]=a&255,o[4]=c&255,c=c>>8,o[3]=c&255,c=c>>8,o[2]=c&255,c=c>>8,o[1]=c&255,t.push(o)}else throw new Error(`${decodeErrPrefix$1} encountered BigInt larger than allowable range`)}}encodeUint$1.encodedSize=function t(e){return encodeUintValue$1.encodedSize(e.value)},encodeUintValue$1.encodedSize=function t(e){return e<uintBoundaries$1[0]?1:e<uintBoundaries$1[1]?2:e<uintBoundaries$1[2]?3:e<uintBoundaries$1[3]?5:9},encodeUint$1.compareTokens=function t(e,r){return e.value<r.value?-1:e.value>r.value?1:0};function decodeNegint8$1(t,e,r,n){return new Token$1(Type$1.negint,-1-readUint8$1(t,e+1,n),2)}function decodeNegint16$1(t,e,r,n){return new Token$1(Type$1.negint,-1-readUint16$1(t,e+1,n),3)}function decodeNegint32$1(t,e,r,n){return new Token$1(Type$1.negint,-1-readUint32$1(t,e+1,n),5)}const neg1b$1=BigInt(-1),pos1b$1=BigInt(1);function decodeNegint64$1(t,e,r,n){const o=readUint64$1(t,e+1,n);if(typeof o!="bigint"){const a=-1-o;if(a>=Number.MIN_SAFE_INTEGER)return new Token$1(Type$1.negint,a,9)}if(n.allowBigInt!==!0)throw new Error(`${decodeErrPrefix$1} integers outside of the safe integer range are not supported`);return new Token$1(Type$1.negint,neg1b$1-BigInt(o),9)}function encodeNegint$1(t,e){const r=e.value,n=typeof r=="bigint"?r*neg1b$1-pos1b$1:r*-1-1;encodeUintValue$1(t,e.type.majorEncoded,n)}encodeNegint$1.encodedSize=function t(e){const r=e.value,n=typeof r=="bigint"?r*neg1b$1-pos1b$1:r*-1-1;return n<uintBoundaries$1[0]?1:n<uintBoundaries$1[1]?2:n<uintBoundaries$1[2]?3:n<uintBoundaries$1[3]?5:9},encodeNegint$1.compareTokens=function t(e,r){return e.value<r.value?1:e.value>r.value?-1:0};function toToken$7(t,e,r,n){assertEnoughData$1(t,e,r+n);const o=slice$1(t,e+r,e+r+n);return new Token$1(Type$1.bytes,o,r+n)}function decodeBytesCompact$1(t,e,r,n){return toToken$7(t,e,1,r)}function decodeBytes8$1(t,e,r,n){return toToken$7(t,e,2,readUint8$1(t,e+1,n))}function decodeBytes16$1(t,e,r,n){return toToken$7(t,e,3,readUint16$1(t,e+1,n))}function decodeBytes32$1(t,e,r,n){return toToken$7(t,e,5,readUint32$1(t,e+1,n))}function decodeBytes64$1(t,e,r,n){const o=readUint64$1(t,e+1,n);if(typeof o=="bigint")throw new Error(`${decodeErrPrefix$1} 64-bit integer bytes lengths not supported`);return toToken$7(t,e,9,o)}function tokenBytes$1(t){return t.encodedBytes===void 0&&(t.encodedBytes=t.type===Type$1.string?fromString$i(t.value):t.value),t.encodedBytes}function encodeBytes$1(t,e){const r=tokenBytes$1(e);encodeUintValue$1(t,e.type.majorEncoded,r.length),t.push(r)}encodeBytes$1.encodedSize=function t(e){const r=tokenBytes$1(e);return encodeUintValue$1.encodedSize(r.length)+r.length},encodeBytes$1.compareTokens=function t(e,r){return compareBytes$1(tokenBytes$1(e),tokenBytes$1(r))};function compareBytes$1(t,e){return t.length<e.length?-1:t.length>e.length?1:compare$2(t,e)}function toToken$6(t,e,r,n,o){const a=r+n;assertEnoughData$1(t,e,a);const c=new Token$1(Type$1.string,toString$l(t,e+r,e+a),a);return o.retainStringBytes===!0&&(c.byteValue=slice$1(t,e+r,e+a)),c}function decodeStringCompact$1(t,e,r,n){return toToken$6(t,e,1,r,n)}function decodeString8$1(t,e,r,n){return toToken$6(t,e,2,readUint8$1(t,e+1,n),n)}function decodeString16$1(t,e,r,n){return toToken$6(t,e,3,readUint16$1(t,e+1,n),n)}function decodeString32$1(t,e,r,n){return toToken$6(t,e,5,readUint32$1(t,e+1,n),n)}function decodeString64$1(t,e,r,n){const o=readUint64$1(t,e+1,n);if(typeof o=="bigint")throw new Error(`${decodeErrPrefix$1} 64-bit integer string lengths not supported`);return toToken$6(t,e,9,o,n)}const encodeString$1=encodeBytes$1;function toToken$5(t,e,r,n){return new Token$1(Type$1.array,n,r)}function decodeArrayCompact$1(t,e,r,n){return toToken$5(t,e,1,r)}function decodeArray8$1(t,e,r,n){return toToken$5(t,e,2,readUint8$1(t,e+1,n))}function decodeArray16$1(t,e,r,n){return toToken$5(t,e,3,readUint16$1(t,e+1,n))}function decodeArray32$1(t,e,r,n){return toToken$5(t,e,5,readUint32$1(t,e+1,n))}function decodeArray64$1(t,e,r,n){const o=readUint64$1(t,e+1,n);if(typeof o=="bigint")throw new Error(`${decodeErrPrefix$1} 64-bit integer array lengths not supported`);return toToken$5(t,e,9,o)}function decodeArrayIndefinite$1(t,e,r,n){if(n.allowIndefinite===!1)throw new Error(`${decodeErrPrefix$1} indefinite length items not allowed`);return toToken$5(t,e,1,1/0)}function encodeArray$1(t,e){encodeUintValue$1(t,Type$1.array.majorEncoded,e.value)}encodeArray$1.compareTokens=encodeUint$1.compareTokens,encodeArray$1.encodedSize=function t(e){return encodeUintValue$1.encodedSize(e.value)};function toToken$4(t,e,r,n){return new Token$1(Type$1.map,n,r)}function decodeMapCompact$1(t,e,r,n){return toToken$4(t,e,1,r)}function decodeMap8$1(t,e,r,n){return toToken$4(t,e,2,readUint8$1(t,e+1,n))}function decodeMap16$1(t,e,r,n){return toToken$4(t,e,3,readUint16$1(t,e+1,n))}function decodeMap32$1(t,e,r,n){return toToken$4(t,e,5,readUint32$1(t,e+1,n))}function decodeMap64$1(t,e,r,n){const o=readUint64$1(t,e+1,n);if(typeof o=="bigint")throw new Error(`${decodeErrPrefix$1} 64-bit integer map lengths not supported`);return toToken$4(t,e,9,o)}function decodeMapIndefinite$1(t,e,r,n){if(n.allowIndefinite===!1)throw new Error(`${decodeErrPrefix$1} indefinite length items not allowed`);return toToken$4(t,e,1,1/0)}function encodeMap$1(t,e){encodeUintValue$1(t,Type$1.map.majorEncoded,e.value)}encodeMap$1.compareTokens=encodeUint$1.compareTokens,encodeMap$1.encodedSize=function t(e){return encodeUintValue$1.encodedSize(e.value)};function decodeTagCompact$1(t,e,r,n){return new Token$1(Type$1.tag,r,1)}function decodeTag8$1(t,e,r,n){return new Token$1(Type$1.tag,readUint8$1(t,e+1,n),2)}function decodeTag16$1(t,e,r,n){return new Token$1(Type$1.tag,readUint16$1(t,e+1,n),3)}function decodeTag32$1(t,e,r,n){return new Token$1(Type$1.tag,readUint32$1(t,e+1,n),5)}function decodeTag64$1(t,e,r,n){return new Token$1(Type$1.tag,readUint64$1(t,e+1,n),9)}function encodeTag$1(t,e){encodeUintValue$1(t,Type$1.tag.majorEncoded,e.value)}encodeTag$1.compareTokens=encodeUint$1.compareTokens,encodeTag$1.encodedSize=function t(e){return encodeUintValue$1.encodedSize(e.value)};const MINOR_FALSE$1=20,MINOR_TRUE$1=21,MINOR_NULL$1=22,MINOR_UNDEFINED$1=23;function decodeUndefined$1(t,e,r,n){if(n.allowUndefined===!1)throw new Error(`${decodeErrPrefix$1} undefined values are not supported`);return n.coerceUndefinedToNull===!0?new Token$1(Type$1.null,null,1):new Token$1(Type$1.undefined,void 0,1)}function decodeBreak$1(t,e,r,n){if(n.allowIndefinite===!1)throw new Error(`${decodeErrPrefix$1} indefinite length items not allowed`);return new Token$1(Type$1.break,void 0,1)}function createToken$1(t,e,r){if(r){if(r.allowNaN===!1&&Number.isNaN(t))throw new Error(`${decodeErrPrefix$1} NaN values are not supported`);if(r.allowInfinity===!1&&(t===1/0||t===-1/0))throw new Error(`${decodeErrPrefix$1} Infinity values are not supported`)}return new Token$1(Type$1.float,t,e)}function decodeFloat16$1(t,e,r,n){return createToken$1(readFloat16$1(t,e+1),3,n)}function decodeFloat32$1(t,e,r,n){return createToken$1(readFloat32$1(t,e+1),5,n)}function decodeFloat64$1(t,e,r,n){return createToken$1(readFloat64$1(t,e+1),9,n)}function encodeFloat$1(t,e,r){const n=e.value;if(n===!1)t.push([Type$1.float.majorEncoded|MINOR_FALSE$1]);else if(n===!0)t.push([Type$1.float.majorEncoded|MINOR_TRUE$1]);else if(n===null)t.push([Type$1.float.majorEncoded|MINOR_NULL$1]);else if(n===void 0)t.push([Type$1.float.majorEncoded|MINOR_UNDEFINED$1]);else{let o,a=!1;(!r||r.float64!==!0)&&(encodeFloat16$1(n),o=readFloat16$1(ui8a$1,1),n===o||Number.isNaN(n)?(ui8a$1[0]=249,t.push(ui8a$1.slice(0,3)),a=!0):(encodeFloat32$1(n),o=readFloat32$1(ui8a$1,1),n===o&&(ui8a$1[0]=250,t.push(ui8a$1.slice(0,5)),a=!0))),a||(encodeFloat64$1(n),o=readFloat64$1(ui8a$1,1),ui8a$1[0]=251,t.push(ui8a$1.slice(0,9)))}}encodeFloat$1.encodedSize=function t(e,r){const n=e.value;if(n===!1||n===!0||n===null||n===void 0)return 1;if(!r||r.float64!==!0){encodeFloat16$1(n);let o=readFloat16$1(ui8a$1,1);if(n===o||Number.isNaN(n))return 3;if(encodeFloat32$1(n),o=readFloat32$1(ui8a$1,1),n===o)return 5}return 9};const buffer$1=new ArrayBuffer(9),dataView$1=new DataView(buffer$1,1),ui8a$1=new Uint8Array(buffer$1,0);function encodeFloat16$1(t){if(t===1/0)dataView$1.setUint16(0,31744,!1);else if(t===-1/0)dataView$1.setUint16(0,64512,!1);else if(Number.isNaN(t))dataView$1.setUint16(0,32256,!1);else{dataView$1.setFloat32(0,t);const e=dataView$1.getUint32(0),r=(e&2139095040)>>23,n=e&8388607;if(r===255)dataView$1.setUint16(0,31744,!1);else if(r===0)dataView$1.setUint16(0,(t&2147483648)>>16|n>>13,!1);else{const o=r-127;o<-24?dataView$1.setUint16(0,0):o<-14?dataView$1.setUint16(0,(e&2147483648)>>16|1<<24+o,!1):dataView$1.setUint16(0,(e&2147483648)>>16|o+15<<10|n>>13,!1)}}}function readFloat16$1(t,e){if(t.length-e<2)throw new Error(`${decodeErrPrefix$1} not enough data for float16`);const r=(t[e]<<8)+t[e+1];if(r===31744)return 1/0;if(r===64512)return-1/0;if(r===32256)return NaN;const n=r>>10&31,o=r&1023;let a;return n===0?a=o*2**-24:n!==31?a=(o+1024)*2**(n-25):a=o===0?1/0:NaN,r&32768?-a:a}function encodeFloat32$1(t){dataView$1.setFloat32(0,t,!1)}function readFloat32$1(t,e){if(t.length-e<4)throw new Error(`${decodeErrPrefix$1} not enough data for float32`);const r=(t.byteOffset||0)+e;return new DataView(t.buffer,r,4).getFloat32(0,!1)}function encodeFloat64$1(t){dataView$1.setFloat64(0,t,!1)}function readFloat64$1(t,e){if(t.length-e<8)throw new Error(`${decodeErrPrefix$1} not enough data for float64`);const r=(t.byteOffset||0)+e;return new DataView(t.buffer,r,8).getFloat64(0,!1)}encodeFloat$1.compareTokens=encodeUint$1.compareTokens;function invalidMinor$1(t,e,r){throw new Error(`${decodeErrPrefix$1} encountered invalid minor (${r}) for major ${t[e]>>>5}`)}function errorer$1(t){return()=>{throw new Error(`${decodeErrPrefix$1} ${t}`)}}const jump$1=[];for(let t=0;t<=23;t++)jump$1[t]=invalidMinor$1;jump$1[24]=decodeUint8$1,jump$1[25]=decodeUint16$1,jump$1[26]=decodeUint32$1,jump$1[27]=decodeUint64$1,jump$1[28]=invalidMinor$1,jump$1[29]=invalidMinor$1,jump$1[30]=invalidMinor$1,jump$1[31]=invalidMinor$1;for(let t=32;t<=55;t++)jump$1[t]=invalidMinor$1;jump$1[56]=decodeNegint8$1,jump$1[57]=decodeNegint16$1,jump$1[58]=decodeNegint32$1,jump$1[59]=decodeNegint64$1,jump$1[60]=invalidMinor$1,jump$1[61]=invalidMinor$1,jump$1[62]=invalidMinor$1,jump$1[63]=invalidMinor$1;for(let t=64;t<=87;t++)jump$1[t]=decodeBytesCompact$1;jump$1[88]=decodeBytes8$1,jump$1[89]=decodeBytes16$1,jump$1[90]=decodeBytes32$1,jump$1[91]=decodeBytes64$1,jump$1[92]=invalidMinor$1,jump$1[93]=invalidMinor$1,jump$1[94]=invalidMinor$1,jump$1[95]=errorer$1("indefinite length bytes/strings are not supported");for(let t=96;t<=119;t++)jump$1[t]=decodeStringCompact$1;jump$1[120]=decodeString8$1,jump$1[121]=decodeString16$1,jump$1[122]=decodeString32$1,jump$1[123]=decodeString64$1,jump$1[124]=invalidMinor$1,jump$1[125]=invalidMinor$1,jump$1[126]=invalidMinor$1,jump$1[127]=errorer$1("indefinite length bytes/strings are not supported");for(let t=128;t<=151;t++)jump$1[t]=decodeArrayCompact$1;jump$1[152]=decodeArray8$1,jump$1[153]=decodeArray16$1,jump$1[154]=decodeArray32$1,jump$1[155]=decodeArray64$1,jump$1[156]=invalidMinor$1,jump$1[157]=invalidMinor$1,jump$1[158]=invalidMinor$1,jump$1[159]=decodeArrayIndefinite$1;for(let t=160;t<=183;t++)jump$1[t]=decodeMapCompact$1;jump$1[184]=decodeMap8$1,jump$1[185]=decodeMap16$1,jump$1[186]=decodeMap32$1,jump$1[187]=decodeMap64$1,jump$1[188]=invalidMinor$1,jump$1[189]=invalidMinor$1,jump$1[190]=invalidMinor$1,jump$1[191]=decodeMapIndefinite$1;for(let t=192;t<=215;t++)jump$1[t]=decodeTagCompact$1;jump$1[216]=decodeTag8$1,jump$1[217]=decodeTag16$1,jump$1[218]=decodeTag32$1,jump$1[219]=decodeTag64$1,jump$1[220]=invalidMinor$1,jump$1[221]=invalidMinor$1,jump$1[222]=invalidMinor$1,jump$1[223]=invalidMinor$1;for(let t=224;t<=243;t++)jump$1[t]=errorer$1("simple values are not supported");jump$1[244]=invalidMinor$1,jump$1[245]=invalidMinor$1,jump$1[246]=invalidMinor$1,jump$1[247]=decodeUndefined$1,jump$1[248]=errorer$1("simple values are not supported"),jump$1[249]=decodeFloat16$1,jump$1[250]=decodeFloat32$1,jump$1[251]=decodeFloat64$1,jump$1[252]=invalidMinor$1,jump$1[253]=invalidMinor$1,jump$1[254]=invalidMinor$1,jump$1[255]=decodeBreak$1;const quick$1=[];for(let t=0;t<24;t++)quick$1[t]=new Token$1(Type$1.uint,t,1);for(let t=-1;t>=-24;t--)quick$1[31-t]=new Token$1(Type$1.negint,t,1);quick$1[64]=new Token$1(Type$1.bytes,new Uint8Array(0),1),quick$1[96]=new Token$1(Type$1.string,"",1),quick$1[128]=new Token$1(Type$1.array,0,1),quick$1[160]=new Token$1(Type$1.map,0,1),quick$1[244]=new Token$1(Type$1.false,!1,1),quick$1[245]=new Token$1(Type$1.true,!0,1),quick$1[246]=new Token$1(Type$1.null,null,1);function quickEncodeToken$1(t){switch(t.type){case Type$1.false:return fromArray$1([244]);case Type$1.true:return fromArray$1([245]);case Type$1.null:return fromArray$1([246]);case Type$1.bytes:return t.value.length?void 0:fromArray$1([64]);case Type$1.string:return t.value===""?fromArray$1([96]):void 0;case Type$1.array:return t.value===0?fromArray$1([128]):void 0;case Type$1.map:return t.value===0?fromArray$1([160]):void 0;case Type$1.uint:return t.value<24?fromArray$1([Number(t.value)]):void 0;case Type$1.negint:if(t.value>=-24)return fromArray$1([31-Number(t.value)])}}const defaultEncodeOptions$1={float64:!1,mapSorter:mapSorter$1,quickEncodeToken:quickEncodeToken$1};function makeCborEncoders$1(){const t=[];return t[Type$1.uint.major]=encodeUint$1,t[Type$1.negint.major]=encodeNegint$1,t[Type$1.bytes.major]=encodeBytes$1,t[Type$1.string.major]=encodeString$1,t[Type$1.array.major]=encodeArray$1,t[Type$1.map.major]=encodeMap$1,t[Type$1.tag.major]=encodeTag$1,t[Type$1.float.major]=encodeFloat$1,t}const cborEncoders$1=makeCborEncoders$1(),buf$1=new Bl$1;let Ref$1=class Nr{constructor(e,r){this.obj=e,this.parent=r}includes(e){let r=this;do if(r.obj===e)return!0;while(r=r.parent);return!1}static createCheck(e,r){if(e&&e.includes(r))throw new Error(`${encodeErrPrefix$1} object contains circular references`);return new Nr(r,e)}};const simpleTokens$1={null:new Token$1(Type$1.null,null),undefined:new Token$1(Type$1.undefined,void 0),true:new Token$1(Type$1.true,!0),false:new Token$1(Type$1.false,!1),emptyArray:new Token$1(Type$1.array,0),emptyMap:new Token$1(Type$1.map,0)},typeEncoders$1={number(t,e,r,n){return!Number.isInteger(t)||!Number.isSafeInteger(t)?new Token$1(Type$1.float,t):t>=0?new Token$1(Type$1.uint,t):new Token$1(Type$1.negint,t)},bigint(t,e,r,n){return t>=BigInt(0)?new Token$1(Type$1.uint,t):new Token$1(Type$1.negint,t)},Uint8Array(t,e,r,n){return new Token$1(Type$1.bytes,t)},string(t,e,r,n){return new Token$1(Type$1.string,t)},boolean(t,e,r,n){return t?simpleTokens$1.true:simpleTokens$1.false},null(t,e,r,n){return simpleTokens$1.null},undefined(t,e,r,n){return simpleTokens$1.undefined},ArrayBuffer(t,e,r,n){return new Token$1(Type$1.bytes,new Uint8Array(t))},DataView(t,e,r,n){return new Token$1(Type$1.bytes,new Uint8Array(t.buffer,t.byteOffset,t.byteLength))},Array(t,e,r,n){if(!t.length)return r.addBreakTokens===!0?[simpleTokens$1.emptyArray,new Token$1(Type$1.break)]:simpleTokens$1.emptyArray;n=Ref$1.createCheck(n,t);const o=[];let a=0;for(const c of t)o[a++]=objectToTokens$1(c,r,n);return r.addBreakTokens?[new Token$1(Type$1.array,t.length),o,new Token$1(Type$1.break)]:[new Token$1(Type$1.array,t.length),o]},Object(t,e,r,n){const o=e!=="Object",a=o?t.keys():Object.keys(t),c=o?t.size:a.length;if(!c)return r.addBreakTokens===!0?[simpleTokens$1.emptyMap,new Token$1(Type$1.break)]:simpleTokens$1.emptyMap;n=Ref$1.createCheck(n,t);const u=[];let l=0;for(const f of a)u[l++]=[objectToTokens$1(f,r,n),objectToTokens$1(o?t.get(f):t[f],r,n)];return sortMapEntries$1(u,r),r.addBreakTokens?[new Token$1(Type$1.map,c),u,new Token$1(Type$1.break)]:[new Token$1(Type$1.map,c),u]}};typeEncoders$1.Map=typeEncoders$1.Object,typeEncoders$1.Buffer=typeEncoders$1.Uint8Array;for(const t of"Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64".split(" "))typeEncoders$1[`${t}Array`]=typeEncoders$1.DataView;function objectToTokens$1(t,e={},r){const n=is$1(t),o=e&&e.typeEncoders&&e.typeEncoders[n]||typeEncoders$1[n];if(typeof o=="function"){const c=o(t,n,e,r);if(c!=null)return c}const a=typeEncoders$1[n];if(!a)throw new Error(`${encodeErrPrefix$1} unsupported type: ${n}`);return a(t,n,e,r)}function sortMapEntries$1(t,e){e.mapSorter&&t.sort(e.mapSorter)}function mapSorter$1(t,e){const r=Array.isArray(t[0])?t[0][0]:t[0],n=Array.isArray(e[0])?e[0][0]:e[0];if(r.type!==n.type)return r.type.compare(n.type);const o=r.type.major,a=cborEncoders$1[o].compareTokens(r,n);return a===0&&console.warn("WARNING: complex key types used, CBOR key sorting guarantees are gone"),a}function tokensToEncoded$1(t,e,r,n){if(Array.isArray(e))for(const o of e)tokensToEncoded$1(t,o,r,n);else r[e.type.major](t,e,n)}function encodeCustom$1(t,e,r){const n=objectToTokens$1(t,r);if(!Array.isArray(n)&&r.quickEncodeToken){const o=r.quickEncodeToken(n);if(o)return o;const a=e[n.type.major];if(a.encodedSize){const c=a.encodedSize(n,r),u=new Bl$1(c);if(a(u,n,r),u.chunks.length!==1)throw new Error(`Unexpected error: pre-calculated length for ${n} was wrong`);return asU8A$1(u.chunks[0])}}return buf$1.reset(),tokensToEncoded$1(buf$1,n,e,r),buf$1.toBytes(!0)}function encode$T(t,e){return e=Object.assign({},defaultEncodeOptions$1,e),encodeCustom$1(t,cborEncoders$1,e)}const defaultDecodeOptions$1={strict:!1,allowIndefinite:!0,allowUndefined:!0,allowBigInt:!0};let Tokeniser$1=class{constructor(t,e={}){this.pos=0,this.data=t,this.options=e}done(){return this.pos>=this.data.length}next(){const t=this.data[this.pos];let e=quick$1[t];if(e===void 0){const r=jump$1[t];if(!r)throw new Error(`${decodeErrPrefix$1} no decoder for major type ${t>>>5} (byte 0x${t.toString(16).padStart(2,"0")})`);const n=t&31;e=r(this.data,this.pos,n,this.options)}return this.pos+=e.encodedLength,e}};const DONE$1=Symbol.for("DONE"),BREAK$1=Symbol.for("BREAK");function tokenToArray$1(t,e,r){const n=[];for(let o=0;o<t.value;o++){const a=tokensToObject$1(e,r);if(a===BREAK$1){if(t.value===1/0)break;throw new Error(`${decodeErrPrefix$1} got unexpected break to lengthed array`)}if(a===DONE$1)throw new Error(`${decodeErrPrefix$1} found array but not enough entries (got ${o}, expected ${t.value})`);n[o]=a}return n}function tokenToMap$1(t,e,r){const n=r.useMaps===!0,o=n?void 0:{},a=n?new Map:void 0;for(let c=0;c<t.value;c++){const u=tokensToObject$1(e,r);if(u===BREAK$1){if(t.value===1/0)break;throw new Error(`${decodeErrPrefix$1} got unexpected break to lengthed map`)}if(u===DONE$1)throw new Error(`${decodeErrPrefix$1} found map but not enough entries (got ${c} [no key], expected ${t.value})`);if(n!==!0&&typeof u!="string")throw new Error(`${decodeErrPrefix$1} non-string keys not supported (got ${typeof u})`);if(r.rejectDuplicateMapKeys===!0&&(n&&a.has(u)||!n&&u in o))throw new Error(`${decodeErrPrefix$1} found repeat map key "${u}"`);const l=tokensToObject$1(e,r);if(l===DONE$1)throw new Error(`${decodeErrPrefix$1} found map but not enough entries (got ${c} [no value], expected ${t.value})`);n?a.set(u,l):o[u]=l}return n?a:o}function tokensToObject$1(t,e){if(t.done())return DONE$1;const r=t.next();if(r.type===Type$1.break)return BREAK$1;if(r.type.terminal)return r.value;if(r.type===Type$1.array)return tokenToArray$1(r,t,e);if(r.type===Type$1.map)return tokenToMap$1(r,t,e);if(r.type===Type$1.tag){if(e.tags&&typeof e.tags[r.value]=="function"){const n=tokensToObject$1(t,e);return e.tags[r.value](n)}throw new Error(`${decodeErrPrefix$1} tag not supported (${r.value})`)}throw new Error("unsupported")}function decode$19(t,e){if(!(t instanceof Uint8Array))throw new Error(`${decodeErrPrefix$1} data to decode must be a Uint8Array`);e=Object.assign({},defaultDecodeOptions$1,e);const r=e.tokenizer||new Tokeniser$1(t,e),n=tokensToObject$1(r,e);if(n===DONE$1)throw new Error(`${decodeErrPrefix$1} did not find any content to decode`);if(n===BREAK$1)throw new Error(`${decodeErrPrefix$1} got unexpected break`);if(!r.done())throw new Error(`${decodeErrPrefix$1} too many terminals, data makes no sense`);return n}const $Reader$6=$protobuf.Reader,$Writer$6=$protobuf.Writer;$protobuf.util;const $root$6=$protobuf.roots.default||($protobuf.roots.default={}),ipfs=$root$6.ipfs=(()=>{const t={};return t.pin=function(){const e={};return e.Set=function(){function r(n){if(n)for(var o=Object.keys(n),a=0;a<o.length;++a)n[o[a]]!=null&&(this[o[a]]=n[o[a]])}return r.prototype.version=0,r.prototype.fanout=0,r.prototype.seed=0,r.encode=function(n,o){return o||(o=$Writer$6.create()),n.version!=null&&Object.hasOwnProperty.call(n,"version")&&o.uint32(8).uint32(n.version),n.fanout!=null&&Object.hasOwnProperty.call(n,"fanout")&&o.uint32(16).uint32(n.fanout),n.seed!=null&&Object.hasOwnProperty.call(n,"seed")&&o.uint32(29).fixed32(n.seed),o},r.decode=function(n,o){n instanceof $Reader$6||(n=$Reader$6.create(n));for(var a=o===void 0?n.len:n.pos+o,c=new $root$6.ipfs.pin.Set;n.pos<a;){var u=n.uint32();switch(u>>>3){case 1:c.version=n.uint32();break;case 2:c.fanout=n.uint32();break;case 3:c.seed=n.fixed32();break;default:n.skipType(u&7);break}}return c},r.fromObject=function(n){if(n instanceof $root$6.ipfs.pin.Set)return n;var o=new $root$6.ipfs.pin.Set;return n.version!=null&&(o.version=n.version>>>0),n.fanout!=null&&(o.fanout=n.fanout>>>0),n.seed!=null&&(o.seed=n.seed>>>0),o},r.toObject=function(n,o){o||(o={});var a={};return o.defaults&&(a.version=0,a.fanout=0,a.seed=0),n.version!=null&&n.hasOwnProperty("version")&&(a.version=n.version),n.fanout!=null&&n.hasOwnProperty("fanout")&&(a.fanout=n.fanout),n.seed!=null&&n.hasOwnProperty("seed")&&(a.seed=n.seed),a},r.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},r}(),e}(),t})();var fnv1a$1={exports:{}};(function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),r.BASE=2166136261;function r(n,o=r.BASE){const a=n.length;for(let c=0;c<a;c++)o^=n.charCodeAt(c),o+=(o<<1)+(o<<4)+(o<<7)+(o<<8)+(o<<24);return o>>>0}e.default=r,t.exports=r})(fnv1a$1,fnv1a$1.exports);var fnv1aExports=fnv1a$1.exports;const fnv1a=getDefaultExportFromCjs(fnv1aExports),PIN_DS_KEY=new Key("/local/pins"),DEFAULT_FANOUT=256,MAX_ITEMS=8192,EMPTY_KEY=CID$b.parse("QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n"),PinTypes={direct:"direct",recursive:"recursive"};function cidToKey$2(t){return new Key(`/${base32$k.encode(t.multihash.bytes).toUpperCase().substring(1)}`)}const from$k=({name:t,code:e,encode:r})=>new Hasher$7(t,e,r);let Hasher$7=class{constructor(t,e,r){this.name=t,this.code=e,this.encode=r}digest(t){if(t instanceof Uint8Array){const e=this.encode(t);return e instanceof Uint8Array?create$g(this.code,e):e.then(r=>create$g(this.code,r))}else throw Error("Unknown type, must be binary type")}};const sha$7=t=>async e=>new Uint8Array(await crypto.subtle.digest(t,e)),sha256$8=from$k({name:"sha2-256",code:18,encode:sha$7("SHA-256")}),PinSet=ipfs.pin.Set;function readHeader(t){const e=t.Data;if(!e)throw new Error("No data present");const r=varint$w.decode(e),n=varint$w.decode.bytes??0;if(n<=0)throw new Error("Invalid Set header length");if(n+r>e.length)throw new Error("Impossibly large set header length");const o=e.slice(n,r+n),a=PinSet.toObject(PinSet.decode(o),{defaults:!1,arrays:!0,longs:Number,objects:!1});if(a.version!==1)throw new Error(`Unsupported Set version: ${a.version}`);if(a.fanout>t.Links.length)throw new Error("Impossibly large fanout");return{header:a,data:e.slice(r+n)}}function hash$1(t,e){const r=new Uint8Array(4);new DataView(r.buffer).setUint32(0,t,!0);const n=fromString$y(e.toString()),o=concat$8([r,n],r.byteLength+n.byteLength);return fnv1a(toString$D(o))}async function*walkItems(t,e){const r=readHeader(e);let n=0;for(const o of e.Links){if(n<r.header.fanout){const a=o.Hash;if(!EMPTY_KEY.equals(a)){const c=await t.get(a),u=decode$2k(c);yield*walkItems(t,u)}}else yield o.Hash;n++}}async function*loadSet(t,e,r){const n=e.Links.find(c=>c.Name===r);if(!n)throw new Error("No link found with name "+r);const o=await t.get(n.Hash),a=decode$2k(o);yield*walkItems(t,a)}function storeItems(t,e){return r(e,0);async function r(n,o){const a=PinSet.encode({version:1,fanout:DEFAULT_FANOUT,seed:o}).finish(),c=varint$w.encode(a.length),u=concat$8([c,a]),l=[];for(let p=0;p<DEFAULT_FANOUT;p++)l.push({Name:"",Tsize:1,Hash:EMPTY_KEY});if(n.length<=MAX_ITEMS){const p=n.map($=>({link:{Name:"",Tsize:1,Hash:$.key},data:$.data||new Uint8Array})).sort(($,_)=>compare$4($.link.Hash.bytes,_.link.Hash.bytes)),g=l.concat(p.map($=>$.link));return{Data:concat$8([u,...p.map($=>$.data)]),Links:g}}else{const p=n.reduce(($,_)=>{const b=hash$1(o,_.key)%DEFAULT_FANOUT;return $[b]=b in $?$[b].concat([_]):[_],$},[]);let g=0;for(const $ of p){const _=await r($,o+1);await f(_,g),g++}return{Data:u,Links:l}}async function f(p,g){const $=encode$1L(p),_=await sha256$8.digest($),b=CID$b.createV0(_);await t.put(b,$);const D=p.Links.reduce((v,S)=>v+(S.Tsize||0),0)+$.length;l[g]={Name:"",Tsize:D,Hash:b}}}}async function storeSet(t,e,r){const n=await storeItems(t,r.map(l=>({key:l}))),o=encode$1L(n),a=await sha256$8.digest(o),c=CID$b.createV0(a);await t.put(c,o);const u=n.Links.reduce((l,f)=>l+f.Tsize,0)+o.length;return{Name:e,Tsize:u,Hash:c}}async function pinsToDatastore(t,e,r,n){if(!await e.has(PIN_DS_KEY))return;const o=await e.get(PIN_DS_KEY),a=CID$b.decode(o),c=await t.get(a),u=decode$2k(c);let l=0;const f=await length$f(loadSet(t,u,PinTypes.recursive))+await length$f(loadSet(t,u,PinTypes.direct));for await(const p of loadSet(t,u,PinTypes.recursive)){l++;const g={depth:1/0};p.version!==0&&(g.version=p.version),p.code!==code$i&&(g.codec=p.code),await r.put(cidToKey$2(p),encode$T(g)),n(l/f*100,`Migrated recursive pin ${p}`)}for await(const p of loadSet(t,u,PinTypes.direct)){l++;const g={depth:0};p.version!==0&&(g.version=p.version),p.code!==code$i&&(g.codec=p.code),await r.put(cidToKey$2(p),encode$T(g)),n(l/f*100,`Migrated direct pin ${p}`)}await t.delete(a),await e.delete(PIN_DS_KEY)}async function pinsToDAG(t,e,r,n){const o=[],a=[];let c=0;const u=await length$f(r.queryKeys({}));for await(const{key:$,value:_}of r.query({})){c++;const b=decode$19(_),D=CID$b.create(b.version||0,b.codec||code$i,decode$1b(base32$k.decode("b"+$.toString().toLowerCase().split("/").pop())));b.depth===0?(n(c/u*100,`Reverted direct pin ${D}`),a.push(D)):(n(c/u*100,`Reverted recursive pin ${D}`),o.push(D))}n(100,"Updating pin root");const l={Links:[await storeSet(t,PinTypes.direct,a),await storeSet(t,PinTypes.recursive,o)]},f=encode$1L(l),p=await sha256$8.digest(f),g=CID$b.createV0(p);await t.put(g,f),await e.put(PIN_DS_KEY,g.bytes)}async function process$1(t,e,r){const n=t.blocks,o=t.datastore,a=t.pins;await n.open(),await o.open(),await a.open();try{await r(n,o,a,e)}finally{await a.close(),await o.close(),await n.close()}}const migration$3={version:9,description:"Migrates pins to datastore",migrate:(t,e=()=>{})=>process$1(t,e,pinsToDatastore),revert:(t,e=()=>{})=>process$1(t,e,pinsToDAG)},CONFIG_KEY=new Key("/config"),VERSION_KEY=new Key("/version");function findLevelJs$1(t){let e=t;for(;e.db||e.child;)if(e=e.db||e.child,e.type==="level-js"||e.constructor.name==="Level")return e}async function hasWithFallback$1(t,e,r){const n=await e(t);if(n)return n;const o=findLevelJs$1(r);return o?new Promise((a,c)=>{const u=o.store("readonly").get(t.toString());u.transaction.onabort=()=>{c(u.transaction.error)},u.transaction.oncomplete=()=>{a(!!u.result)}}):!1}async function getWithFallback$1(t,e,r,n){if(await r(t))return e(t);const o=findLevelJs$1(n);if(!o)throw notFoundError();return new Promise((a,c)=>{const u=o.store("readonly").get(t.toString());u.transaction.onabort=()=>{c(u.transaction.error)},u.transaction.oncomplete=()=>{if(u.result)return a(u.result);c(notFoundError())}})}function wrapStore(t){const e=t.get.bind(t),r=t.has.bind(t);return t.get=n=>getWithFallback$1(n,e,r,t),t.has=n=>hasWithFallback$1(n,r,t),t}function wrapBackends(t){return{...t,root:wrapStore(t.root),datastore:wrapStore(t.datastore),pins:wrapStore(t.pins),keys:wrapStore(t.keys)}}async function keysToBinary(t,e,r=()=>{}){const n=findLevelJs$1(e);if(!n){r(`${t} did not need an upgrade`);return}r(`Upgrading ${t}`),await withEach(n,(o,a)=>[{type:"del",key:o},{type:"put",key:fromString$y(o),value:a}])}async function keysToStrings(t,e,r=()=>{}){const n=findLevelJs$1(e);if(!n){r(`${t} did not need a downgrade`);return}r(`Downgrading ${t}`),await withEach(n,(o,a)=>[{type:"del",key:o},{type:"put",key:toString$D(o),value:a}])}function unwrap(t){return t.child?unwrap(t.child):t}async function process(t,e,r){const n=Object.entries(t).map(([c,u])=>({key:c,backend:unwrap(u)})).filter(({key:c,backend:u})=>u.constructor.name==="LevelDatastore").map(({key:c,backend:u})=>({name:c,store:u}));e(0,`Migrating ${n.length} dbs`);let o=0;const a=c=>{e(Math.round(o/n.length*100),c)};for(const{name:c,store:u}of n){await u.open();try{await r(c,u,a)}finally{o++,await u.close()}}e(100,`Migrated ${n.length} dbs`)}const migration$2={version:10,description:"Migrates datastore-level keys to binary",migrate:(t,e=()=>{})=>process(t,e,keysToBinary),revert:(t,e=()=>{})=>process(t,e,keysToStrings)};function withEach(t,e){function r(n,o){const a=t.store("readwrite"),c=a.transaction;let u=0,l;c.onabort=()=>o(l||c.error||new Error("aborted by user")),c.oncomplete=()=>o();function f(){const p=n[u++],g=p.key;let $;try{$=p.type==="del"?a.delete(g):a.put(p.value,g)}catch(_){l=_,c.abort();return}u<n.length&&($.onsuccess=f)}f()}return new Promise((n,o)=>{const a=t.iterator(),c=l=>l;a._deserializeKey=a._deserializeValue=c,u();function u(){const l=(f,p,g)=>{if(f||p===void 0){const $=_=>{if(_){o(_);return}n()};a.end($);return}r(e(p,g),u)};a.next(l)}})}const MFS_ROOT_KEY$1=new Key("/local/filesroot");async function storeMfsRootInDatastore(t,e=()=>{}){if(e(100,"Migrating MFS root to repo datastore"),await t.root.open(),await t.datastore.open(),await t.root.has(MFS_ROOT_KEY$1)){const r=await t.root.get(MFS_ROOT_KEY$1);await t.datastore.put(MFS_ROOT_KEY$1,r),await t.root.delete(MFS_ROOT_KEY$1)}await t.datastore.close(),await t.root.close(),e(100,"Stored MFS root in repo datastore")}async function storeMfsRootInRoot(t,e=()=>{}){if(e(100,"Migrating MFS root to repo root datastore"),await t.root.open(),await t.datastore.open(),await t.datastore.has(MFS_ROOT_KEY$1)){const r=await t.datastore.get(MFS_ROOT_KEY$1);await t.root.put(MFS_ROOT_KEY$1,r),await t.datastore.delete(MFS_ROOT_KEY$1)}await t.datastore.close(),await t.root.close(),e(100,"Stored MFS root in repo root datastore")}const migration$1={version:11,description:"Store mfs root in the datastore",migrate:storeMfsRootInDatastore,revert:storeMfsRootInRoot},$Reader$5=$protobuf.Reader,$Writer$5=$protobuf.Writer,$util$5=$protobuf.util,$root$5=$protobuf.roots.default||($protobuf.roots.default={}),Protocols=$root$5.Protocols=(()=>{function t(e){if(this.protocols=[],e)for(var r=Object.keys(e),n=0;n<r.length;++n)e[r[n]]!=null&&(this[r[n]]=e[r[n]])}return t.prototype.protocols=$util$5.emptyArray,t.encode=function(e,r){if(r||(r=$Writer$5.create()),e.protocols!=null&&e.protocols.length)for(var n=0;n<e.protocols.length;++n)r.uint32(10).string(e.protocols[n]);return r},t.decode=function(e,r){e instanceof $Reader$5||(e=$Reader$5.create(e));for(var n=r===void 0?e.len:e.pos+r,o=new $root$5.Protocols;e.pos<n;){var a=e.uint32();switch(a>>>3){case 1:o.protocols&&o.protocols.length||(o.protocols=[]),o.protocols.push(e.string());break;default:e.skipType(a&7);break}}return o},t.fromObject=function(e){if(e instanceof $root$5.Protocols)return e;var r=new $root$5.Protocols;if(e.protocols){if(!Array.isArray(e.protocols))throw TypeError(".Protocols.protocols: array expected");r.protocols=[];for(var n=0;n<e.protocols.length;++n)r.protocols[n]=String(e.protocols[n])}return r},t.toObject=function(e,r){r||(r={});var n={};if((r.arrays||r.defaults)&&(n.protocols=[]),e.protocols&&e.protocols.length){n.protocols=[];for(var o=0;o<e.protocols.length;++o)n.protocols[o]=e.protocols[o]}return n},t.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},t})(),$Reader$4=$protobuf.Reader,$Writer$4=$protobuf.Writer,$util$4=$protobuf.util,$root$4=$protobuf.roots.default||($protobuf.roots.default={}),Addresses=$root$4.Addresses=(()=>{function t(e){if(this.addrs=[],e)for(var r=Object.keys(e),n=0;n<r.length;++n)e[r[n]]!=null&&(this[r[n]]=e[r[n]])}return t.prototype.addrs=$util$4.emptyArray,t.prototype.certifiedRecord=null,t.encode=function(e,r){if(r||(r=$Writer$4.create()),e.addrs!=null&&e.addrs.length)for(var n=0;n<e.addrs.length;++n)$root$4.Addresses.Address.encode(e.addrs[n],r.uint32(10).fork()).ldelim();return e.certifiedRecord!=null&&Object.hasOwnProperty.call(e,"certifiedRecord")&&$root$4.Addresses.CertifiedRecord.encode(e.certifiedRecord,r.uint32(18).fork()).ldelim(),r},t.decode=function(e,r){e instanceof $Reader$4||(e=$Reader$4.create(e));for(var n=r===void 0?e.len:e.pos+r,o=new $root$4.Addresses;e.pos<n;){var a=e.uint32();switch(a>>>3){case 1:o.addrs&&o.addrs.length||(o.addrs=[]),o.addrs.push($root$4.Addresses.Address.decode(e,e.uint32()));break;case 2:o.certifiedRecord=$root$4.Addresses.CertifiedRecord.decode(e,e.uint32());break;default:e.skipType(a&7);break}}return o},t.fromObject=function(e){if(e instanceof $root$4.Addresses)return e;var r=new $root$4.Addresses;if(e.addrs){if(!Array.isArray(e.addrs))throw TypeError(".Addresses.addrs: array expected");r.addrs=[];for(var n=0;n<e.addrs.length;++n){if(typeof e.addrs[n]!="object")throw TypeError(".Addresses.addrs: object expected");r.addrs[n]=$root$4.Addresses.Address.fromObject(e.addrs[n])}}if(e.certifiedRecord!=null){if(typeof e.certifiedRecord!="object")throw TypeError(".Addresses.certifiedRecord: object expected");r.certifiedRecord=$root$4.Addresses.CertifiedRecord.fromObject(e.certifiedRecord)}return r},t.toObject=function(e,r){r||(r={});var n={};if((r.arrays||r.defaults)&&(n.addrs=[]),r.defaults&&(n.certifiedRecord=null),e.addrs&&e.addrs.length){n.addrs=[];for(var o=0;o<e.addrs.length;++o)n.addrs[o]=$root$4.Addresses.Address.toObject(e.addrs[o],r)}return e.certifiedRecord!=null&&e.hasOwnProperty("certifiedRecord")&&(n.certifiedRecord=$root$4.Addresses.CertifiedRecord.toObject(e.certifiedRecord,r)),n},t.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},t.Address=function(){function e(n){if(n)for(var o=Object.keys(n),a=0;a<o.length;++a)n[o[a]]!=null&&(this[o[a]]=n[o[a]])}e.prototype.multiaddr=$util$4.newBuffer([]),e.prototype.isCertified=null;let r;return Object.defineProperty(e.prototype,"_isCertified",{get:$util$4.oneOfGetter(r=["isCertified"]),set:$util$4.oneOfSetter(r)}),e.encode=function(n,o){return o||(o=$Writer$4.create()),n.multiaddr!=null&&Object.hasOwnProperty.call(n,"multiaddr")&&o.uint32(10).bytes(n.multiaddr),n.isCertified!=null&&Object.hasOwnProperty.call(n,"isCertified")&&o.uint32(16).bool(n.isCertified),o},e.decode=function(n,o){n instanceof $Reader$4||(n=$Reader$4.create(n));for(var a=o===void 0?n.len:n.pos+o,c=new $root$4.Addresses.Address;n.pos<a;){var u=n.uint32();switch(u>>>3){case 1:c.multiaddr=n.bytes();break;case 2:c.isCertified=n.bool();break;default:n.skipType(u&7);break}}return c},e.fromObject=function(n){if(n instanceof $root$4.Addresses.Address)return n;var o=new $root$4.Addresses.Address;return n.multiaddr!=null&&(typeof n.multiaddr=="string"?$util$4.base64.decode(n.multiaddr,o.multiaddr=$util$4.newBuffer($util$4.base64.length(n.multiaddr)),0):n.multiaddr.length&&(o.multiaddr=n.multiaddr)),n.isCertified!=null&&(o.isCertified=!!n.isCertified),o},e.toObject=function(n,o){o||(o={});var a={};return o.defaults&&(o.bytes===String?a.multiaddr="":(a.multiaddr=[],o.bytes!==Array&&(a.multiaddr=$util$4.newBuffer(a.multiaddr)))),n.multiaddr!=null&&n.hasOwnProperty("multiaddr")&&(a.multiaddr=o.bytes===String?$util$4.base64.encode(n.multiaddr,0,n.multiaddr.length):o.bytes===Array?Array.prototype.slice.call(n.multiaddr):n.multiaddr),n.isCertified!=null&&n.hasOwnProperty("isCertified")&&(a.isCertified=n.isCertified,o.oneofs&&(a._isCertified="isCertified")),a},e.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},e}(),t.CertifiedRecord=function(){function e(r){if(r)for(var n=Object.keys(r),o=0;o<n.length;++o)r[n[o]]!=null&&(this[n[o]]=r[n[o]])}return e.prototype.seq=$util$4.Long?$util$4.Long.fromBits(0,0,!0):0,e.prototype.raw=$util$4.newBuffer([]),e.encode=function(r,n){return n||(n=$Writer$4.create()),r.seq!=null&&Object.hasOwnProperty.call(r,"seq")&&n.uint32(8).uint64(r.seq),r.raw!=null&&Object.hasOwnProperty.call(r,"raw")&&n.uint32(18).bytes(r.raw),n},e.decode=function(r,n){r instanceof $Reader$4||(r=$Reader$4.create(r));for(var o=n===void 0?r.len:r.pos+n,a=new $root$4.Addresses.CertifiedRecord;r.pos<o;){var c=r.uint32();switch(c>>>3){case 1:a.seq=r.uint64();break;case 2:a.raw=r.bytes();break;default:r.skipType(c&7);break}}return a},e.fromObject=function(r){if(r instanceof $root$4.Addresses.CertifiedRecord)return r;var n=new $root$4.Addresses.CertifiedRecord;return r.seq!=null&&($util$4.Long?(n.seq=$util$4.Long.fromValue(r.seq)).unsigned=!0:typeof r.seq=="string"?n.seq=parseInt(r.seq,10):typeof r.seq=="number"?n.seq=r.seq:typeof r.seq=="object"&&(n.seq=new $util$4.LongBits(r.seq.low>>>0,r.seq.high>>>0).toNumber(!0))),r.raw!=null&&(typeof r.raw=="string"?$util$4.base64.decode(r.raw,n.raw=$util$4.newBuffer($util$4.base64.length(r.raw)),0):r.raw.length&&(n.raw=r.raw)),n},e.toObject=function(r,n){n||(n={});var o={};if(n.defaults){if($util$4.Long){var a=new $util$4.Long(0,0,!0);o.seq=n.longs===String?a.toString():n.longs===Number?a.toNumber():a}else o.seq=n.longs===String?"0":0;n.bytes===String?o.raw="":(o.raw=[],n.bytes!==Array&&(o.raw=$util$4.newBuffer(o.raw)))}return r.seq!=null&&r.hasOwnProperty("seq")&&(typeof r.seq=="number"?o.seq=n.longs===String?String(r.seq):r.seq:o.seq=n.longs===String?$util$4.Long.prototype.toString.call(r.seq):n.longs===Number?new $util$4.LongBits(r.seq.low>>>0,r.seq.high>>>0).toNumber(!0):r.seq),r.raw!=null&&r.hasOwnProperty("raw")&&(o.raw=n.bytes===String?$util$4.base64.encode(r.raw,0,r.raw.length):n.bytes===Array?Array.prototype.slice.call(r.raw):r.raw),o},e.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},e}(),t})(),$Reader$3=$protobuf.Reader,$Writer$3=$protobuf.Writer,$util$3=$protobuf.util,$root$3=$protobuf.roots.default||($protobuf.roots.default={}),Peer$1=$root$3.Peer=(()=>{function t(r){if(this.addresses=[],this.protocols=[],this.metadata=[],r)for(var n=Object.keys(r),o=0;o<n.length;++o)r[n[o]]!=null&&(this[n[o]]=r[n[o]])}t.prototype.addresses=$util$3.emptyArray,t.prototype.protocols=$util$3.emptyArray,t.prototype.metadata=$util$3.emptyArray,t.prototype.pubKey=null,t.prototype.peerRecordEnvelope=null;let e;return Object.defineProperty(t.prototype,"_pubKey",{get:$util$3.oneOfGetter(e=["pubKey"]),set:$util$3.oneOfSetter(e)}),Object.defineProperty(t.prototype,"_peerRecordEnvelope",{get:$util$3.oneOfGetter(e=["peerRecordEnvelope"]),set:$util$3.oneOfSetter(e)}),t.encode=function(r,n){if(n||(n=$Writer$3.create()),r.addresses!=null&&r.addresses.length)for(var o=0;o<r.addresses.length;++o)$root$3.Address.encode(r.addresses[o],n.uint32(10).fork()).ldelim();if(r.protocols!=null&&r.protocols.length)for(var o=0;o<r.protocols.length;++o)n.uint32(18).string(r.protocols[o]);if(r.metadata!=null&&r.metadata.length)for(var o=0;o<r.metadata.length;++o)$root$3.Metadata.encode(r.metadata[o],n.uint32(26).fork()).ldelim();return r.pubKey!=null&&Object.hasOwnProperty.call(r,"pubKey")&&n.uint32(34).bytes(r.pubKey),r.peerRecordEnvelope!=null&&Object.hasOwnProperty.call(r,"peerRecordEnvelope")&&n.uint32(42).bytes(r.peerRecordEnvelope),n},t.decode=function(r,n){r instanceof $Reader$3||(r=$Reader$3.create(r));for(var o=n===void 0?r.len:r.pos+n,a=new $root$3.Peer;r.pos<o;){var c=r.uint32();switch(c>>>3){case 1:a.addresses&&a.addresses.length||(a.addresses=[]),a.addresses.push($root$3.Address.decode(r,r.uint32()));break;case 2:a.protocols&&a.protocols.length||(a.protocols=[]),a.protocols.push(r.string());break;case 3:a.metadata&&a.metadata.length||(a.metadata=[]),a.metadata.push($root$3.Metadata.decode(r,r.uint32()));break;case 4:a.pubKey=r.bytes();break;case 5:a.peerRecordEnvelope=r.bytes();break;default:r.skipType(c&7);break}}return a},t.fromObject=function(r){if(r instanceof $root$3.Peer)return r;var n=new $root$3.Peer;if(r.addresses){if(!Array.isArray(r.addresses))throw TypeError(".Peer.addresses: array expected");n.addresses=[];for(var o=0;o<r.addresses.length;++o){if(typeof r.addresses[o]!="object")throw TypeError(".Peer.addresses: object expected");n.addresses[o]=$root$3.Address.fromObject(r.addresses[o])}}if(r.protocols){if(!Array.isArray(r.protocols))throw TypeError(".Peer.protocols: array expected");n.protocols=[];for(var o=0;o<r.protocols.length;++o)n.protocols[o]=String(r.protocols[o])}if(r.metadata){if(!Array.isArray(r.metadata))throw TypeError(".Peer.metadata: array expected");n.metadata=[];for(var o=0;o<r.metadata.length;++o){if(typeof r.metadata[o]!="object")throw TypeError(".Peer.metadata: object expected");n.metadata[o]=$root$3.Metadata.fromObject(r.metadata[o])}}return r.pubKey!=null&&(typeof r.pubKey=="string"?$util$3.base64.decode(r.pubKey,n.pubKey=$util$3.newBuffer($util$3.base64.length(r.pubKey)),0):r.pubKey.length&&(n.pubKey=r.pubKey)),r.peerRecordEnvelope!=null&&(typeof r.peerRecordEnvelope=="string"?$util$3.base64.decode(r.peerRecordEnvelope,n.peerRecordEnvelope=$util$3.newBuffer($util$3.base64.length(r.peerRecordEnvelope)),0):r.peerRecordEnvelope.length&&(n.peerRecordEnvelope=r.peerRecordEnvelope)),n},t.toObject=function(r,n){n||(n={});var o={};if((n.arrays||n.defaults)&&(o.addresses=[],o.protocols=[],o.metadata=[]),r.addresses&&r.addresses.length){o.addresses=[];for(var a=0;a<r.addresses.length;++a)o.addresses[a]=$root$3.Address.toObject(r.addresses[a],n)}if(r.protocols&&r.protocols.length){o.protocols=[];for(var a=0;a<r.protocols.length;++a)o.protocols[a]=r.protocols[a]}if(r.metadata&&r.metadata.length){o.metadata=[];for(var a=0;a<r.metadata.length;++a)o.metadata[a]=$root$3.Metadata.toObject(r.metadata[a],n)}return r.pubKey!=null&&r.hasOwnProperty("pubKey")&&(o.pubKey=n.bytes===String?$util$3.base64.encode(r.pubKey,0,r.pubKey.length):n.bytes===Array?Array.prototype.slice.call(r.pubKey):r.pubKey,n.oneofs&&(o._pubKey="pubKey")),r.peerRecordEnvelope!=null&&r.hasOwnProperty("peerRecordEnvelope")&&(o.peerRecordEnvelope=n.bytes===String?$util$3.base64.encode(r.peerRecordEnvelope,0,r.peerRecordEnvelope.length):n.bytes===Array?Array.prototype.slice.call(r.peerRecordEnvelope):r.peerRecordEnvelope,n.oneofs&&(o._peerRecordEnvelope="peerRecordEnvelope")),o},t.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},t})();$root$3.Address=(()=>{function t(r){if(r)for(var n=Object.keys(r),o=0;o<n.length;++o)r[n[o]]!=null&&(this[n[o]]=r[n[o]])}t.prototype.multiaddr=$util$3.newBuffer([]),t.prototype.isCertified=null;let e;return Object.defineProperty(t.prototype,"_isCertified",{get:$util$3.oneOfGetter(e=["isCertified"]),set:$util$3.oneOfSetter(e)}),t.encode=function(r,n){return n||(n=$Writer$3.create()),r.multiaddr!=null&&Object.hasOwnProperty.call(r,"multiaddr")&&n.uint32(10).bytes(r.multiaddr),r.isCertified!=null&&Object.hasOwnProperty.call(r,"isCertified")&&n.uint32(16).bool(r.isCertified),n},t.decode=function(r,n){r instanceof $Reader$3||(r=$Reader$3.create(r));for(var o=n===void 0?r.len:r.pos+n,a=new $root$3.Address;r.pos<o;){var c=r.uint32();switch(c>>>3){case 1:a.multiaddr=r.bytes();break;case 2:a.isCertified=r.bool();break;default:r.skipType(c&7);break}}return a},t.fromObject=function(r){if(r instanceof $root$3.Address)return r;var n=new $root$3.Address;return r.multiaddr!=null&&(typeof r.multiaddr=="string"?$util$3.base64.decode(r.multiaddr,n.multiaddr=$util$3.newBuffer($util$3.base64.length(r.multiaddr)),0):r.multiaddr.length&&(n.multiaddr=r.multiaddr)),r.isCertified!=null&&(n.isCertified=!!r.isCertified),n},t.toObject=function(r,n){n||(n={});var o={};return n.defaults&&(n.bytes===String?o.multiaddr="":(o.multiaddr=[],n.bytes!==Array&&(o.multiaddr=$util$3.newBuffer(o.multiaddr)))),r.multiaddr!=null&&r.hasOwnProperty("multiaddr")&&(o.multiaddr=n.bytes===String?$util$3.base64.encode(r.multiaddr,0,r.multiaddr.length):n.bytes===Array?Array.prototype.slice.call(r.multiaddr):r.multiaddr),r.isCertified!=null&&r.hasOwnProperty("isCertified")&&(o.isCertified=r.isCertified,n.oneofs&&(o._isCertified="isCertified")),o},t.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},t})(),$root$3.Metadata=(()=>{function t(e){if(e)for(var r=Object.keys(e),n=0;n<r.length;++n)e[r[n]]!=null&&(this[r[n]]=e[r[n]])}return t.prototype.key="",t.prototype.value=$util$3.newBuffer([]),t.encode=function(e,r){return r||(r=$Writer$3.create()),e.key!=null&&Object.hasOwnProperty.call(e,"key")&&r.uint32(10).string(e.key),e.value!=null&&Object.hasOwnProperty.call(e,"value")&&r.uint32(18).bytes(e.value),r},t.decode=function(e,r){e instanceof $Reader$3||(e=$Reader$3.create(e));for(var n=r===void 0?e.len:e.pos+r,o=new $root$3.Metadata;e.pos<n;){var a=e.uint32();switch(a>>>3){case 1:o.key=e.string();break;case 2:o.value=e.bytes();break;default:e.skipType(a&7);break}}return o},t.fromObject=function(e){if(e instanceof $root$3.Metadata)return e;var r=new $root$3.Metadata;return e.key!=null&&(r.key=String(e.key)),e.value!=null&&(typeof e.value=="string"?$util$3.base64.decode(e.value,r.value=$util$3.newBuffer($util$3.base64.length(e.value)),0):e.value.length&&(r.value=e.value)),r},t.toObject=function(e,r){r||(r={});var n={};return r.defaults&&(n.key="",r.bytes===String?n.value="":(n.value=[],r.bytes!==Array&&(n.value=$util$3.newBuffer(n.value)))),e.key!=null&&e.hasOwnProperty("key")&&(n.key=e.key),e.value!=null&&e.hasOwnProperty("value")&&(n.value=r.bytes===String?$util$3.base64.encode(e.value,0,e.value.length):r.bytes===Array?Array.prototype.slice.call(e.value):e.value),n},t.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},t})();const $Reader$2=$protobuf.Reader,$Writer$2=$protobuf.Writer,$util$2=$protobuf.util,$root$2=$protobuf.roots.default||($protobuf.roots.default={}),Envelope$1=$root$2.Envelope=(()=>{function t(e){if(e)for(var r=Object.keys(e),n=0;n<r.length;++n)e[r[n]]!=null&&(this[r[n]]=e[r[n]])}return t.prototype.publicKey=$util$2.newBuffer([]),t.prototype.payloadType=$util$2.newBuffer([]),t.prototype.payload=$util$2.newBuffer([]),t.prototype.signature=$util$2.newBuffer([]),t.encode=function(e,r){return r||(r=$Writer$2.create()),e.publicKey!=null&&Object.hasOwnProperty.call(e,"publicKey")&&r.uint32(10).bytes(e.publicKey),e.payloadType!=null&&Object.hasOwnProperty.call(e,"payloadType")&&r.uint32(18).bytes(e.payloadType),e.payload!=null&&Object.hasOwnProperty.call(e,"payload")&&r.uint32(26).bytes(e.payload),e.signature!=null&&Object.hasOwnProperty.call(e,"signature")&&r.uint32(42).bytes(e.signature),r},t.decode=function(e,r){e instanceof $Reader$2||(e=$Reader$2.create(e));for(var n=r===void 0?e.len:e.pos+r,o=new $root$2.Envelope;e.pos<n;){var a=e.uint32();switch(a>>>3){case 1:o.publicKey=e.bytes();break;case 2:o.payloadType=e.bytes();break;case 3:o.payload=e.bytes();break;case 5:o.signature=e.bytes();break;default:e.skipType(a&7);break}}return o},t.fromObject=function(e){if(e instanceof $root$2.Envelope)return e;var r=new $root$2.Envelope;return e.publicKey!=null&&(typeof e.publicKey=="string"?$util$2.base64.decode(e.publicKey,r.publicKey=$util$2.newBuffer($util$2.base64.length(e.publicKey)),0):e.publicKey.length&&(r.publicKey=e.publicKey)),e.payloadType!=null&&(typeof e.payloadType=="string"?$util$2.base64.decode(e.payloadType,r.payloadType=$util$2.newBuffer($util$2.base64.length(e.payloadType)),0):e.payloadType.length&&(r.payloadType=e.payloadType)),e.payload!=null&&(typeof e.payload=="string"?$util$2.base64.decode(e.payload,r.payload=$util$2.newBuffer($util$2.base64.length(e.payload)),0):e.payload.length&&(r.payload=e.payload)),e.signature!=null&&(typeof e.signature=="string"?$util$2.base64.decode(e.signature,r.signature=$util$2.newBuffer($util$2.base64.length(e.signature)),0):e.signature.length&&(r.signature=e.signature)),r},t.toObject=function(e,r){r||(r={});var n={};return r.defaults&&(r.bytes===String?n.publicKey="":(n.publicKey=[],r.bytes!==Array&&(n.publicKey=$util$2.newBuffer(n.publicKey))),r.bytes===String?n.payloadType="":(n.payloadType=[],r.bytes!==Array&&(n.payloadType=$util$2.newBuffer(n.payloadType))),r.bytes===String?n.payload="":(n.payload=[],r.bytes!==Array&&(n.payload=$util$2.newBuffer(n.payload))),r.bytes===String?n.signature="":(n.signature=[],r.bytes!==Array&&(n.signature=$util$2.newBuffer(n.signature)))),e.publicKey!=null&&e.hasOwnProperty("publicKey")&&(n.publicKey=r.bytes===String?$util$2.base64.encode(e.publicKey,0,e.publicKey.length):r.bytes===Array?Array.prototype.slice.call(e.publicKey):e.publicKey),e.payloadType!=null&&e.hasOwnProperty("payloadType")&&(n.payloadType=r.bytes===String?$util$2.base64.encode(e.payloadType,0,e.payloadType.length):r.bytes===Array?Array.prototype.slice.call(e.payloadType):e.payloadType),e.payload!=null&&e.hasOwnProperty("payload")&&(n.payload=r.bytes===String?$util$2.base64.encode(e.payload,0,e.payload.length):r.bytes===Array?Array.prototype.slice.call(e.payload):e.payload),e.signature!=null&&e.hasOwnProperty("signature")&&(n.signature=r.bytes===String?$util$2.base64.encode(e.signature,0,e.signature.length):r.bytes===Array?Array.prototype.slice.call(e.signature):e.signature),n},t.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},t})(),$Reader$1=$protobuf.Reader,$Writer$1=$protobuf.Writer,$util$1=$protobuf.util,$root$1=$protobuf.roots.default||($protobuf.roots.default={}),PeerRecord$2=$root$1.PeerRecord=(()=>{function t(e){if(this.addresses=[],e)for(var r=Object.keys(e),n=0;n<r.length;++n)e[r[n]]!=null&&(this[r[n]]=e[r[n]])}return t.prototype.peerId=$util$1.newBuffer([]),t.prototype.seq=$util$1.Long?$util$1.Long.fromBits(0,0,!0):0,t.prototype.addresses=$util$1.emptyArray,t.encode=function(e,r){if(r||(r=$Writer$1.create()),e.peerId!=null&&Object.hasOwnProperty.call(e,"peerId")&&r.uint32(10).bytes(e.peerId),e.seq!=null&&Object.hasOwnProperty.call(e,"seq")&&r.uint32(16).uint64(e.seq),e.addresses!=null&&e.addresses.length)for(var n=0;n<e.addresses.length;++n)$root$1.PeerRecord.AddressInfo.encode(e.addresses[n],r.uint32(26).fork()).ldelim();return r},t.decode=function(e,r){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var n=r===void 0?e.len:e.pos+r,o=new $root$1.PeerRecord;e.pos<n;){var a=e.uint32();switch(a>>>3){case 1:o.peerId=e.bytes();break;case 2:o.seq=e.uint64();break;case 3:o.addresses&&o.addresses.length||(o.addresses=[]),o.addresses.push($root$1.PeerRecord.AddressInfo.decode(e,e.uint32()));break;default:e.skipType(a&7);break}}return o},t.fromObject=function(e){if(e instanceof $root$1.PeerRecord)return e;var r=new $root$1.PeerRecord;if(e.peerId!=null&&(typeof e.peerId=="string"?$util$1.base64.decode(e.peerId,r.peerId=$util$1.newBuffer($util$1.base64.length(e.peerId)),0):e.peerId.length&&(r.peerId=e.peerId)),e.seq!=null&&($util$1.Long?(r.seq=$util$1.Long.fromValue(e.seq)).unsigned=!0:typeof e.seq=="string"?r.seq=parseInt(e.seq,10):typeof e.seq=="number"?r.seq=e.seq:typeof e.seq=="object"&&(r.seq=new $util$1.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),e.addresses){if(!Array.isArray(e.addresses))throw TypeError(".PeerRecord.addresses: array expected");r.addresses=[];for(var n=0;n<e.addresses.length;++n){if(typeof e.addresses[n]!="object")throw TypeError(".PeerRecord.addresses: object expected");r.addresses[n]=$root$1.PeerRecord.AddressInfo.fromObject(e.addresses[n])}}return r},t.toObject=function(e,r){r||(r={});var n={};if((r.arrays||r.defaults)&&(n.addresses=[]),r.defaults)if(r.bytes===String?n.peerId="":(n.peerId=[],r.bytes!==Array&&(n.peerId=$util$1.newBuffer(n.peerId))),$util$1.Long){var o=new $util$1.Long(0,0,!0);n.seq=r.longs===String?o.toString():r.longs===Number?o.toNumber():o}else n.seq=r.longs===String?"0":0;if(e.peerId!=null&&e.hasOwnProperty("peerId")&&(n.peerId=r.bytes===String?$util$1.base64.encode(e.peerId,0,e.peerId.length):r.bytes===Array?Array.prototype.slice.call(e.peerId):e.peerId),e.seq!=null&&e.hasOwnProperty("seq")&&(typeof e.seq=="number"?n.seq=r.longs===String?String(e.seq):e.seq:n.seq=r.longs===String?$util$1.Long.prototype.toString.call(e.seq):r.longs===Number?new $util$1.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),e.addresses&&e.addresses.length){n.addresses=[];for(var a=0;a<e.addresses.length;++a)n.addresses[a]=$root$1.PeerRecord.AddressInfo.toObject(e.addresses[a],r)}return n},t.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},t.AddressInfo=function(){function e(r){if(r)for(var n=Object.keys(r),o=0;o<n.length;++o)r[n[o]]!=null&&(this[n[o]]=r[n[o]])}return e.prototype.multiaddr=$util$1.newBuffer([]),e.encode=function(r,n){return n||(n=$Writer$1.create()),r.multiaddr!=null&&Object.hasOwnProperty.call(r,"multiaddr")&&n.uint32(10).bytes(r.multiaddr),n},e.decode=function(r,n){r instanceof $Reader$1||(r=$Reader$1.create(r));for(var o=n===void 0?r.len:r.pos+n,a=new $root$1.PeerRecord.AddressInfo;r.pos<o;){var c=r.uint32();switch(c>>>3){case 1:a.multiaddr=r.bytes();break;default:r.skipType(c&7);break}}return a},e.fromObject=function(r){if(r instanceof $root$1.PeerRecord.AddressInfo)return r;var n=new $root$1.PeerRecord.AddressInfo;return r.multiaddr!=null&&(typeof r.multiaddr=="string"?$util$1.base64.decode(r.multiaddr,n.multiaddr=$util$1.newBuffer($util$1.base64.length(r.multiaddr)),0):r.multiaddr.length&&(n.multiaddr=r.multiaddr)),n},e.toObject=function(r,n){n||(n={});var o={};return n.defaults&&(n.bytes===String?o.multiaddr="":(o.multiaddr=[],n.bytes!==Array&&(o.multiaddr=$util$1.newBuffer(o.multiaddr)))),r.multiaddr!=null&&r.hasOwnProperty("multiaddr")&&(o.multiaddr=n.bytes===String?$util$1.base64.encode(r.multiaddr,0,r.multiaddr.length):n.bytes===Array?Array.prototype.slice.call(r.multiaddr):r.multiaddr),o},e.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},e}(),t})(),isV4$8=isIPv4,isV6$8=isIPv6,toBytes$8=function(t){let e=0;if(t=t.toString().trim(),isV4$8(t)){const r=new Uint8Array(e+4);return t.split(/\./g).forEach(n=>{r[e++]=parseInt(n,10)&255}),r}if(isV6$8(t)){const r=t.split(":",8);let n;for(n=0;n<r.length;n++){const a=isV4$8(r[n]);let c;a&&(c=toBytes$8(r[n]),r[n]=toString$D(c.slice(0,2),"base16")),c!=null&&++n<8&&r.splice(n,0,toString$D(c.slice(2,4),"base16"))}if(r[0]==="")for(;r.length<8;)r.unshift("0");else if(r[r.length-1]==="")for(;r.length<8;)r.push("0");else if(r.length<8){for(n=0;n<r.length&&r[n]!=="";n++);const a=[n,1];for(n=9-r.length;n>0;n--)a.push("0");r.splice.apply(r,a)}const o=new Uint8Array(e+16);for(n=0;n<r.length;n++){const a=parseInt(r[n],16);o[e++]=a>>8&255,o[e++]=a&255}return o}throw new Error("invalid ip address")},toString$k=function(t,e=0,r){e=~~e,r=r??t.length-e;const n=new DataView(t.buffer);if(r===4){const o=[];for(let a=0;a<r;a++)o.push(t[e+a]);return o.join(".")}if(r===16){const o=[];for(let a=0;a<r;a+=2)o.push(n.getUint16(e+a).toString(16));return o.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""},V$8=-1,names$8={},codes$b={},table$8=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,V$8,"ip6zone"],[43,8,"ipcidr"],[53,V$8,"dns",!0],[54,V$8,"dns4",!0],[55,V$8,"dns6",!0],[56,V$8,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc"],[281,0,"webrtc-w3c"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,V$8,"unix",!1,!0],[421,V$8,"ipfs"],[421,V$8,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,V$8,"garlic64"],[448,0,"tls"],[449,V$8,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,V$8,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[777,V$8,"memory"]];table$8.forEach(t=>{const e=createProtocol$8(...t);codes$b[e.code]=e,names$8[e.name]=e});function createProtocol$8(t,e,r,n,o){return{code:t,size:e,name:r,resolvable:!!n,path:!!o}}function getProtocol$8(t){if(typeof t=="number"){if(codes$b[t]!=null)return codes$b[t];throw new Error(`no protocol with code: ${t}`)}else if(typeof t=="string"){if(names$8[t]!=null)return names$8[t];throw new Error(`no protocol with name: ${t}`)}throw new Error(`invalid protocol id type: ${typeof t}`)}const identity$d=from$l({prefix:"\0",name:"identity",encode:t=>toString$m(t),decode:t=>fromString$j(t)}),identityBase$9=Object.freeze(Object.defineProperty({__proto__:null,identity:identity$d},Symbol.toStringTag,{value:"Module"})),base2$i=rfc4648$d({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),base2$j=Object.freeze(Object.defineProperty({__proto__:null,base2:base2$i},Symbol.toStringTag,{value:"Module"})),base8$i=rfc4648$d({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),base8$j=Object.freeze(Object.defineProperty({__proto__:null,base8:base8$i},Symbol.toStringTag,{value:"Module"})),base10$i=baseX$d({prefix:"9",name:"base10",alphabet:"0123456789"}),base10$j=Object.freeze(Object.defineProperty({__proto__:null,base10:base10$i},Symbol.toStringTag,{value:"Module"})),base16$i=rfc4648$d({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),base16upper$9=rfc4648$d({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),base16$j=Object.freeze(Object.defineProperty({__proto__:null,base16:base16$i,base16upper:base16upper$9},Symbol.toStringTag,{value:"Module"})),base36$i=baseX$d({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),base36upper$9=baseX$d({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),base36$j=Object.freeze(Object.defineProperty({__proto__:null,base36:base36$i,base36upper:base36upper$9},Symbol.toStringTag,{value:"Module"})),base64$j=rfc4648$d({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),base64pad$9=rfc4648$d({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),base64url$9=rfc4648$d({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),base64urlpad$9=rfc4648$d({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),base64$k=Object.freeze(Object.defineProperty({__proto__:null,base64:base64$j,base64pad:base64pad$9,base64url:base64url$9,base64urlpad:base64urlpad$9},Symbol.toStringTag,{value:"Module"})),alphabet$a=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),alphabetBytesToChars$9=alphabet$a.reduce((t,e,r)=>(t[r]=e,t),[]),alphabetCharsToBytes$9=alphabet$a.reduce((t,e,r)=>(t[e.codePointAt(0)]=r,t),[]);function encode$S(t){return t.reduce((e,r)=>(e+=alphabetBytesToChars$9[r],e),"")}function decode$18(t){const e=[];for(const r of t){const n=alphabetCharsToBytes$9[r.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${r}`);e.push(n)}return new Uint8Array(e)}const base256emoji$i=from$l({prefix:"\u{1F680}",name:"base256emoji",encode:encode$S,decode:decode$18}),base256emoji$j=Object.freeze(Object.defineProperty({__proto__:null,base256emoji:base256emoji$i},Symbol.toStringTag,{value:"Module"}));new TextEncoder,new TextDecoder;const bases$9={...identityBase$9,...base2$j,...base8$j,...base10$j,...base16$j,...base32$l,...base36$j,...base58$8,...base64$k,...base256emoji$j};function convertToString$8(t,e){switch(getProtocol$8(t).code){case 4:case 41:return bytes2ip$8(e);case 42:return bytes2str$8(e);case 6:case 273:case 33:case 132:return bytes2port$8(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return bytes2str$8(e);case 421:return bytes2mh$8(e);case 444:return bytes2onion$8(e);case 445:return bytes2onion$8(e);case 466:return bytes2mb$8(e);default:return toString$D(e,"base16")}}function convertToBytes$8(t,e){switch(getProtocol$8(t).code){case 4:return ip2bytes$8(e);case 41:return ip2bytes$8(e);case 42:return str2bytes$8(e);case 6:case 273:case 33:case 132:return port2bytes$8(parseInt(e,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return str2bytes$8(e);case 421:return mh2bytes$8(e);case 444:return onion2bytes$8(e);case 445:return onion32bytes$8(e);case 466:return mb2bytes$8(e);default:return fromString$y(e,"base16")}}const decoders$8=Object.values(bases$9).map(t=>t.decoder),anybaseDecoder$8=function(){let t=decoders$8[0].or(decoders$8[1]);return decoders$8.slice(2).forEach(e=>t=t.or(e)),t}();function ip2bytes$8(t){if(!isIP(t))throw new Error("invalid ip address");return toBytes$8(t)}function bytes2ip$8(t){const e=toString$k(t,0,t.length);if(e==null)throw new Error("ipBuff is required");if(!isIP(e))throw new Error("invalid ip address");return e}function port2bytes$8(t){const e=new ArrayBuffer(2);return new DataView(e).setUint16(0,t),new Uint8Array(e)}function bytes2port$8(t){return new DataView(t.buffer).getUint16(t.byteOffset)}function str2bytes$8(t){const e=fromString$y(t),r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function bytes2str$8(t){const e=varint$w.decode(t);if(t=t.slice(varint$w.decode.bytes),t.length!==e)throw new Error("inconsistent lengths");return toString$D(t)}function mh2bytes$8(t){let e;t[0]==="Q"||t[0]==="1"?e=decode$1b(base58btc$c.decode(`z${t}`)).bytes:e=CID$b.parse(t).multihash.bytes;const r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function mb2bytes$8(t){const e=anybaseDecoder$8.decode(t),r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function bytes2mb$8(t){const e=varint$w.decode(t),r=t.slice(varint$w.decode.bytes);if(r.length!==e)throw new Error("inconsistent lengths");return"u"+toString$D(r,"base64url")}function bytes2mh$8(t){const e=varint$w.decode(t),r=t.slice(varint$w.decode.bytes);if(r.length!==e)throw new Error("inconsistent lengths");return toString$D(r,"base58btc")}function onion2bytes$8(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==16)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion address.`);const r=base32$k.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes$8(n);return concat$8([r,o],r.length+o.length)}function onion32bytes$8(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==56)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion3 address.`);const r=base32$k.decode(`b${e[0]}`),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes$8(n);return concat$8([r,o],r.length+o.length)}function bytes2onion$8(t){const e=t.slice(0,t.length-2),r=t.slice(t.length-2),n=toString$D(e,"base32"),o=bytes2port$8(r);return`${n}:${o}`}function stringToStringTuples$6(t){const e=[],r=t.split("/").slice(1);if(r.length===1&&r[0]==="")return[];for(let n=0;n<r.length;n++){const o=r[n],a=getProtocol$8(o);if(a.size===0){e.push([o]);continue}if(n++,n>=r.length)throw ParseError$8("invalid address: "+t);if(a.path===!0){e.push([o,cleanPath$8(r.slice(n).join("/"))]);break}e.push([o,r[n]])}return e}function stringTuplesToString$8(t){const e=[];return t.map(r=>{const n=protoFromTuple$6(r);return e.push(n.name),r.length>1&&r[1]!=null&&e.push(r[1]),null}),cleanPath$8(e.join("/"))}function stringTuplesToTuples$6(t){return t.map(e=>{Array.isArray(e)||(e=[e]);const r=protoFromTuple$6(e);return e.length>1?[r.code,convertToBytes$8(r.code,e[1])]:[r.code]})}function tuplesToStringTuples$6(t){return t.map(e=>{const r=protoFromTuple$6(e);return e[1]!=null?[r.code,convertToString$8(r.code,e[1])]:[r.code]})}function tuplesToBytes$8(t){return fromBytes$6(concat$8(t.map(e=>{const r=protoFromTuple$6(e);let n=Uint8Array.from(varint$w.encode(r.code));return e.length>1&&e[1]!=null&&(n=concat$8([n,e[1]])),n})))}function sizeForAddr$8(t,e){return t.size>0?t.size/8:t.size===0?0:varint$w.decode(e)+(varint$w.decode.bytes??0)}function bytesToTuples$6(t){const e=[];let r=0;for(;r<t.length;){const n=varint$w.decode(t,r),o=varint$w.decode.bytes??0,a=getProtocol$8(n),c=sizeForAddr$8(a,t.slice(r+o));if(c===0){e.push([n]),r+=o;continue}const u=t.slice(r+o,r+o+c);if(r+=c+o,r>t.length)throw ParseError$8("Invalid address Uint8Array: "+toString$D(t,"base16"));e.push([n,u])}return e}function bytesToString$6(t){const e=bytesToTuples$6(t),r=tuplesToStringTuples$6(e);return stringTuplesToString$8(r)}function stringToBytes$6(t){t=cleanPath$8(t);const e=stringToStringTuples$6(t),r=stringTuplesToTuples$6(e);return tuplesToBytes$8(r)}function fromString$h(t){return stringToBytes$6(t)}function fromBytes$6(t){const e=validateBytes$6(t);if(e!=null)throw e;return Uint8Array.from(t)}function validateBytes$6(t){try{bytesToTuples$6(t)}catch(e){return e}}function cleanPath$8(t){return"/"+t.trim().split("/").filter(e=>e).join("/")}function ParseError$8(t){return new Error("Error parsing address: "+t)}function protoFromTuple$6(t){return getProtocol$8(t[0])}var __classPrivateFieldGet$6=function(t,e,r,n){if(r==="a"&&!n)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?t!==e||!n:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return r==="m"?n:r==="a"?n.call(t):n?n.value:e.get(t)},__classPrivateFieldSet$6=function(t,e,r,n,o){if(n==="m")throw new TypeError("Private method is not writable");if(n==="a"&&!o)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?t!==e||!o:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return n==="a"?o.call(t,r):o?o.value=r:e.set(t,r),r},_DefaultMultiaddr_string$6,_DefaultMultiaddr_tuples$6,_DefaultMultiaddr_stringTuples$6,_a$6;const inspect$9=Symbol.for("nodejs.util.inspect.custom"),DNS_CODES$8=[getProtocol$8("dns").code,getProtocol$8("dns4").code,getProtocol$8("dns6").code,getProtocol$8("dnsaddr").code],resolvers$8=new Map,symbol$d=Symbol.for("@multiformats/js-multiaddr/multiaddr");function isMultiaddr$8(t){return!!t?.[symbol$d]}let DefaultMultiaddr$6=class xt{constructor(e){if(_DefaultMultiaddr_string$6.set(this,void 0),_DefaultMultiaddr_tuples$6.set(this,void 0),_DefaultMultiaddr_stringTuples$6.set(this,void 0),this[_a$6]=!0,e==null&&(e=""),e instanceof Uint8Array)this.bytes=fromBytes$6(e);else if(typeof e=="string"){if(e.length>0&&e.charAt(0)!=="/")throw new Error(`multiaddr "${e}" must start with a "/"`);this.bytes=fromString$h(e)}else if(isMultiaddr$8(e))this.bytes=fromBytes$6(e.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr")}toString(){return __classPrivateFieldGet$6(this,_DefaultMultiaddr_string$6,"f")==null&&__classPrivateFieldSet$6(this,_DefaultMultiaddr_string$6,bytesToString$6(this.bytes),"f"),__classPrivateFieldGet$6(this,_DefaultMultiaddr_string$6,"f")}toJSON(){return this.toString()}toOptions(){let e,r,n,o,a="";const c=getProtocol$8("tcp"),u=getProtocol$8("udp"),l=getProtocol$8("ip4"),f=getProtocol$8("ip6"),p=getProtocol$8("dns6"),g=getProtocol$8("ip6zone");for(const[$,_]of this.stringTuples())$===g.code&&(a=`%${_??""}`),DNS_CODES$8.includes($)&&(r=c.name,o=443,n=`${_??""}${a}`,e=$===p.code?6:4),($===c.code||$===u.code)&&(r=getProtocol$8($).name,o=parseInt(_??"")),($===l.code||$===f.code)&&(r=getProtocol$8($).name,n=`${_??""}${a}`,e=$===f.code?6:4);if(e==null||r==null||n==null||o==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:e,host:n,transport:r,port:o}}protos(){return this.protoCodes().map(e=>Object.assign({},getProtocol$8(e)))}protoCodes(){const e=[],r=this.bytes;let n=0;for(;n<r.length;){const o=varint$w.decode(r,n),a=varint$w.decode.bytes??0,c=getProtocol$8(o),u=sizeForAddr$8(c,r.slice(n+a));n+=u+a,e.push(o)}return e}protoNames(){return this.protos().map(e=>e.name)}tuples(){return __classPrivateFieldGet$6(this,_DefaultMultiaddr_tuples$6,"f")==null&&__classPrivateFieldSet$6(this,_DefaultMultiaddr_tuples$6,bytesToTuples$6(this.bytes),"f"),__classPrivateFieldGet$6(this,_DefaultMultiaddr_tuples$6,"f")}stringTuples(){return __classPrivateFieldGet$6(this,_DefaultMultiaddr_stringTuples$6,"f")==null&&__classPrivateFieldSet$6(this,_DefaultMultiaddr_stringTuples$6,tuplesToStringTuples$6(this.tuples()),"f"),__classPrivateFieldGet$6(this,_DefaultMultiaddr_stringTuples$6,"f")}encapsulate(e){return e=new xt(e),new xt(this.toString()+e.toString())}decapsulate(e){const r=e.toString(),n=this.toString(),o=n.lastIndexOf(r);if(o<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${e.toString()}`);return new xt(n.slice(0,o))}decapsulateCode(e){const r=this.tuples();for(let n=r.length-1;n>=0;n--)if(r[n][0]===e)return new xt(tuplesToBytes$8(r.slice(0,n)));return this}getPeerId(){try{const e=this.stringTuples().filter(r=>r[0]===names$8.ipfs.code).pop();if(e?.[1]!=null){const r=e[1];return r[0]==="Q"||r[0]==="1"?toString$D(base58btc$c.decode(`z${r}`),"base58btc"):toString$D(CID$b.parse(r).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){let e=null;try{e=this.stringTuples().filter(r=>getProtocol$8(r[0]).path===!0)[0][1],e==null&&(e=null)}catch{e=null}return e}equals(e){return equals$R(this.bytes,e.bytes)}async resolve(e){const r=this.protos().find(o=>o.resolvable);if(r==null)return[this];const n=resolvers$8.get(r.name);if(n==null)throw errcode(new Error(`no available resolver for ${r.name}`),"ERR_NO_AVAILABLE_RESOLVER");return(await n(this,e)).map(o=>new xt(o))}nodeAddress(){const e=this.toOptions();if(e.transport!=="tcp"&&e.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${e.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:e.family,address:e.host,port:e.port}}isThinWaistAddress(e){const r=(e??this).protos();return!(r.length!==2||r[0].code!==4&&r[0].code!==41||r[1].code!==6&&r[1].code!==273)}[(_DefaultMultiaddr_string$6=new WeakMap,_DefaultMultiaddr_tuples$6=new WeakMap,_DefaultMultiaddr_stringTuples$6=new WeakMap,_a$6=symbol$d,inspect$9)](){return`Multiaddr(${bytesToString$6(this.bytes)})`}};function multiaddr$8(t){return new DefaultMultiaddr$6(t)}$protobuf.util.Long=void 0,$protobuf.configure();async function storePeerUnderSingleDatastoreKey(t,e=()=>{}){e(0,"Storing each peerstore key under a single datastore key"),await t.datastore.open();const r={},n=[];for await(const{key:o,value:a}of t.datastore.query({prefix:"/peers"})){n.push(o);const c=o.toString(),[,u,l,f,p]=c.split("/");if(u==="peers"&&["protos","addrs","metadata","keys"].includes(l)&&f)if(r[f]=r[f]||{addresses:[],protocols:[],metadata:[]},l==="protos"){const g=Protocols.decode(a);r[f].protocols=g.protocols.sort()}else if(l==="addrs"){const g=Addresses.decode(a);r[f].addresses=g.addrs.sort(($,_)=>multiaddr$8($.multiaddr).toString().localeCompare(multiaddr$8(_.multiaddr).toString())),g.certifiedRecord&&g.certifiedRecord.raw&&(r[f].peerRecordEnvelope=g.certifiedRecord.raw)}else l==="metadata"?r[f].metadata.push({key:p,value:a}):l==="keys"&&(r[f].pubKey=a)}e(33,"Read peer data from store");for(const o of n)await t.datastore.delete(o);e(66,"Removed existing peer data from store");for(const o of Object.keys(r)){const a=r[o];a.metadata=a.metadata.sort((u,l)=>u.key.localeCompare(l.key));const c=Peer$1.encode(a).finish();await t.datastore.put(new Key(`/peers/${o}`),c)}await t.datastore.close(),e(100,"Stored each peerstore key under a single datastore key")}async function storePeerUnderMultipleDatastoreKeys(t,e=()=>{}){e(0,"Storing each peerstore key under a multiple datastore keys"),await t.datastore.open();const r={},n=[];for await(const{key:o,value:a}of t.datastore.query({prefix:"/peers"})){n.push(o);const c=o.toString(),[,,u]=c.split("/");r[u]=Peer$1.decode(a)}e(33,"Read peer data from store");for(const o of n)await t.datastore.delete(o);e(66,"Removed existing peer data from store");for(const[o,a]of Object.entries(r)){if(a.protocols&&a.protocols.length>0&&await t.datastore.put(new Key(`/peers/protos/${o}`),Protocols.encode({protocols:a.protocols}).finish()),a.addresses&&a.addresses.length>0){const c=a.peerRecordEnvelope;let u;if(c){const l=Envelope$1.decode(c),f=PeerRecord$2.decode(l.payload);u={raw:c,seq:f.seq}}await t.datastore.put(new Key(`/peers/addrs/${o}`),Addresses.encode({addrs:a.addresses,certifiedRecord:u}).finish())}if(a.metadata&&a.metadata.length>0)for(const{key:c,value:u}of a.metadata)await t.datastore.put(new Key(`/peers/metadata/${o}/${c}`),u);a.pubKey&&await t.datastore.put(new Key(`/peers/keys/${o}`),a.pubKey)}await t.datastore.close(),e(100,"Stored each peerstore key under multiple datastore keys")}const migration={version:12,description:"Store each peerstore peer under a single datastore key",migrate:storePeerUnderSingleDatastoreKey,revert:storePeerUnderMultipleDatastoreKeys},emptyMigration={description:"Empty migration.",migrate:()=>{},revert:()=>{},empty:!0},defaultMigrations=[Object.assign({version:1},emptyMigration),Object.assign({version:2},emptyMigration),Object.assign({version:3},emptyMigration),Object.assign({version:4},emptyMigration),Object.assign({version:5},emptyMigration),Object.assign({version:6},emptyMigration),Object.assign({version:7},emptyMigration),migration$4,migration$3,migration$2,migration$1,migration];class NonReversibleMigrationError extends Error{constructor(e){super(e),this.name="NonReversibleMigrationError",this.code=NonReversibleMigrationError.code,this.message=e}}NonReversibleMigrationError.code="ERR_NON_REVERSIBLE_MIGRATION";class NotInitializedRepoError extends Error{constructor(e){super(e),this.name="NotInitializedRepoError",this.code=NotInitializedRepoError.code,this.message=e}}NotInitializedRepoError.code="ERR_NOT_INITIALIZED_REPO";class RequiredParameterError extends Error{constructor(e){super(e),this.name="RequiredParameterError",this.code=RequiredParameterError.code,this.message=e}}RequiredParameterError.code="ERR_REQUIRED_PARAMETER";class InvalidValueError extends Error{constructor(e){super(e),this.name="InvalidValueError",this.code=InvalidValueError.code,this.message=e}}InvalidValueError.code="ERR_INVALID_VALUE";class MissingRepoOptionsError extends Error{constructor(e){super(e),this.name="MissingRepoOptionsError",this.code=MissingRepoOptionsError.code,this.message=e}}MissingRepoOptionsError.code="ERR_MISSING_REPO_OPTIONS";const Errors=Object.freeze(Object.defineProperty({__proto__:null,InvalidValueError,MissingRepoOptionsError,NonReversibleMigrationError,NotInitializedRepoError,RequiredParameterError},Symbol.toStringTag,{value:"Module"})),log$13=debug$1("ipfs:repo:migrator:repo:init");async function isRepoInitialized(t){if(!t)throw new MissingRepoOptionsError("Please pass repo options when trying to open a repo");const e=t.root;try{await e.open();const r=await e.has(VERSION_KEY),n=await e.has(CONFIG_KEY);return!r||!n?(log$13(`Version entry present: ${r}`),log$13(`Config entry present: ${n}`),!1):!0}catch(r){return log$13("While checking if repo is initialized error was thrown: "+r.message),!1}finally{if(e!==void 0)try{await e.close()}catch{}}}async function getVersion(t){if(!await isRepoInitialized(t))throw new NotInitializedRepoError("Repo is not initialized!");const e=t.root;await e.open();try{return parseInt(toString$D(await e.get(VERSION_KEY)))}finally{await e.close()}}async function setVersion(t,e){if(!e)throw new MissingRepoOptionsError("Please pass repo options when trying to open a repo");const r=e.root;await r.open(),await r.put(VERSION_KEY,fromString$y(String(t))),await r.close()}const log$12=debug$1("ipfs:repo:migrator");function getLatestMigrationVersion(t){return t=t||defaultMigrations,!Array.isArray(t)||t.length===0?0:t[t.length-1].version}async function migrate(t,e,r,n,o={}){const a=o.ignoreLock??!1,c=o.onProgress,u=o.isDryRun??!1,l=o.migrations??defaultMigrations;if(!t)throw new errors.RequiredParameterError("Path argument is required!");if(!r)throw new errors.RequiredParameterError("repoOptions argument is required!");if(!n)throw new errors.RequiredParameterError("toVersion argument is required!");if(!Number.isInteger(n)||n<=0)throw new errors.InvalidValueError("Version has to be positive integer!");e=wrapBackends(e);const f=await getVersion(e);if(f===n){log$12("Nothing to migrate.");return}if(f>n)throw new errors.InvalidValueError(`Current repo's version (${f}) is higher then toVersion (${n}), you probably wanted to revert it?`);verifyAvailableMigrations(l,f,n);let p;!u&&!a&&(p=await r.repoLock.lock(t));try{for(const g of l){if(n!==void 0&&g.version>n)break;if(!(g.version<=f)){log$12(`Migrating version ${g.version}`);try{if(!u){let $=()=>{};c&&($=(_,b)=>c(g.version,_.toFixed(2),b)),await g.migrate(e,$)}}catch($){const _=g.version-1;throw log$12(`An exception was raised during execution of migration. Setting the repo's version to last successfully migrated version: ${_}`),await setVersion(_,e),new Error(`During migration to version ${g.version} exception was raised: ${$.stack||$.message||$}`)}log$12(`Migrating to version ${g.version} finished`)}}u||await setVersion(n||getLatestMigrationVersion(l),e),log$12("Repo successfully migrated",n!==void 0?`to version ${n}!`:"to latest version!")}finally{!u&&!a&&p&&await p.close()}}async function revert(t,e,r,n,o={}){const a=o.ignoreLock??!1,c=o.onProgress,u=o.isDryRun??!1,l=o.migrations??defaultMigrations;if(!t)throw new errors.RequiredParameterError("Path argument is required!");if(!r)throw new errors.RequiredParameterError("repoOptions argument is required!");if(!n)throw new errors.RequiredParameterError("When reverting migrations, you have to specify to which version to revert!");if(!Number.isInteger(n)||n<=0)throw new errors.InvalidValueError("Version has to be positive integer!");e=wrapBackends(e);const f=await getVersion(e);if(f===n){log$12("Nothing to revert.");return}if(f<n)throw new errors.InvalidValueError(`Current repo's version (${f}) is lower then toVersion (${n}), you probably wanted to migrate it?`);verifyAvailableMigrations(l,n,f,!0);let p;!u&&!a&&(p=await r.repoLock.lock(t)),log$12(`Reverting from version ${f} to ${n}`);try{const g=l.slice().reverse();for(const $ of g){if($.version<=n)break;if(!($.version>f)){log$12(`Reverting migration version ${$.version}`);try{if(!u){let _=()=>{};c&&(_=(b,D)=>c($.version,b.toFixed(2),D)),await $.revert(e,_)}}catch(_){const b=$.version;throw log$12(`An exception was raised during execution of migration. Setting the repo's version to last successfully reverted version: ${b}`),await setVersion(b,e),_.message=`During reversion to version ${$.version} exception was raised: ${_.message}`,_}log$12(`Reverting to version ${$.version} finished`)}}u||await setVersion(n,e),log$12(`All migrations successfully reverted to version ${n}!`)}finally{!u&&!a&&p&&await p.close()}}function verifyAvailableMigrations(t,e,r,n=!1){let o=0;for(const a of t){if(a.version>r)break;if(a.version>e){if(n&&!a.revert)throw new errors.NonReversibleMigrationError(`It is not possible to revert to version ${e} because migration version ${a.version} is not reversible. Cancelling reversion.`);o++}}if(o!==r-e)throw new errors.InvalidValueError(`The ipfs-repo-migrations package does not have all migration to migrate from version ${e} to ${r}`)}const errors=Errors;var bytes$2={exports:{}};bytes$2.exports=bytes,bytes$2.exports.format=format$b,bytes$2.exports.parse=parse$3;var formatThousandsRegExp=/\B(?=(\d{3})+(?!\d))/g,formatDecimalsRegExp=/(?:\.0*|(\.[^0]+)0+)$/,map$2={b:1,kb:1024,mb:1<<20,gb:1<<30,tb:Math.pow(1024,4),pb:Math.pow(1024,5)},parseRegExp=/^((-|\+)?(\d+(?:\.\d+)?)) *(kb|mb|gb|tb|pb)$/i;function bytes(t,e){return typeof t=="string"?parse$3(t):typeof t=="number"?format$b(t,e):null}function format$b(t,e){if(!Number.isFinite(t))return null;var r=Math.abs(t),n=e&&e.thousandsSeparator||"",o=e&&e.unitSeparator||"",a=e&&e.decimalPlaces!==void 0?e.decimalPlaces:2,c=!!(e&&e.fixedDecimals),u=e&&e.unit||"";(!u||!map$2[u.toLowerCase()])&&(r>=map$2.pb?u="PB":r>=map$2.tb?u="TB":r>=map$2.gb?u="GB":r>=map$2.mb?u="MB":r>=map$2.kb?u="KB":u="B");var l=t/map$2[u.toLowerCase()],f=l.toFixed(a);return c||(f=f.replace(formatDecimalsRegExp,"$1")),n&&(f=f.split(".").map(function(p,g){return g===0?p.replace(formatThousandsRegExp,n):p}).join(".")),f+o+u}function parse$3(t){if(typeof t=="number"&&!isNaN(t))return t;if(typeof t!="string")return null;var e=parseRegExp.exec(t),r,n="b";return e?(r=parseFloat(e[1]),n=e[4].toLowerCase()):(r=parseInt(t,10),n="b"),isNaN(r)?null:Math.floor(map$2[n]*r)}var bytesExports=bytes$2.exports;const bytes$1=getDefaultExportFromCjs(bytesExports);class LockExistsError extends Error{constructor(e){super(e),this.name="LockExistsError",this.code=LockExistsError.code}}LockExistsError.code="ERR_LOCK_EXISTS";class NotFoundError extends Error{constructor(e){super(e),this.name="NotFoundError",this.code=NotFoundError.code}}NotFoundError.code="ERR_NOT_FOUND";class InvalidRepoVersionError extends Error{constructor(e){super(e),this.name="InvalidRepoVersionError",this.code=InvalidRepoVersionError.code}}InvalidRepoVersionError.code="ERR_INVALID_REPO_VERSION";const ERR_REPO_NOT_INITIALIZED="ERR_REPO_NOT_INITIALIZED",ERR_REPO_ALREADY_OPEN="ERR_REPO_ALREADY_OPEN",ERR_REPO_ALREADY_CLOSED="ERR_REPO_ALREADY_CLOSED";async function hasWithFallback(t,e,r){const n=await e(t);if(n)return n;const o=findLevelJs(r);return o?new Promise((a,c)=>{const u=o.store("readonly").get(t.toString());u.transaction.onabort=()=>{c(u.transaction.error)},u.transaction.oncomplete=()=>{a(!!u.result)}}):!1}async function getWithFallback(t,e,r,n){if(await r(t))return e(t);const o=findLevelJs(n);if(!o)throw new NotFoundError;return new Promise((a,c)=>{const u=o.store("readonly").get(t.toString());u.transaction.onabort=()=>{c(u.transaction.error)},u.transaction.oncomplete=()=>{if(u.result)return a(u.result);c(new NotFoundError)}})}function findLevelJs(t){let e=t;for(;e.db||e.child;)if(e=e.db||e.child,e.type==="level-js"||e.constructor.name==="Level")return e}const log$11=debug$1("ipfs:repo:version"),versionKey=new Key("version");function version$1(t){return{async exists(){return hasWithFallback(versionKey,t.has.bind(t),t)},async get(){const e=await getWithFallback(versionKey,t.get.bind(t),t.has.bind(t),t);return parseInt(toString$D(e),10)},set(e){return t.put(versionKey,fromString$y(String(e)))},async check(e){const r=await this.get();return log$11("comparing version: %s and %s",r,e),r===e||r===6&&e===7||e===6&&r===7}}}const Queue$1=PQueue$1.default?PQueue$1.default:PQueue$1,configKey=new Key("config");function config(t){const e=new Queue$1({concurrency:1}),r={async getAll(a={}){const c=await getWithFallback(configKey,t.get.bind(t),t.has.bind(t),t);return JSON.parse(toString$D(c))},async get(a,c={}){if(a==null)throw new NotFoundError(`Key ${a} does not exist in config`);const u=await this.getAll(c),l=objectSafeGet(u,a);if(l===void 0)throw new NotFoundError(`Key ${a} does not exist in config`);return l},set(a,c,u={}){if(typeof a!="string"&&!(a instanceof String))throw errcode(new Error("Invalid key type: "+typeof a),"ERR_INVALID_KEY");if(c===void 0||c instanceof Uint8Array)throw errcode(new Error("Invalid value type: "+typeof c),"ERR_INVALID_VALUE");return e.add(()=>n({key:a,value:c},u.signal))},replace(a,c={}){if(!a||a instanceof Uint8Array)throw errcode(new Error("Invalid value type: "+typeof a),"ERR_INVALID_VALUE");return e.add(()=>n({key:void 0,value:a},c.signal))},async exists(){return hasWithFallback(configKey,t.has.bind(t),t)}};return r;async function n(a,c){if(c&&c.aborted)return;const u=a.key,l=a.value;if(u){const f=await r.getAll();return typeof f=="object"&&f!==null&&objectSafeSet(f,u,l),o(f)}return o(l)}function o(a){const c=fromString$y(JSON.stringify(a,null,2));return t.put(configKey,c)}}function isPlainObject(t){if(typeof t!="object"||t===null)return!1;const e=Object.getPrototypeOf(t);return(e===null||e===Object.prototype||Object.getPrototypeOf(e)===null)&&!(Symbol.toStringTag in t)&&!(Symbol.iterator in t)}function sortKeys(t,e={}){if(!isPlainObject(t)&&!Array.isArray(t))throw new TypeError("Expected a plain object or array");const{deep:r,compare:n}=e,o=[],a=[],c=l=>{const f=o.indexOf(l);if(f!==-1)return a[f];const p=[];return o.push(l),a.push(p),p.push(...l.map(g=>Array.isArray(g)?c(g):isPlainObject(g)?u(g):g)),p},u=l=>{const f=o.indexOf(l);if(f!==-1)return a[f];const p={},g=Object.keys(l).sort(n);o.push(l),a.push(p);for(const $ of g){const _=l[$];let b;r&&Array.isArray(_)?b=c(_):b=r&&isPlainObject(_)?u(_):_,Object.defineProperty(p,$,{...Object.getOwnPropertyDescriptor(l,$),value:b})}return p};return Array.isArray(t)?r?c(t):t.slice():u(t)}const specKey=new Key("datastore_spec");function spec(t){return{exists(){return t.has(specKey)},async get(){const e=await t.get(specKey);return JSON.parse(toString$D(e))},async set(e){return t.put(specKey,fromString$y(JSON.stringify(sortKeys(e,{deep:!0}))))}}}const apiFile=new Key("api");function apiAddr(t){return{async get(){const e=await t.get(apiFile);return e&&e.toString()},set(e){return t.put(apiFile,fromString$y(e.toString()))},delete(){return t.delete(apiFile)}}}var encode_1$d=encode$R,MSB$i=128,REST$i=127,MSBALL$d=~REST$i,INT$d=Math.pow(2,31);function encode$R(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$d;)e[r++]=t&255|MSB$i,t/=128;for(;t&MSBALL$d;)e[r++]=t&255|MSB$i,t>>>=7;return e[r]=t|0,encode$R.bytes=r-n+1,e}var decode$17=read$e,MSB$1$d=128,REST$1$d=127;function read$e(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$e.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$d)<<o:(c&REST$1$d)*Math.pow(2,o),o+=7}while(c>=MSB$1$d);return read$e.bytes=a-n,r}var N1$h=Math.pow(2,7),N2$h=Math.pow(2,14),N3$h=Math.pow(2,21),N4$h=Math.pow(2,28),N5$h=Math.pow(2,35),N6$h=Math.pow(2,42),N7$h=Math.pow(2,49),N8$e=Math.pow(2,56),N9$e=Math.pow(2,63),length$e=function(t){return t<N1$h?1:t<N2$h?2:t<N3$h?3:t<N4$h?4:t<N5$h?5:t<N6$h?6:t<N7$h?7:t<N8$e?8:t<N9$e?9:10},varint$e={encode:encode_1$d,decode:decode$17,encodingLength:length$e},_brrp_varint$c=varint$e;const decode$16=(t,e=0)=>[_brrp_varint$c.decode(t,e),_brrp_varint$c.decode.bytes],encodeTo$c=(t,e,r=0)=>(_brrp_varint$c.encode(t,e,r),e),encodingLength$f=t=>_brrp_varint$c.encodingLength(t),equals$n=(t,e)=>{if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0},coerce$c=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")},create$f=(t,e)=>{const r=e.byteLength,n=encodingLength$f(t),o=n+encodingLength$f(r),a=new Uint8Array(o+r);return encodeTo$c(t,a,0),encodeTo$c(r,a,n),a.set(e,o),new Digest$c(t,r,e,a)},decode$15=t=>{const e=coerce$c(t),[r,n]=decode$16(e),[o,a]=decode$16(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$c(r,o,c,e)},equals$m=(t,e)=>{if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$n(t.bytes,r.bytes)}};let Digest$c=class{constructor(t,e,r,n){this.code=t,this.size=e,this.digest=r,this.bytes=n}};function base$f(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$e=base$f,_brrp__multiformats_scope_baseX$c=src$e;let Encoder$e=class{constructor(t,e,r){this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$e=class{constructor(t,e,r){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$f(this,t)}},ComposedDecoder$c=class{constructor(t){this.decoders=t}or(t){return or$f(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$f=(t,e)=>new ComposedDecoder$c({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});let Codec$c=class{constructor(t,e,r,n){this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$e(t,e,r),this.decoder=new Decoder$e(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};const from$j=({name:t,prefix:e,encode:r,decode:n})=>new Codec$c(t,e,r,n),baseX$c=({prefix:t,name:e,alphabet:r})=>{const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$c(r,e);return from$j({prefix:t,name:e,encode:n,decode:a=>coerce$c(o(a))})},decode$14=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode$Q=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648$c=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from$j({prefix:e,name:t,encode(o){return encode$Q(o,n,r)},decode(o){return decode$14(o,n,r,t)}}),base58btc$b=baseX$c({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"});baseX$c({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});const base32$j=rfc4648$c({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5});rfc4648$c({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),rfc4648$c({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),rfc4648$c({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),rfc4648$c({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),rfc4648$c({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),rfc4648$c({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),rfc4648$c({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),rfc4648$c({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});const format$a=(t,e)=>{const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$a(r,baseCache$a(t),e||base58btc$b.encoder);default:return toStringV1$a(r,baseCache$a(t),e||base32$j.encoder)}},cache$c=new WeakMap,baseCache$a=t=>{const e=cache$c.get(t);if(e==null){const r=new Map;return cache$c.set(t,r),r}return e};let CID$a=class ze{constructor(e,r,n,o){this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$a)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$a)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return ze.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$f(e,r);return ze.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return ze.equals(this,e)}static equals(e,r){const n=r;return n&&e.code===n.code&&e.version===n.version&&equals$m(e.multihash,n.multihash)}toString(e){return format$a(this,e)}toJSON(){return{"/":format$a(this)}}link(){return this}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof ze)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new ze(n,o,a,c||encodeCID$b(n,o,a.bytes))}else if(r[cidSymbol$a]===!0){const{version:n,multihash:o,code:a}=r,c=decode$15(o);return ze.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$a)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$a}) block encoding`);return new ze(e,r,n,n.bytes)}case 1:{const o=encodeCID$b(e,r,n.bytes);return new ze(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return ze.create(0,DAG_PB_CODE$a,e)}static createV1(e,r){return ze.create(1,e,r)}static decode(e){const[r,n]=ze.decodeFirst(e);if(n.length)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=ze.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$c(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$c(r.multihashCode,r.digestSize,a,o);return[r.version===0?ze.createV0(c):ze.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$16(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$a;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$a(e,r),a=ze.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$a(a).set(n,e),a}};const parseCIDtoBytes$a=(t,e)=>{switch(t[0]){case"Q":{const r=e||base58btc$b;return[base58btc$b.prefix,r.decode(`${base58btc$b.prefix}${t}`)]}case base58btc$b.prefix:{const r=e||base58btc$b;return[base58btc$b.prefix,r.decode(t)]}case base32$j.prefix:{const r=e||base32$j;return[base32$j.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}},toStringV0$a=(t,e,r)=>{const{prefix:n}=r;if(n!==base58btc$b.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o},toStringV1$a=(t,e,r)=>{const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o},DAG_PB_CODE$a=112,SHA_256_CODE$a=18,encodeCID$b=(t,e,r)=>{const n=encodingLength$f(t),o=n+encodingLength$f(e),a=new Uint8Array(o+r.byteLength);return encodeTo$c(t,a,0),encodeTo$c(e,a,n),a.set(r,o),a},cidSymbol$a=Symbol.for("@ipld/js-cid/CID"),code$5=0,name$5="identity",encode$P=coerce$c,digest$2=t=>create$f(code$5,encode$P(t)),identity$c={code:code$5,name:name$5,encode:encode$P,digest:digest$2};function createIdStore(t){return{open(){return t.open()},close(){return t.close()},query(e,r){return t.query(e,r)},queryKeys(e,r){return t.queryKeys(e,r)},async get(e,r){const n=extractContents(e);return n.isIdentity?Promise.resolve(n.digest):t.get(e,r)},async*getMany(e,r){for await(const n of e)yield this.get(n,r)},async put(e,r,n){const{isIdentity:o}=extractContents(e);o||await t.put(e,r,n)},async*putMany(e,r){const n=pushable({objectMode:!0});(globalThis.process&&globalThis.process.nextTick?globalThis.process.nextTick:globalThis.setImmediate||globalThis.setTimeout)(async()=>{try{await drain$1(t.putMany(async function*(){for await(const{key:o,value:a}of e)extractContents(o).isIdentity||(yield{key:o,value:a}),n.push({key:o,value:a})}())),n.end()}catch(o){n.end(o)}}),yield*n},has(e,r){const{isIdentity:n}=extractContents(e);return n?Promise.resolve(!0):t.has(e,r)},delete(e,r){const{isIdentity:n}=extractContents(e);return n?Promise.resolve():t.delete(e,r)},deleteMany(e,r){return t.deleteMany(filter$1(e,n=>!extractContents(n).isIdentity),r)},batch(){const e=t.batch();return{put(r,n){const{isIdentity:o}=extractContents(r);o||e.put(r,n)},delete(r){const{isIdentity:n}=extractContents(r);n||e.delete(r)},commit:r=>e.commit(r)}}}}function extractContents(t){const e=CID$a.asCID(t);if(e==null)throw errcode(new Error("Not a valid cid"),"ERR_INVALID_CID");return e.multihash.code!==identity$c.code?{isIdentity:!1}:{isIdentity:!0,digest:e.multihash.digest}}const log$10=debug$1("ipfs:repo:lock:memory"),lockFile="repo.lock",LOCKS={};async function lock(t){const e=t+"/"+lockFile;if(log$10("locking %s",e),LOCKS[e]===!0)throw new LockExistsError(`Lock already being held for file: ${e}`);return LOCKS[e]=!0,{async close(){LOCKS[e]&&delete LOCKS[e]}}}async function locked(t){const e=t+"/"+lockFile;return log$10(`checking lock: ${e}`),!!LOCKS[e]}const MemoryLock={lock,locked},defaultOptions$5={autoMigrate:!0,onMigrationProgress:()=>{},repoOwner:!0,repoLock:MemoryLock},defaultDatastore={Spec:{type:"mount",mounts:[{mountpoint:"/blocks",type:"measure",prefix:"flatfs.datastore",child:{type:"flatfs",path:"blocks",sync:!0,shardFunc:"/repo/flatfs/shard/v1/next-to-last/2"}},{mountpoint:"/",type:"measure",prefix:"leveldb.datastore",child:{type:"levelds",path:"datastore",compression:"none"}}]}};function readonly({enumerable:t=!0,configurable:e=!1}={}){return{enumerable:t,configurable:e,writable:!1}}function*linksWithin(t,e){if(e!=null&&typeof e=="object")if(Array.isArray(e))for(const[r,n]of e.entries()){const o=[...t,r],a=CID$a.asCID(n);a?yield[o.join("/"),a]:typeof n=="object"&&(yield*links(n,o))}else{const r=CID$a.asCID(e);r?yield[t.join("/"),r]:yield*links(e,t)}}function*links(t,e){if(t==null||t instanceof Uint8Array)return;const r=CID$a.asCID(t);r&&(yield[e.join("/"),r]);for(const[n,o]of Object.entries(t)){const a=[...e,n];yield*linksWithin(a,o)}}function*treeWithin(t,e){if(Array.isArray(e))for(const[r,n]of e.entries()){const o=[...t,r];yield o.join("/"),typeof n=="object"&&!CID$a.asCID(n)&&(yield*tree(n,o))}else yield*tree(e,t)}function*tree(t,e){if(!(t==null||typeof t!="object"))for(const[r,n]of Object.entries(t)){const o=[...e,r];yield o.join("/"),n!=null&&!(n instanceof Uint8Array)&&typeof n=="object"&&!CID$a.asCID(n)&&(yield*treeWithin(o,n))}}function get(t,e){let r=t;for(const[n,o]of e.entries()){if(r=r[o],r==null)throw new Error(`Object has no property at ${e.slice(0,n+1).map(c=>`[${JSON.stringify(c)}]`).join("")}`);const a=CID$a.asCID(r);if(a)return{value:a,remaining:e.slice(n+1).join("/")}}return{value:r}}class Block{constructor({cid:e,bytes:r,value:n}){if(!e||!r||typeof n>"u")throw new Error("Missing required argument");this.cid=e,this.bytes=r,this.value=n,this.asBlock=this,Object.defineProperties(this,{cid:readonly(),bytes:readonly(),value:readonly(),asBlock:readonly()})}links(){return links(this.value,[])}tree(){return tree(this.value,[])}get(e="/"){return get(this.value,e.split("/").filter(Boolean))}}function createUnsafe({bytes:t,cid:e,value:r,codec:n}){const o=r!==void 0?r:n&&n.decode(t);if(o===void 0)throw new Error('Missing required argument, must either provide "value" or "codec"');return new Block({cid:e,bytes:t,value:o})}const typeofs=["string","number","bigint","symbol"],objectTypeNames=["Function","Generator","AsyncGenerator","GeneratorFunction","AsyncGeneratorFunction","AsyncFunction","Observable","Array","Buffer","Object","RegExp","Date","Error","Map","Set","WeakMap","WeakSet","ArrayBuffer","SharedArrayBuffer","DataView","Promise","URL","HTMLElement","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array"];function is(t){if(t===null)return"null";if(t===void 0)return"undefined";if(t===!0||t===!1)return"boolean";const e=typeof t;return typeofs.includes(e)?e:e==="function"?"Function":Array.isArray(t)?"Array":isBuffer$1(t)?"Buffer":getObjectType(t)||"Object"}function isBuffer$1(t){return t&&t.constructor&&t.constructor.isBuffer&&t.constructor.isBuffer.call(null,t)}function getObjectType(t){const e=Object.prototype.toString.call(t).slice(8,-1);if(objectTypeNames.includes(e))return e}class Type{constructor(e,r,n){this.major=e,this.majorEncoded=e<<5,this.name=r,this.terminal=n}toString(){return`Type[${this.major}].${this.name}`}compare(e){return this.major<e.major?-1:this.major>e.major?1:0}}Type.uint=new Type(0,"uint",!0),Type.negint=new Type(1,"negint",!0),Type.bytes=new Type(2,"bytes",!0),Type.string=new Type(3,"string",!0),Type.array=new Type(4,"array",!1),Type.map=new Type(5,"map",!1),Type.tag=new Type(6,"tag",!1),Type.float=new Type(7,"float",!0),Type.false=new Type(7,"false",!0),Type.true=new Type(7,"true",!0),Type.null=new Type(7,"null",!0),Type.undefined=new Type(7,"undefined",!0),Type.break=new Type(7,"break",!0);class Token{constructor(e,r,n){this.type=e,this.value=r,this.encodedLength=n,this.encodedBytes=void 0,this.byteValue=void 0}toString(){return`Token[${this.type}].${this.value}`}}const useBuffer=globalThis.process&&!globalThis.process.browser&&globalThis.Buffer&&typeof globalThis.Buffer.isBuffer=="function",textDecoder$1=new TextDecoder,textEncoder$1=new TextEncoder;function isBuffer(t){return useBuffer&&globalThis.Buffer.isBuffer(t)}function asU8A(t){return t instanceof Uint8Array?isBuffer(t)?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):t:Uint8Array.from(t)}const toString$j=useBuffer?(t,e,r)=>r-e>64?globalThis.Buffer.from(t.subarray(e,r)).toString("utf8"):utf8Slice(t,e,r):(t,e,r)=>r-e>64?textDecoder$1.decode(t.subarray(e,r)):utf8Slice(t,e,r),fromString$g=useBuffer?t=>t.length>64?globalThis.Buffer.from(t):utf8ToBytes(t):t=>t.length>64?textEncoder$1.encode(t):utf8ToBytes(t),fromArray=t=>Uint8Array.from(t),slice=useBuffer?(t,e,r)=>isBuffer(t)?new Uint8Array(t.subarray(e,r)):t.slice(e,r):(t,e,r)=>t.slice(e,r),concat$2=useBuffer?(t,e)=>(t=t.map(r=>r instanceof Uint8Array?r:globalThis.Buffer.from(r)),asU8A(globalThis.Buffer.concat(t,e))):(t,e)=>{const r=new Uint8Array(e);let n=0;for(let o of t)n+o.length>r.length&&(o=o.subarray(0,r.length-n)),r.set(o,n),n+=o.length;return r},alloc=useBuffer?t=>globalThis.Buffer.allocUnsafe(t):t=>new Uint8Array(t);function compare$1(t,e){if(isBuffer(t)&&isBuffer(e))return t.compare(e);for(let r=0;r<t.length;r++)if(t[r]!==e[r])return t[r]<e[r]?-1:1;return 0}function utf8ToBytes(t,e=1/0){let r;const n=t.length;let o=null;const a=[];for(let c=0;c<n;++c){if(r=t.charCodeAt(c),r>55295&&r<57344){if(!o){if(r>56319){(e-=3)>-1&&a.push(239,191,189);continue}else if(c+1===n){(e-=3)>-1&&a.push(239,191,189);continue}o=r;continue}if(r<56320){(e-=3)>-1&&a.push(239,191,189),o=r;continue}r=(o-55296<<10|r-56320)+65536}else o&&(e-=3)>-1&&a.push(239,191,189);if(o=null,r<128){if((e-=1)<0)break;a.push(r)}else if(r<2048){if((e-=2)<0)break;a.push(r>>6|192,r&63|128)}else if(r<65536){if((e-=3)<0)break;a.push(r>>12|224,r>>6&63|128,r&63|128)}else if(r<1114112){if((e-=4)<0)break;a.push(r>>18|240,r>>12&63|128,r>>6&63|128,r&63|128)}else throw new Error("Invalid code point")}return a}function utf8Slice(t,e,r){const n=[];for(;e<r;){const o=t[e];let a=null,c=o>239?4:o>223?3:o>191?2:1;if(e+c<=r){let u,l,f,p;switch(c){case 1:o<128&&(a=o);break;case 2:u=t[e+1],(u&192)===128&&(p=(o&31)<<6|u&63,p>127&&(a=p));break;case 3:u=t[e+1],l=t[e+2],(u&192)===128&&(l&192)===128&&(p=(o&15)<<12|(u&63)<<6|l&63,p>2047&&(p<55296||p>57343)&&(a=p));break;case 4:u=t[e+1],l=t[e+2],f=t[e+3],(u&192)===128&&(l&192)===128&&(f&192)===128&&(p=(o&15)<<18|(u&63)<<12|(l&63)<<6|f&63,p>65535&&p<1114112&&(a=p))}}a===null?(a=65533,c=1):a>65535&&(a-=65536,n.push(a>>>10&1023|55296),a=56320|a&1023),n.push(a),e+=c}return decodeCodePointsArray(n)}const MAX_ARGUMENTS_LENGTH=4096;function decodeCodePointsArray(t){const e=t.length;if(e<=MAX_ARGUMENTS_LENGTH)return String.fromCharCode.apply(String,t);let r="",n=0;for(;n<e;)r+=String.fromCharCode.apply(String,t.slice(n,n+=MAX_ARGUMENTS_LENGTH));return r}const defaultChunkSize=256;class Bl{constructor(e=defaultChunkSize){this.chunkSize=e,this.cursor=0,this.maxCursor=-1,this.chunks=[],this._initReuseChunk=null}reset(){this.cursor=0,this.maxCursor=-1,this.chunks.length&&(this.chunks=[]),this._initReuseChunk!==null&&(this.chunks.push(this._initReuseChunk),this.maxCursor=this._initReuseChunk.length-1)}push(e){let r=this.chunks[this.chunks.length-1];if(this.cursor+e.length<=this.maxCursor+1){const n=r.length-(this.maxCursor-this.cursor)-1;r.set(e,n)}else{if(r){const n=r.length-(this.maxCursor-this.cursor)-1;n<r.length&&(this.chunks[this.chunks.length-1]=r.subarray(0,n),this.maxCursor=this.cursor-1)}e.length<64&&e.length<this.chunkSize?(r=alloc(this.chunkSize),this.chunks.push(r),this.maxCursor+=r.length,this._initReuseChunk===null&&(this._initReuseChunk=r),r.set(e,0)):(this.chunks.push(e),this.maxCursor+=e.length)}this.cursor+=e.length}toBytes(e=!1){let r;if(this.chunks.length===1){const n=this.chunks[0];e&&this.cursor>n.length/2?(r=this.cursor===n.length?n:n.subarray(0,this.cursor),this._initReuseChunk=null,this.chunks=[]):r=slice(n,0,this.cursor)}else r=concat$2(this.chunks,this.cursor);return e&&this.reset(),r}}const decodeErrPrefix="CBOR decode error:",encodeErrPrefix="CBOR encode error:";function assertEnoughData(t,e,r){if(t.length-e<r)throw new Error(`${decodeErrPrefix} not enough data for type`)}const uintBoundaries=[24,256,65536,4294967296,BigInt("18446744073709551616")];function readUint8(t,e,r){assertEnoughData(t,e,1);const n=t[e];if(r.strict===!0&&n<uintBoundaries[0])throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`);return n}function readUint16(t,e,r){assertEnoughData(t,e,2);const n=t[e]<<8|t[e+1];if(r.strict===!0&&n<uintBoundaries[1])throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`);return n}function readUint32(t,e,r){assertEnoughData(t,e,4);const n=t[e]*16777216+(t[e+1]<<16)+(t[e+2]<<8)+t[e+3];if(r.strict===!0&&n<uintBoundaries[2])throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`);return n}function readUint64(t,e,r){assertEnoughData(t,e,8);const n=t[e]*16777216+(t[e+1]<<16)+(t[e+2]<<8)+t[e+3],o=t[e+4]*16777216+(t[e+5]<<16)+(t[e+6]<<8)+t[e+7],a=(BigInt(n)<<BigInt(32))+BigInt(o);if(r.strict===!0&&a<uintBoundaries[3])throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`);if(a<=Number.MAX_SAFE_INTEGER)return Number(a);if(r.allowBigInt===!0)return a;throw new Error(`${decodeErrPrefix} integers outside of the safe integer range are not supported`)}function decodeUint8(t,e,r,n){return new Token(Type.uint,readUint8(t,e+1,n),2)}function decodeUint16(t,e,r,n){return new Token(Type.uint,readUint16(t,e+1,n),3)}function decodeUint32(t,e,r,n){return new Token(Type.uint,readUint32(t,e+1,n),5)}function decodeUint64(t,e,r,n){return new Token(Type.uint,readUint64(t,e+1,n),9)}function encodeUint(t,e){return encodeUintValue(t,0,e.value)}function encodeUintValue(t,e,r){if(r<uintBoundaries[0]){const n=Number(r);t.push([e|n])}else if(r<uintBoundaries[1]){const n=Number(r);t.push([e|24,n])}else if(r<uintBoundaries[2]){const n=Number(r);t.push([e|25,n>>>8,n&255])}else if(r<uintBoundaries[3]){const n=Number(r);t.push([e|26,n>>>24&255,n>>>16&255,n>>>8&255,n&255])}else{const n=BigInt(r);if(n<uintBoundaries[4]){const o=[e|27,0,0,0,0,0,0,0];let a=Number(n&BigInt(4294967295)),c=Number(n>>BigInt(32)&BigInt(4294967295));o[8]=a&255,a=a>>8,o[7]=a&255,a=a>>8,o[6]=a&255,a=a>>8,o[5]=a&255,o[4]=c&255,c=c>>8,o[3]=c&255,c=c>>8,o[2]=c&255,c=c>>8,o[1]=c&255,t.push(o)}else throw new Error(`${decodeErrPrefix} encountered BigInt larger than allowable range`)}}encodeUint.encodedSize=function t(e){return encodeUintValue.encodedSize(e.value)},encodeUintValue.encodedSize=function t(e){return e<uintBoundaries[0]?1:e<uintBoundaries[1]?2:e<uintBoundaries[2]?3:e<uintBoundaries[3]?5:9},encodeUint.compareTokens=function t(e,r){return e.value<r.value?-1:e.value>r.value?1:0};function decodeNegint8(t,e,r,n){return new Token(Type.negint,-1-readUint8(t,e+1,n),2)}function decodeNegint16(t,e,r,n){return new Token(Type.negint,-1-readUint16(t,e+1,n),3)}function decodeNegint32(t,e,r,n){return new Token(Type.negint,-1-readUint32(t,e+1,n),5)}const neg1b=BigInt(-1),pos1b=BigInt(1);function decodeNegint64(t,e,r,n){const o=readUint64(t,e+1,n);if(typeof o!="bigint"){const a=-1-o;if(a>=Number.MIN_SAFE_INTEGER)return new Token(Type.negint,a,9)}if(n.allowBigInt!==!0)throw new Error(`${decodeErrPrefix} integers outside of the safe integer range are not supported`);return new Token(Type.negint,neg1b-BigInt(o),9)}function encodeNegint(t,e){const r=e.value,n=typeof r=="bigint"?r*neg1b-pos1b:r*-1-1;encodeUintValue(t,e.type.majorEncoded,n)}encodeNegint.encodedSize=function t(e){const r=e.value,n=typeof r=="bigint"?r*neg1b-pos1b:r*-1-1;return n<uintBoundaries[0]?1:n<uintBoundaries[1]?2:n<uintBoundaries[2]?3:n<uintBoundaries[3]?5:9},encodeNegint.compareTokens=function t(e,r){return e.value<r.value?1:e.value>r.value?-1:0};function toToken$3(t,e,r,n){assertEnoughData(t,e,r+n);const o=slice(t,e+r,e+r+n);return new Token(Type.bytes,o,r+n)}function decodeBytesCompact(t,e,r,n){return toToken$3(t,e,1,r)}function decodeBytes8(t,e,r,n){return toToken$3(t,e,2,readUint8(t,e+1,n))}function decodeBytes16(t,e,r,n){return toToken$3(t,e,3,readUint16(t,e+1,n))}function decodeBytes32(t,e,r,n){return toToken$3(t,e,5,readUint32(t,e+1,n))}function decodeBytes64(t,e,r,n){const o=readUint64(t,e+1,n);if(typeof o=="bigint")throw new Error(`${decodeErrPrefix} 64-bit integer bytes lengths not supported`);return toToken$3(t,e,9,o)}function tokenBytes(t){return t.encodedBytes===void 0&&(t.encodedBytes=t.type===Type.string?fromString$g(t.value):t.value),t.encodedBytes}function encodeBytes(t,e){const r=tokenBytes(e);encodeUintValue(t,e.type.majorEncoded,r.length),t.push(r)}encodeBytes.encodedSize=function t(e){const r=tokenBytes(e);return encodeUintValue.encodedSize(r.length)+r.length},encodeBytes.compareTokens=function t(e,r){return compareBytes(tokenBytes(e),tokenBytes(r))};function compareBytes(t,e){return t.length<e.length?-1:t.length>e.length?1:compare$1(t,e)}function toToken$2(t,e,r,n,o){const a=r+n;assertEnoughData(t,e,a);const c=new Token(Type.string,toString$j(t,e+r,e+a),a);return o.retainStringBytes===!0&&(c.byteValue=slice(t,e+r,e+a)),c}function decodeStringCompact(t,e,r,n){return toToken$2(t,e,1,r,n)}function decodeString8(t,e,r,n){return toToken$2(t,e,2,readUint8(t,e+1,n),n)}function decodeString16(t,e,r,n){return toToken$2(t,e,3,readUint16(t,e+1,n),n)}function decodeString32(t,e,r,n){return toToken$2(t,e,5,readUint32(t,e+1,n),n)}function decodeString64(t,e,r,n){const o=readUint64(t,e+1,n);if(typeof o=="bigint")throw new Error(`${decodeErrPrefix} 64-bit integer string lengths not supported`);return toToken$2(t,e,9,o,n)}const encodeString=encodeBytes;function toToken$1(t,e,r,n){return new Token(Type.array,n,r)}function decodeArrayCompact(t,e,r,n){return toToken$1(t,e,1,r)}function decodeArray8(t,e,r,n){return toToken$1(t,e,2,readUint8(t,e+1,n))}function decodeArray16(t,e,r,n){return toToken$1(t,e,3,readUint16(t,e+1,n))}function decodeArray32(t,e,r,n){return toToken$1(t,e,5,readUint32(t,e+1,n))}function decodeArray64(t,e,r,n){const o=readUint64(t,e+1,n);if(typeof o=="bigint")throw new Error(`${decodeErrPrefix} 64-bit integer array lengths not supported`);return toToken$1(t,e,9,o)}function decodeArrayIndefinite(t,e,r,n){if(n.allowIndefinite===!1)throw new Error(`${decodeErrPrefix} indefinite length items not allowed`);return toToken$1(t,e,1,1/0)}function encodeArray(t,e){encodeUintValue(t,Type.array.majorEncoded,e.value)}encodeArray.compareTokens=encodeUint.compareTokens,encodeArray.encodedSize=function t(e){return encodeUintValue.encodedSize(e.value)};function toToken(t,e,r,n){return new Token(Type.map,n,r)}function decodeMapCompact(t,e,r,n){return toToken(t,e,1,r)}function decodeMap8(t,e,r,n){return toToken(t,e,2,readUint8(t,e+1,n))}function decodeMap16(t,e,r,n){return toToken(t,e,3,readUint16(t,e+1,n))}function decodeMap32(t,e,r,n){return toToken(t,e,5,readUint32(t,e+1,n))}function decodeMap64(t,e,r,n){const o=readUint64(t,e+1,n);if(typeof o=="bigint")throw new Error(`${decodeErrPrefix} 64-bit integer map lengths not supported`);return toToken(t,e,9,o)}function decodeMapIndefinite(t,e,r,n){if(n.allowIndefinite===!1)throw new Error(`${decodeErrPrefix} indefinite length items not allowed`);return toToken(t,e,1,1/0)}function encodeMap(t,e){encodeUintValue(t,Type.map.majorEncoded,e.value)}encodeMap.compareTokens=encodeUint.compareTokens,encodeMap.encodedSize=function t(e){return encodeUintValue.encodedSize(e.value)};function decodeTagCompact(t,e,r,n){return new Token(Type.tag,r,1)}function decodeTag8(t,e,r,n){return new Token(Type.tag,readUint8(t,e+1,n),2)}function decodeTag16(t,e,r,n){return new Token(Type.tag,readUint16(t,e+1,n),3)}function decodeTag32(t,e,r,n){return new Token(Type.tag,readUint32(t,e+1,n),5)}function decodeTag64(t,e,r,n){return new Token(Type.tag,readUint64(t,e+1,n),9)}function encodeTag(t,e){encodeUintValue(t,Type.tag.majorEncoded,e.value)}encodeTag.compareTokens=encodeUint.compareTokens,encodeTag.encodedSize=function t(e){return encodeUintValue.encodedSize(e.value)};const MINOR_FALSE=20,MINOR_TRUE=21,MINOR_NULL=22,MINOR_UNDEFINED=23;function decodeUndefined(t,e,r,n){if(n.allowUndefined===!1)throw new Error(`${decodeErrPrefix} undefined values are not supported`);return n.coerceUndefinedToNull===!0?new Token(Type.null,null,1):new Token(Type.undefined,void 0,1)}function decodeBreak(t,e,r,n){if(n.allowIndefinite===!1)throw new Error(`${decodeErrPrefix} indefinite length items not allowed`);return new Token(Type.break,void 0,1)}function createToken(t,e,r){if(r){if(r.allowNaN===!1&&Number.isNaN(t))throw new Error(`${decodeErrPrefix} NaN values are not supported`);if(r.allowInfinity===!1&&(t===1/0||t===-1/0))throw new Error(`${decodeErrPrefix} Infinity values are not supported`)}return new Token(Type.float,t,e)}function decodeFloat16(t,e,r,n){return createToken(readFloat16(t,e+1),3,n)}function decodeFloat32(t,e,r,n){return createToken(readFloat32(t,e+1),5,n)}function decodeFloat64(t,e,r,n){return createToken(readFloat64(t,e+1),9,n)}function encodeFloat(t,e,r){const n=e.value;if(n===!1)t.push([Type.float.majorEncoded|MINOR_FALSE]);else if(n===!0)t.push([Type.float.majorEncoded|MINOR_TRUE]);else if(n===null)t.push([Type.float.majorEncoded|MINOR_NULL]);else if(n===void 0)t.push([Type.float.majorEncoded|MINOR_UNDEFINED]);else{let o,a=!1;(!r||r.float64!==!0)&&(encodeFloat16(n),o=readFloat16(ui8a,1),n===o||Number.isNaN(n)?(ui8a[0]=249,t.push(ui8a.slice(0,3)),a=!0):(encodeFloat32(n),o=readFloat32(ui8a,1),n===o&&(ui8a[0]=250,t.push(ui8a.slice(0,5)),a=!0))),a||(encodeFloat64(n),o=readFloat64(ui8a,1),ui8a[0]=251,t.push(ui8a.slice(0,9)))}}encodeFloat.encodedSize=function t(e,r){const n=e.value;if(n===!1||n===!0||n===null||n===void 0)return 1;if(!r||r.float64!==!0){encodeFloat16(n);let o=readFloat16(ui8a,1);if(n===o||Number.isNaN(n))return 3;if(encodeFloat32(n),o=readFloat32(ui8a,1),n===o)return 5}return 9};const buffer=new ArrayBuffer(9),dataView=new DataView(buffer,1),ui8a=new Uint8Array(buffer,0);function encodeFloat16(t){if(t===1/0)dataView.setUint16(0,31744,!1);else if(t===-1/0)dataView.setUint16(0,64512,!1);else if(Number.isNaN(t))dataView.setUint16(0,32256,!1);else{dataView.setFloat32(0,t);const e=dataView.getUint32(0),r=(e&2139095040)>>23,n=e&8388607;if(r===255)dataView.setUint16(0,31744,!1);else if(r===0)dataView.setUint16(0,(t&2147483648)>>16|n>>13,!1);else{const o=r-127;o<-24?dataView.setUint16(0,0):o<-14?dataView.setUint16(0,(e&2147483648)>>16|1<<24+o,!1):dataView.setUint16(0,(e&2147483648)>>16|o+15<<10|n>>13,!1)}}}function readFloat16(t,e){if(t.length-e<2)throw new Error(`${decodeErrPrefix} not enough data for float16`);const r=(t[e]<<8)+t[e+1];if(r===31744)return 1/0;if(r===64512)return-1/0;if(r===32256)return NaN;const n=r>>10&31,o=r&1023;let a;return n===0?a=o*2**-24:n!==31?a=(o+1024)*2**(n-25):a=o===0?1/0:NaN,r&32768?-a:a}function encodeFloat32(t){dataView.setFloat32(0,t,!1)}function readFloat32(t,e){if(t.length-e<4)throw new Error(`${decodeErrPrefix} not enough data for float32`);const r=(t.byteOffset||0)+e;return new DataView(t.buffer,r,4).getFloat32(0,!1)}function encodeFloat64(t){dataView.setFloat64(0,t,!1)}function readFloat64(t,e){if(t.length-e<8)throw new Error(`${decodeErrPrefix} not enough data for float64`);const r=(t.byteOffset||0)+e;return new DataView(t.buffer,r,8).getFloat64(0,!1)}encodeFloat.compareTokens=encodeUint.compareTokens;function invalidMinor(t,e,r){throw new Error(`${decodeErrPrefix} encountered invalid minor (${r}) for major ${t[e]>>>5}`)}function errorer(t){return()=>{throw new Error(`${decodeErrPrefix} ${t}`)}}const jump=[];for(let t=0;t<=23;t++)jump[t]=invalidMinor;jump[24]=decodeUint8,jump[25]=decodeUint16,jump[26]=decodeUint32,jump[27]=decodeUint64,jump[28]=invalidMinor,jump[29]=invalidMinor,jump[30]=invalidMinor,jump[31]=invalidMinor;for(let t=32;t<=55;t++)jump[t]=invalidMinor;jump[56]=decodeNegint8,jump[57]=decodeNegint16,jump[58]=decodeNegint32,jump[59]=decodeNegint64,jump[60]=invalidMinor,jump[61]=invalidMinor,jump[62]=invalidMinor,jump[63]=invalidMinor;for(let t=64;t<=87;t++)jump[t]=decodeBytesCompact;jump[88]=decodeBytes8,jump[89]=decodeBytes16,jump[90]=decodeBytes32,jump[91]=decodeBytes64,jump[92]=invalidMinor,jump[93]=invalidMinor,jump[94]=invalidMinor,jump[95]=errorer("indefinite length bytes/strings are not supported");for(let t=96;t<=119;t++)jump[t]=decodeStringCompact;jump[120]=decodeString8,jump[121]=decodeString16,jump[122]=decodeString32,jump[123]=decodeString64,jump[124]=invalidMinor,jump[125]=invalidMinor,jump[126]=invalidMinor,jump[127]=errorer("indefinite length bytes/strings are not supported");for(let t=128;t<=151;t++)jump[t]=decodeArrayCompact;jump[152]=decodeArray8,jump[153]=decodeArray16,jump[154]=decodeArray32,jump[155]=decodeArray64,jump[156]=invalidMinor,jump[157]=invalidMinor,jump[158]=invalidMinor,jump[159]=decodeArrayIndefinite;for(let t=160;t<=183;t++)jump[t]=decodeMapCompact;jump[184]=decodeMap8,jump[185]=decodeMap16,jump[186]=decodeMap32,jump[187]=decodeMap64,jump[188]=invalidMinor,jump[189]=invalidMinor,jump[190]=invalidMinor,jump[191]=decodeMapIndefinite;for(let t=192;t<=215;t++)jump[t]=decodeTagCompact;jump[216]=decodeTag8,jump[217]=decodeTag16,jump[218]=decodeTag32,jump[219]=decodeTag64,jump[220]=invalidMinor,jump[221]=invalidMinor,jump[222]=invalidMinor,jump[223]=invalidMinor;for(let t=224;t<=243;t++)jump[t]=errorer("simple values are not supported");jump[244]=invalidMinor,jump[245]=invalidMinor,jump[246]=invalidMinor,jump[247]=decodeUndefined,jump[248]=errorer("simple values are not supported"),jump[249]=decodeFloat16,jump[250]=decodeFloat32,jump[251]=decodeFloat64,jump[252]=invalidMinor,jump[253]=invalidMinor,jump[254]=invalidMinor,jump[255]=decodeBreak;const quick=[];for(let t=0;t<24;t++)quick[t]=new Token(Type.uint,t,1);for(let t=-1;t>=-24;t--)quick[31-t]=new Token(Type.negint,t,1);quick[64]=new Token(Type.bytes,new Uint8Array(0),1),quick[96]=new Token(Type.string,"",1),quick[128]=new Token(Type.array,0,1),quick[160]=new Token(Type.map,0,1),quick[244]=new Token(Type.false,!1,1),quick[245]=new Token(Type.true,!0,1),quick[246]=new Token(Type.null,null,1);function quickEncodeToken(t){switch(t.type){case Type.false:return fromArray([244]);case Type.true:return fromArray([245]);case Type.null:return fromArray([246]);case Type.bytes:return t.value.length?void 0:fromArray([64]);case Type.string:return t.value===""?fromArray([96]):void 0;case Type.array:return t.value===0?fromArray([128]):void 0;case Type.map:return t.value===0?fromArray([160]):void 0;case Type.uint:return t.value<24?fromArray([Number(t.value)]):void 0;case Type.negint:if(t.value>=-24)return fromArray([31-Number(t.value)])}}const defaultEncodeOptions={float64:!1,mapSorter,quickEncodeToken};function makeCborEncoders(){const t=[];return t[Type.uint.major]=encodeUint,t[Type.negint.major]=encodeNegint,t[Type.bytes.major]=encodeBytes,t[Type.string.major]=encodeString,t[Type.array.major]=encodeArray,t[Type.map.major]=encodeMap,t[Type.tag.major]=encodeTag,t[Type.float.major]=encodeFloat,t}const cborEncoders=makeCborEncoders(),buf=new Bl;class Ref{constructor(e,r){this.obj=e,this.parent=r}includes(e){let r=this;do if(r.obj===e)return!0;while(r=r.parent);return!1}static createCheck(e,r){if(e&&e.includes(r))throw new Error(`${encodeErrPrefix} object contains circular references`);return new Ref(r,e)}}const simpleTokens={null:new Token(Type.null,null),undefined:new Token(Type.undefined,void 0),true:new Token(Type.true,!0),false:new Token(Type.false,!1),emptyArray:new Token(Type.array,0),emptyMap:new Token(Type.map,0)},typeEncoders={number(t,e,r,n){return!Number.isInteger(t)||!Number.isSafeInteger(t)?new Token(Type.float,t):t>=0?new Token(Type.uint,t):new Token(Type.negint,t)},bigint(t,e,r,n){return t>=BigInt(0)?new Token(Type.uint,t):new Token(Type.negint,t)},Uint8Array(t,e,r,n){return new Token(Type.bytes,t)},string(t,e,r,n){return new Token(Type.string,t)},boolean(t,e,r,n){return t?simpleTokens.true:simpleTokens.false},null(t,e,r,n){return simpleTokens.null},undefined(t,e,r,n){return simpleTokens.undefined},ArrayBuffer(t,e,r,n){return new Token(Type.bytes,new Uint8Array(t))},DataView(t,e,r,n){return new Token(Type.bytes,new Uint8Array(t.buffer,t.byteOffset,t.byteLength))},Array(t,e,r,n){if(!t.length)return r.addBreakTokens===!0?[simpleTokens.emptyArray,new Token(Type.break)]:simpleTokens.emptyArray;n=Ref.createCheck(n,t);const o=[];let a=0;for(const c of t)o[a++]=objectToTokens(c,r,n);return r.addBreakTokens?[new Token(Type.array,t.length),o,new Token(Type.break)]:[new Token(Type.array,t.length),o]},Object(t,e,r,n){const o=e!=="Object",a=o?t.keys():Object.keys(t),c=o?t.size:a.length;if(!c)return r.addBreakTokens===!0?[simpleTokens.emptyMap,new Token(Type.break)]:simpleTokens.emptyMap;n=Ref.createCheck(n,t);const u=[];let l=0;for(const f of a)u[l++]=[objectToTokens(f,r,n),objectToTokens(o?t.get(f):t[f],r,n)];return sortMapEntries(u,r),r.addBreakTokens?[new Token(Type.map,c),u,new Token(Type.break)]:[new Token(Type.map,c),u]}};typeEncoders.Map=typeEncoders.Object,typeEncoders.Buffer=typeEncoders.Uint8Array;for(const t of"Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64".split(" "))typeEncoders[`${t}Array`]=typeEncoders.DataView;function objectToTokens(t,e={},r){const n=is(t),o=e&&e.typeEncoders&&e.typeEncoders[n]||typeEncoders[n];if(typeof o=="function"){const c=o(t,n,e,r);if(c!=null)return c}const a=typeEncoders[n];if(!a)throw new Error(`${encodeErrPrefix} unsupported type: ${n}`);return a(t,n,e,r)}function sortMapEntries(t,e){e.mapSorter&&t.sort(e.mapSorter)}function mapSorter(t,e){const r=Array.isArray(t[0])?t[0][0]:t[0],n=Array.isArray(e[0])?e[0][0]:e[0];if(r.type!==n.type)return r.type.compare(n.type);const o=r.type.major,a=cborEncoders[o].compareTokens(r,n);return a===0&&console.warn("WARNING: complex key types used, CBOR key sorting guarantees are gone"),a}function tokensToEncoded(t,e,r,n){if(Array.isArray(e))for(const o of e)tokensToEncoded(t,o,r,n);else r[e.type.major](t,e,n)}function encodeCustom(t,e,r){const n=objectToTokens(t,r);if(!Array.isArray(n)&&r.quickEncodeToken){const o=r.quickEncodeToken(n);if(o)return o;const a=e[n.type.major];if(a.encodedSize){const c=a.encodedSize(n,r),u=new Bl(c);if(a(u,n,r),u.chunks.length!==1)throw new Error(`Unexpected error: pre-calculated length for ${n} was wrong`);return asU8A(u.chunks[0])}}return buf.reset(),tokensToEncoded(buf,n,e,r),buf.toBytes(!0)}function encode$O(t,e){return e=Object.assign({},defaultEncodeOptions,e),encodeCustom(t,cborEncoders,e)}const defaultDecodeOptions={strict:!1,allowIndefinite:!0,allowUndefined:!0,allowBigInt:!0};class Tokeniser{constructor(e,r={}){this.pos=0,this.data=e,this.options=r}done(){return this.pos>=this.data.length}next(){const e=this.data[this.pos];let r=quick[e];if(r===void 0){const n=jump[e];if(!n)throw new Error(`${decodeErrPrefix} no decoder for major type ${e>>>5} (byte 0x${e.toString(16).padStart(2,"0")})`);const o=e&31;r=n(this.data,this.pos,o,this.options)}return this.pos+=r.encodedLength,r}}const DONE=Symbol.for("DONE"),BREAK=Symbol.for("BREAK");function tokenToArray(t,e,r){const n=[];for(let o=0;o<t.value;o++){const a=tokensToObject(e,r);if(a===BREAK){if(t.value===1/0)break;throw new Error(`${decodeErrPrefix} got unexpected break to lengthed array`)}if(a===DONE)throw new Error(`${decodeErrPrefix} found array but not enough entries (got ${o}, expected ${t.value})`);n[o]=a}return n}function tokenToMap(t,e,r){const n=r.useMaps===!0,o=n?void 0:{},a=n?new Map:void 0;for(let c=0;c<t.value;c++){const u=tokensToObject(e,r);if(u===BREAK){if(t.value===1/0)break;throw new Error(`${decodeErrPrefix} got unexpected break to lengthed map`)}if(u===DONE)throw new Error(`${decodeErrPrefix} found map but not enough entries (got ${c} [no key], expected ${t.value})`);if(n!==!0&&typeof u!="string")throw new Error(`${decodeErrPrefix} non-string keys not supported (got ${typeof u})`);if(r.rejectDuplicateMapKeys===!0&&(n&&a.has(u)||!n&&u in o))throw new Error(`${decodeErrPrefix} found repeat map key "${u}"`);const l=tokensToObject(e,r);if(l===DONE)throw new Error(`${decodeErrPrefix} found map but not enough entries (got ${c} [no value], expected ${t.value})`);n?a.set(u,l):o[u]=l}return n?a:o}function tokensToObject(t,e){if(t.done())return DONE;const r=t.next();if(r.type===Type.break)return BREAK;if(r.type.terminal)return r.value;if(r.type===Type.array)return tokenToArray(r,t,e);if(r.type===Type.map)return tokenToMap(r,t,e);if(r.type===Type.tag){if(e.tags&&typeof e.tags[r.value]=="function"){const n=tokensToObject(t,e);return e.tags[r.value](n)}throw new Error(`${decodeErrPrefix} tag not supported (${r.value})`)}throw new Error("unsupported")}function decode$13(t,e){if(!(t instanceof Uint8Array))throw new Error(`${decodeErrPrefix} data to decode must be a Uint8Array`);e=Object.assign({},defaultDecodeOptions,e);const r=e.tokenizer||new Tokeniser(t,e),n=tokensToObject(r,e);if(n===DONE)throw new Error(`${decodeErrPrefix} did not find any content to decode`);if(n===BREAK)throw new Error(`${decodeErrPrefix} got unexpected break`);if(!r.done())throw new Error(`${decodeErrPrefix} too many terminals, data makes no sense`);return n}function cidToKey$1(t){const e=CID$a.asCID(t);if(e==null)throw errcode(new Error("Not a valid cid"),"ERR_INVALID_CID");const r=base32$j.encode(e.multihash.bytes);return new Key("/"+r.slice(1).toUpperCase(),!1)}function keyToMultihash(t){return decode$15(base32$j.decode(`b${t.toString().toLowerCase().substring(1)}`))}const log$$=debug$1("ipfs:repo:utils:walk-dag");async function*walkDag(t,e,r,n){try{const o=await e.get(t,n),a=await r(t.code),c=createUnsafe({bytes:o,cid:t,codec:a});for(const[,u]of c.links())yield u,yield*walkDag(u,e,r,n)}catch(o){throw log$$("Could not walk DAG for CID",t.toString(),o),o}}class QuickLRU extends Map{constructor(e={}){if(super(),!(e.maxSize&&e.maxSize>0))throw new TypeError("`maxSize` must be a number greater than 0");if(typeof e.maxAge=="number"&&e.maxAge===0)throw new TypeError("`maxAge` must be a number greater than 0");this.maxSize=e.maxSize,this.maxAge=e.maxAge||Number.POSITIVE_INFINITY,this.onEviction=e.onEviction,this.cache=new Map,this.oldCache=new Map,this._size=0}_emitEvictions(e){if(typeof this.onEviction=="function")for(const[r,n]of e)this.onEviction(r,n.value)}_deleteIfExpired(e,r){return typeof r.expiry=="number"&&r.expiry<=Date.now()?(typeof this.onEviction=="function"&&this.onEviction(e,r.value),this.delete(e)):!1}_getOrDeleteIfExpired(e,r){if(this._deleteIfExpired(e,r)===!1)return r.value}_getItemValue(e,r){return r.expiry?this._getOrDeleteIfExpired(e,r):r.value}_peek(e,r){const n=r.get(e);return this._getItemValue(e,n)}_set(e,r){this.cache.set(e,r),this._size++,this._size>=this.maxSize&&(this._size=0,this._emitEvictions(this.oldCache),this.oldCache=this.cache,this.cache=new Map)}_moveToRecent(e,r){this.oldCache.delete(e),this._set(e,r)}*_entriesAscending(){for(const e of this.oldCache){const[r,n]=e;this.cache.has(r)||this._deleteIfExpired(r,n)===!1&&(yield e)}for(const e of this.cache){const[r,n]=e;this._deleteIfExpired(r,n)===!1&&(yield e)}}get(e){if(this.cache.has(e)){const r=this.cache.get(e);return this._getItemValue(e,r)}if(this.oldCache.has(e)){const r=this.oldCache.get(e);if(this._deleteIfExpired(e,r)===!1)return this._moveToRecent(e,r),r.value}}set(e,r,{maxAge:n=this.maxAge}={}){const o=typeof n=="number"&&n!==Number.POSITIVE_INFINITY?Date.now()+n:void 0;return this.cache.has(e)?this.cache.set(e,{value:r,expiry:o}):this._set(e,{value:r,expiry:o}),this}has(e){return this.cache.has(e)?!this._deleteIfExpired(e,this.cache.get(e)):this.oldCache.has(e)?!this._deleteIfExpired(e,this.oldCache.get(e)):!1}peek(e){if(this.cache.has(e))return this._peek(e,this.cache);if(this.oldCache.has(e))return this._peek(e,this.oldCache)}delete(e){const r=this.cache.delete(e);return r&&this._size--,this.oldCache.delete(e)||r}clear(){this.cache.clear(),this.oldCache.clear(),this._size=0}resize(e){if(!(e&&e>0))throw new TypeError("`maxSize` must be a number greater than 0");const r=[...this._entriesAscending()],n=r.length-e;n<0?(this.cache=new Map(r),this.oldCache=new Map,this._size=r.length):(n>0&&this._emitEvictions(r.slice(0,n)),this.oldCache=new Map(r.slice(n)),this.cache=new Map,this._size=0),this.maxSize=e}*keys(){for(const[e]of this)yield e}*values(){for(const[,e]of this)yield e}*[Symbol.iterator](){for(const e of this.cache){const[r,n]=e;this._deleteIfExpired(r,n)===!1&&(yield[r,n.value])}for(const e of this.oldCache){const[r,n]=e;this.cache.has(r)||this._deleteIfExpired(r,n)===!1&&(yield[r,n.value])}}*entriesDescending(){let e=[...this.cache];for(let r=e.length-1;r>=0;--r){const n=e[r],[o,a]=n;this._deleteIfExpired(o,a)===!1&&(yield[o,a.value])}e=[...this.oldCache];for(let r=e.length-1;r>=0;--r){const n=e[r],[o,a]=n;this.cache.has(o)||this._deleteIfExpired(o,a)===!1&&(yield[o,a.value])}}*entriesAscending(){for(const[e,r]of this._entriesAscending())yield[e,r.value]}get size(){if(!this._size)return this.oldCache.size;let e=0;for(const r of this.oldCache.keys())this.cache.has(r)||e++;return Math.min(this._size+e,this.maxSize)}entries(){return this.entriesAscending()}forEach(e,r=this){for(const[n,o]of this.entriesAscending())e.call(r,o,n,this)}get[Symbol.toStringTag](){return JSON.stringify([...this.entriesAscending()])}}const CID_CACHE_MAX_SIZE=2048;function invalidPinTypeErr(t){const e=`Invalid type '${t}', must be one of {direct, indirect, recursive, all}`;return errcode(new Error(e),"ERR_INVALID_PIN_TYPE")}class PinManager{constructor({pinstore:e,blockstore:r,loadCodec:n}){this.pinstore=e,this.blockstore=r,this.loadCodec=n,this.log=debug$1("ipfs:repo:pin"),this.directPins=new Set,this.recursivePins=new Set}async pinDirectly(e,r={}){await this.blockstore.get(e,r);const n={depth:0};return e.version!==0&&(n.version=e.version),e.code!==code$i&&(n.codec=e.code),r.metadata&&(n.metadata=r.metadata),this.pinstore.put(cidToKey$1(e),encode$O(n))}unpin(e,r){return this.pinstore.delete(cidToKey$1(e),r)}async pinRecursively(e,r={}){await this.fetchCompleteDag(e,r);const n={depth:1/0};e.version!==0&&(n.version=e.version),e.code!==code$i&&(n.codec=e.code),r.metadata&&(n.metadata=r.metadata),await this.pinstore.put(cidToKey$1(e),encode$O(n))}async*directKeys(e){for await(const r of this.pinstore.query({filters:[n=>decode$13(n.value).depth===0]})){const n=decode$13(r.value),o=n.version||0,a=n.codec!=null?n.codec:code$i,c=keyToMultihash(r.key);yield{cid:CID$a.create(o,a,c),metadata:n.metadata}}}async*recursiveKeys(e){for await(const r of this.pinstore.query({filters:[n=>decode$13(n.value).depth===1/0]})){const n=decode$13(r.value),o=n.version||0,a=n.codec!=null?n.codec:code$i,c=keyToMultihash(r.key);yield{cid:CID$a.create(o,a,c),metadata:n.metadata}}}async*indirectKeys(e){for await(const{cid:r}of this.recursiveKeys())for await(const n of walkDag(r,this.blockstore,this.loadCodec,e)){const o=[PinTypes$1.recursive];(await this.isPinnedWithType(n,o)).pinned||(yield n)}}async isPinnedWithType(e,r,n){Array.isArray(r)||(r=[r]);const o=r.includes(PinTypes$1.all),a=r.includes(PinTypes$1.direct),c=r.includes(PinTypes$1.recursive),u=r.includes(PinTypes$1.indirect);if(c||a||o){const p=await first$1(this.pinstore.query({prefix:cidToKey$1(e).toString(),filters:[g=>{if(o)return!0;const $=decode$13(g.value);return r.includes($.depth===0?PinTypes$1.direct:PinTypes$1.recursive)}],limit:1}));if(p){const g=decode$13(p.value);return{cid:e,pinned:!0,reason:g.depth===0?PinTypes$1.direct:PinTypes$1.recursive,metadata:g.metadata}}}const l=this;async function*f(p,g){for await(const{cid:$}of g)for await(const _ of walkDag($,l.blockstore,l.loadCodec))if(_.equals(p)){yield $;return}}if(o||u){const p=await first$1(f(e,this.recursiveKeys()));if(p)return{cid:e,pinned:!0,reason:PinTypes$1.indirect,parent:p}}return{cid:e,pinned:!1}}async fetchCompleteDag(e,r={}){const n=new QuickLRU({maxSize:r.cidCacheMaxSize??CID_CACHE_MAX_SIZE}),o=async(a,c)=>{if(n.has(a.toString()))return;n.set(a.toString(),!0);const u=await this.blockstore.get(a,c),l=await this.loadCodec(a.code),f=createUnsafe({bytes:u,cid:a,codec:l});await Promise.all([...f.links()].map(([,p])=>o(p,c)))};await o(e,r)}static checkPinType(e){if(typeof e!="string"||!Object.keys(PinTypes$1).includes(e))throw invalidPinTypeErr(e);return!0}}function createPinnedBlockstore(t,e){return{open(){return e.open()},close(){return e.close()},query(r,n){return e.query(r,n)},queryKeys(r,n){return e.queryKeys(r,n)},async get(r,n){return e.get(r,n)},async*getMany(r,n){yield*e.getMany(r,n)},async put(r,n,o){await e.put(r,n,o)},async*putMany(r,n){yield*e.putMany(r,n)},has(r,n){return e.has(r,n)},async delete(r,n){return await ensureNotPinned(r,t),e.delete(r,n)},deleteMany(r,n){return e.deleteMany(map$3(r,async o=>(await ensureNotPinned(o,t),o)),n)},batch(){return e.batch()}}}async function ensureNotPinned(t,e){const{pinned:r,reason:n}=await e.isPinnedWithType(t,PinTypes$1.all);if(r)throw errcode(new Error(`pinned: ${n}`),"ERR_BLOCK_PINNED")}const log$_=debug$1("ipfs:repo:gc"),ERR_NOT_FOUND=notFoundError().code,BLOCK_RM_CONCURRENCY=256,MFS_ROOT_KEY=new Key("/local/filesroot");function gc({gcLock:t,pins:e,blockstore:r,root:n,loadCodec:o}){async function*a(){const c=Date.now();log$_("Creating set of marked blocks");const u=await t.writeLock();try{const l=await createMarkedSet({pins:e,blockstore:r,root:n,loadCodec:o}),f=r.queryKeys({});yield*deleteUnmarkedBlocks({blockstore:r},l,f),log$_(`Complete (${Date.now()-c}ms)`)}finally{u()}}return a}async function createMarkedSet({pins:t,blockstore:e,loadCodec:r,root:n}){const o=async function*(){let u;try{u=await n.get(MFS_ROOT_KEY)}catch(f){if(f.code===ERR_NOT_FOUND){log$_("No blocks in MFS");return}throw f}const l=CID$a.decode(u);yield l,yield*walkDag(l,e,r)}(),a=merge$2(map$3(t.recursiveKeys(),({cid:u})=>u),t.indirectKeys(),map$3(t.directKeys(),({cid:u})=>u),o),c=new Set;for await(const u of merge$2(a,o))c.add(base32$j.encode(u.multihash.bytes));return c}async function*deleteUnmarkedBlocks({blockstore:t},e,r){let n=0,o=0;yield*pipe$1(parallelBatch(map$3(r,async a=>async function(){n++;try{const c=base32$j.encode(a.multihash.bytes);if(e.has(c))return null;try{await t.delete(a),o++}catch(u){return{err:new Error(`Could not delete block with CID ${a}: ${u.message}`)}}return{cid:a}}catch(c){const u=`Could delete block with CID ${a}`;return log$_(u,c),{err:new Error(u+`: ${c.message}`)}}}),BLOCK_RM_CONCURRENCY),a=>filter$1(a,Boolean)),log$_(`Marked set has ${e.size} unique blocks. Blockstore has ${n} blocks. Deleted ${o} blocks.`)}const log$Z=debug$1("ipfs:repo"),noLimit=Number.MAX_SAFE_INTEGER,AUTO_MIGRATE_CONFIG_KEY="repoAutoMigrate";class Repo{constructor(e,r,n,o){if(typeof e!="string")throw new Error("missing repo path");if(typeof r!="function")throw new Error("missing codec loader");this.options=mergeOptions$h(defaultOptions$5,o),this.closed=!0,this.path=e,this.root=n.root,this.datastore=n.datastore,this.keys=n.keys;const a=n.blocks,c=n.pins;this.pins=new PinManager({pinstore:c,blockstore:a,loadCodec:r});const u=createPinnedBlockstore(this.pins,a);this.blocks=createIdStore(u),this.version=version$1(this.root),this.config=config(this.root),this.spec=spec(this.root),this.apiAddr=apiAddr(this.root),this.gcLock=createMortice({name:e,singleProcess:this.options.repoOwner!==!1}),this.gc=gc({gcLock:this.gcLock,pins:this.pins,blockstore:this.blocks,root:this.root,loadCodec:r})}async init(e){log$Z("initializing at: %s",this.path),await this._openRoot(),await this.config.replace(buildConfig(e)),await this.spec.set(buildDatastoreSpec(e)),await this.version.set(repoVersion)}async isInitialized(){if(!this.closed)return!0;try{return await this._openRoot(),await this._checkInitialized(),await this.root.close(),!0}catch{return!1}}async open(){if(!this.closed)throw errcode(new Error("repo is already open"),ERR_REPO_ALREADY_OPEN);log$Z("opening at: %s",this.path);try{if(await this._openRoot(),await this._checkInitialized(),this._lockfile=await this._openLock(),log$Z("acquired repo.lock"),!await this.version.check(repoVersion))if(await this._isAutoMigrationEnabled())await this._migrate(repoVersion,{root:this.root,datastore:this.datastore,pins:this.pins.pinstore,blocks:this.pins.blockstore,keys:this.keys});else throw new InvalidRepoVersionError("Incompatible repo versions. Automatic migrations disabled. Please migrate the repo manually.");log$Z("creating datastore"),await this.datastore.open(),log$Z("creating blocks"),await this.blocks.open(),log$Z("creating keystore"),await this.keys.open(),log$Z("creating pins"),await this.pins.pinstore.open(),this.closed=!1,log$Z("all opened")}catch(e){if(this._lockfile)try{await this._closeLock(),this._lockfile=null}catch(r){log$Z("error removing lock",r)}throw e}}async _openRoot(){try{await this.root.open()}catch(e){if(e.message!=="Already open")throw e}}async _openLock(){const e=await this.options.repoLock.lock(this.path);if(typeof e.close!="function")throw errcode(new Error("Locks must have a close method"),"ERR_NO_CLOSE_FUNCTION");return e}_closeLock(){return this._lockfile&&this._lockfile.close()}async _checkInitialized(){log$Z("init check");let e;try{[e]=await Promise.all([this.config.exists(),this.spec.exists(),this.version.exists()])}catch(r){throw r.code==="ERR_NOT_FOUND"?errcode(new Error("repo is not initialized yet"),ERR_REPO_NOT_INITIALIZED,{path:this.path}):r}if(!e)throw errcode(new Error("repo is not initialized yet"),ERR_REPO_NOT_INITIALIZED,{path:this.path})}async close(){if(this.closed)throw errcode(new Error("repo is already closed"),ERR_REPO_ALREADY_CLOSED);log$Z("closing at: %s",this.path);try{await this.apiAddr.delete()}catch(e){if(e.code!==ERR_REPO_NOT_INITIALIZED&&!e.message.startsWith("ENOENT"))throw e}await Promise.all([this.root,this.blocks,this.keys,this.datastore,this.pins.pinstore].map(e=>e&&e.close())),log$Z("unlocking"),this.closed=!0,await this._closeLock()}exists(){return this.version.exists()}async stat(){if(this.datastore&&this.keys){const[e,r,n,o,a]=await Promise.all([this._storageMaxStat(),this._blockStat(),this.version.get(),getSize(this.datastore),getSize(this.keys)]),c=r.size+o+a;return{repoPath:this.path,storageMax:e,version:n,numObjects:r.count,repoSize:c}}throw errcode(new Error("repo is not initialized yet"),ERR_REPO_NOT_INITIALIZED,{path:this.path})}async _isAutoMigrationEnabled(){if(this.options.autoMigrate!==void 0)return this.options.autoMigrate;let e;try{e=await this.config.get(AUTO_MIGRATE_CONFIG_KEY)}catch(r){if(r.code===NotFoundError.code)e=!0;else throw r}return e}async _migrate(e,r){return await this.version.get()>e?(log$Z(`reverting to version ${e}`),revert(this.path,r,this.options,e,{ignoreLock:!0,onProgress:this.options.onMigrationProgress})):(log$Z(`migrating to version ${e}`),migrate(this.path,r,this.options,e,{ignoreLock:!0,onProgress:this.options.onMigrationProgress}))}async _storageMaxStat(){try{const e=await this.config.get("Datastore.StorageMax");return BigInt(bytes$1(e))}catch{return BigInt(noLimit)}}async _blockStat(){let e=BigInt(0),r=BigInt(0);if(this.blocks)for await(const{key:n,value:o}of this.blocks.query({}))e+=BigInt(1),r+=BigInt(o.byteLength),r+=BigInt(n.bytes.byteLength);return{count:e,size:r}}}async function getSize(t){let e=BigInt(0);for await(const r of t.query({}))e+=BigInt(r.value.byteLength),e+=BigInt(r.key.uint8Array().byteLength);return e}function createRepo$2(t,e,r,n){return new Repo(t,e,r,n)}function buildConfig(t){return t.Datastore=Object.assign({},defaultDatastore,objectSafeGet(t,"datastore")),t}function buildDatastoreSpec(t){const e={...defaultDatastore.Spec,...objectSafeGet(t,"Datastore.Spec")};return{type:e.type,mounts:e.mounts.map(r=>({mountpoint:r.mountpoint,type:r.child.type,path:r.child.path,shardFunc:r.child.shardFunc}))}}async function*sort(t,e){yield*(await all$1(t)).sort(e)}class LevelDatastore extends BaseDatastore{constructor(e,r={}){super(),this.db=typeof e=="string"?new Level(e,{...r,keyEncoding:"utf8",valueEncoding:"view"}):e,this.opts={createIfMissing:!0,compression:!1,...r}}async open(){try{await this.db.open(this.opts)}catch(e){throw dbOpenFailedError(e)}}async put(e,r){try{await this.db.put(e.toString(),r)}catch(n){throw dbWriteFailedError(n)}}async get(e){let r;try{r=await this.db.get(e.toString())}catch(n){throw n.notFound?notFoundError(n):dbWriteFailedError(n)}return r}async has(e){try{await this.db.get(e.toString())}catch(r){if(r.notFound)return!1;throw r}return!0}async delete(e){try{await this.db.del(e.toString())}catch(r){throw dbDeleteFailedError(r)}}close(){return this.db&&this.db.close()}batch(){const e=[];return{put:(r,n)=>{e.push({type:"put",key:r.toString(),value:n})},delete:r=>{e.push({type:"del",key:r.toString()})},commit:()=>this.db.batch(e)}}query(e){let r=this._query({values:!0,prefix:e.prefix});Array.isArray(e.filters)&&(r=e.filters.reduce((a,c)=>filter$1(a,c),r)),Array.isArray(e.orders)&&(r=e.orders.reduce((a,c)=>sort(a,c),r));const{offset:n,limit:o}=e;if(n){let a=0;r=filter$1(r,()=>a++>=n)}return o&&(r=take(r,o)),r}queryKeys(e){let r=map$3(this._query({values:!1,prefix:e.prefix}),({key:a})=>a);Array.isArray(e.filters)&&(r=e.filters.reduce((a,c)=>filter$1(a,c),r)),Array.isArray(e.orders)&&(r=e.orders.reduce((a,c)=>sort(a,c),r));const{offset:n,limit:o}=e;if(n){let a=0;r=filter$1(r,()=>a++>=n)}return o&&(r=take(r,o)),r}_query(e){const r={keys:!0,keyEncoding:"buffer",values:e.values};if(e.prefix!=null){const o=e.prefix.toString();r.gte=o,r.lt=o+"\xFF"}const n=this.db.iterator(r);if(n[Symbol.asyncIterator])return levelIteratorToIterator(n);if(n.next!=null&&n.end!=null)return oldLevelIteratorToIterator(n);throw new Error("Level returned incompatible iterator")}}async function*levelIteratorToIterator(t){for await(const[e,r]of t)yield{key:new Key(e,!1),value:r};await t.close()}function oldLevelIteratorToIterator(t){return{[Symbol.asyncIterator](){return{next:()=>new Promise((e,r)=>{t.next((n,o,a)=>{if(n)return r(n);if(o==null)return t.end(c=>{if(c)return r(c);e({done:!0,value:void 0})});e({done:!1,value:{key:new Key(o,!1),value:a}})})}),return:()=>new Promise((e,r)=>{t.end(n=>{if(n)return r(n);e({done:!0,value:void 0})})})}}}}var encode_1$c=encode$N,MSB$h=128,REST$h=127,MSBALL$c=~REST$h,INT$c=Math.pow(2,31);function encode$N(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$c;)e[r++]=t&255|MSB$h,t/=128;for(;t&MSBALL$c;)e[r++]=t&255|MSB$h,t>>>=7;return e[r]=t|0,encode$N.bytes=r-n+1,e}var decode$12=read$d,MSB$1$c=128,REST$1$c=127;function read$d(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$d.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$c)<<o:(c&REST$1$c)*Math.pow(2,o),o+=7}while(c>=MSB$1$c);return read$d.bytes=a-n,r}var N1$g=Math.pow(2,7),N2$g=Math.pow(2,14),N3$g=Math.pow(2,21),N4$g=Math.pow(2,28),N5$g=Math.pow(2,35),N6$g=Math.pow(2,42),N7$g=Math.pow(2,49),N8$d=Math.pow(2,56),N9$d=Math.pow(2,63),length$d=function(t){return t<N1$g?1:t<N2$g?2:t<N3$g?3:t<N4$g?4:t<N5$g?5:t<N6$g?6:t<N7$g?7:t<N8$d?8:t<N9$d?9:10},varint$d={encode:encode_1$c,decode:decode$12,encodingLength:length$d},_brrp_varint$b=varint$d;const decode$11=(t,e=0)=>[_brrp_varint$b.decode(t,e),_brrp_varint$b.decode.bytes],encodeTo$b=(t,e,r=0)=>(_brrp_varint$b.encode(t,e,r),e),encodingLength$e=t=>_brrp_varint$b.encodingLength(t),equals$l=(t,e)=>{if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0},coerce$b=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")},create$e=(t,e)=>{const r=e.byteLength,n=encodingLength$e(t),o=n+encodingLength$e(r),a=new Uint8Array(o+r);return encodeTo$b(t,a,0),encodeTo$b(r,a,n),a.set(e,o),new Digest$b(t,r,e,a)},decode$10=t=>{const e=coerce$b(t),[r,n]=decode$11(e),[o,a]=decode$11(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$b(r,o,c,e)},equals$k=(t,e)=>{if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$l(t.bytes,r.bytes)}};let Digest$b=class{constructor(t,e,r,n){this.code=t,this.size=e,this.digest=r,this.bytes=n}};function base$e(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$d=base$e,_brrp__multiformats_scope_baseX$b=src$d;let Encoder$d=class{constructor(t,e,r){this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$d=class{constructor(t,e,r){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$e(this,t)}},ComposedDecoder$b=class{constructor(t){this.decoders=t}or(t){return or$e(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$e=(t,e)=>new ComposedDecoder$b({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});let Codec$b=class{constructor(t,e,r,n){this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$d(t,e,r),this.decoder=new Decoder$d(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};const from$i=({name:t,prefix:e,encode:r,decode:n})=>new Codec$b(t,e,r,n),baseX$b=({prefix:t,name:e,alphabet:r})=>{const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$b(r,e);return from$i({prefix:t,name:e,encode:n,decode:a=>coerce$b(o(a))})},decode$$=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode$M=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648$b=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from$i({prefix:e,name:t,encode(o){return encode$M(o,n,r)},decode(o){return decode$$(o,n,r,t)}}),base58btc$a=baseX$b({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"});baseX$b({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});const base32$i=rfc4648$b({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5});rfc4648$b({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5});const base32pad$8=rfc4648$b({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5});rfc4648$b({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),rfc4648$b({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),rfc4648$b({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),rfc4648$b({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),rfc4648$b({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),rfc4648$b({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});const format$9=(t,e)=>{const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$9(r,baseCache$9(t),e||base58btc$a.encoder);default:return toStringV1$9(r,baseCache$9(t),e||base32$i.encoder)}},cache$b=new WeakMap,baseCache$9=t=>{const e=cache$b.get(t);if(e==null){const r=new Map;return cache$b.set(t,r),r}return e};let CID$9=class He{constructor(e,r,n,o){this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$9)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$9)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return He.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$e(e,r);return He.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return He.equals(this,e)}static equals(e,r){const n=r;return n&&e.code===n.code&&e.version===n.version&&equals$k(e.multihash,n.multihash)}toString(e){return format$9(this,e)}toJSON(){return{"/":format$9(this)}}link(){return this}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof He)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new He(n,o,a,c||encodeCID$a(n,o,a.bytes))}else if(r[cidSymbol$9]===!0){const{version:n,multihash:o,code:a}=r,c=decode$10(o);return He.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$9)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$9}) block encoding`);return new He(e,r,n,n.bytes)}case 1:{const o=encodeCID$a(e,r,n.bytes);return new He(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return He.create(0,DAG_PB_CODE$9,e)}static createV1(e,r){return He.create(1,e,r)}static decode(e){const[r,n]=He.decodeFirst(e);if(n.length)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=He.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$b(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$b(r.multihashCode,r.digestSize,a,o);return[r.version===0?He.createV0(c):He.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$11(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$9;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$9(e,r),a=He.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$9(a).set(n,e),a}};const parseCIDtoBytes$9=(t,e)=>{switch(t[0]){case"Q":{const r=e||base58btc$a;return[base58btc$a.prefix,r.decode(`${base58btc$a.prefix}${t}`)]}case base58btc$a.prefix:{const r=e||base58btc$a;return[base58btc$a.prefix,r.decode(t)]}case base32$i.prefix:{const r=e||base32$i;return[base32$i.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}},toStringV0$9=(t,e,r)=>{const{prefix:n}=r;if(n!==base58btc$a.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o},toStringV1$9=(t,e,r)=>{const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o},DAG_PB_CODE$9=112,SHA_256_CODE$9=18,encodeCID$a=(t,e,r)=>{const n=encodingLength$e(t),o=n+encodingLength$e(e),a=new Uint8Array(o+r.byteLength);return encodeTo$b(t,a,0),encodeTo$b(e,a,n),a.set(r,o),a},cidSymbol$9=Symbol.for("@ipld/js-cid/CID"),code$4=85,sortAll=(t,e)=>async function*(){yield*(await all$1(t)).sort(e)}();class BaseBlockstore{open(){return Promise.reject(new Error(".open is not implemented"))}close(){return Promise.reject(new Error(".close is not implemented"))}put(e,r,n){return Promise.reject(new Error(".put is not implemented"))}get(e,r){return Promise.reject(new Error(".get is not implemented"))}has(e,r){return Promise.reject(new Error(".has is not implemented"))}delete(e,r){return Promise.reject(new Error(".delete is not implemented"))}async*putMany(e,r={}){for await(const{key:n,value:o}of e)await this.put(n,o,r),yield{key:n,value:o}}async*getMany(e,r={}){for await(const n of e)yield this.get(n,r)}async*deleteMany(e,r={}){for await(const n of e)await this.delete(n,r),yield n}batch(){let e=[],r=[];return{put(n,o){e.push({key:n,value:o})},delete(n){r.push(n)},commit:async n=>{await drain$1(this.putMany(e,n)),e=[],await drain$1(this.deleteMany(r,n)),r=[]}}}async*_all(e,r){throw new Error("._all is not implemented")}async*_allKeys(e,r){throw new Error("._allKeys is not implemented")}query(e,r){let n=this._all(e,r);if(e.prefix!=null&&(n=filter$1(n,o=>o.key.toString().startsWith(e.prefix||""))),Array.isArray(e.filters)&&(n=e.filters.reduce((o,a)=>filter$1(o,a),n)),Array.isArray(e.orders)&&(n=e.orders.reduce((o,a)=>sortAll(o,a),n)),e.offset!=null){let o=0;n=filter$1(n,()=>o++>=(e.offset||0))}return e.limit!=null&&(n=take(n,e.limit)),n}queryKeys(e,r){let n=this._allKeys(e,r);if(e.prefix!=null&&(n=filter$1(n,o=>o.toString().startsWith(e.prefix||""))),Array.isArray(e.filters)&&(n=e.filters.reduce((o,a)=>filter$1(o,a),n)),Array.isArray(e.orders)&&(n=e.orders.reduce((o,a)=>sortAll(o,a),n)),e.offset!=null){let o=0;n=filter$1(n,()=>o++>=e.offset)}return e.limit!=null&&(n=take(n,e.limit)),n}}function cidToKey(t){const e=CID$9.asCID(t);if(!e)throw errcode(new Error("Not a valid cid"),"ERR_INVALID_CID");return new Key("/"+base32$i.encode(e.multihash.bytes).slice(1).toUpperCase(),!1)}function keyToCid(t){return CID$9.createV1(code$4,decode$10(base32$i.decode("b"+t.toString().slice(1).toLowerCase())))}function convertPrefix(t){const e=t.substring(0,1);if(e==="/")return convertPrefix(t.substring(1));let r;e.toLowerCase()==="b"?r=a=>base32$i.decode(a.toLowerCase()).subarray(2):e.toLowerCase()==="c"?r=a=>base32pad$8.decode(a.toLowerCase()).subarray(2):e==="z"?r=a=>base58btc$a.decode(a).subarray(2):e==="Q"?r=a=>base58btc$a.decode("z"+a):r=a=>base32$i.decode("b"+a.toLowerCase()).subarray(2);let n;for(let a=1;a<t.length;a++)try{n=r(t.substring(0,a))}catch(c){if(c.message!=="Unexpected end of data")throw c}let o="/C";return n&&(o=`/${base32$i.encode(n).slice(1,-1).toUpperCase()||"C"}`),o}function convertQuery(t){return{...t,prefix:t.prefix?convertPrefix(t.prefix):void 0,filters:t.filters?t.filters.map(e=>r=>e({key:keyToCid(r.key),value:r.value})):void 0,orders:t.orders?t.orders.map(e=>(r,n)=>e({key:keyToCid(r.key),value:r.value},{key:keyToCid(n.key),value:n.value})):void 0}}function convertKeyQuery(t){return{...t,prefix:t.prefix?convertPrefix(t.prefix):void 0,filters:t.filters?t.filters.map(e=>r=>e(keyToCid(r))):void 0,orders:t.orders?t.orders.map(e=>(r,n)=>e(keyToCid(r),keyToCid(n))):void 0}}class BlockstoreDatastoreAdapter extends BaseBlockstore{constructor(e){super(),this.child=e}open(){return this.child.open()}close(){return this.child.close()}async*query(e,r){for await(const{key:n,value:o}of this.child.query(convertQuery(e),r))yield{key:keyToCid(n),value:o}}async*queryKeys(e,r){for await(const n of this.child.queryKeys(convertKeyQuery(e),r))yield keyToCid(n)}async get(e,r){return this.child.get(cidToKey(e),r)}async*getMany(e,r){for await(const n of e)yield this.get(n,r)}async put(e,r,n){await this.child.put(cidToKey(e),r,n)}async*putMany(e,r){const n=pushable({objectMode:!0});(globalThis.process&&globalThis.process.nextTick?globalThis.process.nextTick:globalThis.setImmediate||globalThis.setTimeout)(async()=>{try{const o=this.child;await drain$1(this.child.putMany(async function*(){for await(const a of e){const c=cidToKey(a.key);await o.has(c,r)||(yield{key:c,value:a.value}),n.push(a)}}())),n.end()}catch(o){n.end(o)}}),yield*n}has(e,r){return this.child.has(cidToKey(e),r)}delete(e,r){return this.child.delete(cidToKey(e),r)}deleteMany(e,r){const n=pushable({objectMode:!0});return drain$1(this.child.deleteMany(async function*(){for await(const o of e)yield cidToKey(o),n.push(o);n.end()}(),r)).catch(o=>{n.end(o)}),n}}function createRepo$1(t,e,r){const n=r.path||"ipfs";return createRepo$2(n,o=>e.getCodec(o),{root:new LevelDatastore(n,{prefix:"",version:2}),blocks:new BlockstoreDatastoreAdapter(new LevelDatastore(`${n}/blocks`,{prefix:"",version:2})),datastore:new LevelDatastore(`${n}/datastore`,{prefix:"",version:2}),keys:new LevelDatastore(`${n}/keys`,{prefix:"",version:2}),pins:new LevelDatastore(`${n}/pins`,{prefix:"",version:2})},{autoMigrate:r.autoMigrate,onMigrationProgress:r.onMigrationProgress||t,repoLock:MemoryLock})}function accessor(t){return t instanceof Uint8Array?{get(e){return t[e]},set(e,r){t[e]=r}}:{get(e){return t.get(e)},set(e,r){t.set(e,r)}}}const TWO_32=4294967296;class LongBits{constructor(e=0,r=0){this.hi=e,this.lo=r}toBigInt(e){if(e===!0)return BigInt(this.lo>>>0)+(BigInt(this.hi>>>0)<<32n);if(this.hi>>>31){const r=~this.lo+1>>>0;let n=~this.hi>>>0;return r===0&&(n=n+1>>>0),-(BigInt(r)+(BigInt(n)<<32n))}return BigInt(this.lo>>>0)+(BigInt(this.hi>>>0)<<32n)}toNumber(e){return Number(this.toBigInt(e))}zzDecode(){const e=-(this.lo&1),r=((this.lo>>>1|this.hi<<31)^e)>>>0,n=(this.hi>>>1^e)>>>0;return new LongBits(n,r)}zzEncode(){const e=this.hi>>31,r=((this.hi<<1|this.lo>>>31)^e)>>>0,n=(this.lo<<1^e)>>>0;return new LongBits(r,n)}toBytes(e,r=0){const n=accessor(e);for(;this.hi>0;)n.set(r++,this.lo&127|128),this.lo=(this.lo>>>7|this.hi<<25)>>>0,this.hi>>>=7;for(;this.lo>127;)n.set(r++,this.lo&127|128),this.lo=this.lo>>>7;n.set(r++,this.lo)}static fromBigInt(e){if(e===0n)return new LongBits;const r=e<0;r&&(e=-e);let n=Number(e>>32n)|0,o=Number(e-(BigInt(n)<<32n))|0;return r&&(n=~n>>>0,o=~o>>>0,++o>TWO_32&&(o=0,++n>TWO_32&&(n=0))),new LongBits(n,o)}static fromNumber(e){if(e===0)return new LongBits;const r=e<0;r&&(e=-e);let n=e>>>0,o=(e-n)/4294967296>>>0;return r&&(o=~o>>>0,n=~n>>>0,++n>4294967295&&(n=0,++o>4294967295&&(o=0))),new LongBits(o,n)}static fromBytes(e,r=0){const n=accessor(e),o=new LongBits;let a=0;if(e.length-r>4){for(;a<4;++a)if(o.lo=(o.lo|(n.get(r)&127)<<a*7)>>>0,n.get(r++)<128)return o;if(o.lo=(o.lo|(n.get(r)&127)<<28)>>>0,o.hi=(o.hi|(n.get(r)&127)>>4)>>>0,n.get(r++)<128)return o;a=0}else for(;a<4;++a){if(r>=e.length)throw RangeError(`index out of range: ${r} > ${e.length}`);if(o.lo=(o.lo|(n.get(r)&127)<<a*7)>>>0,n.get(r++)<128)return o}if(e.length-r>4){for(;a<5;++a)if(o.hi=(o.hi|(n.get(r)&127)<<a*7+3)>>>0,n.get(r++)<128)return o}else if(r<e.byteLength)for(;a<5;++a){if(r>=e.length)throw RangeError(`index out of range: ${r} > ${e.length}`);if(o.hi=(o.hi|(n.get(r)&127)<<a*7+3)>>>0,n.get(r++)<128)return o}throw RangeError("invalid varint encoding")}}const N1$f=Math.pow(2,7),N2$f=Math.pow(2,14),N3$f=Math.pow(2,21),N4$f=Math.pow(2,28),N5$f=Math.pow(2,35),N6$f=Math.pow(2,42),N7$f=Math.pow(2,49),N8$c=Math.pow(2,56),N9$c=Math.pow(2,63),unsigned={encodingLength(t){return t<N1$f?1:t<N2$f?2:t<N3$f?3:t<N4$f?4:t<N5$f?5:t<N6$f?6:t<N7$f?7:t<N8$c?8:t<N9$c?9:10},encode(t,e,r=0){if(Number.MAX_SAFE_INTEGER!=null&&t>Number.MAX_SAFE_INTEGER)throw new RangeError("Could not encode varint");return e==null&&(e=allocUnsafe$g(unsigned.encodingLength(t))),LongBits.fromNumber(t).toBytes(e,r),e},decode(t,e=0){return LongBits.fromBytes(t,e).toNumber(!0)}},codes$a={ERR_SIGNATURE_NOT_VALID:"ERR_SIGNATURE_NOT_VALID"};var Envelope;(function(t){let e;t.codec=()=>(e==null&&(e=message$2((r,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),r.publicKey!=null&&r.publicKey.byteLength>0&&(n.uint32(10),n.bytes(r.publicKey)),r.payloadType!=null&&r.payloadType.byteLength>0&&(n.uint32(18),n.bytes(r.payloadType)),r.payload!=null&&r.payload.byteLength>0&&(n.uint32(26),n.bytes(r.payload)),r.signature!=null&&r.signature.byteLength>0&&(n.uint32(42),n.bytes(r.signature)),o.lengthDelimited!==!1&&n.ldelim()},(r,n)=>{const o={publicKey:new Uint8Array(0),payloadType:new Uint8Array(0),payload:new Uint8Array(0),signature:new Uint8Array(0)},a=n==null?r.len:r.pos+n;for(;r.pos<a;){const c=r.uint32();switch(c>>>3){case 1:o.publicKey=r.bytes();break;case 2:o.payloadType=r.bytes();break;case 3:o.payload=r.bytes();break;case 5:o.signature=r.bytes();break;default:r.skipType(c&7);break}}return o})),e),t.encode=r=>encodeMessage$2(r,t.codec()),t.decode=r=>decodeMessage$3(r,t.codec())})(Envelope||(Envelope={}));const pt=class pt{constructor(e){N(this,"peerId");N(this,"payloadType");N(this,"payload");N(this,"signature");N(this,"marshaled");const{peerId:r,payloadType:n,payload:o,signature:a}=e;this.peerId=r,this.payloadType=n,this.payload=o,this.signature=a}marshal(){if(this.peerId.publicKey==null)throw new Error("Missing public key");return this.marshaled==null&&(this.marshaled=Envelope.encode({publicKey:this.peerId.publicKey,payloadType:this.payloadType,payload:this.payload.subarray(),signature:this.signature})),this.marshaled}equals(e){return equals$R(this.marshal(),e.marshal())}async validate(e){const r=formatSignaturePayload(e,this.payloadType,this.payload);if(this.peerId.publicKey==null)throw new Error("Missing public key");return unmarshalPublicKey(this.peerId.publicKey).verify(r.subarray(),this.signature)}};N(pt,"createFromProtobuf",async e=>{const r=Envelope.decode(e),n=await peerIdFromKeys(r.publicKey);return new pt({peerId:n,payloadType:r.payloadType,payload:r.payload,signature:r.signature})}),N(pt,"seal",async(e,r)=>{if(r.privateKey==null)throw new Error("Missing private key");const n=e.domain,o=e.codec,a=e.marshal(),c=formatSignaturePayload(n,o,a),u=await(await unmarshalPrivateKey(r.privateKey)).sign(c.subarray());return new pt({peerId:r,payloadType:o,payload:a,signature:u})}),N(pt,"openAndCertify",async(e,r)=>{const n=await pt.createFromProtobuf(e);if(!await n.validate(r))throw new CodeError$4("envelope signature is not valid for the given domain",codes$a.ERR_SIGNATURE_NOT_VALID);return n});let RecordEnvelope=pt;const formatSignaturePayload=(t,e,r)=>{const n=fromString$y(t),o=unsigned.encode(n.byteLength),a=unsigned.encode(e.length),c=unsigned.encode(r.length);return new Uint8ArrayList(o,n,a,e,c,r)};function arrayEquals$1(t,e){const r=(n,o)=>n.toString().localeCompare(o.toString());return t.length!==e.length?!1:(e.sort(r),t.sort(r).every((n,o)=>e[o].equals(n)))}const ENVELOPE_DOMAIN_PEER_RECORD="libp2p-peer-record",ENVELOPE_PAYLOAD_TYPE_PEER_RECORD=Uint8Array.from([3,1]);var PeerRecord$1;(function(t){(function(r){let n;r.codec=()=>(n==null&&(n=message$2((o,a,c={})=>{c.lengthDelimited!==!1&&a.fork(),o.multiaddr!=null&&o.multiaddr.byteLength>0&&(a.uint32(10),a.bytes(o.multiaddr)),c.lengthDelimited!==!1&&a.ldelim()},(o,a)=>{const c={multiaddr:new Uint8Array(0)},u=a==null?o.len:o.pos+a;for(;o.pos<u;){const l=o.uint32();switch(l>>>3){case 1:c.multiaddr=o.bytes();break;default:o.skipType(l&7);break}}return c})),n),r.encode=o=>encodeMessage$2(o,r.codec()),r.decode=o=>decodeMessage$3(o,r.codec())})(t.AddressInfo||(t.AddressInfo={}));let e;t.codec=()=>(e==null&&(e=message$2((r,n,o={})=>{if(o.lengthDelimited!==!1&&n.fork(),r.peerId!=null&&r.peerId.byteLength>0&&(n.uint32(10),n.bytes(r.peerId)),r.seq!=null&&r.seq!==0n&&(n.uint32(16),n.uint64(r.seq)),r.addresses!=null)for(const a of r.addresses)n.uint32(26),t.AddressInfo.codec().encode(a,n);o.lengthDelimited!==!1&&n.ldelim()},(r,n)=>{const o={peerId:new Uint8Array(0),seq:0n,addresses:[]},a=n==null?r.len:r.pos+n;for(;r.pos<a;){const c=r.uint32();switch(c>>>3){case 1:o.peerId=r.bytes();break;case 2:o.seq=r.uint64();break;case 3:o.addresses.push(t.AddressInfo.codec().decode(r,r.uint32()));break;default:r.skipType(c&7);break}}return o})),e),t.encode=r=>encodeMessage$2(r,t.codec()),t.decode=r=>decodeMessage$3(r,t.codec())})(PeerRecord$1||(PeerRecord$1={}));const ct=class ct{constructor(e){N(this,"peerId");N(this,"multiaddrs");N(this,"seqNumber");N(this,"domain",ct.DOMAIN);N(this,"codec",ct.CODEC);N(this,"marshaled");const{peerId:r,multiaddrs:n,seqNumber:o}=e;this.peerId=r,this.multiaddrs=n??[],this.seqNumber=o??BigInt(Date.now())}marshal(){return this.marshaled==null&&(this.marshaled=PeerRecord$1.encode({peerId:this.peerId.toBytes(),seq:BigInt(this.seqNumber),addresses:this.multiaddrs.map(e=>({multiaddr:e.bytes}))})),this.marshaled}equals(e){return!(!(e instanceof ct)||!this.peerId.equals(e.peerId)||this.seqNumber!==e.seqNumber||!arrayEquals$1(this.multiaddrs,e.multiaddrs))}};N(ct,"createFromProtobuf",e=>{const r=PeerRecord$1.decode(e),n=peerIdFromBytes$1(r.peerId),o=(r.addresses??[]).map(c=>multiaddr$9(c.multiaddr)),a=r.seq;return new ct({peerId:n,multiaddrs:o,seqNumber:a})}),N(ct,"DOMAIN",ENVELOPE_DOMAIN_PEER_RECORD),N(ct,"CODEC",ENVELOPE_PAYLOAD_TYPE_PEER_RECORD);let PeerRecord=ct;const topologySymbol=Symbol.for("@libp2p/topology");function isTopology(t){return t!=null&&!!t[topologySymbol]}const noop$2=()=>{};class TopologyImpl{constructor(e){N(this,"min");N(this,"max");N(this,"peers");N(this,"onConnect");N(this,"onDisconnect");N(this,"registrar");N(this,jr,!0);this.min=e.min??0,this.max=e.max??1/0,this.peers=new Set,this.onConnect=e.onConnect??noop$2,this.onDisconnect=e.onDisconnect??noop$2}get[Symbol.toStringTag](){return topologySymbol.toString()}async setRegistrar(e){this.registrar=e}disconnect(e){this.onDisconnect(e)}}jr=topologySymbol;function createTopology(t){return new TopologyImpl(t)}EventEmitter$1=(Er=class extends EventTarget{constructor(){super(...arguments);G(this,nt,new Map)}listenerCount(e){const r=B(this,nt).get(e);return r==null?0:r.length}addEventListener(e,r,n){super.addEventListener(e,r,n);let o=B(this,nt).get(e);o==null&&(o=[],B(this,nt).set(e,o)),o.push({callback:r,once:(n!==!0&&n!==!1&&n?.once)??!1})}removeEventListener(e,r,n){super.removeEventListener(e.toString(),r??null,n);let o=B(this,nt).get(e);o!=null&&(o=o.filter(({callback:a})=>a!==r),B(this,nt).set(e,o))}dispatchEvent(e){const r=super.dispatchEvent(e);let n=B(this,nt).get(e.type);return n==null||(n=n.filter(({once:o})=>!o),B(this,nt).set(e.type,n)),r}safeDispatchEvent(e,r){return this.dispatchEvent(new CustomEvent(e,r))}},nt=new WeakMap,Er);class CustomEventPolyfill extends Event{constructor(r,n){super(r,n);N(this,"detail");this.detail=n?.detail}}CustomEvent=globalThis.CustomEvent??CustomEventPolyfill;class MessageCache{constructor(e,r,n){this.gossip=e,this.msgs=new Map,this.history=[],this.notValidatedCount=0,this.msgIdToStrFn=n;for(let o=0;o<r;o++)this.history[o]=[]}get size(){return this.msgs.size}put(e,r,n=!1){const{msgIdStr:o}=e;return this.msgs.has(o)?!1:(this.msgs.set(o,{message:r,validated:n,originatingPeers:new Set,iwantCounts:new Map}),this.history[0].push({...e,topic:r.topic}),n||this.notValidatedCount++,!0)}observeDuplicate(e,r){const n=this.msgs.get(e);n&&!n.validated&&n.originatingPeers.add(r)}get(e){return this.msgs.get(this.msgIdToStrFn(e))?.message}getWithIWantCount(e,r){const n=this.msgs.get(e);if(!n)return null;const o=(n.iwantCounts.get(r)??0)+1;return n.iwantCounts.set(r,o),{msg:n.message,count:o}}getGossipIDs(e){const r=new Map;for(let n=0;n<this.gossip;n++)this.history[n].forEach(o=>{const a=this.msgs.get(o.msgIdStr);if(a&&a.validated&&e.has(o.topic)){let c=r.get(o.topic);c||(c=[],r.set(o.topic,c)),c.push(o.msgId)}});return r}validate(e){const r=this.msgs.get(e);if(!r)return null;r.validated||this.notValidatedCount--;const{message:n,originatingPeers:o}=r;return r.validated=!0,r.originatingPeers=new Set,{message:n,originatingPeers:o}}shift(){this.history[this.history.length-1].forEach(e=>{const r=this.msgs.get(e.msgIdStr);r&&(this.msgs.delete(e.msgIdStr),r.validated||this.notValidatedCount--)}),this.history.pop(),this.history.unshift([])}remove(e){const r=this.msgs.get(e);return r?(this.msgs.delete(e),r):null}}var rpc$1={exports:{}},indexMinimal={},minimal$1={},longbits,hasRequiredLongbits;function requireLongbits(){if(hasRequiredLongbits)return longbits;hasRequiredLongbits=1,longbits=e;var t=requireMinimal$1();function e(a,c){this.lo=a>>>0,this.hi=c>>>0}var r=e.zero=new e(0,0);r.toNumber=function(){return 0},r.zzEncode=r.zzDecode=function(){return this},r.length=function(){return 1};var n=e.zeroHash="\0\0\0\0\0\0\0\0";e.fromNumber=function(a){if(a===0)return r;var c=a<0;c&&(a=-a);var u=a>>>0,l=(a-u)/4294967296>>>0;return c&&(l=~l>>>0,u=~u>>>0,++u>4294967295&&(u=0,++l>4294967295&&(l=0))),new e(u,l)},e.from=function(a){if(typeof a=="number")return e.fromNumber(a);if(t.isString(a))if(t.Long)a=t.Long.fromString(a);else return e.fromNumber(parseInt(a,10));return a.low||a.high?new e(a.low>>>0,a.high>>>0):r},e.prototype.toNumber=function(a){if(!a&&this.hi>>>31){var c=~this.lo+1>>>0,u=~this.hi>>>0;return c||(u=u+1>>>0),-(c+u*4294967296)}return this.lo+this.hi*4294967296},e.prototype.toLong=function(a){return t.Long?new t.Long(this.lo|0,this.hi|0,!!a):{low:this.lo|0,high:this.hi|0,unsigned:!!a}};var o=String.prototype.charCodeAt;return e.fromHash=function(a){return a===n?r:new e((o.call(a,0)|o.call(a,1)<<8|o.call(a,2)<<16|o.call(a,3)<<24)>>>0,(o.call(a,4)|o.call(a,5)<<8|o.call(a,6)<<16|o.call(a,7)<<24)>>>0)},e.prototype.toHash=function(){return String.fromCharCode(this.lo&255,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,this.hi&255,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)},e.prototype.zzEncode=function(){var a=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^a)>>>0,this.lo=(this.lo<<1^a)>>>0,this},e.prototype.zzDecode=function(){var a=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^a)>>>0,this.hi=(this.hi>>>1^a)>>>0,this},e.prototype.length=function(){var a=this.lo,c=(this.lo>>>28|this.hi<<4)>>>0,u=this.hi>>>24;return u===0?c===0?a<16384?a<128?1:2:a<2097152?3:4:c<16384?c<128?5:6:c<2097152?7:8:u<128?9:10},longbits}var hasRequiredMinimal$1;function requireMinimal$1(){return hasRequiredMinimal$1||(hasRequiredMinimal$1=1,function(t){var e=t;e.asPromise=aspromise,e.base64=base64$A,e.EventEmitter=eventemitter,e.float=float,e.inquire=inquire_1,e.utf8=utf8$2,e.pool=pool_1,e.LongBits=requireLongbits(),e.isNode=!!(typeof commonjsGlobal<"u"&&commonjsGlobal&&commonjsGlobal.process&&commonjsGlobal.process.versions&&commonjsGlobal.process.versions.node),e.global=e.isNode&&commonjsGlobal||typeof window<"u"&&window||typeof self<"u"&&self||commonjsGlobal,e.emptyArray=Object.freeze?Object.freeze([]):[],e.emptyObject=Object.freeze?Object.freeze({}):{},e.isInteger=Number.isInteger||function(o){return typeof o=="number"&&isFinite(o)&&Math.floor(o)===o},e.isString=function(o){return typeof o=="string"||o instanceof String},e.isObject=function(o){return o&&typeof o=="object"},e.isset=e.isSet=function(o,a){var c=o[a];return c!=null&&o.hasOwnProperty(a)?typeof c!="object"||(Array.isArray(c)?c.length:Object.keys(c).length)>0:!1},e.Buffer=function(){try{var o=e.inquire("buffer").Buffer;return o.prototype.utf8Write?o:null}catch{return null}}(),e._Buffer_from=null,e._Buffer_allocUnsafe=null,e.newBuffer=function(o){return typeof o=="number"?e.Buffer?e._Buffer_allocUnsafe(o):new e.Array(o):e.Buffer?e._Buffer_from(o):typeof Uint8Array>"u"?o:new Uint8Array(o)},e.Array=typeof Uint8Array<"u"?Uint8Array:Array,e.Long=e.global.dcodeIO&&e.global.dcodeIO.Long||e.global.Long||e.inquire("long"),e.key2Re=/^true|false|0|1$/,e.key32Re=/^-?(?:0|[1-9][0-9]*)$/,e.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/,e.longToHash=function(o){return o?e.LongBits.from(o).toHash():e.LongBits.zeroHash},e.longFromHash=function(o,a){var c=e.LongBits.fromHash(o);return e.Long?e.Long.fromBits(c.lo,c.hi,a):c.toNumber(!!a)};function r(o,a,c){for(var u=Object.keys(a),l=0;l<u.length;++l)(o[u[l]]===void 0||!c)&&(o[u[l]]=a[u[l]]);return o}e.merge=r,e.lcFirst=function(o){return o.charAt(0).toLowerCase()+o.substring(1)};function n(o){function a(c,u){if(!(this instanceof a))return new a(c,u);Object.defineProperty(this,"message",{get:function(){return c}}),Error.captureStackTrace?Error.captureStackTrace(this,a):Object.defineProperty(this,"stack",{value:new Error().stack||""}),u&&r(this,u)}return(a.prototype=Object.create(Error.prototype)).constructor=a,Object.defineProperty(a.prototype,"name",{get:function(){return o}}),a.prototype.toString=function(){return this.name+": "+this.message},a}e.newError=n,e.ProtocolError=n("ProtocolError"),e.oneOfGetter=function(o){for(var a={},c=0;c<o.length;++c)a[o[c]]=1;return function(){for(var u=Object.keys(this),l=u.length-1;l>-1;--l)if(a[u[l]]===1&&this[u[l]]!==void 0&&this[u[l]]!==null)return u[l]}},e.oneOfSetter=function(o){return function(a){for(var c=0;c<o.length;++c)o[c]!==a&&delete this[o[c]]}},e.toJSONOptions={longs:String,enums:String,bytes:String,json:!0},e._configure=function(){var o=e.Buffer;if(!o){e._Buffer_from=e._Buffer_allocUnsafe=null;return}e._Buffer_from=o.from!==Uint8Array.from&&o.from||function(a,c){return new o(a,c)},e._Buffer_allocUnsafe=o.allocUnsafe||function(a){return new o(a)}}}(minimal$1)),minimal$1}var writer$1,hasRequiredWriter;function requireWriter(){if(hasRequiredWriter)return writer$1;hasRequiredWriter=1,writer$1=l;var t=requireMinimal$1(),e,r=t.LongBits,n=t.base64,o=t.utf8;function a(v,S,I){this.fn=v,this.len=S,this.next=void 0,this.val=I}function c(){}function u(v){this.head=v.head,this.tail=v.tail,this.len=v.len,this.next=v.states}function l(){this.len=0,this.head=new a(c,0,0),this.tail=this.head,this.states=null}var f=function(){return t.Buffer?function(){return(l.create=function(){return new e})()}:function(){return new l}};l.create=f(),l.alloc=function(v){return new t.Array(v)},t.Array!==Array&&(l.alloc=t.pool(l.alloc,t.Array.prototype.subarray)),l.prototype._push=function(v,S,I){return this.tail=this.tail.next=new a(v,S,I),this.len+=S,this};function p(v,S,I){S[I]=v&255}function g(v,S,I){for(;v>127;)S[I++]=v&127|128,v>>>=7;S[I]=v}function $(v,S){this.len=v,this.next=void 0,this.val=S}$.prototype=Object.create(a.prototype),$.prototype.fn=g,l.prototype.uint32=function(v){return this.len+=(this.tail=this.tail.next=new $((v=v>>>0)<128?1:v<16384?2:v<2097152?3:v<268435456?4:5,v)).len,this},l.prototype.int32=function(v){return v<0?this._push(_,10,r.fromNumber(v)):this.uint32(v)},l.prototype.sint32=function(v){return this.uint32((v<<1^v>>31)>>>0)};function _(v,S,I){for(;v.hi;)S[I++]=v.lo&127|128,v.lo=(v.lo>>>7|v.hi<<25)>>>0,v.hi>>>=7;for(;v.lo>127;)S[I++]=v.lo&127|128,v.lo=v.lo>>>7;S[I++]=v.lo}l.prototype.uint64=function(v){var S=r.from(v);return this._push(_,S.length(),S)},l.prototype.int64=l.prototype.uint64,l.prototype.sint64=function(v){var S=r.from(v).zzEncode();return this._push(_,S.length(),S)},l.prototype.bool=function(v){return this._push(p,1,v?1:0)};function b(v,S,I){S[I]=v&255,S[I+1]=v>>>8&255,S[I+2]=v>>>16&255,S[I+3]=v>>>24}l.prototype.fixed32=function(v){return this._push(b,4,v>>>0)},l.prototype.sfixed32=l.prototype.fixed32,l.prototype.fixed64=function(v){var S=r.from(v);return this._push(b,4,S.lo)._push(b,4,S.hi)},l.prototype.sfixed64=l.prototype.fixed64,l.prototype.float=function(v){return this._push(t.float.writeFloatLE,4,v)},l.prototype.double=function(v){return this._push(t.float.writeDoubleLE,8,v)};var D=t.Array.prototype.set?function(v,S,I){S.set(v,I)}:function(v,S,I){for(var R=0;R<v.length;++R)S[I+R]=v[R]};return l.prototype.bytes=function(v){var S=v.length>>>0;if(!S)return this._push(p,1,0);if(t.isString(v)){var I=l.alloc(S=n.length(v));n.decode(v,I,0),v=I}return this.uint32(S)._push(D,S,v)},l.prototype.string=function(v){var S=o.length(v);return S?this.uint32(S)._push(o.write,S,v):this._push(p,1,0)},l.prototype.fork=function(){return this.states=new u(this),this.head=this.tail=new a(c,0,0),this.len=0,this},l.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new a(c,0,0),this.len=0),this},l.prototype.ldelim=function(){var v=this.head,S=this.tail,I=this.len;return this.reset().uint32(I),I&&(this.tail.next=v.next,this.tail=S,this.len+=I),this},l.prototype.finish=function(){for(var v=this.head.next,S=this.constructor.alloc(this.len),I=0;v;)v.fn(v.val,S,I),I+=v.len,v=v.next;return S},l._configure=function(v){e=v,l.create=f(),e._configure()},writer$1}var writer_buffer,hasRequiredWriter_buffer;function requireWriter_buffer(){if(hasRequiredWriter_buffer)return writer_buffer;hasRequiredWriter_buffer=1,writer_buffer=r;var t=requireWriter();(r.prototype=Object.create(t.prototype)).constructor=r;var e=requireMinimal$1();function r(){t.call(this)}r._configure=function(){r.alloc=e._Buffer_allocUnsafe,r.writeBytesBuffer=e.Buffer&&e.Buffer.prototype instanceof Uint8Array&&e.Buffer.prototype.set.name==="set"?function(o,a,c){a.set(o,c)}:function(o,a,c){if(o.copy)o.copy(a,c,0,o.length);else for(var u=0;u<o.length;)a[c++]=o[u++]}},r.prototype.bytes=function(o){e.isString(o)&&(o=e._Buffer_from(o,"base64"));var a=o.length>>>0;return this.uint32(a),a&&this._push(r.writeBytesBuffer,a,o),this};function n(o,a,c){o.length<40?e.utf8.write(o,a,c):a.utf8Write?a.utf8Write(o,c):a.write(o,c)}return r.prototype.string=function(o){var a=e.Buffer.byteLength(o);return this.uint32(a),a&&this._push(n,a,o),this},r._configure(),writer_buffer}var reader$1,hasRequiredReader;function requireReader(){if(hasRequiredReader)return reader$1;hasRequiredReader=1,reader$1=a;var t=requireMinimal$1(),e,r=t.LongBits,n=t.utf8;function o(g,$){return RangeError("index out of range: "+g.pos+" + "+($||1)+" > "+g.len)}function a(g){this.buf=g,this.pos=0,this.len=g.length}var c=typeof Uint8Array<"u"?function(g){if(g instanceof Uint8Array||Array.isArray(g))return new a(g);throw Error("illegal buffer")}:function(g){if(Array.isArray(g))return new a(g);throw Error("illegal buffer")},u=function(){return t.Buffer?function(g){return(a.create=function($){return t.Buffer.isBuffer($)?new e($):c($)})(g)}:c};a.create=u(),a.prototype._slice=t.Array.prototype.subarray||t.Array.prototype.slice,a.prototype.uint32=function(){var g=4294967295;return function(){if(g=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(g=(g|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(g=(g|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(g=(g|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(g=(g|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return g;if((this.pos+=5)>this.len)throw this.pos=this.len,o(this,10);return g}}(),a.prototype.int32=function(){return this.uint32()|0},a.prototype.sint32=function(){var g=this.uint32();return g>>>1^-(g&1)|0};function l(){var g=new r(0,0),$=0;if(this.len-this.pos>4){for(;$<4;++$)if(g.lo=(g.lo|(this.buf[this.pos]&127)<<$*7)>>>0,this.buf[this.pos++]<128)return g;if(g.lo=(g.lo|(this.buf[this.pos]&127)<<28)>>>0,g.hi=(g.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return g;$=0}else{for(;$<3;++$){if(this.pos>=this.len)throw o(this);if(g.lo=(g.lo|(this.buf[this.pos]&127)<<$*7)>>>0,this.buf[this.pos++]<128)return g}return g.lo=(g.lo|(this.buf[this.pos++]&127)<<$*7)>>>0,g}if(this.len-this.pos>4){for(;$<5;++$)if(g.hi=(g.hi|(this.buf[this.pos]&127)<<$*7+3)>>>0,this.buf[this.pos++]<128)return g}else for(;$<5;++$){if(this.pos>=this.len)throw o(this);if(g.hi=(g.hi|(this.buf[this.pos]&127)<<$*7+3)>>>0,this.buf[this.pos++]<128)return g}throw Error("invalid varint encoding")}a.prototype.bool=function(){return this.uint32()!==0};function f(g,$){return(g[$-4]|g[$-3]<<8|g[$-2]<<16|g[$-1]<<24)>>>0}a.prototype.fixed32=function(){if(this.pos+4>this.len)throw o(this,4);return f(this.buf,this.pos+=4)},a.prototype.sfixed32=function(){if(this.pos+4>this.len)throw o(this,4);return f(this.buf,this.pos+=4)|0};function p(){if(this.pos+8>this.len)throw o(this,8);return new r(f(this.buf,this.pos+=4),f(this.buf,this.pos+=4))}return a.prototype.float=function(){if(this.pos+4>this.len)throw o(this,4);var g=t.float.readFloatLE(this.buf,this.pos);return this.pos+=4,g},a.prototype.double=function(){if(this.pos+8>this.len)throw o(this,4);var g=t.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,g},a.prototype.bytes=function(){var g=this.uint32(),$=this.pos,_=this.pos+g;if(_>this.len)throw o(this,g);return this.pos+=g,Array.isArray(this.buf)?this.buf.slice($,_):$===_?new this.buf.constructor(0):this._slice.call(this.buf,$,_)},a.prototype.string=function(){var g=this.bytes();return n.read(g,0,g.length)},a.prototype.skip=function(g){if(typeof g=="number"){if(this.pos+g>this.len)throw o(this,g);this.pos+=g}else do if(this.pos>=this.len)throw o(this);while(this.buf[this.pos++]&128);return this},a.prototype.skipType=function(g){switch(g){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(g=this.uint32()&7)!==4;)this.skipType(g);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+g+" at offset "+this.pos)}return this},a._configure=function(g){e=g,a.create=u(),e._configure();var $=t.Long?"toLong":"toNumber";t.merge(a.prototype,{int64:function(){return l.call(this)[$](!1)},uint64:function(){return l.call(this)[$](!0)},sint64:function(){return l.call(this).zzDecode()[$](!1)},fixed64:function(){return p.call(this)[$](!0)},sfixed64:function(){return p.call(this)[$](!1)}})},reader$1}var reader_buffer,hasRequiredReader_buffer;function requireReader_buffer(){if(hasRequiredReader_buffer)return reader_buffer;hasRequiredReader_buffer=1,reader_buffer=r;var t=requireReader();(r.prototype=Object.create(t.prototype)).constructor=r;var e=requireMinimal$1();function r(n){t.call(this,n)}return r._configure=function(){e.Buffer&&(r.prototype._slice=e.Buffer.prototype.slice)},r.prototype.string=function(){var n=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+n,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+n,this.len))},r._configure(),reader_buffer}var rpc={},service,hasRequiredService;function requireService(){if(hasRequiredService)return service;hasRequiredService=1,service=e;var t=requireMinimal$1();(e.prototype=Object.create(t.EventEmitter.prototype)).constructor=e;function e(r,n,o){if(typeof r!="function")throw TypeError("rpcImpl must be a function");t.EventEmitter.call(this),this.rpcImpl=r,this.requestDelimited=!!n,this.responseDelimited=!!o}return e.prototype.rpcCall=function r(n,o,a,c,u){if(!c)throw TypeError("request must be specified");var l=this;if(!u)return t.asPromise(r,l,n,o,a,c);if(!l.rpcImpl){setTimeout(function(){u(Error("already ended"))},0);return}try{return l.rpcImpl(n,o[l.requestDelimited?"encodeDelimited":"encode"](c).finish(),function(f,p){if(f)return l.emit("error",f,n),u(f);if(p===null){l.end(!0);return}if(!(p instanceof a))try{p=a[l.responseDelimited?"decodeDelimited":"decode"](p)}catch(g){return l.emit("error",g,n),u(g)}return l.emit("data",p,n),u(null,p)})}catch(f){l.emit("error",f,n),setTimeout(function(){u(f)},0);return}},e.prototype.end=function(r){return this.rpcImpl&&(r||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this},service}var hasRequiredRpc;function requireRpc(){return hasRequiredRpc||(hasRequiredRpc=1,function(t){var e=t;e.Service=requireService()}(rpc)),rpc}var roots,hasRequiredRoots;function requireRoots(){return hasRequiredRoots||(hasRequiredRoots=1,roots={}),roots}var hasRequiredIndexMinimal;function requireIndexMinimal(){return hasRequiredIndexMinimal||(hasRequiredIndexMinimal=1,function(t){var e=t;e.build="minimal",e.Writer=requireWriter(),e.BufferWriter=requireWriter_buffer(),e.Reader=requireReader(),e.BufferReader=requireReader_buffer(),e.util=requireMinimal$1(),e.rpc=requireRpc(),e.roots=requireRoots(),e.configure=r;function r(){e.util._configure(),e.Writer._configure(e.BufferWriter),e.Reader._configure(e.BufferReader)}r()}(indexMinimal)),indexMinimal}var minimal,hasRequiredMinimal;function requireMinimal(){return hasRequiredMinimal||(hasRequiredMinimal=1,minimal=requireIndexMinimal()),minimal}(function(t){(function(e,r){typeof commonjsRequire=="function"&&t&&t.exports&&(t.exports=r(requireMinimal()))})(commonjsGlobal,function(e){var r=e.Reader,n=e.Writer,o=e.util,a=e.roots.default||(e.roots.default={});return a.RPC=function(){function c(l){if(this.subscriptions=[],this.messages=[],l)for(var f=Object.keys(l),p=0;p<f.length;++p)l[f[p]]!=null&&(this[f[p]]=l[f[p]])}c.prototype.subscriptions=o.emptyArray,c.prototype.messages=o.emptyArray,c.prototype.control=null;var u;return Object.defineProperty(c.prototype,"_control",{get:o.oneOfGetter(u=["control"]),set:o.oneOfSetter(u)}),c.encode=function(l,f){if(f||(f=n.create()),l.subscriptions!=null&&l.subscriptions.length)for(var p=0;p<l.subscriptions.length;++p)a.RPC.SubOpts.encode(l.subscriptions[p],f.uint32(10).fork()).ldelim();if(l.messages!=null&&l.messages.length)for(var p=0;p<l.messages.length;++p)a.RPC.Message.encode(l.messages[p],f.uint32(18).fork()).ldelim();return l.control!=null&&Object.hasOwnProperty.call(l,"control")&&a.RPC.ControlMessage.encode(l.control,f.uint32(26).fork()).ldelim(),f},c.decode=function(l,f){l instanceof r||(l=r.create(l));for(var p=f===void 0?l.len:l.pos+f,g=new a.RPC;l.pos<p;){var $=l.uint32();switch($>>>3){case 1:g.subscriptions&&g.subscriptions.length||(g.subscriptions=[]),g.subscriptions.push(a.RPC.SubOpts.decode(l,l.uint32()));break;case 2:g.messages&&g.messages.length||(g.messages=[]),g.messages.push(a.RPC.Message.decode(l,l.uint32()));break;case 3:g.control=a.RPC.ControlMessage.decode(l,l.uint32());break;default:l.skipType($&7);break}}return g},c.fromObject=function(l){if(l instanceof a.RPC)return l;var f=new a.RPC;if(l.subscriptions){if(!Array.isArray(l.subscriptions))throw TypeError(".RPC.subscriptions: array expected");f.subscriptions=[];for(var p=0;p<l.subscriptions.length;++p){if(typeof l.subscriptions[p]!="object")throw TypeError(".RPC.subscriptions: object expected");f.subscriptions[p]=a.RPC.SubOpts.fromObject(l.subscriptions[p])}}if(l.messages){if(!Array.isArray(l.messages))throw TypeError(".RPC.messages: array expected");f.messages=[];for(var p=0;p<l.messages.length;++p){if(typeof l.messages[p]!="object")throw TypeError(".RPC.messages: object expected");f.messages[p]=a.RPC.Message.fromObject(l.messages[p])}}if(l.control!=null){if(typeof l.control!="object")throw TypeError(".RPC.control: object expected");f.control=a.RPC.ControlMessage.fromObject(l.control)}return f},c.toObject=function(l,f){f||(f={});var p={};if((f.arrays||f.defaults)&&(p.subscriptions=[],p.messages=[]),l.subscriptions&&l.subscriptions.length){p.subscriptions=[];for(var g=0;g<l.subscriptions.length;++g)p.subscriptions[g]=a.RPC.SubOpts.toObject(l.subscriptions[g],f)}if(l.messages&&l.messages.length){p.messages=[];for(var g=0;g<l.messages.length;++g)p.messages[g]=a.RPC.Message.toObject(l.messages[g],f)}return l.control!=null&&l.hasOwnProperty("control")&&(p.control=a.RPC.ControlMessage.toObject(l.control,f),f.oneofs&&(p._control="control")),p},c.prototype.toJSON=function(){return this.constructor.toObject(this,e.util.toJSONOptions)},c.SubOpts=function(){function l(p){if(p)for(var g=Object.keys(p),$=0;$<g.length;++$)p[g[$]]!=null&&(this[g[$]]=p[g[$]])}l.prototype.subscribe=null,l.prototype.topic=null;var f;return Object.defineProperty(l.prototype,"_subscribe",{get:o.oneOfGetter(f=["subscribe"]),set:o.oneOfSetter(f)}),Object.defineProperty(l.prototype,"_topic",{get:o.oneOfGetter(f=["topic"]),set:o.oneOfSetter(f)}),l.encode=function(p,g){return g||(g=n.create()),p.subscribe!=null&&Object.hasOwnProperty.call(p,"subscribe")&&g.uint32(8).bool(p.subscribe),p.topic!=null&&Object.hasOwnProperty.call(p,"topic")&&g.uint32(18).string(p.topic),g},l.decode=function(p,g){p instanceof r||(p=r.create(p));for(var $=g===void 0?p.len:p.pos+g,_=new a.RPC.SubOpts;p.pos<$;){var b=p.uint32();switch(b>>>3){case 1:_.subscribe=p.bool();break;case 2:_.topic=p.string();break;default:p.skipType(b&7);break}}return _},l.fromObject=function(p){if(p instanceof a.RPC.SubOpts)return p;var g=new a.RPC.SubOpts;return p.subscribe!=null&&(g.subscribe=!!p.subscribe),p.topic!=null&&(g.topic=String(p.topic)),g},l.toObject=function(p,g){g||(g={});var $={};return p.subscribe!=null&&p.hasOwnProperty("subscribe")&&($.subscribe=p.subscribe,g.oneofs&&($._subscribe="subscribe")),p.topic!=null&&p.hasOwnProperty("topic")&&($.topic=p.topic,g.oneofs&&($._topic="topic")),$},l.prototype.toJSON=function(){return this.constructor.toObject(this,e.util.toJSONOptions)},l}(),c.Message=function(){function l(p){if(p)for(var g=Object.keys(p),$=0;$<g.length;++$)p[g[$]]!=null&&(this[g[$]]=p[g[$]])}l.prototype.from=null,l.prototype.data=null,l.prototype.seqno=null,l.prototype.topic="",l.prototype.signature=null,l.prototype.key=null;var f;return Object.defineProperty(l.prototype,"_from",{get:o.oneOfGetter(f=["from"]),set:o.oneOfSetter(f)}),Object.defineProperty(l.prototype,"_data",{get:o.oneOfGetter(f=["data"]),set:o.oneOfSetter(f)}),Object.defineProperty(l.prototype,"_seqno",{get:o.oneOfGetter(f=["seqno"]),set:o.oneOfSetter(f)}),Object.defineProperty(l.prototype,"_signature",{get:o.oneOfGetter(f=["signature"]),set:o.oneOfSetter(f)}),Object.defineProperty(l.prototype,"_key",{get:o.oneOfGetter(f=["key"]),set:o.oneOfSetter(f)}),l.encode=function(p,g){return g||(g=n.create()),p.from!=null&&Object.hasOwnProperty.call(p,"from")&&g.uint32(10).bytes(p.from),p.data!=null&&Object.hasOwnProperty.call(p,"data")&&g.uint32(18).bytes(p.data),p.seqno!=null&&Object.hasOwnProperty.call(p,"seqno")&&g.uint32(26).bytes(p.seqno),g.uint32(34).string(p.topic),p.signature!=null&&Object.hasOwnProperty.call(p,"signature")&&g.uint32(42).bytes(p.signature),p.key!=null&&Object.hasOwnProperty.call(p,"key")&&g.uint32(50).bytes(p.key),g},l.decode=function(p,g){p instanceof r||(p=r.create(p));for(var $=g===void 0?p.len:p.pos+g,_=new a.RPC.Message;p.pos<$;){var b=p.uint32();switch(b>>>3){case 1:_.from=p.bytes();break;case 2:_.data=p.bytes();break;case 3:_.seqno=p.bytes();break;case 4:_.topic=p.string();break;case 5:_.signature=p.bytes();break;case 6:_.key=p.bytes();break;default:p.skipType(b&7);break}}if(!_.hasOwnProperty("topic"))throw o.ProtocolError("missing required 'topic'",{instance:_});return _},l.fromObject=function(p){if(p instanceof a.RPC.Message)return p;var g=new a.RPC.Message;return p.from!=null&&(typeof p.from=="string"?o.base64.decode(p.from,g.from=o.newBuffer(o.base64.length(p.from)),0):p.from.length&&(g.from=p.from)),p.data!=null&&(typeof p.data=="string"?o.base64.decode(p.data,g.data=o.newBuffer(o.base64.length(p.data)),0):p.data.length&&(g.data=p.data)),p.seqno!=null&&(typeof p.seqno=="string"?o.base64.decode(p.seqno,g.seqno=o.newBuffer(o.base64.length(p.seqno)),0):p.seqno.length&&(g.seqno=p.seqno)),p.topic!=null&&(g.topic=String(p.topic)),p.signature!=null&&(typeof p.signature=="string"?o.base64.decode(p.signature,g.signature=o.newBuffer(o.base64.length(p.signature)),0):p.signature.length&&(g.signature=p.signature)),p.key!=null&&(typeof p.key=="string"?o.base64.decode(p.key,g.key=o.newBuffer(o.base64.length(p.key)),0):p.key.length&&(g.key=p.key)),g},l.toObject=function(p,g){g||(g={});var $={};return g.defaults&&($.topic=""),p.from!=null&&p.hasOwnProperty("from")&&($.from=g.bytes===String?o.base64.encode(p.from,0,p.from.length):g.bytes===Array?Array.prototype.slice.call(p.from):p.from,g.oneofs&&($._from="from")),p.data!=null&&p.hasOwnProperty("data")&&($.data=g.bytes===String?o.base64.encode(p.data,0,p.data.length):g.bytes===Array?Array.prototype.slice.call(p.data):p.data,g.oneofs&&($._data="data")),p.seqno!=null&&p.hasOwnProperty("seqno")&&($.seqno=g.bytes===String?o.base64.encode(p.seqno,0,p.seqno.length):g.bytes===Array?Array.prototype.slice.call(p.seqno):p.seqno,g.oneofs&&($._seqno="seqno")),p.topic!=null&&p.hasOwnProperty("topic")&&($.topic=p.topic),p.signature!=null&&p.hasOwnProperty("signature")&&($.signature=g.bytes===String?o.base64.encode(p.signature,0,p.signature.length):g.bytes===Array?Array.prototype.slice.call(p.signature):p.signature,g.oneofs&&($._signature="signature")),p.key!=null&&p.hasOwnProperty("key")&&($.key=g.bytes===String?o.base64.encode(p.key,0,p.key.length):g.bytes===Array?Array.prototype.slice.call(p.key):p.key,g.oneofs&&($._key="key")),$},l.prototype.toJSON=function(){return this.constructor.toObject(this,e.util.toJSONOptions)},l}(),c.ControlMessage=function(){function l(f){if(this.ihave=[],this.iwant=[],this.graft=[],this.prune=[],f)for(var p=Object.keys(f),g=0;g<p.length;++g)f[p[g]]!=null&&(this[p[g]]=f[p[g]])}return l.prototype.ihave=o.emptyArray,l.prototype.iwant=o.emptyArray,l.prototype.graft=o.emptyArray,l.prototype.prune=o.emptyArray,l.encode=function(f,p){if(p||(p=n.create()),f.ihave!=null&&f.ihave.length)for(var g=0;g<f.ihave.length;++g)a.RPC.ControlIHave.encode(f.ihave[g],p.uint32(10).fork()).ldelim();if(f.iwant!=null&&f.iwant.length)for(var g=0;g<f.iwant.length;++g)a.RPC.ControlIWant.encode(f.iwant[g],p.uint32(18).fork()).ldelim();if(f.graft!=null&&f.graft.length)for(var g=0;g<f.graft.length;++g)a.RPC.ControlGraft.encode(f.graft[g],p.uint32(26).fork()).ldelim();if(f.prune!=null&&f.prune.length)for(var g=0;g<f.prune.length;++g)a.RPC.ControlPrune.encode(f.prune[g],p.uint32(34).fork()).ldelim();return p},l.decode=function(f,p){f instanceof r||(f=r.create(f));for(var g=p===void 0?f.len:f.pos+p,$=new a.RPC.ControlMessage;f.pos<g;){var _=f.uint32();switch(_>>>3){case 1:$.ihave&&$.ihave.length||($.ihave=[]),$.ihave.push(a.RPC.ControlIHave.decode(f,f.uint32()));break;case 2:$.iwant&&$.iwant.length||($.iwant=[]),$.iwant.push(a.RPC.ControlIWant.decode(f,f.uint32()));break;case 3:$.graft&&$.graft.length||($.graft=[]),$.graft.push(a.RPC.ControlGraft.decode(f,f.uint32()));break;case 4:$.prune&&$.prune.length||($.prune=[]),$.prune.push(a.RPC.ControlPrune.decode(f,f.uint32()));break;default:f.skipType(_&7);break}}return $},l.fromObject=function(f){if(f instanceof a.RPC.ControlMessage)return f;var p=new a.RPC.ControlMessage;if(f.ihave){if(!Array.isArray(f.ihave))throw TypeError(".RPC.ControlMessage.ihave: array expected");p.ihave=[];for(var g=0;g<f.ihave.length;++g){if(typeof f.ihave[g]!="object")throw TypeError(".RPC.ControlMessage.ihave: object expected");p.ihave[g]=a.RPC.ControlIHave.fromObject(f.ihave[g])}}if(f.iwant){if(!Array.isArray(f.iwant))throw TypeError(".RPC.ControlMessage.iwant: array expected");p.iwant=[];for(var g=0;g<f.iwant.length;++g){if(typeof f.iwant[g]!="object")throw TypeError(".RPC.ControlMessage.iwant: object expected");p.iwant[g]=a.RPC.ControlIWant.fromObject(f.iwant[g])}}if(f.graft){if(!Array.isArray(f.graft))throw TypeError(".RPC.ControlMessage.graft: array expected");p.graft=[];for(var g=0;g<f.graft.length;++g){if(typeof f.graft[g]!="object")throw TypeError(".RPC.ControlMessage.graft: object expected");p.graft[g]=a.RPC.ControlGraft.fromObject(f.graft[g])}}if(f.prune){if(!Array.isArray(f.prune))throw TypeError(".RPC.ControlMessage.prune: array expected");p.prune=[];for(var g=0;g<f.prune.length;++g){if(typeof f.prune[g]!="object")throw TypeError(".RPC.ControlMessage.prune: object expected");p.prune[g]=a.RPC.ControlPrune.fromObject(f.prune[g])}}return p},l.toObject=function(f,p){p||(p={});var g={};if((p.arrays||p.defaults)&&(g.ihave=[],g.iwant=[],g.graft=[],g.prune=[]),f.ihave&&f.ihave.length){g.ihave=[];for(var $=0;$<f.ihave.length;++$)g.ihave[$]=a.RPC.ControlIHave.toObject(f.ihave[$],p)}if(f.iwant&&f.iwant.length){g.iwant=[];for(var $=0;$<f.iwant.length;++$)g.iwant[$]=a.RPC.ControlIWant.toObject(f.iwant[$],p)}if(f.graft&&f.graft.length){g.graft=[];for(var $=0;$<f.graft.length;++$)g.graft[$]=a.RPC.ControlGraft.toObject(f.graft[$],p)}if(f.prune&&f.prune.length){g.prune=[];for(var $=0;$<f.prune.length;++$)g.prune[$]=a.RPC.ControlPrune.toObject(f.prune[$],p)}return g},l.prototype.toJSON=function(){return this.constructor.toObject(this,e.util.toJSONOptions)},l}(),c.ControlIHave=function(){function l(p){if(this.messageIDs=[],p)for(var g=Object.keys(p),$=0;$<g.length;++$)p[g[$]]!=null&&(this[g[$]]=p[g[$]])}l.prototype.topicID=null,l.prototype.messageIDs=o.emptyArray;var f;return Object.defineProperty(l.prototype,"_topicID",{get:o.oneOfGetter(f=["topicID"]),set:o.oneOfSetter(f)}),l.encode=function(p,g){if(g||(g=n.create()),p.topicID!=null&&Object.hasOwnProperty.call(p,"topicID")&&g.uint32(10).string(p.topicID),p.messageIDs!=null&&p.messageIDs.length)for(var $=0;$<p.messageIDs.length;++$)g.uint32(18).bytes(p.messageIDs[$]);return g},l.decode=function(p,g){p instanceof r||(p=r.create(p));for(var $=g===void 0?p.len:p.pos+g,_=new a.RPC.ControlIHave;p.pos<$;){var b=p.uint32();switch(b>>>3){case 1:_.topicID=p.string();break;case 2:_.messageIDs&&_.messageIDs.length||(_.messageIDs=[]),_.messageIDs.push(p.bytes());break;default:p.skipType(b&7);break}}return _},l.fromObject=function(p){if(p instanceof a.RPC.ControlIHave)return p;var g=new a.RPC.ControlIHave;if(p.topicID!=null&&(g.topicID=String(p.topicID)),p.messageIDs){if(!Array.isArray(p.messageIDs))throw TypeError(".RPC.ControlIHave.messageIDs: array expected");g.messageIDs=[];for(var $=0;$<p.messageIDs.length;++$)typeof p.messageIDs[$]=="string"?o.base64.decode(p.messageIDs[$],g.messageIDs[$]=o.newBuffer(o.base64.length(p.messageIDs[$])),0):p.messageIDs[$].length&&(g.messageIDs[$]=p.messageIDs[$])}return g},l.toObject=function(p,g){g||(g={});var $={};if((g.arrays||g.defaults)&&($.messageIDs=[]),p.topicID!=null&&p.hasOwnProperty("topicID")&&($.topicID=p.topicID,g.oneofs&&($._topicID="topicID")),p.messageIDs&&p.messageIDs.length){$.messageIDs=[];for(var _=0;_<p.messageIDs.length;++_)$.messageIDs[_]=g.bytes===String?o.base64.encode(p.messageIDs[_],0,p.messageIDs[_].length):g.bytes===Array?Array.prototype.slice.call(p.messageIDs[_]):p.messageIDs[_]}return $},l.prototype.toJSON=function(){return this.constructor.toObject(this,e.util.toJSONOptions)},l}(),c.ControlIWant=function(){function l(f){if(this.messageIDs=[],f)for(var p=Object.keys(f),g=0;g<p.length;++g)f[p[g]]!=null&&(this[p[g]]=f[p[g]])}return l.prototype.messageIDs=o.emptyArray,l.encode=function(f,p){if(p||(p=n.create()),f.messageIDs!=null&&f.messageIDs.length)for(var g=0;g<f.messageIDs.length;++g)p.uint32(10).bytes(f.messageIDs[g]);return p},l.decode=function(f,p){f instanceof r||(f=r.create(f));for(var g=p===void 0?f.len:f.pos+p,$=new a.RPC.ControlIWant;f.pos<g;){var _=f.uint32();switch(_>>>3){case 1:$.messageIDs&&$.messageIDs.length||($.messageIDs=[]),$.messageIDs.push(f.bytes());break;default:f.skipType(_&7);break}}return $},l.fromObject=function(f){if(f instanceof a.RPC.ControlIWant)return f;var p=new a.RPC.ControlIWant;if(f.messageIDs){if(!Array.isArray(f.messageIDs))throw TypeError(".RPC.ControlIWant.messageIDs: array expected");p.messageIDs=[];for(var g=0;g<f.messageIDs.length;++g)typeof f.messageIDs[g]=="string"?o.base64.decode(f.messageIDs[g],p.messageIDs[g]=o.newBuffer(o.base64.length(f.messageIDs[g])),0):f.messageIDs[g].length&&(p.messageIDs[g]=f.messageIDs[g])}return p},l.toObject=function(f,p){p||(p={});var g={};if((p.arrays||p.defaults)&&(g.messageIDs=[]),f.messageIDs&&f.messageIDs.length){g.messageIDs=[];for(var $=0;$<f.messageIDs.length;++$)g.messageIDs[$]=p.bytes===String?o.base64.encode(f.messageIDs[$],0,f.messageIDs[$].length):p.bytes===Array?Array.prototype.slice.call(f.messageIDs[$]):f.messageIDs[$]}return g},l.prototype.toJSON=function(){return this.constructor.toObject(this,e.util.toJSONOptions)},l}(),c.ControlGraft=function(){function l(p){if(p)for(var g=Object.keys(p),$=0;$<g.length;++$)p[g[$]]!=null&&(this[g[$]]=p[g[$]])}l.prototype.topicID=null;var f;return Object.defineProperty(l.prototype,"_topicID",{get:o.oneOfGetter(f=["topicID"]),set:o.oneOfSetter(f)}),l.encode=function(p,g){return g||(g=n.create()),p.topicID!=null&&Object.hasOwnProperty.call(p,"topicID")&&g.uint32(10).string(p.topicID),g},l.decode=function(p,g){p instanceof r||(p=r.create(p));for(var $=g===void 0?p.len:p.pos+g,_=new a.RPC.ControlGraft;p.pos<$;){var b=p.uint32();switch(b>>>3){case 1:_.topicID=p.string();break;default:p.skipType(b&7);break}}return _},l.fromObject=function(p){if(p instanceof a.RPC.ControlGraft)return p;var g=new a.RPC.ControlGraft;return p.topicID!=null&&(g.topicID=String(p.topicID)),g},l.toObject=function(p,g){g||(g={});var $={};return p.topicID!=null&&p.hasOwnProperty("topicID")&&($.topicID=p.topicID,g.oneofs&&($._topicID="topicID")),$},l.prototype.toJSON=function(){return this.constructor.toObject(this,e.util.toJSONOptions)},l}(),c.ControlPrune=function(){function l(p){if(this.peers=[],p)for(var g=Object.keys(p),$=0;$<g.length;++$)p[g[$]]!=null&&(this[g[$]]=p[g[$]])}l.prototype.topicID=null,l.prototype.peers=o.emptyArray,l.prototype.backoff=null;var f;return Object.defineProperty(l.prototype,"_topicID",{get:o.oneOfGetter(f=["topicID"]),set:o.oneOfSetter(f)}),Object.defineProperty(l.prototype,"_backoff",{get:o.oneOfGetter(f=["backoff"]),set:o.oneOfSetter(f)}),l.encode=function(p,g){if(g||(g=n.create()),p.topicID!=null&&Object.hasOwnProperty.call(p,"topicID")&&g.uint32(10).string(p.topicID),p.peers!=null&&p.peers.length)for(var $=0;$<p.peers.length;++$)a.RPC.PeerInfo.encode(p.peers[$],g.uint32(18).fork()).ldelim();return p.backoff!=null&&Object.hasOwnProperty.call(p,"backoff")&&g.uint32(24).uint64(p.backoff),g},l.decode=function(p,g){p instanceof r||(p=r.create(p));for(var $=g===void 0?p.len:p.pos+g,_=new a.RPC.ControlPrune;p.pos<$;){var b=p.uint32();switch(b>>>3){case 1:_.topicID=p.string();break;case 2:_.peers&&_.peers.length||(_.peers=[]),_.peers.push(a.RPC.PeerInfo.decode(p,p.uint32()));break;case 3:_.backoff=p.uint64();break;default:p.skipType(b&7);break}}return _},l.fromObject=function(p){if(p instanceof a.RPC.ControlPrune)return p;var g=new a.RPC.ControlPrune;if(p.topicID!=null&&(g.topicID=String(p.topicID)),p.peers){if(!Array.isArray(p.peers))throw TypeError(".RPC.ControlPrune.peers: array expected");g.peers=[];for(var $=0;$<p.peers.length;++$){if(typeof p.peers[$]!="object")throw TypeError(".RPC.ControlPrune.peers: object expected");g.peers[$]=a.RPC.PeerInfo.fromObject(p.peers[$])}}return p.backoff!=null&&(o.Long?(g.backoff=o.Long.fromValue(p.backoff)).unsigned=!0:typeof p.backoff=="string"?g.backoff=parseInt(p.backoff,10):typeof p.backoff=="number"?g.backoff=p.backoff:typeof p.backoff=="object"&&(g.backoff=new o.LongBits(p.backoff.low>>>0,p.backoff.high>>>0).toNumber(!0))),g},l.toObject=function(p,g){g||(g={});var $={};if((g.arrays||g.defaults)&&($.peers=[]),p.topicID!=null&&p.hasOwnProperty("topicID")&&($.topicID=p.topicID,g.oneofs&&($._topicID="topicID")),p.peers&&p.peers.length){$.peers=[];for(var _=0;_<p.peers.length;++_)$.peers[_]=a.RPC.PeerInfo.toObject(p.peers[_],g)}return p.backoff!=null&&p.hasOwnProperty("backoff")&&(typeof p.backoff=="number"?$.backoff=g.longs===String?String(p.backoff):p.backoff:$.backoff=g.longs===String?o.Long.prototype.toString.call(p.backoff):g.longs===Number?new o.LongBits(p.backoff.low>>>0,p.backoff.high>>>0).toNumber(!0):p.backoff,g.oneofs&&($._backoff="backoff")),$},l.prototype.toJSON=function(){return this.constructor.toObject(this,e.util.toJSONOptions)},l}(),c.PeerInfo=function(){function l(p){if(p)for(var g=Object.keys(p),$=0;$<g.length;++$)p[g[$]]!=null&&(this[g[$]]=p[g[$]])}l.prototype.peerID=null,l.prototype.signedPeerRecord=null;var f;return Object.defineProperty(l.prototype,"_peerID",{get:o.oneOfGetter(f=["peerID"]),set:o.oneOfSetter(f)}),Object.defineProperty(l.prototype,"_signedPeerRecord",{get:o.oneOfGetter(f=["signedPeerRecord"]),set:o.oneOfSetter(f)}),l.encode=function(p,g){return g||(g=n.create()),p.peerID!=null&&Object.hasOwnProperty.call(p,"peerID")&&g.uint32(10).bytes(p.peerID),p.signedPeerRecord!=null&&Object.hasOwnProperty.call(p,"signedPeerRecord")&&g.uint32(18).bytes(p.signedPeerRecord),g},l.decode=function(p,g){p instanceof r||(p=r.create(p));for(var $=g===void 0?p.len:p.pos+g,_=new a.RPC.PeerInfo;p.pos<$;){var b=p.uint32();switch(b>>>3){case 1:_.peerID=p.bytes();break;case 2:_.signedPeerRecord=p.bytes();break;default:p.skipType(b&7);break}}return _},l.fromObject=function(p){if(p instanceof a.RPC.PeerInfo)return p;var g=new a.RPC.PeerInfo;return p.peerID!=null&&(typeof p.peerID=="string"?o.base64.decode(p.peerID,g.peerID=o.newBuffer(o.base64.length(p.peerID)),0):p.peerID.length&&(g.peerID=p.peerID)),p.signedPeerRecord!=null&&(typeof p.signedPeerRecord=="string"?o.base64.decode(p.signedPeerRecord,g.signedPeerRecord=o.newBuffer(o.base64.length(p.signedPeerRecord)),0):p.signedPeerRecord.length&&(g.signedPeerRecord=p.signedPeerRecord)),g},l.toObject=function(p,g){g||(g={});var $={};return p.peerID!=null&&p.hasOwnProperty("peerID")&&($.peerID=g.bytes===String?o.base64.encode(p.peerID,0,p.peerID.length):g.bytes===Array?Array.prototype.slice.call(p.peerID):p.peerID,g.oneofs&&($._peerID="peerID")),p.signedPeerRecord!=null&&p.hasOwnProperty("signedPeerRecord")&&($.signedPeerRecord=g.bytes===String?o.base64.encode(p.signedPeerRecord,0,p.signedPeerRecord.length):g.bytes===Array?Array.prototype.slice.call(p.signedPeerRecord):p.signedPeerRecord,g.oneofs&&($._signedPeerRecord="signedPeerRecord")),$},l.prototype.toJSON=function(){return this.constructor.toObject(this,e.util.toJSONOptions)},l}(),c}(),a})})(rpc$1);var rpcExports=rpc$1.exports;const cjs=getDefaultExportFromCjs(rpcExports),{RPC:RPC$1}=cjs,second$1=1e3,minute$2=60*second$1,FloodsubID="/floodsub/1.0.0",GossipsubIDv10="/meshsub/1.0.0",GossipsubIDv11="/meshsub/1.1.0",GossipsubD=6,GossipsubDlo=4,GossipsubDhi=12,GossipsubDscore=4,GossipsubDout=2,GossipsubHistoryLength=5,GossipsubHistoryGossip=3,GossipsubDlazy=6,GossipsubGossipFactor=.25,GossipsubGossipRetransmission=3,GossipsubHeartbeatInitialDelay=100,GossipsubHeartbeatInterval=second$1,GossipsubFanoutTTL=minute$2,GossipsubPrunePeers=16,GossipsubPruneBackoff=minute$2,GossipsubPruneBackoffTicks=15,GossipsubDirectConnectTicks=300,GossipsubDirectConnectInitialDelay=second$1,GossipsubOpportunisticGraftTicks=60,GossipsubOpportunisticGraftPeers=2,GossipsubGraftFloodThreshold=10*second$1,GossipsubMaxIHaveLength=5e3,GossipsubMaxIHaveMessages=10,GossipsubIWantFollowupTime=3*second$1,GossipsubSeenTTL=2*minute$2,TimeCacheDuration=120*1e3,ERR_TOPIC_VALIDATOR_REJECT="ERR_TOPIC_VALIDATOR_REJECT",ERR_TOPIC_VALIDATOR_IGNORE="ERR_TOPIC_VALIDATOR_IGNORE",ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE=0,ACCEPT_FROM_WHITELIST_MAX_MESSAGES=128,ACCEPT_FROM_WHITELIST_DURATION_MS=1e3,DEFAULT_METRIC_MESH_MESSAGE_DELIVERIES_WINDOWS=1e3;function shuffle(t){if(t.length<=1)return t;const e=()=>Math.floor(Math.random()*Math.floor(t.length));for(let r=0;r<t.length;r++){const n=e(),o=t[r];t[r]=t[n],t[n]=o}return t}function messageIdToString(t){return toString$D(t,"base64")}const StrictSign="StrictSign",StrictNoSign="StrictNoSign";var TopicValidatorResult$2;(function(t){t.Accept="accept",t.Ignore="ignore",t.Reject="reject"})(TopicValidatorResult$2||(TopicValidatorResult$2={}));var SignaturePolicy;(function(t){t.StrictSign="StrictSign",t.StrictNoSign="StrictNoSign"})(SignaturePolicy||(SignaturePolicy={}));var PublishConfigType;(function(t){t[t.Signing=0]="Signing",t[t.Anonymous=1]="Anonymous"})(PublishConfigType||(PublishConfigType={}));var RejectReason;(function(t){t.Error="error",t.Ignore="ignore",t.Reject="reject",t.Blacklisted="blacklisted"})(RejectReason||(RejectReason={}));var ValidateError;(function(t){t.InvalidSignature="invalid_signature",t.InvalidSeqno="invalid_seqno",t.InvalidPeerId="invalid_peerid",t.SignaturePresent="signature_present",t.SeqnoPresent="seqno_present",t.FromPresent="from_present",t.TransformFailed="transform_failed"})(ValidateError||(ValidateError={}));var MessageStatus;(function(t){t.duplicate="duplicate",t.invalid="invalid",t.valid="valid"})(MessageStatus||(MessageStatus={}));function rejectReasonFromAcceptance(t){switch(t){case TopicValidatorResult$2.Ignore:return RejectReason.Ignore;case TopicValidatorResult$2.Reject:return RejectReason.Reject}}async function getPublishConfigFromPeerId(t,e){switch(t){case StrictSign:{if(!e)throw Error("Must provide PeerId");if(e.privateKey==null)throw Error("Cannot sign message, no private key present");if(e.publicKey==null)throw Error("Cannot sign message, no public key present");const r=await unmarshalPrivateKey(e.privateKey);return{type:PublishConfigType.Signing,author:e,key:e.publicKey,privateKey:r}}case StrictNoSign:return{type:PublishConfigType.Anonymous};default:throw new Error(`Unknown signature policy "${t}"`)}}const ERR_INVALID_PEER_SCORE_PARAMS="ERR_INVALID_PEER_SCORE_PARAMS",defaultPeerScoreParams={topics:{},topicScoreCap:10,appSpecificScore:()=>0,appSpecificWeight:10,IPColocationFactorWeight:-5,IPColocationFactorThreshold:10,IPColocationFactorWhitelist:new Set,behaviourPenaltyWeight:-10,behaviourPenaltyThreshold:0,behaviourPenaltyDecay:.2,decayInterval:1e3,decayToZero:.1,retainScore:3600*1e3},defaultTopicScoreParams={topicWeight:.5,timeInMeshWeight:1,timeInMeshQuantum:1,timeInMeshCap:3600,firstMessageDeliveriesWeight:1,firstMessageDeliveriesDecay:.5,firstMessageDeliveriesCap:2e3,meshMessageDeliveriesWeight:-1,meshMessageDeliveriesDecay:.5,meshMessageDeliveriesCap:100,meshMessageDeliveriesThreshold:20,meshMessageDeliveriesWindow:10,meshMessageDeliveriesActivation:5e3,meshFailurePenaltyWeight:-1,meshFailurePenaltyDecay:.5,invalidMessageDeliveriesWeight:-1,invalidMessageDeliveriesDecay:.3};function createPeerScoreParams(t={}){return{...defaultPeerScoreParams,...t,topics:t.topics?Object.entries(t.topics).reduce((e,[r,n])=>(e[r]=createTopicScoreParams(n),e),{}):{}}}function createTopicScoreParams(t={}){return{...defaultTopicScoreParams,...t}}function validatePeerScoreParams(t){for(const[e,r]of Object.entries(t.topics))try{validateTopicScoreParams(r)}catch(n){throw new CodeError$4(`invalid score parameters for topic ${e}: ${n.message}`,ERR_INVALID_PEER_SCORE_PARAMS)}if(t.topicScoreCap<0)throw new CodeError$4("invalid topic score cap; must be positive (or 0 for no cap)",ERR_INVALID_PEER_SCORE_PARAMS);if(t.appSpecificScore===null||t.appSpecificScore===void 0)throw new CodeError$4("missing application specific score function",ERR_INVALID_PEER_SCORE_PARAMS);if(t.IPColocationFactorWeight>0)throw new CodeError$4("invalid IPColocationFactorWeight; must be negative (or 0 to disable)",ERR_INVALID_PEER_SCORE_PARAMS);if(t.IPColocationFactorWeight!==0&&t.IPColocationFactorThreshold<1)throw new CodeError$4("invalid IPColocationFactorThreshold; must be at least 1",ERR_INVALID_PEER_SCORE_PARAMS);if(t.behaviourPenaltyWeight>0)throw new CodeError$4("invalid BehaviourPenaltyWeight; must be negative (or 0 to disable)",ERR_INVALID_PEER_SCORE_PARAMS);if(t.behaviourPenaltyWeight!==0&&(t.behaviourPenaltyDecay<=0||t.behaviourPenaltyDecay>=1))throw new CodeError$4("invalid BehaviourPenaltyDecay; must be between 0 and 1",ERR_INVALID_PEER_SCORE_PARAMS);if(t.decayInterval<1e3)throw new CodeError$4("invalid DecayInterval; must be at least 1s",ERR_INVALID_PEER_SCORE_PARAMS);if(t.decayToZero<=0||t.decayToZero>=1)throw new CodeError$4("invalid DecayToZero; must be between 0 and 1",ERR_INVALID_PEER_SCORE_PARAMS)}function validateTopicScoreParams(t){if(t.topicWeight<0)throw new CodeError$4("invalid topic weight; must be >= 0",ERR_INVALID_PEER_SCORE_PARAMS);if(t.timeInMeshQuantum===0)throw new CodeError$4("invalid TimeInMeshQuantum; must be non zero",ERR_INVALID_PEER_SCORE_PARAMS);if(t.timeInMeshWeight<0)throw new CodeError$4("invalid TimeInMeshWeight; must be positive (or 0 to disable)",ERR_INVALID_PEER_SCORE_PARAMS);if(t.timeInMeshWeight!==0&&t.timeInMeshQuantum<=0)throw new CodeError$4("invalid TimeInMeshQuantum; must be positive",ERR_INVALID_PEER_SCORE_PARAMS);if(t.timeInMeshWeight!==0&&t.timeInMeshCap<=0)throw new CodeError$4("invalid TimeInMeshCap; must be positive",ERR_INVALID_PEER_SCORE_PARAMS);if(t.firstMessageDeliveriesWeight<0)throw new CodeError$4("invallid FirstMessageDeliveriesWeight; must be positive (or 0 to disable)",ERR_INVALID_PEER_SCORE_PARAMS);if(t.firstMessageDeliveriesWeight!==0&&(t.firstMessageDeliveriesDecay<=0||t.firstMessageDeliveriesDecay>=1))throw new CodeError$4("invalid FirstMessageDeliveriesDecay; must be between 0 and 1",ERR_INVALID_PEER_SCORE_PARAMS);if(t.firstMessageDeliveriesWeight!==0&&t.firstMessageDeliveriesCap<=0)throw new CodeError$4("invalid FirstMessageDeliveriesCap; must be positive",ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshMessageDeliveriesWeight>0)throw new CodeError$4("invalid MeshMessageDeliveriesWeight; must be negative (or 0 to disable)",ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshMessageDeliveriesWeight!==0&&(t.meshMessageDeliveriesDecay<=0||t.meshMessageDeliveriesDecay>=1))throw new CodeError$4("invalid MeshMessageDeliveriesDecay; must be between 0 and 1",ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshMessageDeliveriesWeight!==0&&t.meshMessageDeliveriesCap<=0)throw new CodeError$4("invalid MeshMessageDeliveriesCap; must be positive",ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshMessageDeliveriesWeight!==0&&t.meshMessageDeliveriesThreshold<=0)throw new CodeError$4("invalid MeshMessageDeliveriesThreshold; must be positive",ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshMessageDeliveriesWindow<0)throw new CodeError$4("invalid MeshMessageDeliveriesWindow; must be non-negative",ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshMessageDeliveriesWeight!==0&&t.meshMessageDeliveriesActivation<1e3)throw new CodeError$4("invalid MeshMessageDeliveriesActivation; must be at least 1s",ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshFailurePenaltyWeight>0)throw new CodeError$4("invalid MeshFailurePenaltyWeight; must be negative (or 0 to disable)",ERR_INVALID_PEER_SCORE_PARAMS);if(t.meshFailurePenaltyWeight!==0&&(t.meshFailurePenaltyDecay<=0||t.meshFailurePenaltyDecay>=1))throw new CodeError$4("invalid MeshFailurePenaltyDecay; must be between 0 and 1",ERR_INVALID_PEER_SCORE_PARAMS);if(t.invalidMessageDeliveriesWeight>0)throw new CodeError$4("invalid InvalidMessageDeliveriesWeight; must be negative (or 0 to disable)",ERR_INVALID_PEER_SCORE_PARAMS);if(t.invalidMessageDeliveriesDecay<=0||t.invalidMessageDeliveriesDecay>=1)throw new CodeError$4("invalid InvalidMessageDeliveriesDecay; must be between 0 and 1",ERR_INVALID_PEER_SCORE_PARAMS)}const defaultPeerScoreThresholds={gossipThreshold:-10,publishThreshold:-50,graylistThreshold:-80,acceptPXThreshold:10,opportunisticGraftThreshold:20};function createPeerScoreThresholds(t={}){return{...defaultPeerScoreThresholds,...t}}function computeScore(t,e,r,n){let o=0;Object.entries(e.topics).forEach(([c,u])=>{const l=r.topics[c];if(l===void 0)return;let f=0;if(u.inMesh){let _=u.meshTime/l.timeInMeshQuantum;_>l.timeInMeshCap&&(_=l.timeInMeshCap),f+=_*l.timeInMeshWeight}let p=u.firstMessageDeliveries;if(p>l.firstMessageDeliveriesCap&&(p=l.firstMessageDeliveriesCap),f+=p*l.firstMessageDeliveriesWeight,u.meshMessageDeliveriesActive&&u.meshMessageDeliveries<l.meshMessageDeliveriesThreshold){const _=l.meshMessageDeliveriesThreshold-u.meshMessageDeliveries,b=_*_;f+=b*l.meshMessageDeliveriesWeight}const g=u.meshFailurePenalty;f+=g*l.meshFailurePenaltyWeight;const $=u.invalidMessageDeliveries*u.invalidMessageDeliveries;f+=$*l.invalidMessageDeliveriesWeight,o+=f*l.topicWeight}),r.topicScoreCap>0&&o>r.topicScoreCap&&(o=r.topicScoreCap);const a=r.appSpecificScore(t);if(o+=a*r.appSpecificWeight,e.knownIPs.forEach(c=>{if(r.IPColocationFactorWhitelist.has(c))return;const u=n.get(c),l=u?u.size:0;if(l>r.IPColocationFactorThreshold){const f=l-r.IPColocationFactorThreshold,p=f*f;o+=p*r.IPColocationFactorWeight}}),e.behaviourPenalty>r.behaviourPenaltyThreshold){const c=e.behaviourPenalty-r.behaviourPenaltyThreshold,u=c*c;o+=u*r.behaviourPenaltyWeight}return o}function Denque(t,r){var r=r||{};this._head=0,this._tail=0,this._capacity=r.capacity,this._capacityMask=3,this._list=new Array(4),Array.isArray(t)&&this._fromArray(t)}Denque.prototype.peekAt=function t(e){var r=e;if(r===(r|0)){var n=this.size();if(!(r>=n||r<-n))return r<0&&(r+=n),r=this._head+r&this._capacityMask,this._list[r]}},Denque.prototype.get=function t(e){return this.peekAt(e)},Denque.prototype.peek=function t(){if(this._head!==this._tail)return this._list[this._head]},Denque.prototype.peekFront=function t(){return this.peek()},Denque.prototype.peekBack=function t(){return this.peekAt(-1)},Object.defineProperty(Denque.prototype,"length",{get:function t(){return this.size()}}),Denque.prototype.size=function t(){return this._head===this._tail?0:this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)},Denque.prototype.unshift=function t(e){if(e===void 0)return this.size();var r=this._list.length;return this._head=this._head-1+r&this._capacityMask,this._list[this._head]=e,this._tail===this._head&&this._growArray(),this._capacity&&this.size()>this._capacity&&this.pop(),this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)},Denque.prototype.shift=function t(){var e=this._head;if(e!==this._tail){var r=this._list[e];return this._list[e]=void 0,this._head=e+1&this._capacityMask,e<2&&this._tail>1e4&&this._tail<=this._list.length>>>2&&this._shrinkArray(),r}},Denque.prototype.push=function t(e){if(e===void 0)return this.size();var r=this._tail;return this._list[r]=e,this._tail=r+1&this._capacityMask,this._tail===this._head&&this._growArray(),this._capacity&&this.size()>this._capacity&&this.shift(),this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)},Denque.prototype.pop=function t(){var e=this._tail;if(e!==this._head){var r=this._list.length;this._tail=e-1+r&this._capacityMask;var n=this._list[this._tail];return this._list[this._tail]=void 0,this._head<2&&e>1e4&&e<=r>>>2&&this._shrinkArray(),n}},Denque.prototype.removeOne=function t(e){var r=e;if(r===(r|0)&&this._head!==this._tail){var n=this.size(),o=this._list.length;if(!(r>=n||r<-n)){r<0&&(r+=n),r=this._head+r&this._capacityMask;var a=this._list[r],c;if(e<n/2){for(c=e;c>0;c--)this._list[r]=this._list[r=r-1+o&this._capacityMask];this._list[r]=void 0,this._head=this._head+1+o&this._capacityMask}else{for(c=n-1-e;c>0;c--)this._list[r]=this._list[r=r+1+o&this._capacityMask];this._list[r]=void 0,this._tail=this._tail-1+o&this._capacityMask}return a}}},Denque.prototype.remove=function t(e,r){var n=e,o,a=r;if(n===(n|0)&&this._head!==this._tail){var c=this.size(),u=this._list.length;if(!(n>=c||n<-c||r<1)){if(n<0&&(n+=c),r===1||!r)return o=new Array(1),o[0]=this.removeOne(n),o;if(n===0&&n+r>=c)return o=this.toArray(),this.clear(),o;n+r>c&&(r=c-n);var l;for(o=new Array(r),l=0;l<r;l++)o[l]=this._list[this._head+n+l&this._capacityMask];if(n=this._head+n&this._capacityMask,e+r===c){for(this._tail=this._tail-r+u&this._capacityMask,l=r;l>0;l--)this._list[n=n+1+u&this._capacityMask]=void 0;return o}if(e===0){for(this._head=this._head+r+u&this._capacityMask,l=r-1;l>0;l--)this._list[n=n+1+u&this._capacityMask]=void 0;return o}if(n<c/2){for(this._head=this._head+e+r+u&this._capacityMask,l=e;l>0;l--)this.unshift(this._list[n=n-1+u&this._capacityMask]);for(n=this._head-1+u&this._capacityMask;a>0;)this._list[n=n-1+u&this._capacityMask]=void 0,a--;e<0&&(this._tail=n)}else{for(this._tail=n,n=n+r+u&this._capacityMask,l=c-(r+e);l>0;l--)this.push(this._list[n++]);for(n=this._tail;a>0;)this._list[n=n+1+u&this._capacityMask]=void 0,a--}return this._head<2&&this._tail>1e4&&this._tail<=u>>>2&&this._shrinkArray(),o}}},Denque.prototype.splice=function t(e,r){var n=e;if(n===(n|0)){var o=this.size();if(n<0&&(n+=o),!(n>o))if(arguments.length>2){var a,c,u,l=arguments.length,f=this._list.length,p=2;if(!o||n<o/2){for(c=new Array(n),a=0;a<n;a++)c[a]=this._list[this._head+a&this._capacityMask];for(r===0?(u=[],n>0&&(this._head=this._head+n+f&this._capacityMask)):(u=this.remove(n,r),this._head=this._head+n+f&this._capacityMask);l>p;)this.unshift(arguments[--l]);for(a=n;a>0;a--)this.unshift(c[a-1])}else{c=new Array(o-(n+r));var g=c.length;for(a=0;a<g;a++)c[a]=this._list[this._head+n+r+a&this._capacityMask];for(r===0?(u=[],n!=o&&(this._tail=this._head+n+f&this._capacityMask)):(u=this.remove(n,r),this._tail=this._tail-g+f&this._capacityMask);p<l;)this.push(arguments[p++]);for(a=0;a<g;a++)this.push(c[a])}return u}else return this.remove(n,r)}},Denque.prototype.clear=function t(){this._head=0,this._tail=0},Denque.prototype.isEmpty=function t(){return this._head===this._tail},Denque.prototype.toArray=function t(){return this._copyArray(!1)},Denque.prototype._fromArray=function t(e){for(var r=0;r<e.length;r++)this.push(e[r])},Denque.prototype._copyArray=function t(e){var r=[],n=this._list,o=n.length,a;if(e||this._head>this._tail){for(a=this._head;a<o;a++)r.push(n[a]);for(a=0;a<this._tail;a++)r.push(n[a])}else for(a=this._head;a<this._tail;a++)r.push(n[a]);return r},Denque.prototype._growArray=function t(){this._head&&(this._list=this._copyArray(!0),this._head=0),this._tail=this._list.length,this._list.length<<=1,this._capacityMask=this._capacityMask<<1|1},Denque.prototype._shrinkArray=function t(){this._list.length>>>=1,this._capacityMask>>>=1};var denque=Denque;const Denque$1=getDefaultExportFromCjs(denque);var DeliveryRecordStatus;(function(t){t[t.unknown=0]="unknown",t[t.valid=1]="valid",t[t.invalid=2]="invalid",t[t.ignored=3]="ignored"})(DeliveryRecordStatus||(DeliveryRecordStatus={}));class MessageDeliveries{constructor(){this.records=new Map,this.queue=new Denque$1}ensureRecord(e){let r=this.records.get(e);if(r)return r;r={status:DeliveryRecordStatus.unknown,firstSeen:Date.now(),validated:0,peers:new Set},this.records.set(e,r);const n={msgId:e,expire:Date.now()+TimeCacheDuration};return this.queue.push(n),r}gc(){const e=Date.now();let r=this.queue.peekFront();for(;r&&r.expire<e;)this.records.delete(r.msgId),this.queue.shift(),r=this.queue.peekFront()}clear(){this.records.clear(),this.queue.clear()}}function removeItemsFromSet(t,e,r=()=>!0){const n=new Set;if(e<=0)return n;for(const o of t){if(n.size>=e)break;r(o)&&(n.add(o),t.delete(o))}return n}function removeFirstNItemsFromSet(t,e){return removeItemsFromSet(t,e,()=>!0)}class MapDef extends Map{constructor(e){super(),this.getDefault=e}getOrDefault(e){let r=super.get(e);return r===void 0&&(r=this.getDefault(),this.set(e,r)),r}}const log$Y=logger$3("libp2p:gossipsub:score");class PeerScore{constructor(e,r,n){this.params=e,this.metrics=r,this.peerStats=new Map,this.peerIPs=new MapDef(()=>new Set),this.scoreCache=new Map,this.deliveryRecords=new MessageDeliveries,validatePeerScoreParams(e),this.scoreCacheValidityMs=n.scoreCacheValidityMs,this.computeScore=n.computeScore??computeScore}get size(){return this.peerStats.size}start(){if(this._backgroundInterval){log$Y("Peer score already running");return}this._backgroundInterval=setInterval(()=>this.background(),this.params.decayInterval),log$Y("started")}stop(){if(!this._backgroundInterval){log$Y("Peer score already stopped");return}clearInterval(this._backgroundInterval),delete this._backgroundInterval,this.peerIPs.clear(),this.peerStats.clear(),this.deliveryRecords.clear(),log$Y("stopped")}background(){this.refreshScores(),this.deliveryRecords.gc()}dumpPeerScoreStats(){return Object.fromEntries(Array.from(this.peerStats.entries()).map(([e,r])=>[e,r]))}refreshScores(){const e=Date.now(),r=this.params.decayToZero;this.peerStats.forEach((n,o)=>{if(!n.connected){e>n.expire&&(this.removeIPsForPeer(o,n.knownIPs),this.peerStats.delete(o),this.scoreCache.delete(o));return}Object.entries(n.topics).forEach(([a,c])=>{const u=this.params.topics[a];u!==void 0&&(c.firstMessageDeliveries*=u.firstMessageDeliveriesDecay,c.firstMessageDeliveries<r&&(c.firstMessageDeliveries=0),c.meshMessageDeliveries*=u.meshMessageDeliveriesDecay,c.meshMessageDeliveries<r&&(c.meshMessageDeliveries=0),c.meshFailurePenalty*=u.meshFailurePenaltyDecay,c.meshFailurePenalty<r&&(c.meshFailurePenalty=0),c.invalidMessageDeliveries*=u.invalidMessageDeliveriesDecay,c.invalidMessageDeliveries<r&&(c.invalidMessageDeliveries=0),c.inMesh&&(c.meshTime=e-c.graftTime,c.meshTime>u.meshMessageDeliveriesActivation&&(c.meshMessageDeliveriesActive=!0)))}),n.behaviourPenalty*=this.params.behaviourPenaltyDecay,n.behaviourPenalty<r&&(n.behaviourPenalty=0)})}score(e){this.metrics?.scoreFnCalls.inc();const r=this.peerStats.get(e);if(!r)return 0;const n=Date.now(),o=this.scoreCache.get(e);if(o&&o.cacheUntil>n)return o.score;this.metrics?.scoreFnRuns.inc();const a=this.computeScore(e,r,this.params,this.peerIPs),c=n+this.scoreCacheValidityMs;return o?(this.metrics?.scoreCachedDelta.observe(Math.abs(a-o.score)),o.score=a,o.cacheUntil=c):this.scoreCache.set(e,{score:a,cacheUntil:c}),a}addPenalty(e,r,n){const o=this.peerStats.get(e);o&&(o.behaviourPenalty+=r,this.metrics?.onScorePenalty(n))}addPeer(e){const r={connected:!0,expire:0,topics:{},knownIPs:new Set,behaviourPenalty:0};this.peerStats.set(e,r)}addIP(e,r){const n=this.peerStats.get(e);n&&n.knownIPs.add(r),this.peerIPs.getOrDefault(r).add(e)}removeIP(e,r){const n=this.peerStats.get(e);n&&n.knownIPs.delete(r);const o=this.peerIPs.get(r);o&&(o.delete(e),o.size===0&&this.peerIPs.delete(r))}removePeer(e){const r=this.peerStats.get(e);if(r){if(this.score(e)>0){this.removeIPsForPeer(e,r.knownIPs),this.peerStats.delete(e);return}Object.entries(r.topics).forEach(([n,o])=>{o.firstMessageDeliveries=0;const a=this.params.topics[n].meshMessageDeliveriesThreshold;if(o.inMesh&&o.meshMessageDeliveriesActive&&o.meshMessageDeliveries<a){const c=a-o.meshMessageDeliveries;o.meshFailurePenalty+=c*c}o.inMesh=!1,o.meshMessageDeliveriesActive=!1}),r.connected=!1,r.expire=Date.now()+this.params.retainScore}}graft(e,r){const n=this.peerStats.get(e);if(n){const o=this.getPtopicStats(n,r);o&&(o.inMesh=!0,o.graftTime=Date.now(),o.meshTime=0,o.meshMessageDeliveriesActive=!1)}}prune(e,r){const n=this.peerStats.get(e);if(n){const o=this.getPtopicStats(n,r);if(o){const a=this.params.topics[r].meshMessageDeliveriesThreshold;if(o.meshMessageDeliveriesActive&&o.meshMessageDeliveries<a){const c=a-o.meshMessageDeliveries;o.meshFailurePenalty+=c*c}o.meshMessageDeliveriesActive=!1,o.inMesh=!1}}}validateMessage(e){this.deliveryRecords.ensureRecord(e)}deliverMessage(e,r,n){this.markFirstMessageDelivery(e,n);const o=this.deliveryRecords.ensureRecord(r),a=Date.now();if(o.status!==DeliveryRecordStatus.unknown){log$Y("unexpected delivery: message from %s was first seen %s ago and has delivery status %s",e,a-o.firstSeen,DeliveryRecordStatus[o.status]);return}o.status=DeliveryRecordStatus.valid,o.validated=a,o.peers.forEach(c=>{c!==e.toString()&&this.markDuplicateMessageDelivery(c,n)})}rejectInvalidMessage(e,r){this.markInvalidMessageDelivery(e,r)}rejectMessage(e,r,n,o){switch(o){case RejectReason.Error:this.markInvalidMessageDelivery(e,n);return;case RejectReason.Blacklisted:return}const a=this.deliveryRecords.ensureRecord(r);if(a.status!==DeliveryRecordStatus.unknown){log$Y("unexpected rejection: message from %s was first seen %s ago and has delivery status %d",e,Date.now()-a.firstSeen,DeliveryRecordStatus[a.status]);return}if(o===RejectReason.Ignore){a.status=DeliveryRecordStatus.ignored,a.peers.clear();return}a.status=DeliveryRecordStatus.invalid,this.markInvalidMessageDelivery(e,n),a.peers.forEach(c=>{this.markInvalidMessageDelivery(c,n)}),a.peers.clear()}duplicateMessage(e,r,n){const o=this.deliveryRecords.ensureRecord(r);if(!o.peers.has(e))switch(o.status){case DeliveryRecordStatus.unknown:o.peers.add(e);break;case DeliveryRecordStatus.valid:o.peers.add(e),this.markDuplicateMessageDelivery(e,n,o.validated);break;case DeliveryRecordStatus.invalid:this.markInvalidMessageDelivery(e,n);break;case DeliveryRecordStatus.ignored:break}}markInvalidMessageDelivery(e,r){const n=this.peerStats.get(e);if(n){const o=this.getPtopicStats(n,r);o&&(o.invalidMessageDeliveries+=1)}}markFirstMessageDelivery(e,r){const n=this.peerStats.get(e);if(n){const o=this.getPtopicStats(n,r);if(o){let a=this.params.topics[r].firstMessageDeliveriesCap;o.firstMessageDeliveries=Math.min(a,o.firstMessageDeliveries+1),o.inMesh&&(a=this.params.topics[r].meshMessageDeliveriesCap,o.meshMessageDeliveries=Math.min(a,o.meshMessageDeliveries+1))}}}markDuplicateMessageDelivery(e,r,n){const o=this.peerStats.get(e);if(o){const a=n!==void 0?Date.now():0,c=this.getPtopicStats(o,r);if(c&&c.inMesh){const u=this.params.topics[r];if(n!==void 0){const f=a-n,p=f>u.meshMessageDeliveriesWindow;if(this.metrics?.onDuplicateMsgDelivery(r,f,p),p)return}const l=u.meshMessageDeliveriesCap;c.meshMessageDeliveries=Math.min(l,c.meshMessageDeliveries+1)}}}removeIPsForPeer(e,r){for(const n of r){const o=this.peerIPs.get(n);o&&(o.delete(e),o.size===0&&this.peerIPs.delete(n))}}getPtopicStats(e,r){let n=e.topics[r];return n!==void 0?n:this.params.topics[r]!==void 0?(n={inMesh:!1,graftTime:0,meshTime:0,firstMessageDeliveries:0,meshMessageDeliveries:0,meshMessageDeliveriesActive:!1,meshFailurePenalty:0,invalidMessageDeliveries:0},e.topics[r]=n,n):null}}class IWantTracer{constructor(e,r,n){this.gossipsubIWantFollowupMs=e,this.msgIdToStrFn=r,this.metrics=n,this.promises=new Map,this.requestMsByMsg=new Map,this.requestMsByMsgExpire=10*e}get size(){return this.promises.size}get requestMsByMsgSize(){return this.requestMsByMsg.size}addPromise(e,r){const n=Math.floor(Math.random()*r.length),o=r[n],a=this.msgIdToStrFn(o);let c=this.promises.get(a);c||(c=new Map,this.promises.set(a,c));const u=Date.now();c.has(e)||(c.set(e,u+this.gossipsubIWantFollowupMs),this.metrics&&(this.metrics.iwantPromiseStarted.inc(1),this.requestMsByMsg.has(a)||this.requestMsByMsg.set(a,u)))}getBrokenPromises(){const e=Date.now(),r=new Map;let n=0;return this.promises.forEach((o,a)=>{o.forEach((c,u)=>{c<e&&(r.set(u,(r.get(u)??0)+1),o.delete(u),n++)}),o.size||this.promises.delete(a)}),this.metrics?.iwantPromiseBroken.inc(n),r}deliverMessage(e,r=!1){this.trackMessage(e);const n=this.promises.get(e);n&&(this.promises.delete(e),this.metrics&&(this.metrics.iwantPromiseResolved.inc(1),r&&this.metrics.iwantPromiseResolvedFromDuplicate.inc(1),this.metrics.iwantPromiseResolvedPeers.inc(n.size)))}rejectMessage(e,r){switch(this.trackMessage(e),r){case RejectReason.Error:return}this.promises.delete(e)}clear(){this.promises.clear()}prune(){const e=Date.now()-this.requestMsByMsgExpire;let r=0;for(const[n,o]of this.requestMsByMsg.entries())if(o<e)this.requestMsByMsg.delete(n),r++;else break;this.metrics?.iwantMessagePruned.inc(r)}trackMessage(e){if(this.metrics){const r=this.requestMsByMsg.get(e);r!==void 0&&(this.metrics.iwantPromiseDeliveryTime.observe((Date.now()-r)/1e3),this.requestMsByMsg.delete(e))}}}class SimpleTimeCache{constructor(e){this.entries=new Map,this.validityMs=e.validityMs}get size(){return this.entries.size}put(e,r){return this.entries.has(e)?!0:(this.entries.set(e,{value:r,validUntilMs:Date.now()+this.validityMs}),!1)}prune(){const e=Date.now();for(const[r,n]of this.entries.entries())if(n.validUntilMs<e)this.entries.delete(r);else break}has(e){return this.entries.has(e)}get(e){const r=this.entries.get(e);return r&&r.validUntilMs>=Date.now()?r.value:void 0}clear(){this.entries.clear()}}var MessageSource;(function(t){t.forward="forward",t.publish="publish"})(MessageSource||(MessageSource={}));var InclusionReason;(function(t){t.Fanout="fanout",t.Random="random",t.Subscribed="subscribed",t.Outbound="outbound",t.NotEnough="not_enough",t.Opportunistic="opportunistic"})(InclusionReason||(InclusionReason={}));var ChurnReason;(function(t){t.Dc="disconnected",t.BadScore="bad_score",t.Prune="prune",t.Unsub="unsubscribed",t.Excess="excess"})(ChurnReason||(ChurnReason={}));var ScorePenalty;(function(t){t.GraftBackoff="graft_backoff",t.BrokenPromise="broken_promise",t.MessageDeficit="message_deficit",t.IPColocation="IP_colocation"})(ScorePenalty||(ScorePenalty={}));var IHaveIgnoreReason;(function(t){t.LowScore="low_score",t.MaxIhave="max_ihave",t.MaxIasked="max_iasked"})(IHaveIgnoreReason||(IHaveIgnoreReason={}));var ScoreThreshold;(function(t){t.graylist="graylist",t.publish="publish",t.gossip="gossip",t.mesh="mesh"})(ScoreThreshold||(ScoreThreshold={}));function getMetrics(t,e,r){return{protocolsEnabled:t.gauge({name:"gossipsub_protocol",help:"Status of enabled protocols",labelNames:["protocol"]}),topicSubscriptionStatus:t.gauge({name:"gossipsub_topic_subscription_status",help:"Status of our subscription to this topic",labelNames:["topicStr"]}),topicPeersCount:t.gauge({name:"gossipsub_topic_peer_count",help:"Number of peers subscribed to each topic",labelNames:["topicStr"]}),meshPeerCounts:t.gauge({name:"gossipsub_mesh_peer_count",help:"Number of peers in our mesh",labelNames:["topicStr"]}),meshPeerInclusionEvents:t.gauge({name:"gossipsub_mesh_peer_inclusion_events_total",help:"Number of times we include peers in a topic mesh for different reasons",labelNames:["topic","reason"]}),meshPeerChurnEvents:t.gauge({name:"gossipsub_peer_churn_events_total",help:"Number of times we remove peers in a topic mesh for different reasons",labelNames:["topic","reason"]}),peersPerProtocol:t.gauge({name:"gossipsub_peers_per_protocol_count",help:"Peers connected for each topic",labelNames:["protocol"]}),heartbeatDuration:t.histogram({name:"gossipsub_heartbeat_duration_seconds",help:"The time it takes to complete one iteration of the heartbeat",buckets:[.01,.1,1]}),heartbeatSkipped:t.gauge({name:"gossipsub_heartbeat_skipped",help:"Heartbeat run took longer than heartbeat interval so next is skipped"}),asyncValidationResult:t.gauge({name:"gossipsub_async_validation_result_total",help:"Message validation result for each topic",labelNames:["topic","acceptance"]}),asyncValidationMcacheHit:t.gauge({name:"gossipsub_async_validation_mcache_hit_total",help:"Async validation result reported by the user layer",labelNames:["hit"]}),peerReadStreamError:t.gauge({name:"gossipsub_peer_read_stream_err_count_total",help:"Peer read stream error"}),rpcRecvBytes:t.gauge({name:"gossipsub_rpc_recv_bytes_total",help:"RPC recv"}),rpcRecvCount:t.gauge({name:"gossipsub_rpc_recv_count_total",help:"RPC recv"}),rpcRecvSubscription:t.gauge({name:"gossipsub_rpc_recv_subscription_total",help:"RPC recv"}),rpcRecvMessage:t.gauge({name:"gossipsub_rpc_recv_message_total",help:"RPC recv"}),rpcRecvControl:t.gauge({name:"gossipsub_rpc_recv_control_total",help:"RPC recv"}),rpcRecvIHave:t.gauge({name:"gossipsub_rpc_recv_ihave_total",help:"RPC recv"}),rpcRecvIWant:t.gauge({name:"gossipsub_rpc_recv_iwant_total",help:"RPC recv"}),rpcRecvGraft:t.gauge({name:"gossipsub_rpc_recv_graft_total",help:"RPC recv"}),rpcRecvPrune:t.gauge({name:"gossipsub_rpc_recv_prune_total",help:"RPC recv"}),rpcDataError:t.gauge({name:"gossipsub_rpc_data_err_count_total",help:"RPC data error"}),rpcRecvError:t.gauge({name:"gossipsub_rpc_recv_err_count_total",help:"RPC recv error"}),rpcRecvNotAccepted:t.gauge({name:"gossipsub_rpc_rcv_not_accepted_total",help:"Total count of RPC dropped because acceptFrom() == false"}),rpcSentBytes:t.gauge({name:"gossipsub_rpc_sent_bytes_total",help:"RPC sent"}),rpcSentCount:t.gauge({name:"gossipsub_rpc_sent_count_total",help:"RPC sent"}),rpcSentSubscription:t.gauge({name:"gossipsub_rpc_sent_subscription_total",help:"RPC sent"}),rpcSentMessage:t.gauge({name:"gossipsub_rpc_sent_message_total",help:"RPC sent"}),rpcSentControl:t.gauge({name:"gossipsub_rpc_sent_control_total",help:"RPC sent"}),rpcSentIHave:t.gauge({name:"gossipsub_rpc_sent_ihave_total",help:"RPC sent"}),rpcSentIWant:t.gauge({name:"gossipsub_rpc_sent_iwant_total",help:"RPC sent"}),rpcSentGraft:t.gauge({name:"gossipsub_rpc_sent_graft_total",help:"RPC sent"}),rpcSentPrune:t.gauge({name:"gossipsub_rpc_sent_prune_total",help:"RPC sent"}),msgPublishCount:t.gauge({name:"gossipsub_msg_publish_count_total",help:"Total count of msg published by topic",labelNames:["topic"]}),msgPublishPeers:t.gauge({name:"gossipsub_msg_publish_peers_total",help:"Total count of peers that we publish a msg to",labelNames:["topic"]}),msgPublishPeersByGroup:t.gauge({name:"gossipsub_msg_publish_peers_by_group",help:"Total count of peers (by group) that we publish a msg to",labelNames:["topic","peerGroup"]}),msgPublishBytes:t.gauge({name:"gossipsub_msg_publish_bytes_total",help:"Total count of msg publish data.length bytes",labelNames:["topic"]}),msgForwardCount:t.gauge({name:"gossipsub_msg_forward_count_total",help:"Total count of msg forwarded by topic",labelNames:["topic"]}),msgForwardPeers:t.gauge({name:"gossipsub_msg_forward_peers_total",help:"Total count of peers that we forward a msg to",labelNames:["topic"]}),msgReceivedPreValidation:t.gauge({name:"gossipsub_msg_received_prevalidation_total",help:"Total count of recv msgs before any validation",labelNames:["topic"]}),msgReceivedError:t.gauge({name:"gossipsub_msg_received_error_total",help:"Total count of recv msgs error",labelNames:["topic"]}),msgReceivedStatus:t.gauge({name:"gossipsub_msg_received_status_total",help:"Tracks distribution of recv msgs by duplicate, invalid, valid",labelNames:["topic","status"]}),msgReceivedInvalid:t.gauge({name:"gossipsub_msg_received_invalid_total",help:"Tracks specific reason of invalid",labelNames:["topic","error"]}),duplicateMsgDeliveryDelay:t.histogram({name:"gossisub_duplicate_msg_delivery_delay_seconds",help:"Time since the 1st duplicated message validated",labelNames:["topic"],buckets:[.25*r.maxMeshMessageDeliveriesWindowSec,.5*r.maxMeshMessageDeliveriesWindowSec,1*r.maxMeshMessageDeliveriesWindowSec,2*r.maxMeshMessageDeliveriesWindowSec,4*r.maxMeshMessageDeliveriesWindowSec]}),duplicateMsgLateDelivery:t.gauge({name:"gossisub_duplicate_msg_late_delivery_total",help:"Total count of late duplicate message delivery by topic, which triggers P3 penalty",labelNames:["topic"]}),duplicateMsgIgnored:t.gauge({name:"gossisub_ignored_published_duplicate_msgs_total",help:"Total count of published duplicate message ignored by topic",labelNames:["topic"]}),scoreFnCalls:t.gauge({name:"gossipsub_score_fn_calls_total",help:"Total times score() is called"}),scoreFnRuns:t.gauge({name:"gossipsub_score_fn_runs_total",help:"Total times score() call actually computed computeScore(), no cache"}),scoreCachedDelta:t.histogram({name:"gossipsub_score_cache_delta",help:"Delta of score between cached values that expired",buckets:[10,100,1e3]}),peersByScoreThreshold:t.gauge({name:"gossipsub_peers_by_score_threshold_count",help:"Current count of peers by score threshold",labelNames:["threshold"]}),score:t.avgMinMax({name:"gossipsub_score",help:"Avg min max of gossip scores",labelNames:["topic","p"]}),scoreWeights:t.avgMinMax({name:"gossipsub_score_weights",help:"Separate score weights",labelNames:["topic","p"]}),scorePerMesh:t.avgMinMax({name:"gossipsub_score_per_mesh",help:"Histogram of the scores for each mesh topic",labelNames:["topic"]}),scoringPenalties:t.gauge({name:"gossipsub_scoring_penalties_total",help:"A counter of the kind of penalties being applied to peers",labelNames:["penalty"]}),behaviourPenalty:t.histogram({name:"gossipsub_peer_stat_behaviour_penalty",help:"Current peer stat behaviour_penalty at each scrape",buckets:[.25*r.behaviourPenaltyThreshold,.5*r.behaviourPenaltyThreshold,1*r.behaviourPenaltyThreshold,2*r.behaviourPenaltyThreshold,4*r.behaviourPenaltyThreshold]}),ihaveRcvIgnored:t.gauge({name:"gossipsub_ihave_rcv_ignored_total",help:"Total received IHAVE messages that we ignore for some reason",labelNames:["reason"]}),ihaveRcvMsgids:t.gauge({name:"gossipsub_ihave_rcv_msgids_total",help:"Total received IHAVE messages by topic",labelNames:["topic"]}),ihaveRcvNotSeenMsgids:t.gauge({name:"gossipsub_ihave_rcv_not_seen_msgids_total",help:"Total messages per topic we do not have, not actual requests",labelNames:["topic"]}),iwantRcvMsgids:t.gauge({name:"gossipsub_iwant_rcv_msgids_total",help:"Total received IWANT messages by topic",labelNames:["topic"]}),iwantRcvDonthaveMsgids:t.gauge({name:"gossipsub_iwant_rcv_dont_have_msgids_total",help:"Total requested messageIDs that we do not have"}),iwantPromiseStarted:t.gauge({name:"gossipsub_iwant_promise_sent_total",help:"Total count of started IWANT promises"}),iwantPromiseResolved:t.gauge({name:"gossipsub_iwant_promise_resolved_total",help:"Total count of resolved IWANT promises"}),iwantPromiseResolvedFromDuplicate:t.gauge({name:"gossipsub_iwant_promise_resolved_from_duplicate_total",help:"Total count of resolved IWANT promises from duplicate messages"}),iwantPromiseResolvedPeers:t.gauge({name:"gossipsub_iwant_promise_resolved_peers",help:"Total count of peers we have asked IWANT promises that are resolved"}),iwantPromiseBroken:t.gauge({name:"gossipsub_iwant_promise_broken",help:"Total count of broken IWANT promises"}),iwantMessagePruned:t.gauge({name:"gossipsub_iwant_message_pruned",help:"Total count of pruned IWANT messages"}),iwantPromiseDeliveryTime:t.histogram({name:"gossipsub_iwant_promise_delivery_seconds",help:"Histogram of delivery time of resolved IWANT promises",buckets:[.5*r.gossipPromiseExpireSec,1*r.gossipPromiseExpireSec,2*r.gossipPromiseExpireSec,4*r.gossipPromiseExpireSec]}),iwantPromiseUntracked:t.gauge({name:"gossip_iwant_promise_untracked",help:"Total count of untracked IWANT promise"}),cacheSize:t.gauge({name:"gossipsub_cache_size",help:"Unbounded cache sizes",labelNames:["cache"]}),mcacheSize:t.gauge({name:"gossipsub_mcache_size",help:"Current mcache msg count"}),mcacheNotValidatedCount:t.gauge({name:"gossipsub_mcache_not_validated_count",help:"Current mcache msg count not validated"}),fastMsgIdCacheCollision:t.gauge({name:"gossipsub_fastmsgid_cache_collision_total",help:"Total count of key collisions on fastmsgid cache put"}),newConnectionCount:t.gauge({name:"gossipsub_new_connection_total",help:"Total new connection by status",labelNames:["status"]}),topicStrToLabel:e,toTopic(n){return this.topicStrToLabel.get(n)??n},onJoin(n){this.topicSubscriptionStatus.set({topicStr:n},1),this.meshPeerCounts.set({topicStr:n},0)},onLeave(n){this.topicSubscriptionStatus.set({topicStr:n},0),this.meshPeerCounts.set({topicStr:n},0)},onAddToMesh(n,o,a){const c=this.toTopic(n);this.meshPeerInclusionEvents.inc({topic:c,reason:o},a)},onRemoveFromMesh(n,o,a){const c=this.toTopic(n);this.meshPeerChurnEvents.inc({topic:c,reason:o},a)},onReportValidationMcacheHit(n){this.asyncValidationMcacheHit.inc({hit:n?"hit":"miss"})},onReportValidation(n,o){const a=this.toTopic(n);this.asyncValidationResult.inc({topic:a,acceptance:o})},onScorePenalty(n){this.scoringPenalties.inc({penalty:n},1)},onIhaveRcv(n,o,a){const c=this.toTopic(n);this.ihaveRcvMsgids.inc({topic:c},o),this.ihaveRcvNotSeenMsgids.inc({topic:c},a)},onIwantRcv(n,o){for(const[a,c]of n){const u=this.toTopic(a);this.iwantRcvMsgids.inc({topic:u},c)}this.iwantRcvDonthaveMsgids.inc(o)},onForwardMsg(n,o){const a=this.toTopic(n);this.msgForwardCount.inc({topic:a},1),this.msgForwardPeers.inc({topic:a},o)},onPublishMsg(n,o,a,c){const u=this.toTopic(n);this.msgPublishCount.inc({topic:u},1),this.msgPublishBytes.inc({topic:u},a*c),this.msgPublishPeers.inc({topic:u},a),this.msgPublishPeersByGroup.inc({topic:u,peerGroup:"direct"},o.direct),this.msgPublishPeersByGroup.inc({topic:u,peerGroup:"floodsub"},o.floodsub),this.msgPublishPeersByGroup.inc({topic:u,peerGroup:"mesh"},o.mesh),this.msgPublishPeersByGroup.inc({topic:u,peerGroup:"fanout"},o.fanout)},onMsgRecvPreValidation(n){const o=this.toTopic(n);this.msgReceivedPreValidation.inc({topic:o},1)},onMsgRecvError(n){const o=this.toTopic(n);this.msgReceivedError.inc({topic:o},1)},onMsgRecvResult(n,o){const a=this.toTopic(n);this.msgReceivedStatus.inc({topic:a,status:o})},onMsgRecvInvalid(n,o){const a=this.toTopic(n),c=o.reason===RejectReason.Error?o.error:o.reason;this.msgReceivedInvalid.inc({topic:a,error:c},1)},onDuplicateMsgDelivery(n,o,a){if(this.duplicateMsgDeliveryDelay.observe(o/1e3),a){const c=this.toTopic(n);this.duplicateMsgLateDelivery.inc({topic:c},1)}},onPublishDuplicateMsg(n){const o=this.toTopic(n);this.duplicateMsgIgnored.inc({topic:o},1)},onPeerReadStreamError(){this.peerReadStreamError.inc(1)},onRpcRecvError(){this.rpcRecvError.inc(1)},onRpcDataError(){this.rpcDataError.inc(1)},onRpcRecv(n,o){this.rpcRecvBytes.inc(o),this.rpcRecvCount.inc(1),n.subscriptions&&this.rpcRecvSubscription.inc(n.subscriptions.length),n.messages&&this.rpcRecvMessage.inc(n.messages.length),n.control&&(this.rpcRecvControl.inc(1),n.control.ihave&&this.rpcRecvIHave.inc(n.control.ihave.length),n.control.iwant&&this.rpcRecvIWant.inc(n.control.iwant.length),n.control.graft&&this.rpcRecvGraft.inc(n.control.graft.length),n.control.prune&&this.rpcRecvPrune.inc(n.control.prune.length))},onRpcSent(n,o){if(this.rpcSentBytes.inc(o),this.rpcSentCount.inc(1),n.subscriptions&&this.rpcSentSubscription.inc(n.subscriptions.length),n.messages&&this.rpcSentMessage.inc(n.messages.length),n.control){const a=n.control.ihave?.length??0,c=n.control.iwant?.length??0,u=n.control.graft?.length??0,l=n.control.prune?.length??0;a>0&&this.rpcSentIHave.inc(a),c>0&&this.rpcSentIWant.inc(c),u>0&&this.rpcSentGraft.inc(u),l>0&&this.rpcSentPrune.inc(l),(a>0||c>0||u>0||l>0)&&this.rpcSentControl.inc(1)}},registerScores(n,o){let a=0,c=0,u=0,l=0;for(const f of n)f>=o.graylistThreshold&&a++,f>=o.publishThreshold&&c++,f>=o.gossipThreshold&&u++,f>=0&&l++;this.peersByScoreThreshold.set({threshold:ScoreThreshold.graylist},a),this.peersByScoreThreshold.set({threshold:ScoreThreshold.publish},c),this.peersByScoreThreshold.set({threshold:ScoreThreshold.gossip},u),this.peersByScoreThreshold.set({threshold:ScoreThreshold.mesh},l),this.score.set(n)},registerScoreWeights(n){for(const[o,a]of n.byTopic)this.scoreWeights.set({topic:o,p:"p1"},a.p1w),this.scoreWeights.set({topic:o,p:"p2"},a.p2w),this.scoreWeights.set({topic:o,p:"p3"},a.p3w),this.scoreWeights.set({topic:o,p:"p3b"},a.p3bw),this.scoreWeights.set({topic:o,p:"p4"},a.p4w);this.scoreWeights.set({p:"p5"},n.p5w),this.scoreWeights.set({p:"p6"},n.p6w),this.scoreWeights.set({p:"p7"},n.p7w)},registerScorePerMesh(n,o){const a=new Map;n.forEach((c,u)=>{const l=this.topicStrToLabel.get(u)??"unknown";let f=a.get(l);f||(f=new Set,a.set(l,f)),c.forEach(p=>f?.add(p))});for(const[c,u]of a){const l=[];u.forEach(f=>{l.push(o.get(f)??0)}),this.scorePerMesh.set({topic:c},l)}}}}const hashName={sha1:"sha1","sha2-256":"sha256","sha2-512":"sha512"};function pbkdf2(t,e,r,n,o){if(o!=="sha1"&&o!=="sha2-256"&&o!=="sha2-512"){const u=Object.keys(hashName).join(" / ");throw new CodeError$4(`Hash '${o}' is unknown or not supported. Must be ${u}`,"ERR_UNSUPPORTED_HASH_TYPE")}const a=hashName[o],c=forgePbkdf2(t,e,r,n,a);return forgeUtil.encode64(c,null)}const SignPrefix=fromString$y("libp2p-pubsub:");async function buildRawMessage(t,e,r,n){switch(t.type){case PublishConfigType.Signing:{const o={from:t.author.toBytes(),data:n,seqno:randomBytes$3(8),topic:e,signature:void 0,key:void 0},a=concat$8([SignPrefix,RPC$1.Message.encode(o).finish()]);o.signature=await t.privateKey.sign(a),o.key=t.key;const c={type:"signed",from:t.author,data:r,sequenceNumber:BigInt(`0x${toString$D(o.seqno,"base16")}`),topic:e,signature:o.signature,key:o.key};return{raw:o,msg:c}}case PublishConfigType.Anonymous:return{raw:{from:void 0,data:n,seqno:void 0,topic:e,signature:void 0,key:void 0},msg:{type:"unsigned",data:r,topic:e}}}}async function validateToRawMessage(t,e){switch(t){case StrictNoSign:return e.signature!=null?{valid:!1,error:ValidateError.SignaturePresent}:e.seqno!=null?{valid:!1,error:ValidateError.SeqnoPresent}:e.key!=null?{valid:!1,error:ValidateError.FromPresent}:{valid:!0,message:{type:"unsigned",topic:e.topic,data:e.data??new Uint8Array(0)}};case StrictSign:{if(e.seqno==null)return{valid:!1,error:ValidateError.InvalidSeqno};if(e.seqno.length!==8)return{valid:!1,error:ValidateError.InvalidSeqno};if(e.signature==null)return{valid:!1,error:ValidateError.InvalidSignature};if(e.from==null)return{valid:!1,error:ValidateError.InvalidPeerId};let r;try{r=peerIdFromBytes$1(e.from)}catch{return{valid:!1,error:ValidateError.InvalidPeerId}}let n;if(e.key){if(n=unmarshalPublicKey(e.key),r.publicKey!==void 0&&!equals$R(n.bytes,r.publicKey))return{valid:!1,error:ValidateError.InvalidPeerId}}else{if(r.publicKey==null)return{valid:!1,error:ValidateError.InvalidPeerId};n=unmarshalPublicKey(r.publicKey)}const o={from:e.from,data:e.data,seqno:e.seqno,topic:e.topic,signature:void 0,key:void 0},a=concat$8([SignPrefix,RPC$1.Message.encode(o).finish()]);return await n.verify(a,e.signature)?{valid:!0,message:{type:"signed",from:r,data:e.data??new Uint8Array(0),sequenceNumber:BigInt(`0x${toString$D(e.seqno,"base16")}`),topic:e.topic,signature:e.signature,key:e.key??marshalPublicKey(n)}}:{valid:!1,error:ValidateError.InvalidSignature}}}}var encode_1$b=encode$L,MSB$g=128,REST$g=127,MSBALL$b=~REST$g,INT$b=Math.pow(2,31);function encode$L(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$b;)e[r++]=t&255|MSB$g,t/=128;for(;t&MSBALL$b;)e[r++]=t&255|MSB$g,t>>>=7;return e[r]=t|0,encode$L.bytes=r-n+1,e}var decode$_=read$c,MSB$1$b=128,REST$1$b=127;function read$c(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$c.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$b)<<o:(c&REST$1$b)*Math.pow(2,o),o+=7}while(c>=MSB$1$b);return read$c.bytes=a-n,r}var N1$e=Math.pow(2,7),N2$e=Math.pow(2,14),N3$e=Math.pow(2,21),N4$e=Math.pow(2,28),N5$e=Math.pow(2,35),N6$e=Math.pow(2,42),N7$e=Math.pow(2,49),N8$b=Math.pow(2,56),N9$b=Math.pow(2,63),length$c=function(t){return t<N1$e?1:t<N2$e?2:t<N3$e?3:t<N4$e?4:t<N5$e?5:t<N6$e?6:t<N7$e?7:t<N8$b?8:t<N9$b?9:10},varint$c={encode:encode_1$b,decode:decode$_,encodingLength:length$c},_brrp_varint$a=varint$c;const encodeTo$a=(t,e,r=0)=>(_brrp_varint$a.encode(t,e,r),e),encodingLength$d=t=>_brrp_varint$a.encodingLength(t),create$d=(t,e)=>{const r=e.byteLength,n=encodingLength$d(t),o=n+encodingLength$d(r),a=new Uint8Array(o+r);return encodeTo$a(t,a,0),encodeTo$a(r,a,n),a.set(e,o),new Digest$a(t,r,e,a)};let Digest$a=class{constructor(t,e,r,n){this.code=t,this.size=e,this.digest=r,this.bytes=n}};const from$h=({name:t,code:e,encode:r})=>new Hasher$6(t,e,r);let Hasher$6=class{constructor(t,e,r){this.name=t,this.code=e,this.encode=r}digest(t){if(t instanceof Uint8Array){const e=this.encode(t);return e instanceof Uint8Array?create$d(this.code,e):e.then(r=>create$d(this.code,r))}else throw Error("Unknown type, must be binary type")}};const sha$6=t=>async e=>new Uint8Array(await crypto.subtle.digest(t,e)),sha256$7=from$h({name:"sha2-256",code:18,encode:sha$6("SHA-256")}),msgId=(t,e)=>{const r=fromString$y(e.toString(16).padStart(16,"0"),"base16"),n=new Uint8Array(t.length+r.length);return n.set(t,0),n.set(r,t.length),n};function msgIdFnStrictSign(t){if(t.type!=="signed")throw new Error("expected signed message type");if(t.sequenceNumber==null)throw Error("missing seqno field");return msgId(t.from.toBytes(),t.sequenceNumber)}async function msgIdFnStrictNoSign(t){return await sha256$7.encode(t.data)}function computeScoreWeights(t,e,r,n,o){let a=0;const c=new Map;if(Object.entries(e.topics).forEach(([$,_])=>{const b=o.get($)??"unknown",D=r.topics[$];if(D===void 0)return;let v=c.get(b);v||(v={p1w:0,p2w:0,p3w:0,p3bw:0,p4w:0},c.set(b,v));let S=0,I=0,R=0,C=0,T=0;if(_.inMesh){const k=Math.max(_.meshTime/D.timeInMeshQuantum,D.timeInMeshCap);S+=k*D.timeInMeshWeight}let P=_.firstMessageDeliveries;if(P>D.firstMessageDeliveriesCap&&(P=D.firstMessageDeliveriesCap),I+=P*D.firstMessageDeliveriesWeight,_.meshMessageDeliveriesActive&&_.meshMessageDeliveries<D.meshMessageDeliveriesThreshold){const k=D.meshMessageDeliveriesThreshold-_.meshMessageDeliveries,O=k*k;R+=O*D.meshMessageDeliveriesWeight}const E=_.meshFailurePenalty;C+=E*D.meshFailurePenaltyWeight;const A=_.invalidMessageDeliveries*_.invalidMessageDeliveries;T+=A*D.invalidMessageDeliveriesWeight,a+=(S+I+R+C+T)*D.topicWeight,v.p1w+=S,v.p2w+=I,v.p3w+=R,v.p3bw+=C,v.p4w+=T}),r.topicScoreCap>0&&a>r.topicScoreCap){a=r.topicScoreCap;const $=r.topicScoreCap/a;for(const _ of c.values())_.p1w*=$,_.p2w*=$,_.p3w*=$,_.p3bw*=$,_.p4w*=$}let u=0,l=0,f=0;const p=r.appSpecificScore(t);u+=p*r.appSpecificWeight,e.knownIPs.forEach($=>{if(r.IPColocationFactorWhitelist.has($))return;const _=n.get($),b=_?_.size:0;if(b>r.IPColocationFactorThreshold){const D=b-r.IPColocationFactorThreshold,v=D*D;l+=v*r.IPColocationFactorWeight}});const g=e.behaviourPenalty*e.behaviourPenalty;return f+=g*r.behaviourPenaltyWeight,a+=u+l+f,{byTopic:c,p5w:u,p6w:l,p7w:f,score:a}}function computeAllPeersScoreWeights(t,e,r,n,o){const a={byTopic:new Map,p5w:[],p6w:[],p7w:[],score:[]};for(const c of t){const u=e.get(c);if(u){const l=computeScoreWeights(c,u,r,n,o);for(const[f,p]of l.byTopic){let g=a.byTopic.get(f);g||(g={p1w:[],p2w:[],p3w:[],p3bw:[],p4w:[]},a.byTopic.set(f,g)),g.p1w.push(p.p1w),g.p2w.push(p.p2w),g.p3w.push(p.p3w),g.p3bw.push(p.p3bw),g.p4w.push(p.p4w)}a.p5w.push(l.p5w),a.p6w.push(l.p6w),a.p7w.push(l.p7w),a.score.push(l.score)}else a.p5w.push(0),a.p6w.push(0),a.p7w.push(0),a.score.push(0)}return a}let AbortError$7=class extends Error{constructor(t,e){super(t??"The operation was aborted"),this.type="aborted",this.code=e??"ABORT_ERR"}};function abortableSource$6(t,e,r){const n=r??{},o=getIterator(t);async function*a(){let c;const u=()=>{c?.()};for(e.addEventListener("abort",u);;){let l;try{if(e.aborted){const{abortMessage:p,abortCode:g}=n;throw new AbortError$7(p,g)}const f=new Promise((p,g)=>{c=()=>{const{abortMessage:$,abortCode:_}=n;g(new AbortError$7($,_))}});l=await Promise.race([f,o.next()]),c=null}catch(f){e.removeEventListener("abort",u);const p=f.type==="aborted"&&e.aborted;if(p&&n.onAbort!=null&&await n.onAbort(t),typeof o.return=="function")try{const g=o.return();g instanceof Promise&&g.catch($=>{n.onReturnError!=null&&n.onReturnError($)})}catch(g){n.onReturnError!=null&&n.onReturnError(g)}if(p&&n.returnOnAbort===!0)return;throw f}if(l.done===!0)break;yield l.value}e.removeEventListener("abort",u)}return a()}function allocUnsafe$9(t){return globalThis?.Buffer?.allocUnsafe!=null?globalThis.Buffer.allocUnsafe(t):new Uint8Array(t)}const defaultEncoder$4=t=>{const e=unsigned.encodingLength(t),r=allocUnsafe$9(e);return unsigned.encode(t,r),defaultEncoder$4.bytes=e,r};defaultEncoder$4.bytes=0;function encode$K(t){t=t??{};const e=t.lengthEncoder??defaultEncoder$4;return async function*(r){for await(const n of r){const o=e(n.byteLength);o instanceof Uint8Array?yield o:yield*o,n instanceof Uint8Array?yield n:yield*n}}}encode$K.single=(t,e)=>{e=e??{};const r=e.lengthEncoder??defaultEncoder$4;return new Uint8ArrayList(r(t.byteLength),t)};const MAX_LENGTH_LENGTH$5=8,MAX_DATA_LENGTH$5=1024*1024*4;var ReadMode$5;(function(t){t[t.LENGTH=0]="LENGTH",t[t.DATA=1]="DATA"})(ReadMode$5||(ReadMode$5={}));const defaultDecoder$5=t=>{const e=unsigned.decode(t);return defaultDecoder$5.bytes=unsigned.encodingLength(e),e};defaultDecoder$5.bytes=0;function decode$Z(t){return async function*(e){const r=new Uint8ArrayList;let n=ReadMode$5.LENGTH,o=-1;const a=t?.lengthDecoder??defaultDecoder$5,c=t?.maxLengthLength??MAX_LENGTH_LENGTH$5,u=t?.maxDataLength??MAX_DATA_LENGTH$5;for await(const l of e)for(r.append(l);r.byteLength>0;){if(n===ReadMode$5.LENGTH)try{if(o=a(r),o<0)throw errcode(new Error("invalid message length"),"ERR_INVALID_MSG_LENGTH");if(o>u)throw errcode(new Error("message length too long"),"ERR_MSG_DATA_TOO_LONG");const f=a.bytes;r.consume(f),t?.onLength!=null&&t.onLength(o),n=ReadMode$5.DATA}catch(f){if(f instanceof RangeError){if(r.byteLength>c)throw errcode(new Error("message length length too long"),"ERR_MSG_LENGTH_TOO_LONG");break}throw f}if(n===ReadMode$5.DATA){if(r.byteLength<o)break;const f=r.sublist(0,o);r.consume(o),t?.onData!=null&&t.onData(f),yield f,n=ReadMode$5.LENGTH}}if(r.byteLength>0)throw errcode(new Error("unexpected end of input"),"ERR_UNEXPECTED_EOF")}}decode$Z.fromReader=(t,e)=>{let r=1;const n=async function*(){for(;;)try{const{done:o,value:a}=await t.next(r);if(o===!0)return;a!=null&&(yield a)}catch(o){if(o.code==="ERR_UNDER_READ")return{done:!0,value:null};throw o}finally{r=1}}();return decode$Z({...e??{},onLength:o=>{r=o}})(n)};class OutboundStream{constructor(e,r,n){this.rawStream=e,this.pushable=pushable({objectMode:!1}),this.closeController=new AbortController,this.maxBufferSize=n.maxBufferSize??1/0,pipe$1(abortableSource$6(this.pushable,this.closeController.signal,{returnOnAbort:!0}),encode$K(),this.rawStream).catch(r)}get protocol(){return this.rawStream.stat.protocol}push(e){if(this.pushable.readableLength>this.maxBufferSize)throw Error(`OutboundStream buffer full, size > ${this.maxBufferSize}`);this.pushable.push(e)}close(){this.closeController.abort(),this.pushable.return(),this.rawStream.close()}}class InboundStream{constructor(e,r={}){this.rawStream=e,this.closeController=new AbortController,this.source=abortableSource$6(pipe$1(this.rawStream,decode$Z(r)),this.closeController.signal,{returnOnAbort:!0})}close(){this.closeController.abort(),this.rawStream.close()}}var minimalExports=requireMinimal();const protobuf=getDefaultExportFromCjs(minimalExports),defaultDecodeRpcLimits={maxSubscriptions:1/0,maxMessages:1/0,maxIhaveMessageIDs:1/0,maxIwantMessageIDs:1/0,maxControlMessages:1/0,maxPeerInfos:1/0};function decodeRpc(t,e){e={...e};const r=protobuf.Reader.create(t),n=t.length,o=n===void 0?r.len:r.pos+n,a={};for(;r.pos<o;){const c=r.uint32();switch(c>>>3){case 1:a.subscriptions&&a.subscriptions.length||(a.subscriptions=[]),a.subscriptions.length<e.maxSubscriptions?a.subscriptions.push(decodeSubOpts(r,r.uint32())):r.skipType(c&7);break;case 2:a.messages&&a.messages.length||(a.messages=[]),a.messages.length<e.maxMessages?a.messages.push(decodeMessage$1(r,r.uint32())):r.skipType(c&7);break;case 3:a.control=decodeControlMessage(r,r.uint32(),e);break;default:r.skipType(c&7);break}}return a}function decodeSubOpts(t,e){const r=e===void 0?t.len:t.pos+e,n={};for(;t.pos<r;){const o=t.uint32();switch(o>>>3){case 1:n.subscribe=t.bool();break;case 2:n.topic=t.string();break;default:t.skipType(o&7);break}}return n}function decodeMessage$1(t,e){const r=e===void 0?t.len:t.pos+e,n={};for(;t.pos<r;){const o=t.uint32();switch(o>>>3){case 1:n.from=t.bytes();break;case 2:n.data=t.bytes();break;case 3:n.seqno=t.bytes();break;case 4:n.topic=t.string();break;case 5:n.signature=t.bytes();break;case 6:n.key=t.bytes();break;default:t.skipType(o&7);break}}if(!n.topic)throw Error("missing required 'topic'");return n}function decodeControlMessage(t,e,r){const n=e===void 0?t.len:t.pos+e,o={};for(;t.pos<n;){const a=t.uint32();switch(a>>>3){case 1:o.ihave&&o.ihave.length||(o.ihave=[]),o.ihave.length<r.maxControlMessages?o.ihave.push(decodeControlIHave(t,t.uint32(),r)):t.skipType(a&7);break;case 2:o.iwant&&o.iwant.length||(o.iwant=[]),o.iwant.length<r.maxControlMessages?o.iwant.push(decodeControlIWant(t,t.uint32(),r)):t.skipType(a&7);break;case 3:o.graft&&o.graft.length||(o.graft=[]),o.graft.length<r.maxControlMessages?o.graft.push(decodeControlGraft(t,t.uint32())):t.skipType(a&7);break;case 4:o.prune&&o.prune.length||(o.prune=[]),o.prune.length<r.maxControlMessages?o.prune.push(decodeControlPrune(t,t.uint32(),r)):t.skipType(a&7);break;default:t.skipType(a&7);break}}return o}function decodeControlIHave(t,e,r){const n=e===void 0?t.len:t.pos+e,o={};for(;t.pos<n;){const a=t.uint32();switch(a>>>3){case 1:o.topicID=t.string();break;case 2:o.messageIDs&&o.messageIDs.length||(o.messageIDs=[]),r.maxIhaveMessageIDs-- >0?o.messageIDs.push(t.bytes()):t.skipType(a&7);break;default:t.skipType(a&7);break}}return o}function decodeControlIWant(t,e,r){const n=e===void 0?t.len:t.pos+e,o={};for(;t.pos<n;){const a=t.uint32();switch(a>>>3){case 1:o.messageIDs&&o.messageIDs.length||(o.messageIDs=[]),r.maxIwantMessageIDs-- >0?o.messageIDs.push(t.bytes()):t.skipType(a&7);break;default:t.skipType(a&7);break}}return o}function decodeControlGraft(t,e){const r=e===void 0?t.len:t.pos+e,n={};for(;t.pos<r;){const o=t.uint32();switch(o>>>3){case 1:n.topicID=t.string();break;default:t.skipType(o&7);break}}return n}function decodeControlPrune(t,e,r){const n=e===void 0?t.len:t.pos+e,o={};for(;t.pos<n;){const a=t.uint32();switch(a>>>3){case 1:o.topicID=t.string();break;case 2:o.peers&&o.peers.length||(o.peers=[]),r.maxPeerInfos-- >0?o.peers.push(decodePeerInfo(t,t.uint32())):t.skipType(a&7);break;case 3:o.backoff=t.uint64();break;default:t.skipType(a&7);break}}return o}function decodePeerInfo(t,e){const r=e===void 0?t.len:t.pos+e,n={};for(;t.pos<r;){const o=t.uint32();switch(o>>>3){case 1:n.peerID=t.bytes();break;case 2:n.signedPeerRecord=t.bytes();break;default:t.skipType(o&7);break}}return n}var Protocol;(function(t){t[t.ip4=4]="ip4",t[t.ip6=41]="ip6"})(Protocol||(Protocol={}));function multiaddrToIPStr(t){for(const e of t.tuples())switch(e[0]){case Protocol.ip4:case Protocol.ip6:return convertToString$9(e[0],e[1])}return null}var GossipStatusCode;(function(t){t[t.started=0]="started",t[t.stopped=1]="stopped"})(GossipStatusCode||(GossipStatusCode={}));class GossipSub extends EventEmitter$1{constructor(e,r={}){super(),this.multicodecs=[GossipsubIDv11,GossipsubIDv10],this.peers=new Set,this.streamsInbound=new Map,this.streamsOutbound=new Map,this.outboundInflightQueue=pushable({objectMode:!0}),this.direct=new Set,this.floodsubPeers=new Set,this.acceptFromWhitelist=new Map,this.topics=new Map,this.subscriptions=new Set,this.mesh=new Map,this.fanout=new Map,this.fanoutLastpub=new Map,this.gossip=new Map,this.control=new Map,this.peerhave=new Map,this.iasked=new Map,this.backoff=new Map,this.outbound=new Map,this.topicValidators=new Map,this.heartbeatTicks=0,this.directPeerInitial=null,this.status={code:GossipStatusCode.stopped},this.heartbeatTimer=null,this.runHeartbeat=()=>{const o=this.metrics?.heartbeatDuration.startTimer();this.heartbeat().catch(a=>{this.log("Error running heartbeat",a)}).finally(()=>{if(o?.(),this.status.code===GossipStatusCode.started){clearTimeout(this.status.heartbeatTimeout);let a=this.opts.heartbeatInterval-(Date.now()-this.status.hearbeatStartMs)%this.opts.heartbeatInterval;a<this.opts.heartbeatInterval*.25&&(a+=this.opts.heartbeatInterval,this.metrics?.heartbeatSkipped.inc()),this.status.heartbeatTimeout=setTimeout(this.runHeartbeat,a)}})};const n={fallbackToFloodsub:!0,floodPublish:!0,doPX:!1,directPeers:[],D:GossipsubD,Dlo:GossipsubDlo,Dhi:GossipsubDhi,Dscore:GossipsubDscore,Dout:GossipsubDout,Dlazy:GossipsubDlazy,heartbeatInterval:GossipsubHeartbeatInterval,fanoutTTL:GossipsubFanoutTTL,mcacheLength:GossipsubHistoryLength,mcacheGossip:GossipsubHistoryGossip,seenTTL:GossipsubSeenTTL,gossipsubIWantFollowupMs:GossipsubIWantFollowupTime,prunePeers:GossipsubPrunePeers,pruneBackoff:GossipsubPruneBackoff,graftFloodThreshold:GossipsubGraftFloodThreshold,opportunisticGraftPeers:GossipsubOpportunisticGraftPeers,opportunisticGraftTicks:GossipsubOpportunisticGraftTicks,directConnectTicks:GossipsubDirectConnectTicks,...r,scoreParams:createPeerScoreParams(r.scoreParams),scoreThresholds:createPeerScoreThresholds(r.scoreThresholds)};if(this.components=e,this.decodeRpcLimits=n.decodeRpcLimits??defaultDecodeRpcLimits,this.globalSignaturePolicy=n.globalSignaturePolicy??StrictSign,n.fallbackToFloodsub&&this.multicodecs.push(FloodsubID),this.log=logger$3(n.debugName??"libp2p:gossipsub"),this.opts=n,this.direct=new Set(n.directPeers.map(o=>o.id.toString())),this.seenCache=new SimpleTimeCache({validityMs:n.seenTTL}),this.publishedMessageIds=new SimpleTimeCache({validityMs:n.seenTTL}),r.msgIdFn)this.msgIdFn=r.msgIdFn;else switch(this.globalSignaturePolicy){case StrictSign:this.msgIdFn=msgIdFnStrictSign;break;case StrictNoSign:this.msgIdFn=msgIdFnStrictNoSign;break}if(r.fastMsgIdFn&&(this.fastMsgIdFn=r.fastMsgIdFn,this.fastMsgIdCache=new SimpleTimeCache({validityMs:n.seenTTL})),this.msgIdToStrFn=r.msgIdToStrFn??messageIdToString,this.mcache=r.messageCache||new MessageCache(n.mcacheGossip,n.mcacheLength,this.msgIdToStrFn),r.dataTransform&&(this.dataTransform=r.dataTransform),r.metricsRegister){if(!r.metricsTopicStrToLabel)throw Error("Must set metricsTopicStrToLabel with metrics");const o=Math.max(...Object.values(n.scoreParams.topics).map(c=>c.meshMessageDeliveriesWindow),DEFAULT_METRIC_MESH_MESSAGE_DELIVERIES_WINDOWS),a=getMetrics(r.metricsRegister,r.metricsTopicStrToLabel,{gossipPromiseExpireSec:this.opts.gossipsubIWantFollowupMs/1e3,behaviourPenaltyThreshold:n.scoreParams.behaviourPenaltyThreshold,maxMeshMessageDeliveriesWindowSec:o/1e3});a.mcacheSize.addCollect(()=>this.onScrapeMetrics(a));for(const c of this.multicodecs)a.protocolsEnabled.set({protocol:c},1);this.metrics=a}else this.metrics=null;this.gossipTracer=new IWantTracer(this.opts.gossipsubIWantFollowupMs,this.msgIdToStrFn,this.metrics),this.score=new PeerScore(this.opts.scoreParams,this.metrics,{scoreCacheValidityMs:n.heartbeatInterval}),this.maxInboundStreams=r.maxInboundStreams,this.maxOutboundStreams=r.maxOutboundStreams,this.allowedTopics=n.allowedTopics?new Set(n.allowedTopics):null}getPeers(){return[...this.peers.keys()].map(e=>peerIdFromString$1(e))}isStarted(){return this.status.code===GossipStatusCode.started}async start(){if(this.isStarted())return;this.log("starting"),this.publishConfig=await getPublishConfigFromPeerId(this.globalSignaturePolicy,this.components.peerId),this.outboundInflightQueue=pushable({objectMode:!0}),pipe$1(this.outboundInflightQueue,async a=>{for await(const{peerId:c,connection:u}of a)await this.createOutboundStream(c,u)}).catch(a=>this.log.error("outbound inflight queue error",a)),await Promise.all(this.opts.directPeers.map(async a=>{await this.components.peerStore.addressBook.add(a.id,a.addrs)}));const e=this.components.registrar;await Promise.all(this.multicodecs.map(a=>e.handle(a,this.onIncomingStream.bind(this),{maxInboundStreams:this.maxInboundStreams,maxOutboundStreams:this.maxOutboundStreams})));const r=createTopology({onConnect:this.onPeerConnected.bind(this),onDisconnect:this.onPeerDisconnected.bind(this)}),n=await Promise.all(this.multicodecs.map(a=>e.register(a,r))),o=setTimeout(this.runHeartbeat,GossipsubHeartbeatInitialDelay);this.status={code:GossipStatusCode.started,registrarTopologyIds:n,heartbeatTimeout:o,hearbeatStartMs:Date.now()+GossipsubHeartbeatInitialDelay},this.score.start(),this.directPeerInitial=setTimeout(()=>{Promise.resolve().then(async()=>{await Promise.all(Array.from(this.direct).map(async a=>await this.connect(a)))}).catch(a=>{this.log(a)})},GossipsubDirectConnectInitialDelay),this.log("started")}async stop(){if(this.log("stopping"),this.status.code!==GossipStatusCode.started)return;const{registrarTopologyIds:e}=this.status;this.status={code:GossipStatusCode.stopped};const r=this.components.registrar;e.forEach(n=>r.unregister(n)),this.outboundInflightQueue.end();for(const n of this.streamsOutbound.values())n.close();this.streamsOutbound.clear();for(const n of this.streamsInbound.values())n.close();this.streamsInbound.clear(),this.peers.clear(),this.subscriptions.clear(),this.heartbeatTimer&&(this.heartbeatTimer.cancel(),this.heartbeatTimer=null),this.score.stop(),this.mesh.clear(),this.fanout.clear(),this.fanoutLastpub.clear(),this.gossip.clear(),this.control.clear(),this.peerhave.clear(),this.iasked.clear(),this.backoff.clear(),this.outbound.clear(),this.gossipTracer.clear(),this.seenCache.clear(),this.fastMsgIdCache&&this.fastMsgIdCache.clear(),this.directPeerInitial&&clearTimeout(this.directPeerInitial),this.log("stopped")}dumpPeerScoreStats(){return this.score.dumpPeerScoreStats()}onIncomingStream({stream:e,connection:r}){if(!this.isStarted())return;const n=r.remotePeer;this.addPeer(n,r.stat.direction,r.remoteAddr),this.createInboundStream(n,e),this.outboundInflightQueue.push({peerId:n,connection:r})}onPeerConnected(e,r){this.metrics?.newConnectionCount.inc({status:r.stat.status}),!(!this.isStarted()||r.stat.status!=="OPEN")&&(this.addPeer(e,r.stat.direction,r.remoteAddr),this.outboundInflightQueue.push({peerId:e,connection:r}))}onPeerDisconnected(e){this.log("connection ended %p",e),this.removePeer(e)}async createOutboundStream(e,r){if(!this.isStarted())return;const n=e.toString();if(this.peers.has(n)&&!this.streamsOutbound.has(n))try{const o=new OutboundStream(await r.newStream(this.multicodecs),c=>this.log.error("outbound pipe error",c),{maxBufferSize:this.opts.maxOutboundBufferSize});this.log("create outbound stream %p",e),this.streamsOutbound.set(n,o);const a=o.protocol;a===FloodsubID&&this.floodsubPeers.add(n),this.metrics?.peersPerProtocol.inc({protocol:a},1),this.subscriptions.size>0&&(this.log("send subscriptions to",n),this.sendSubscriptions(n,Array.from(this.subscriptions),!0))}catch(o){this.log.error("createOutboundStream error",o)}}async createInboundStream(e,r){if(!this.isStarted())return;const n=e.toString();if(!this.peers.has(n))return;const o=this.streamsInbound.get(n);o!==void 0&&(this.log("replacing existing inbound steam %s",n),o.close()),this.log("create inbound stream %s",n);const a=new InboundStream(r,{maxDataLength:this.opts.maxInboundDataLength});this.streamsInbound.set(n,a),this.pipePeerReadStream(e,a.source).catch(c=>this.log(c))}addPeer(e,r,n){const o=e.toString();if(!this.peers.has(o)){this.log("new peer %p",e),this.peers.add(o),this.score.addPeer(o);const a=multiaddrToIPStr(n);a!==null?this.score.addIP(o,a):this.log("Added peer has no IP in current address %s %s",o,n.toString()),this.outbound.has(o)||this.outbound.set(o,r==="outbound")}}removePeer(e){const r=e.toString();if(!this.peers.has(r))return;this.log("delete peer %p",e),this.peers.delete(r);const n=this.streamsOutbound.get(r),o=this.streamsInbound.get(r);n&&this.metrics?.peersPerProtocol.inc({protocol:n.protocol},-1),n?.close(),o?.close(),this.streamsOutbound.delete(r),this.streamsInbound.delete(r);for(const a of this.topics.values())a.delete(r);for(const[a,c]of this.mesh)c.delete(r)===!0&&this.metrics?.onRemoveFromMesh(a,ChurnReason.Dc,1);for(const a of this.fanout.values())a.delete(r);this.floodsubPeers.delete(r),this.gossip.delete(r),this.control.delete(r),this.outbound.delete(r),this.score.removePeer(r),this.acceptFromWhitelist.delete(r)}get started(){return this.status.code===GossipStatusCode.started}getMeshPeers(e){const r=this.mesh.get(e);return r?Array.from(r):[]}getSubscribers(e){const r=this.topics.get(e);return(r?Array.from(r):[]).map(n=>peerIdFromString$1(n))}getTopics(){return Array.from(this.subscriptions)}async pipePeerReadStream(e,r){try{await pipe$1(r,async n=>{for await(const o of n)try{const a=o.subarray(),c=decodeRpc(a,this.decodeRpcLimits);if(this.metrics?.onRpcRecv(c,a.length),this.opts.awaitRpcHandler)try{await this.handleReceivedRpc(e,c)}catch(u){this.metrics?.onRpcRecvError(),this.log(u)}else this.handleReceivedRpc(e,c).catch(u=>{this.metrics?.onRpcRecvError(),this.log(u)})}catch(a){this.metrics?.onRpcDataError(),this.log(a)}})}catch(n){this.metrics?.onPeerReadStreamError(),this.handlePeerReadStreamError(n,e)}}handlePeerReadStreamError(e,r){this.log.error(e),this.onPeerDisconnected(r)}async handleReceivedRpc(e,r){if(!this.acceptFrom(e.toString())){this.log("received message from unacceptable peer %p",e),this.metrics?.rpcRecvNotAccepted.inc();return}const n=r.subscriptions?r.subscriptions.length:0,o=r.messages?r.messages.length:0;let a=0,c=0,u=0,l=0;if(r.control&&(r.control.ihave&&(a=r.control.ihave.length),r.control.iwant&&(c=r.control.iwant.length),r.control.graft&&(u=r.control.graft.length),r.control.prune&&(l=r.control.prune.length)),this.log(`rpc.from ${e.toString()} subscriptions ${n} messages ${o} ihave ${a} iwant ${c} graft ${u} prune ${l}`),r.subscriptions&&r.subscriptions.length>0){const f=[];r.subscriptions.forEach(p=>{const g=p.topic,$=p.subscribe===!0;if(g!=null){if(this.allowedTopics&&!this.allowedTopics.has(g))return;this.handleReceivedSubscription(e,g,$),f.push({topic:g,subscribe:$})}}),this.dispatchEvent(new CustomEvent("subscription-change",{detail:{peerId:e,subscriptions:f}}))}if(r.messages)for(const f of r.messages){if(this.allowedTopics&&!this.allowedTopics.has(f.topic))continue;const p=this.handleReceivedMessage(e,f).catch(g=>{this.metrics?.onMsgRecvError(f.topic),this.log(g)});this.opts.awaitRpcMessageHandler&&await p}r.control&&await this.handleControlMessage(e.toString(),r.control)}handleReceivedSubscription(e,r,n){this.log("subscription update from %p topic %s",e,r);let o=this.topics.get(r);o==null&&(o=new Set,this.topics.set(r,o)),n?o.add(e.toString()):o.delete(e.toString())}async handleReceivedMessage(e,r){this.metrics?.onMsgRecvPreValidation(r.topic);const n=await this.validateReceivedMessage(e,r);switch(this.metrics?.onMsgRecvResult(r.topic,n.code),n.code){case MessageStatus.duplicate:this.score.duplicateMessage(e.toString(),n.msgIdStr,r.topic),this.gossipTracer.deliverMessage(n.msgIdStr,!0),this.mcache.observeDuplicate(n.msgIdStr,e.toString());return;case MessageStatus.invalid:if(n.msgIdStr){const o=n.msgIdStr;this.score.rejectMessage(e.toString(),o,r.topic,n.reason),this.gossipTracer.rejectMessage(o,n.reason)}else this.score.rejectInvalidMessage(e.toString(),r.topic);this.metrics?.onMsgRecvInvalid(r.topic,n);return;case MessageStatus.valid:this.score.validateMessage(n.messageId.msgIdStr),this.gossipTracer.deliverMessage(n.messageId.msgIdStr),this.mcache.put(n.messageId,r,!this.opts.asyncValidation),this.subscriptions.has(r.topic)&&(!this.components.peerId.equals(e)||this.opts.emitSelf)&&(super.dispatchEvent(new CustomEvent("gossipsub:message",{detail:{propagationSource:e,msgId:n.messageId.msgIdStr,msg:n.msg}})),super.dispatchEvent(new CustomEvent("message",{detail:n.msg}))),this.opts.asyncValidation||this.forwardMessage(n.messageId.msgIdStr,r,e.toString())}}async validateReceivedMessage(e,r){const n=this.fastMsgIdFn?.(r),o=n!==void 0?this.fastMsgIdCache?.get(n):void 0;if(o)return{code:MessageStatus.duplicate,msgIdStr:o};const a=await validateToRawMessage(this.globalSignaturePolicy,r);if(!a.valid)return{code:MessageStatus.invalid,reason:RejectReason.Error,error:a.error};const c=a.message;try{this.dataTransform&&(c.data=this.dataTransform.inboundTransform(r.topic,c.data))}catch(g){return this.log("Invalid message, transform failed",g),{code:MessageStatus.invalid,reason:RejectReason.Error,error:ValidateError.TransformFailed}}const u=await this.msgIdFn(c),l=this.msgIdToStrFn(u),f={msgId:u,msgIdStr:l};if(n!==void 0&&this.fastMsgIdCache&&this.fastMsgIdCache.put(n,l)&&this.metrics?.fastMsgIdCacheCollision.inc(),this.seenCache.has(l))return{code:MessageStatus.duplicate,msgIdStr:l};this.seenCache.put(l);const p=this.topicValidators.get(r.topic);if(p!=null){let g;try{g=await p(e,c)}catch($){const _=$.code;_===ERR_TOPIC_VALIDATOR_IGNORE&&(g=TopicValidatorResult$2.Ignore),_===ERR_TOPIC_VALIDATOR_REJECT?g=TopicValidatorResult$2.Reject:g=TopicValidatorResult$2.Ignore}if(g!==TopicValidatorResult$2.Accept)return{code:MessageStatus.invalid,reason:rejectReasonFromAcceptance(g),msgIdStr:l}}return{code:MessageStatus.valid,messageId:f,msg:c}}getScore(e){return this.score.score(e)}sendSubscriptions(e,r,n){this.sendRpc(e,{subscriptions:r.map(o=>({topic:o,subscribe:n}))})}async handleControlMessage(e,r){if(r===void 0)return;const n=r.ihave?this.handleIHave(e,r.ihave):[],o=r.iwant?this.handleIWant(e,r.iwant):[],a=r.graft?await this.handleGraft(e,r.graft):[];if(r.prune&&await this.handlePrune(e,r.prune),!n.length&&!o.length&&!a.length)return;const c=this.sendRpc(e,{messages:o,control:{iwant:n,prune:a}}),u=n[0]?.messageIDs;u&&(c?this.gossipTracer.addPromise(e,u):this.metrics?.iwantPromiseUntracked.inc(1))}acceptFrom(e){if(this.direct.has(e))return!0;const r=Date.now(),n=this.acceptFromWhitelist.get(e);if(n&&n.messagesAccepted<ACCEPT_FROM_WHITELIST_MAX_MESSAGES&&n.acceptUntil>=r)return n.messagesAccepted+=1,!0;const o=this.score.score(e);return o>=ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE?this.acceptFromWhitelist.set(e,{messagesAccepted:0,acceptUntil:r+ACCEPT_FROM_WHITELIST_DURATION_MS}):this.acceptFromWhitelist.delete(e),o>=this.opts.scoreThresholds.graylistThreshold}handleIHave(e,r){if(!r.length)return[];const n=this.score.score(e);if(n<this.opts.scoreThresholds.gossipThreshold)return this.log("IHAVE: ignoring peer %s with score below threshold [ score = %d ]",e,n),this.metrics?.ihaveRcvIgnored.inc({reason:IHaveIgnoreReason.LowScore}),[];const o=(this.peerhave.get(e)??0)+1;if(this.peerhave.set(e,o),o>GossipsubMaxIHaveMessages)return this.log("IHAVE: peer %s has advertised too many times (%d) within this heartbeat interval; ignoring",e,o),this.metrics?.ihaveRcvIgnored.inc({reason:IHaveIgnoreReason.MaxIhave}),[];const a=this.iasked.get(e)??0;if(a>=GossipsubMaxIHaveLength)return this.log("IHAVE: peer %s has already advertised too many messages (%d); ignoring",e,a),this.metrics?.ihaveRcvIgnored.inc({reason:IHaveIgnoreReason.MaxIasked}),[];const c=new Map;if(r.forEach(({topicID:f,messageIDs:p})=>{if(!f||!p||!this.mesh.has(f))return;let g=0;p.forEach($=>{const _=this.msgIdToStrFn($);this.seenCache.has(_)||(c.set(_,$),g++)}),this.metrics?.onIhaveRcv(f,p.length,g)}),!c.size)return[];let u=c.size;u+a>GossipsubMaxIHaveLength&&(u=GossipsubMaxIHaveLength-a),this.log("IHAVE: Asking for %d out of %d messages from %s",u,c.size,e);let l=Array.from(c.values());return shuffle(l),l=l.slice(0,u),this.iasked.set(e,a+u),[{messageIDs:l}]}handleIWant(e,r){if(!r.length)return[];const n=this.score.score(e);if(n<this.opts.scoreThresholds.gossipThreshold)return this.log("IWANT: ignoring peer %s with score below threshold [score = %d]",e,n),[];const o=new Map,a=new Map;let c=0;return r.forEach(({messageIDs:u})=>{u&&u.forEach(l=>{const f=this.msgIdToStrFn(l),p=this.mcache.getWithIWantCount(f,e);if(p==null){c++;return}if(a.set(p.msg.topic,1+(a.get(p.msg.topic)??0)),p.count>GossipsubGossipRetransmission){this.log("IWANT: Peer %s has asked for message %s too many times: ignoring request",e,l);return}o.set(f,p.msg)})}),this.metrics?.onIwantRcv(a,c),o.size?(this.log("IWANT: Sending %d messages to %s",o.size,e),Array.from(o.values())):(this.log("IWANT: Could not provide any wanted messages to %s",e),[])}async handleGraft(e,r){const n=[],o=this.score.score(e),a=Date.now();let c=this.opts.doPX;return r.forEach(({topicID:u})=>{if(!u)return;const l=this.mesh.get(u);if(!l){c=!1;return}if(l.has(e))return;if(this.direct.has(e)){this.log("GRAFT: ignoring request from direct peer %s",e),n.push(u),c=!1;return}const f=this.backoff.get(u)?.get(e);if(typeof f=="number"&&a<f){this.log("GRAFT: ignoring backed off peer %s",e),this.score.addPenalty(e,1,ScorePenalty.GraftBackoff),c=!1;const p=f+this.opts.graftFloodThreshold-this.opts.pruneBackoff;a<p&&this.score.addPenalty(e,1,ScorePenalty.GraftBackoff),this.addBackoff(e,u),n.push(u);return}if(o<0){this.log("GRAFT: ignoring peer %s with negative score: score=%d, topic=%s",e,o,u),n.push(u),c=!1,this.addBackoff(e,u);return}if(l.size>=this.opts.Dhi&&!this.outbound.get(e)){n.push(u),this.addBackoff(e,u);return}this.log("GRAFT: Add mesh link from %s in %s",e,u),this.score.graft(e,u),l.add(e),this.metrics?.onAddToMesh(u,InclusionReason.Subscribed,1)}),n.length?await Promise.all(n.map(u=>this.makePrune(e,u,c))):[]}async handlePrune(e,r){const n=this.score.score(e);for(const{topicID:o,backoff:a,peers:c}of r){if(o==null)continue;const u=this.mesh.get(o);if(!u)return;if(this.log("PRUNE: Remove mesh link to %s in %s",e,o),this.score.prune(e,o),u.has(e)&&(u.delete(e),this.metrics?.onRemoveFromMesh(o,ChurnReason.Unsub,1)),typeof a=="number"&&a>0?this.doAddBackoff(e,o,a*1e3):this.addBackoff(e,o),c&&c.length){if(n<this.opts.scoreThresholds.acceptPXThreshold){this.log("PRUNE: ignoring PX from peer %s with insufficient score [score = %d, topic = %s]",e,n,o);continue}await this.pxConnect(c)}}}addBackoff(e,r){this.doAddBackoff(e,r,this.opts.pruneBackoff)}doAddBackoff(e,r,n){let o=this.backoff.get(r);o||(o=new Map,this.backoff.set(r,o));const a=Date.now()+n;(o.get(e)??0)<a&&o.set(e,a)}applyIwantPenalties(){this.gossipTracer.getBrokenPromises().forEach((e,r)=>{this.log("peer %s didn't follow up in %d IWANT requests; adding penalty",r,e),this.score.addPenalty(r,e,ScorePenalty.BrokenPromise)})}clearBackoff(){if(this.heartbeatTicks%GossipsubPruneBackoffTicks!==0)return;const e=Date.now();this.backoff.forEach((r,n)=>{r.forEach((o,a)=>{o<e&&r.delete(a)}),r.size===0&&this.backoff.delete(n)})}async directConnect(){const e=[];this.direct.forEach(r=>{this.streamsOutbound.has(r)||e.push(r)}),await Promise.all(e.map(async r=>await this.connect(r)))}async pxConnect(e){e.length>this.opts.prunePeers&&(shuffle(e),e=e.slice(0,this.opts.prunePeers));const r=[];await Promise.all(e.map(async n=>{if(!n.peerID)return;const o=peerIdFromBytes$1(n.peerID).toString();if(!this.peers.has(o)){if(!n.signedPeerRecord){r.push(o);return}try{const a=await RecordEnvelope.openAndCertify(n.signedPeerRecord,"libp2p-peer-record"),c=a.peerId;if(!a.peerId.equals(o)){this.log("bogus peer record obtained through px: peer ID %p doesn't match expected peer %p",c,o);return}if(!await this.components.peerStore.addressBook.consumePeerRecord(a)){this.log("bogus peer record obtained through px: could not add peer record to address book");return}r.push(o)}catch{this.log("bogus peer record obtained through px: invalid signature or not a peer record")}}})),r.length&&await Promise.all(r.map(async n=>await this.connect(n)))}async connect(e){this.log("Initiating connection with %s",e);const r=peerIdFromString$1(e),n=await this.components.connectionManager.openConnection(r);for(const o of this.multicodecs)for(const a of this.components.registrar.getTopologies(o))a.onConnect(r,n)}subscribe(e){if(this.status.code!==GossipStatusCode.started)throw new Error("Pubsub has not started");if(!this.subscriptions.has(e)){this.subscriptions.add(e);for(const r of this.peers.keys())this.sendSubscriptions(r,[e],!0)}this.join(e)}unsubscribe(e){if(this.status.code!==GossipStatusCode.started)throw new Error("Pubsub is not started");const r=this.subscriptions.delete(e);if(this.log("unsubscribe from %s - am subscribed %s",e,r),r)for(const n of this.peers.keys())this.sendSubscriptions(n,[e],!1);this.leave(e)}join(e){if(this.status.code!==GossipStatusCode.started)throw new Error("Gossipsub has not started");if(this.mesh.has(e))return;this.log("JOIN %s",e),this.metrics?.onJoin(e);const r=new Set,n=this.fanout.get(e);if(n&&(this.fanout.delete(e),this.fanoutLastpub.delete(e),n.forEach(o=>{!this.direct.has(o)&&this.score.score(o)>=0&&r.add(o)}),this.metrics?.onAddToMesh(e,InclusionReason.Fanout,r.size)),r.size<this.opts.D){const o=r.size;this.getRandomGossipPeers(e,this.opts.D,a=>!r.has(a)&&!this.direct.has(a)&&this.score.score(a)>=0).forEach(a=>{r.add(a)}),this.metrics?.onAddToMesh(e,InclusionReason.Random,r.size-o)}this.mesh.set(e,r),r.forEach(o=>{this.log("JOIN: Add mesh link to %s in %s",o,e),this.sendGraft(o,e)})}leave(e){if(this.status.code!==GossipStatusCode.started)throw new Error("Gossipsub has not started");this.log("LEAVE %s",e),this.metrics?.onLeave(e);const r=this.mesh.get(e);r&&(Promise.all(Array.from(r).map(async n=>(this.log("LEAVE: Remove mesh link to %s in %s",n,e),await this.sendPrune(n,e)))).catch(n=>{this.log("Error sending prunes to mesh peers",n)}),this.mesh.delete(e))}selectPeersToForward(e,r,n){const o=new Set,a=this.topics.get(e);a&&(this.direct.forEach(u=>{a.has(u)&&r!==u&&!n?.has(u)&&o.add(u)}),this.floodsubPeers.forEach(u=>{a.has(u)&&r!==u&&!n?.has(u)&&this.score.score(u)>=this.opts.scoreThresholds.publishThreshold&&o.add(u)}));const c=this.mesh.get(e);return c&&c.size>0&&c.forEach(u=>{r!==u&&!n?.has(u)&&o.add(u)}),o}selectPeersToPublish(e){const r=new Set,n={direct:0,floodsub:0,mesh:0,fanout:0},o=this.topics.get(e);if(o)if(this.opts.floodPublish)o.forEach(a=>{this.direct.has(a)?(r.add(a),n.direct++):this.score.score(a)>=this.opts.scoreThresholds.publishThreshold&&(r.add(a),n.floodsub++)});else{this.direct.forEach(c=>{o.has(c)&&(r.add(c),n.direct++)}),this.floodsubPeers.forEach(c=>{o.has(c)&&this.score.score(c)>=this.opts.scoreThresholds.publishThreshold&&(r.add(c),n.floodsub++)});const a=this.mesh.get(e);if(a&&a.size>0)a.forEach(c=>{r.add(c),n.mesh++});else{const c=this.fanout.get(e);if(c&&c.size>0)c.forEach(u=>{r.add(u),n.fanout++});else{const u=this.getRandomGossipPeers(e,this.opts.D,l=>this.score.score(l)>=this.opts.scoreThresholds.publishThreshold);u.size>0&&(this.fanout.set(e,u),u.forEach(l=>{r.add(l),n.fanout++}))}this.fanoutLastpub.set(e,Date.now())}}return{tosend:r,tosendCount:n}}forwardMessage(e,r,n,o){n&&this.score.deliverMessage(n,e,r.topic);const a=this.selectPeersToForward(r.topic,n,o);a.forEach(c=>{this.sendRpc(c,{messages:[r]})}),this.metrics?.onForwardMsg(r.topic,a.size)}async publish(e,r,n){const o=this.dataTransform?this.dataTransform.outboundTransform(e,r):r;if(this.publishConfig==null)throw Error("PublishError.Uninitialized");const{raw:a,msg:c}=await buildRawMessage(this.publishConfig,e,r,o),u=await this.msgIdFn(c),l=this.msgIdToStrFn(u),f=n?.ignoreDuplicatePublishError??this.opts.ignoreDuplicatePublishError;if(this.seenCache.has(l)){if(f)return this.metrics?.onPublishDuplicateMsg(e),{recipients:[]};throw Error("PublishError.Duplicate")}const{tosend:p,tosendCount:g}=this.selectPeersToPublish(e),$=this.opts.emitSelf===!0&&this.subscriptions.has(e),_=n?.allowPublishToZeroPeers??this.opts.allowPublishToZeroPeers;if(p.size===0&&!_&&!$)throw Error("PublishError.InsufficientPeers");this.seenCache.put(l),this.mcache.put({msgId:u,msgIdStr:l},a,!0),this.publishedMessageIds.put(l);for(const b of p)this.sendRpc(b,{messages:[a]})||p.delete(b);return this.metrics?.onPublishMsg(e,g,p.size,a.data!=null?a.data.length:0),$&&(p.add(this.components.peerId.toString()),super.dispatchEvent(new CustomEvent("gossipsub:message",{detail:{propagationSource:this.components.peerId,msgId:l,msg:c}})),super.dispatchEvent(new CustomEvent("message",{detail:c}))),{recipients:Array.from(p.values()).map(b=>peerIdFromString$1(b))}}reportMessageValidationResult(e,r,n){if(n===TopicValidatorResult$2.Accept){const o=this.mcache.validate(e);if(this.metrics?.onReportValidationMcacheHit(o!==null),o!=null){const{message:a,originatingPeers:c}=o;this.score.deliverMessage(r.toString(),e,a.topic),this.forwardMessage(e,o.message,r.toString(),c),this.metrics?.onReportValidation(a.topic,n)}}else{const o=this.mcache.remove(e);if(this.metrics?.onReportValidationMcacheHit(o!==null),o){const a=rejectReasonFromAcceptance(n),{message:c,originatingPeers:u}=o;this.score.rejectMessage(r.toString(),e,c.topic,a);for(const l of u)this.score.rejectMessage(l,e,c.topic,a);this.metrics?.onReportValidation(c.topic,n)}}}sendGraft(e,r){const n=[{topicID:r}];this.sendRpc(e,{control:{graft:n}})}async sendPrune(e,r){const n=[await this.makePrune(e,r,this.opts.doPX)];this.sendRpc(e,{control:{prune:n}})}sendRpc(e,r){const n=this.streamsOutbound.get(e);if(!n)return this.log(`Cannot send RPC to ${e} as there is no open stream to it available`),!1;const o=this.control.get(e);o&&(this.piggybackControl(e,r,o),this.control.delete(e));const a=this.gossip.get(e);a&&(this.piggybackGossip(e,r,a),this.gossip.delete(e));const c=RPC$1.encode(r).finish();try{n.push(c)}catch(u){return this.log.error(`Cannot send rpc to ${e}`,u),o&&this.control.set(e,o),a&&this.gossip.set(e,a),!1}return this.metrics?.onRpcSent(r,c.length),!0}piggybackControl(e,r,n){if(n.graft){r.control||(r.control={}),r.control.graft||(r.control.graft=[]);for(const o of n.graft)o.topicID&&this.mesh.get(o.topicID)?.has(e)&&r.control.graft.push(o)}if(n.prune){r.control||(r.control={}),r.control.prune||(r.control.prune=[]);for(const o of n.prune)o.topicID&&!this.mesh.get(o.topicID)?.has(e)&&r.control.prune.push(o)}}piggybackGossip(e,r,n){r.control||(r.control={}),r.control.ihave=n}async sendGraftPrune(e,r,n){const o=this.opts.doPX;for(const[a,c]of e){const u=c.map(p=>({topicID:p}));let l=[];const f=r.get(a);f&&(l=await Promise.all(f.map(async p=>await this.makePrune(a,p,o&&!(n.get(a)??!1)))),r.delete(a)),this.sendRpc(a,{control:{graft:u,prune:l}})}for(const[a,c]of r){const u=await Promise.all(c.map(async l=>await this.makePrune(a,l,o&&!(n.get(a)??!1))));this.sendRpc(a,{control:{prune:u}})}}emitGossip(e){const r=this.mcache.getGossipIDs(new Set(e.keys()));for(const[n,o]of e)this.doEmitGossip(n,o,r.get(n)??[])}doEmitGossip(e,r,n){if(!n.length||(shuffle(n),n.length>GossipsubMaxIHaveLength&&this.log("too many messages for gossip; will truncate IHAVE list (%d messages)",n.length),!r.size))return;let o=this.opts.Dlazy;const a=GossipsubGossipFactor*r.size;let c=r;a>o&&(o=a),o>c.size?o=c.size:c=shuffle(Array.from(c)).slice(0,o),c.forEach(u=>{let l=n;n.length>GossipsubMaxIHaveLength&&(l=shuffle(l.slice()).slice(0,GossipsubMaxIHaveLength)),this.pushGossip(u,{topicID:e,messageIDs:l})})}flush(){for(const[e,r]of this.gossip.entries())this.gossip.delete(e),this.sendRpc(e,{control:{ihave:r}});for(const[e,r]of this.control.entries())this.control.delete(e),this.sendRpc(e,{control:{graft:r.graft,prune:r.prune}})}pushGossip(e,r){this.log("Add gossip to %s",e);const n=this.gossip.get(e)||[];this.gossip.set(e,n.concat(r))}async makePrune(e,r,n){if(this.score.prune(e,r),this.streamsOutbound.get(e).protocol===GossipsubIDv10)return{topicID:r,peers:[]};const o=this.opts.pruneBackoff/1e3;if(!n)return{topicID:r,peers:[],backoff:o};const a=this.getRandomGossipPeers(r,this.opts.prunePeers,u=>u!==e&&this.score.score(u)>=0),c=await Promise.all(Array.from(a).map(async u=>{const l=peerIdFromString$1(u);return{peerID:l.toBytes(),signedPeerRecord:await this.components.peerStore.addressBook.getRawEnvelope(l)}}));return{topicID:r,peers:c,backoff:o}}async heartbeat(){const{D:e,Dlo:r,Dhi:n,Dscore:o,Dout:a,fanoutTTL:c}=this.opts;this.heartbeatTicks++;const u=new Map,l=b=>{let D=u.get(b);return D===void 0&&(D=this.score.score(b),u.set(b,D)),D},f=new Map,p=new Map,g=new Map;this.clearBackoff(),this.peerhave.clear(),this.metrics?.cacheSize.set({cache:"iasked"},this.iasked.size),this.iasked.clear(),this.applyIwantPenalties(),this.heartbeatTicks%this.opts.directConnectTicks===0&&await this.directConnect(),this.fastMsgIdCache?.prune(),this.seenCache.prune(),this.gossipTracer.prune(),this.publishedMessageIds.prune();const $=new Map;this.mesh.forEach((b,D)=>{const v=this.topics.get(D),S=new Set,I=new Set;if($.set(D,I),v){const T=shuffle(Array.from(v)),P=this.backoff.get(D);for(const E of T){const A=this.streamsOutbound.get(E);if(A&&this.multicodecs.includes(A.protocol)&&!b.has(E)&&!this.direct.has(E)){const k=l(E);(!P||!P.has(E))&&k>=0&&S.add(E),k>=this.opts.scoreThresholds.gossipThreshold&&I.add(E)}}}const R=(T,P)=>{this.log("HEARTBEAT: Remove mesh link to %s in %s",T,D),this.addBackoff(T,D),b.delete(T),l(T)>=this.opts.scoreThresholds.gossipThreshold&&I.add(T),this.metrics?.onRemoveFromMesh(D,P,1);const E=p.get(T);E?E.push(D):p.set(T,[D])},C=(T,P)=>{this.log("HEARTBEAT: Add mesh link to %s in %s",T,D),this.score.graft(T,D),b.add(T),I.delete(T),this.metrics?.onAddToMesh(D,P,1);const E=f.get(T);E?E.push(D):f.set(T,[D])};if(b.forEach(T=>{const P=l(T);P<0&&(this.log("HEARTBEAT: Prune peer %s with negative score: score=%d, topic=%s",T,P,D),R(T,ChurnReason.BadScore),g.set(T,!0))}),b.size<r){const T=e-b.size;removeFirstNItemsFromSet(S,T).forEach(P=>{C(P,InclusionReason.NotEnough)})}if(b.size>n){let T=Array.from(b);T.sort((E,A)=>l(A)-l(E)),T=T.slice(0,o).concat(shuffle(T.slice(o)));let P=0;if(T.slice(0,e).forEach(E=>{this.outbound.get(E)&&P++}),P<a){const E=k=>{const O=T[k];for(let M=k;M>0;M--)T[M]=T[M-1];T[0]=O};if(P>0){let k=P;for(let O=1;O<e&&k>0;O++)this.outbound.get(T[O])&&(E(O),k--)}let A=e-P;for(let k=e;k<T.length&&A>0;k++)this.outbound.get(T[k])&&(E(k),A--)}T.slice(e).forEach(E=>{R(E,ChurnReason.Excess)})}if(b.size>=r){let T=0;if(b.forEach(P=>{this.outbound.get(P)&&T++}),T<a){const P=a-T;removeItemsFromSet(S,P,E=>this.outbound.get(E)===!0).forEach(E=>{C(E,InclusionReason.Outbound)})}}if(this.heartbeatTicks%this.opts.opportunisticGraftTicks===0&&b.size>1){const T=Array.from(b).sort((A,k)=>l(A)-l(k)),P=Math.floor(b.size/2),E=l(T[P]);if(E<this.opts.scoreThresholds.opportunisticGraftThreshold){const A=this.opts.opportunisticGraftPeers,k=removeItemsFromSet(S,A,O=>l(O)>E);for(const O of k)this.log("HEARTBEAT: Opportunistically graft peer %s on topic %s",O,D),C(O,InclusionReason.Opportunistic)}}});const _=Date.now();this.fanoutLastpub.forEach((b,D)=>{b+c<_&&(this.fanout.delete(D),this.fanoutLastpub.delete(D))}),this.fanout.forEach((b,D)=>{const v=this.topics.get(D);b.forEach(C=>{(!v.has(C)||l(C)<this.opts.scoreThresholds.publishThreshold)&&b.delete(C)});const S=this.topics.get(D),I=[],R=new Set;if($.set(D,R),S){const C=shuffle(Array.from(S));for(const T of C){const P=this.streamsOutbound.get(T);if(P&&this.multicodecs.includes(P.protocol)&&!b.has(T)&&!this.direct.has(T)){const E=l(T);E>=this.opts.scoreThresholds.publishThreshold&&I.push(T),E>=this.opts.scoreThresholds.gossipThreshold&&R.add(T)}}}if(b.size<e){const C=e-b.size;I.slice(0,C).forEach(T=>{b.add(T),R?.delete(T)})}}),this.emitGossip($),await this.sendGraftPrune(f,p,g),this.flush(),this.mcache.shift(),this.dispatchEvent(new CustomEvent("gossipsub:heartbeat"))}getRandomGossipPeers(e,r,n=()=>!0){const o=this.topics.get(e);if(!o)return new Set;let a=[];return o.forEach(c=>{const u=this.streamsOutbound.get(c);u&&this.multicodecs.includes(u.protocol)&&n(c)&&a.push(c)}),a=shuffle(a),r>0&&a.length>r&&(a=a.slice(0,r)),new Set(a)}onScrapeMetrics(e){e.mcacheSize.set(this.mcache.size),e.mcacheNotValidatedCount.set(this.mcache.notValidatedCount),e.cacheSize.set({cache:"direct"},this.direct.size),e.cacheSize.set({cache:"seenCache"},this.seenCache.size),e.cacheSize.set({cache:"fastMsgIdCache"},this.fastMsgIdCache?.size??0),e.cacheSize.set({cache:"publishedMessageIds"},this.publishedMessageIds.size),e.cacheSize.set({cache:"mcache"},this.mcache.size),e.cacheSize.set({cache:"score"},this.score.size),e.cacheSize.set({cache:"gossipTracer.promises"},this.gossipTracer.size),e.cacheSize.set({cache:"gossipTracer.requests"},this.gossipTracer.requestMsByMsgSize),e.cacheSize.set({cache:"topics"},this.topics.size),e.cacheSize.set({cache:"subscriptions"},this.subscriptions.size),e.cacheSize.set({cache:"mesh"},this.mesh.size),e.cacheSize.set({cache:"fanout"},this.fanout.size),e.cacheSize.set({cache:"peers"},this.peers.size),e.cacheSize.set({cache:"streamsOutbound"},this.streamsOutbound.size),e.cacheSize.set({cache:"streamsInbound"},this.streamsInbound.size),e.cacheSize.set({cache:"acceptFromWhitelist"},this.acceptFromWhitelist.size),e.cacheSize.set({cache:"gossip"},this.gossip.size),e.cacheSize.set({cache:"control"},this.control.size),e.cacheSize.set({cache:"peerhave"},this.peerhave.size),e.cacheSize.set({cache:"outbound"},this.outbound.size);let r=0;for(const c of this.backoff.values())r+=c.size;e.cacheSize.set({cache:"backoff"},r);for(const[c,u]of this.topics)e.topicPeersCount.set({topicStr:c},u.size);for(const[c,u]of this.mesh)e.meshPeerCounts.set({topicStr:c},u.size);const n=[],o=new Map;e.behaviourPenalty.reset();for(const c of this.peers.keys()){const u=this.score.score(c);n.push(u),o.set(c,u),e.behaviourPenalty.observe(this.score.peerStats.get(c)?.behaviourPenalty??0)}e.registerScores(n,this.opts.scoreThresholds),e.registerScorePerMesh(this.mesh,o);const a=computeAllPeersScoreWeights(this.peers.keys(),this.score.peerStats,this.score.params,this.score.peerIPs,e.topicStrToLabel);e.registerScoreWeights(a)}}GossipSub.multicodec=GossipsubIDv11;function gossipsub(t={}){return e=>new GossipSub(e,t)}const routers=()=>({gossipsub:gossipsub({fallbackToFloodsub:!0,emitSelf:!0,maxInboundStreams:64,maxOutboundStreams:128})});function base$d(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$c=base$d,_brrp__multiformats_scope_baseX$a=src$c;const equals$j=(t,e)=>{if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0},coerce$a=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")},fromString$f=t=>new TextEncoder().encode(t),toString$i=t=>new TextDecoder().decode(t);let Encoder$c=class{constructor(t,e,r){this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$c=class{constructor(t,e,r){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$d(this,t)}},ComposedDecoder$a=class{constructor(t){this.decoders=t}or(t){return or$d(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$d=(t,e)=>new ComposedDecoder$a({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});let Codec$a=class{constructor(t,e,r,n){this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$c(t,e,r),this.decoder=new Decoder$c(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};const from$g=({name:t,prefix:e,encode:r,decode:n})=>new Codec$a(t,e,r,n),baseX$a=({prefix:t,name:e,alphabet:r})=>{const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$a(r,e);return from$g({prefix:t,name:e,encode:n,decode:a=>coerce$a(o(a))})},decode$Y=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode$J=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648$a=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from$g({prefix:e,name:t,encode(o){return encode$J(o,n,r)},decode(o){return decode$Y(o,n,r,t)}}),base32$g=rfc4648$a({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),base32upper$7=rfc4648$a({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),base32pad$7=rfc4648$a({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),base32padupper$7=rfc4648$a({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),base32hex$7=rfc4648$a({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),base32hexupper$7=rfc4648$a({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),base32hexpad$7=rfc4648$a({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),base32hexpadupper$7=rfc4648$a({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),base32z$7=rfc4648$a({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),base32$h=Object.freeze(Object.defineProperty({__proto__:null,base32:base32$g,base32hex:base32hex$7,base32hexpad:base32hexpad$7,base32hexpadupper:base32hexpadupper$7,base32hexupper:base32hexupper$7,base32pad:base32pad$7,base32padupper:base32padupper$7,base32upper:base32upper$7,base32z:base32z$7},Symbol.toStringTag,{value:"Module"})),base58btc$9=baseX$a({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),base58flickr$7=baseX$a({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),base58$7=Object.freeze(Object.defineProperty({__proto__:null,base58btc:base58btc$9,base58flickr:base58flickr$7},Symbol.toStringTag,{value:"Module"})),base64$h=rfc4648$a({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),base64pad$8=rfc4648$a({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),base64url$8=rfc4648$a({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),base64urlpad$8=rfc4648$a({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),base64$i=Object.freeze(Object.defineProperty({__proto__:null,base64:base64$h,base64pad:base64pad$8,base64url:base64url$8,base64urlpad:base64urlpad$8},Symbol.toStringTag,{value:"Module"}));debug$1.formatters.b=t=>t==null?"undefined":base58btc$9.baseEncode(t),debug$1.formatters.t=t=>t==null?"undefined":base32$g.baseEncode(t),debug$1.formatters.m=t=>t==null?"undefined":base64$h.baseEncode(t),debug$1.formatters.p=t=>t==null?"undefined":t.toString(),debug$1.formatters.c=t=>t==null?"undefined":t.toString(),debug$1.formatters.k=t=>t==null?"undefined":t.toString(),debug$1.formatters.a=t=>t==null?"undefined":t.toString();function createDisabledLogger$1(t){const e=()=>{};return e.enabled=!1,e.color="",e.diff=0,e.log=()=>{},e.namespace=t,e.destroy=()=>!0,e.extend=()=>e,e}function logger$2(t){let e=createDisabledLogger$1(`${t}:trace`);return debug$1.enabled(`${t}:trace`)&&debug$1.names.map(r=>r.toString()).find(r=>r.includes(":trace"))!=null&&(e=debug$1(`${t}:trace`)),Object.assign(debug$1(t),{error:debug$1(`${t}:error`),trace:e})}const symbol$c=Symbol.for("@libp2p/peer-id"),base10$g=baseX$a({prefix:"9",name:"base10",alphabet:"0123456789"}),base10$h=Object.freeze(Object.defineProperty({__proto__:null,base10:base10$g},Symbol.toStringTag,{value:"Module"})),base16$g=rfc4648$a({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),base16upper$8=rfc4648$a({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),base16$h=Object.freeze(Object.defineProperty({__proto__:null,base16:base16$g,base16upper:base16upper$8},Symbol.toStringTag,{value:"Module"})),base2$g=rfc4648$a({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),base2$h=Object.freeze(Object.defineProperty({__proto__:null,base2:base2$g},Symbol.toStringTag,{value:"Module"})),alphabet$9=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),alphabetBytesToChars$8=alphabet$9.reduce((t,e,r)=>(t[r]=e,t),[]),alphabetCharsToBytes$8=alphabet$9.reduce((t,e,r)=>(t[e.codePointAt(0)]=r,t),[]);function encode$I(t){return t.reduce((e,r)=>(e+=alphabetBytesToChars$8[r],e),"")}function decode$X(t){const e=[];for(const r of t){const n=alphabetCharsToBytes$8[r.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${r}`);e.push(n)}return new Uint8Array(e)}const base256emoji$g=from$g({prefix:"\u{1F680}",name:"base256emoji",encode:encode$I,decode:decode$X}),base256emoji$h=Object.freeze(Object.defineProperty({__proto__:null,base256emoji:base256emoji$g},Symbol.toStringTag,{value:"Module"})),base36$g=baseX$a({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),base36upper$8=baseX$a({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),base36$h=Object.freeze(Object.defineProperty({__proto__:null,base36:base36$g,base36upper:base36upper$8},Symbol.toStringTag,{value:"Module"})),base8$g=rfc4648$a({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),base8$h=Object.freeze(Object.defineProperty({__proto__:null,base8:base8$g},Symbol.toStringTag,{value:"Module"})),identity$b=from$g({prefix:"\0",name:"identity",encode:t=>toString$i(t),decode:t=>fromString$f(t)}),identityBase$8=Object.freeze(Object.defineProperty({__proto__:null,identity:identity$b},Symbol.toStringTag,{value:"Module"}));new TextEncoder,new TextDecoder;var encode_1$a=encode$H,MSB$f=128,REST$f=127,MSBALL$a=~REST$f,INT$a=Math.pow(2,31);function encode$H(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$a;)e[r++]=t&255|MSB$f,t/=128;for(;t&MSBALL$a;)e[r++]=t&255|MSB$f,t>>>=7;return e[r]=t|0,encode$H.bytes=r-n+1,e}var decode$W=read$b,MSB$1$a=128,REST$1$a=127;function read$b(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$b.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$a)<<o:(c&REST$1$a)*Math.pow(2,o),o+=7}while(c>=MSB$1$a);return read$b.bytes=a-n,r}var N1$d=Math.pow(2,7),N2$d=Math.pow(2,14),N3$d=Math.pow(2,21),N4$d=Math.pow(2,28),N5$d=Math.pow(2,35),N6$d=Math.pow(2,42),N7$d=Math.pow(2,49),N8$a=Math.pow(2,56),N9$a=Math.pow(2,63),length$b=function(t){return t<N1$d?1:t<N2$d?2:t<N3$d?3:t<N4$d?4:t<N5$d?5:t<N6$d?6:t<N7$d?7:t<N8$a?8:t<N9$a?9:10},varint$b={encode:encode_1$a,decode:decode$W,encodingLength:length$b},_brrp_varint$9=varint$b;const decode$V=(t,e=0)=>[_brrp_varint$9.decode(t,e),_brrp_varint$9.decode.bytes],encodeTo$9=(t,e,r=0)=>(_brrp_varint$9.encode(t,e,r),e),encodingLength$c=t=>_brrp_varint$9.encodingLength(t),create$c=(t,e)=>{const r=e.byteLength,n=encodingLength$c(t),o=n+encodingLength$c(r),a=new Uint8Array(o+r);return encodeTo$9(t,a,0),encodeTo$9(r,a,n),a.set(e,o),new Digest$9(t,r,e,a)},decode$U=t=>{const e=coerce$a(t),[r,n]=decode$V(e),[o,a]=decode$V(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$9(r,o,c,e)},equals$i=(t,e)=>{if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$j(t.bytes,r.bytes)}};let Digest$9=class{constructor(t,e,r,n){this.code=t,this.size=e,this.digest=r,this.bytes=n}};const code$3=0,name$4="identity",encode$G=coerce$a,digest$1=t=>create$c(code$3,encode$G(t)),identity$a={code:code$3,name:name$4,encode:encode$G,digest:digest$1},from$f=({name:t,code:e,encode:r})=>new Hasher$5(t,e,r);let Hasher$5=class{constructor(t,e,r){this.name=t,this.code=e,this.encode=r}digest(t){if(t instanceof Uint8Array){const e=this.encode(t);return e instanceof Uint8Array?create$c(this.code,e):e.then(r=>create$c(this.code,r))}else throw Error("Unknown type, must be binary type")}};const sha$5=t=>async e=>new Uint8Array(await crypto.subtle.digest(t,e)),sha256$6=from$f({name:"sha2-256",code:18,encode:sha$5("SHA-256")}),format$8=(t,e)=>{const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$8(r,baseCache$8(t),e||base58btc$9.encoder);default:return toStringV1$8(r,baseCache$8(t),e||base32$g.encoder)}},cache$a=new WeakMap,baseCache$8=t=>{const e=cache$a.get(t);if(e==null){const r=new Map;return cache$a.set(t,r),r}return e};let CID$8=class Ke{constructor(e,r,n,o){this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$8)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$8)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return Ke.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$c(e,r);return Ke.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return Ke.equals(this,e)}static equals(e,r){const n=r;return n&&e.code===n.code&&e.version===n.version&&equals$i(e.multihash,n.multihash)}toString(e){return format$8(this,e)}toJSON(){return{"/":format$8(this)}}link(){return this}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof Ke)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new Ke(n,o,a,c||encodeCID$9(n,o,a.bytes))}else if(r[cidSymbol$8]===!0){const{version:n,multihash:o,code:a}=r,c=decode$U(o);return Ke.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$8)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$8}) block encoding`);return new Ke(e,r,n,n.bytes)}case 1:{const o=encodeCID$9(e,r,n.bytes);return new Ke(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return Ke.create(0,DAG_PB_CODE$8,e)}static createV1(e,r){return Ke.create(1,e,r)}static decode(e){const[r,n]=Ke.decodeFirst(e);if(n.length)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=Ke.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$a(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$9(r.multihashCode,r.digestSize,a,o);return[r.version===0?Ke.createV0(c):Ke.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$V(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$8;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$8(e,r),a=Ke.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$8(a).set(n,e),a}};const parseCIDtoBytes$8=(t,e)=>{switch(t[0]){case"Q":{const r=e||base58btc$9;return[base58btc$9.prefix,r.decode(`${base58btc$9.prefix}${t}`)]}case base58btc$9.prefix:{const r=e||base58btc$9;return[base58btc$9.prefix,r.decode(t)]}case base32$g.prefix:{const r=e||base32$g;return[base32$g.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}},toStringV0$8=(t,e,r)=>{const{prefix:n}=r;if(n!==base58btc$9.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o},toStringV1$8=(t,e,r)=>{const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o},DAG_PB_CODE$8=112,SHA_256_CODE$8=18,encodeCID$9=(t,e,r)=>{const n=encodingLength$c(t),o=n+encodingLength$c(e),a=new Uint8Array(o+r.byteLength);return encodeTo$9(t,a,0),encodeTo$9(e,a,n),a.set(r,o),a},cidSymbol$8=Symbol.for("@ipld/js-cid/CID"),bases$8={...identityBase$8,...base2$h,...base8$h,...base10$h,...base16$h,...base32$h,...base36$h,...base58$7,...base64$i,...base256emoji$h},inspect$8=Symbol.for("nodejs.util.inspect.custom"),baseDecoder=Object.values(bases$8).map(t=>t.decoder).reduce((t,e)=>t.or(e),bases$8.identity.decoder),LIBP2P_KEY_CODE=114,MARSHALLED_ED225519_PUBLIC_KEY_LENGTH=36,MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH=37;class PeerIdImpl{constructor(e){N(this,"type");N(this,"multihash");N(this,"privateKey");N(this,"publicKey");N(this,"string");N(this,Vr,!0);this.type=e.type,this.multihash=e.multihash,this.privateKey=e.privateKey,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}toString(){return this.string==null&&(this.string=base58btc$9.encode(this.multihash.bytes).slice(1)),this.string}toCID(){return CID$8.createV1(LIBP2P_KEY_CODE,this.multihash)}toBytes(){return this.multihash.bytes}toJSON(){return this.toString()}equals(e){if(e instanceof Uint8Array)return equals$R(this.multihash.bytes,e);if(typeof e=="string")return peerIdFromString(e).equals(this);if(e?.multihash?.bytes!=null)return equals$R(this.multihash.bytes,e.multihash.bytes);throw new Error("not valid Id")}[(Vr=symbol$c,inspect$8)](){return`PeerId(${this.toString()})`}}class RSAPeerIdImpl extends PeerIdImpl{constructor(r){super({...r,type:"RSA"});N(this,"type","RSA");N(this,"publicKey");this.publicKey=r.publicKey}}class Ed25519PeerIdImpl extends PeerIdImpl{constructor(r){super({...r,type:"Ed25519"});N(this,"type","Ed25519");N(this,"publicKey");this.publicKey=r.multihash.digest}}class Secp256k1PeerIdImpl extends PeerIdImpl{constructor(r){super({...r,type:"secp256k1"});N(this,"type","secp256k1");N(this,"publicKey");this.publicKey=r.multihash.digest}}function peerIdFromString(t,e){if(t.charAt(0)==="1"||t.charAt(0)==="Q"){const r=decode$U(base58btc$9.decode(`z${t}`));return t.startsWith("12D")?new Ed25519PeerIdImpl({multihash:r}):t.startsWith("16U")?new Secp256k1PeerIdImpl({multihash:r}):new RSAPeerIdImpl({multihash:r})}return peerIdFromBytes(baseDecoder.decode(t))}function peerIdFromBytes(t){try{const e=decode$U(t);if(e.code===identity$a.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH)return new Ed25519PeerIdImpl({multihash:e});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH)return new Secp256k1PeerIdImpl({multihash:e})}if(e.code===sha256$6.code)return new RSAPeerIdImpl({multihash:e})}catch{return peerIdFromCID(CID$8.decode(t))}throw new Error("Supplied PeerID CID is invalid")}function peerIdFromCID(t){if(t==null||t.multihash==null||t.version==null||t.version===1&&t.code!==LIBP2P_KEY_CODE)throw new Error("Supplied PeerID CID is invalid");const e=t.multihash;if(e.code===sha256$6.code)return new RSAPeerIdImpl({multihash:t.multihash});if(e.code===identity$a.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH)return new Ed25519PeerIdImpl({multihash:t.multihash});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH)return new Secp256k1PeerIdImpl({multihash:t.multihash})}throw new Error("Supplied PeerID CID is invalid")}function anySignal$2(t){const e=new globalThis.AbortController;function r(){e.abort();for(const a of t)a?.removeEventListener!=null&&a.removeEventListener("abort",r)}for(const a of t){if(a?.aborted===!0){r();break}a?.addEventListener!=null&&a.addEventListener("abort",r)}function n(){for(const a of t)a?.removeEventListener!=null&&a.removeEventListener("abort",r)}const o=e.signal;return o.clear=n,o}const log$X=logger$2("libp2p:delegated-peer-routing"),DEFAULT_TIMEOUT$1=3e4,CONCURRENT_HTTP_REQUESTS$1=4;var EventTypes$1;(function(t){t[t.SENDING_QUERY=0]="SENDING_QUERY",t[t.PEER_RESPONSE=1]="PEER_RESPONSE",t[t.FINAL_PEER=2]="FINAL_PEER",t[t.QUERY_ERROR=3]="QUERY_ERROR",t[t.PROVIDER=4]="PROVIDER",t[t.VALUE=5]="VALUE",t[t.ADDING_PEER=6]="ADDING_PEER",t[t.DIALING_PEER=7]="DIALING_PEER"})(EventTypes$1||(EventTypes$1={}));var MessageType$1;(function(t){t[t.PUT_VALUE=0]="PUT_VALUE",t[t.GET_VALUE=1]="GET_VALUE",t[t.ADD_PROVIDER=2]="ADD_PROVIDER",t[t.GET_PROVIDERS=3]="GET_PROVIDERS",t[t.FIND_NODE=4]="FIND_NODE",t[t.PING=5]="PING"})(MessageType$1||(MessageType$1={}));class DelegatedPeerRouting{constructor(e){N(this,"client");N(this,"httpQueue");N(this,"started");N(this,"abortController");if(e==null)throw new Error("missing ipfs http client");this.client=e,this.started=!1,this.abortController=new AbortController,this.httpQueue=new PQueue$1({concurrency:CONCURRENT_HTTP_REQUESTS$1});const{protocol:r,host:n,port:o}=e.getEndpointConfig();log$X(`enabled DelegatedPeerRouting via ${r}://${n}:${o}`)}isStarted(){return this.started}start(){this.started=!0}stop(){this.httpQueue.clear(),this.abortController.abort(),this.abortController=new AbortController,this.started=!1}async findPeer(e,r={}){log$X("findPeer starts: %p",e),r.timeout=r.timeout??DEFAULT_TIMEOUT$1;const n=anySignal$2([this.abortController.signal,r.signal]),o=pDefer$1(),a=pDefer$1();this.httpQueue.add(async()=>(o.resolve(),a.promise));try{await o.promise;for await(const c of this.client.dht.findPeer(e,{...r,signal:n}))if(c.name==="FINAL_PEER"&&c.peer.multiaddrs.length>0)return{id:c.peer.id,multiaddrs:c.peer.multiaddrs,protocols:[]};throw new CodeError$4("Not found","ERR_NOT_FOUND")}catch(c){throw log$X.error("findPeer errored: %o",c),c}finally{n.clear(),a.resolve(),log$X("findPeer finished: %p",e)}}async*getClosestPeers(e,r={}){let n;const o=CID$8.asCID(e);o!=null?n=o:n=peerIdFromBytes(e),log$X("getClosestPeers starts: %s",n),r.timeout=r.timeout??DEFAULT_TIMEOUT$1;const a=anySignal$2([this.abortController.signal,r.signal]),c=pDefer$1(),u=pDefer$1();this.httpQueue.add(async()=>(c.resolve(),u.promise));try{await c.promise;for await(const l of this.client.dht.query(n,{...r,signal:a}))l.name==="PEER_RESPONSE"&&(yield*l.closer.map(f=>({id:f.id,multiaddrs:f.multiaddrs,protocols:[]})))}catch(l){throw log$X.error("getClosestPeers errored:",l),l}finally{a.clear(),u.resolve(),log$X("getClosestPeers finished: %b",e)}}}function delegatedPeerRouting(t){return()=>new DelegatedPeerRouting(t)}function base$c(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$b=base$c,_brrp__multiformats_scope_baseX$9=src$b;const coerce$9=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")};let Encoder$b=class{constructor(t,e,r){this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$b=class{constructor(t,e,r){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$c(this,t)}},ComposedDecoder$9=class{constructor(t){this.decoders=t}or(t){return or$c(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$c=(t,e)=>new ComposedDecoder$9({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});let Codec$9=class{constructor(t,e,r,n){this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$b(t,e,r),this.decoder=new Decoder$b(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};const from$e=({name:t,prefix:e,encode:r,decode:n})=>new Codec$9(t,e,r,n),baseX$9=({prefix:t,name:e,alphabet:r})=>{const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$9(r,e);return from$e({prefix:t,name:e,encode:n,decode:a=>coerce$9(o(a))})},decode$T=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode$F=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648$9=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from$e({prefix:e,name:t,encode(o){return encode$F(o,n,r)},decode(o){return decode$T(o,n,r,t)}}),base32$f=rfc4648$9({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5});rfc4648$9({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),rfc4648$9({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),rfc4648$9({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),rfc4648$9({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),rfc4648$9({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),rfc4648$9({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),rfc4648$9({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),rfc4648$9({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});const base58btc$8=baseX$9({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"});baseX$9({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});const base64$g=rfc4648$9({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6});rfc4648$9({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),rfc4648$9({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),rfc4648$9({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),debug$1.formatters.b=t=>t==null?"undefined":base58btc$8.baseEncode(t),debug$1.formatters.t=t=>t==null?"undefined":base32$f.baseEncode(t),debug$1.formatters.m=t=>t==null?"undefined":base64$g.baseEncode(t),debug$1.formatters.p=t=>t==null?"undefined":t.toString(),debug$1.formatters.c=t=>t==null?"undefined":t.toString(),debug$1.formatters.k=t=>t==null?"undefined":t.toString(),debug$1.formatters.a=t=>t==null?"undefined":t.toString();function createDisabledLogger(t){const e=()=>{};return e.enabled=!1,e.color="",e.diff=0,e.log=()=>{},e.namespace=t,e.destroy=()=>!0,e.extend=()=>e,e}function logger$1(t){let e=createDisabledLogger(`${t}:trace`);return debug$1.enabled(`${t}:trace`)&&debug$1.names.map(r=>r.toString()).find(r=>r.includes(":trace"))!=null&&(e=debug$1(`${t}:trace`)),Object.assign(debug$1(t),{error:debug$1(`${t}:error`),trace:e})}function anySignal$1(t){const e=new globalThis.AbortController;function r(){e.abort();for(const a of t)a?.removeEventListener!=null&&a.removeEventListener("abort",r)}for(const a of t){if(a?.aborted===!0){r();break}a?.addEventListener!=null&&a.addEventListener("abort",r)}function n(){for(const a of t)a?.removeEventListener!=null&&a.removeEventListener("abort",r)}const o=e.signal;return o.clear=n,o}function isAsyncIterable$4(t){return t[Symbol.asyncIterator]!=null}function drain(t){if(isAsyncIterable$4(t))return(async()=>{for await(const e of t);})();for(const e of t);}const log$W=logger$1("libp2p:delegated-content-routing"),DEFAULT_TIMEOUT=3e4,CONCURRENT_HTTP_REQUESTS=4,CONCURRENT_HTTP_REFS_REQUESTS=2;var EventTypes;(function(t){t[t.SENDING_QUERY=0]="SENDING_QUERY",t[t.PEER_RESPONSE=1]="PEER_RESPONSE",t[t.FINAL_PEER=2]="FINAL_PEER",t[t.QUERY_ERROR=3]="QUERY_ERROR",t[t.PROVIDER=4]="PROVIDER",t[t.VALUE=5]="VALUE",t[t.ADDING_PEER=6]="ADDING_PEER",t[t.DIALING_PEER=7]="DIALING_PEER"})(EventTypes||(EventTypes={}));var MessageType;(function(t){t[t.PUT_VALUE=0]="PUT_VALUE",t[t.GET_VALUE=1]="GET_VALUE",t[t.ADD_PROVIDER=2]="ADD_PROVIDER",t[t.GET_PROVIDERS=3]="GET_PROVIDERS",t[t.FIND_NODE=4]="FIND_NODE",t[t.PING=5]="PING"})(MessageType||(MessageType={}));class DelegatedContentRouting{constructor(e){N(this,"client");N(this,"httpQueue");N(this,"httpQueueRefs");N(this,"started");N(this,"abortController");if(e==null)throw new Error("missing ipfs http client");this.client=e,this.started=!1,this.abortController=new AbortController,this.httpQueue=new PQueue$1({concurrency:CONCURRENT_HTTP_REQUESTS}),this.httpQueueRefs=new PQueue$1({concurrency:CONCURRENT_HTTP_REFS_REQUESTS});const{protocol:r,host:n,port:o}=e.getEndpointConfig();log$W(`enabled DelegatedContentRouting via ${r}://${n}:${o}`)}isStarted(){return this.started}start(){this.started=!0}stop(){this.httpQueue.clear(),this.httpQueueRefs.clear(),this.abortController.abort(),this.abortController=new AbortController,this.started=!1}async*findProviders(e,r={}){log$W("findProviders starts: %c",e),r.timeout=r.timeout??DEFAULT_TIMEOUT;const n=anySignal$1([this.abortController.signal,r.signal]),o=pDefer$1(),a=pDefer$1();this.httpQueue.add(async()=>(o.resolve(),a.promise));try{await o.promise;for await(const c of this.client.dht.findProvs(e,{...r,signal:n}))c.name==="PROVIDER"&&(yield*c.providers.map(u=>({id:u.id,protocols:[],multiaddrs:u.multiaddrs})))}catch(c){throw log$W.error("findProviders errored:",c),c}finally{n.clear(),a.resolve(),log$W("findProviders finished: %c",e)}}async provide(e,r={}){log$W("provide starts: %c",e),r.timeout=r.timeout??DEFAULT_TIMEOUT;const n=anySignal$1([this.abortController.signal,r.signal]),o=pDefer$1(),a=pDefer$1();this.httpQueue.add(async()=>(o.resolve(),a.promise));try{await o.promise,await this.client.block.stat(e,{...r,signal:n}),await drain(this.client.dht.provide(e,{...r,signal:n}))}catch(c){throw log$W.error("provide errored:",c),c}finally{n.clear(),a.resolve(),log$W("provide finished: %c",e)}}async put(e,r,n={}){log$W("put value start: %b",e),n.timeout=n.timeout??DEFAULT_TIMEOUT;const o=anySignal$1([this.abortController.signal,n.signal]),a=pDefer$1(),c=pDefer$1();this.httpQueue.add(async()=>(a.resolve(),c.promise));try{await a.promise,await drain(this.client.dht.put(e,r,{...n,signal:o}))}catch(u){throw log$W.error("put errored:",u),u}finally{o.clear(),c.resolve(),log$W("put finished: %b",e)}}async get(e,r={}){log$W("get value start: %b",e),r.timeout=r.timeout??DEFAULT_TIMEOUT;const n=anySignal$1([this.abortController.signal,r.signal]),o=pDefer$1(),a=pDefer$1();this.httpQueue.add(async()=>(o.resolve(),a.promise));try{await o.promise;for await(const c of this.client.dht.get(e,{...r,signal:n}))if(c.name==="VALUE")return log$W("get value finished: %b",e),c.value;throw errcode(new Error("Not found"),"ERR_NOT_FOUND")}catch(c){throw log$W.error("put errored:",c),c}finally{n.clear(),a.resolve(),log$W("put finished: %b",e)}}}function delegatedContentRouting(t){return()=>new DelegatedContentRouting(t)}const LOAD_BASE=t=>Promise.reject(new Error(`No base found for "${t}"`));class Multibases{constructor(e){this._basesByName={},this._basesByPrefix={},this._loadBase=e.loadBase||LOAD_BASE;for(const r of e.bases)this.addBase(r)}addBase(e){if(this._basesByName[e.name]||this._basesByPrefix[e.prefix])throw new Error(`Codec already exists for codec "${e.name}"`);this._basesByName[e.name]=e,this._basesByPrefix[e.prefix]=e}removeBase(e){delete this._basesByName[e.name],delete this._basesByPrefix[e.prefix]}async getBase(e){if(this._basesByName[e])return this._basesByName[e];if(this._basesByPrefix[e])return this._basesByPrefix[e];const r=await this._loadBase(e);return this._basesByName[r.name]==null&&this._basesByPrefix[r.prefix]==null&&this.addBase(r),r}listBases(){return Object.values(this._basesByName)}}const LOAD_CODEC=t=>Promise.reject(new Error(`No codec found for "${t}"`));class Multicodecs{constructor(e){this._codecsByName={},this._codecsByCode={},this._loadCodec=e.loadCodec||LOAD_CODEC;for(const r of e.codecs)this.addCodec(r)}addCodec(e){if(this._codecsByName[e.name]||this._codecsByCode[e.code])throw new Error(`Resolver already exists for codec "${e.name}"`);this._codecsByName[e.name]=e,this._codecsByCode[e.code]=e}removeCodec(e){delete this._codecsByName[e.name],delete this._codecsByCode[e.code]}async getCodec(e){const r=typeof e=="string"?this._codecsByName:this._codecsByCode;if(r[e])return r[e];const n=await this._loadCodec(e);return r[e]==null&&this.addCodec(n),n}listCodecs(){return Object.values(this._codecsByName)}}const LOAD_HASHER=t=>Promise.reject(new Error(`No hasher found for "${t}"`));class Multihashes{constructor(e){this._hashersByName={},this._hashersByCode={},this._loadHasher=e.loadHasher||LOAD_HASHER;for(const r of e.hashers)this.addHasher(r)}addHasher(e){if(this._hashersByName[e.name]||this._hashersByCode[e.code])throw new Error(`Resolver already exists for codec "${e.name}"`);this._hashersByName[e.name]=e,this._hashersByCode[e.code]=e}removeHasher(e){delete this._hashersByName[e.name],delete this._hashersByCode[e.code]}async getHasher(e){const r=typeof e=="string"?this._hashersByName:this._hashersByCode;if(r[e])return r[e];const n=await this._loadHasher(e);return r[e]==null&&this.addHasher(n),n}listHashers(){return Object.values(this._hashersByName)}}const equals$h=(t,e)=>{if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0},coerce$8=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")},fromString$e=t=>new TextEncoder().encode(t),toString$h=t=>new TextDecoder().decode(t);var encode_1$9=encode$E,MSB$e=128,REST$e=127,MSBALL$9=~REST$e,INT$9=Math.pow(2,31);function encode$E(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$9;)e[r++]=t&255|MSB$e,t/=128;for(;t&MSBALL$9;)e[r++]=t&255|MSB$e,t>>>=7;return e[r]=t|0,encode$E.bytes=r-n+1,e}var decode$S=read$a,MSB$1$9=128,REST$1$9=127;function read$a(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$a.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$9)<<o:(c&REST$1$9)*Math.pow(2,o),o+=7}while(c>=MSB$1$9);return read$a.bytes=a-n,r}var N1$c=Math.pow(2,7),N2$c=Math.pow(2,14),N3$c=Math.pow(2,21),N4$c=Math.pow(2,28),N5$c=Math.pow(2,35),N6$c=Math.pow(2,42),N7$c=Math.pow(2,49),N8$9=Math.pow(2,56),N9$9=Math.pow(2,63),length$a=function(t){return t<N1$c?1:t<N2$c?2:t<N3$c?3:t<N4$c?4:t<N5$c?5:t<N6$c?6:t<N7$c?7:t<N8$9?8:t<N9$9?9:10},varint$a={encode:encode_1$9,decode:decode$S,encodingLength:length$a},_brrp_varint$8=varint$a;const decode$R=(t,e=0)=>[_brrp_varint$8.decode(t,e),_brrp_varint$8.decode.bytes],encodeTo$8=(t,e,r=0)=>(_brrp_varint$8.encode(t,e,r),e),encodingLength$b=t=>_brrp_varint$8.encodingLength(t),create$b=(t,e)=>{const r=e.byteLength,n=encodingLength$b(t),o=n+encodingLength$b(r),a=new Uint8Array(o+r);return encodeTo$8(t,a,0),encodeTo$8(r,a,n),a.set(e,o),new Digest$8(t,r,e,a)},decode$Q=t=>{const e=coerce$8(t),[r,n]=decode$R(e),[o,a]=decode$R(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$8(r,o,c,e)},equals$g=(t,e)=>{if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$h(t.bytes,r.bytes)}};let Digest$8=class{constructor(t,e,r,n){this.code=t,this.size=e,this.digest=r,this.bytes=n}};const code$2=0,name$3="identity",encode$D=coerce$8,digest=t=>create$b(code$2,encode$D(t)),identity$8={code:code$2,name:name$3,encode:encode$D,digest},identity$9=Object.freeze(Object.defineProperty({__proto__:null,identity:identity$8},Symbol.toStringTag,{value:"Module"}));function base$b(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$a=base$b,_brrp__multiformats_scope_baseX$8=src$a;let Encoder$a=class{constructor(t,e,r){this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$a=class{constructor(t,e,r){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$b(this,t)}},ComposedDecoder$8=class{constructor(t){this.decoders=t}or(t){return or$b(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$b=(t,e)=>new ComposedDecoder$8({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});let Codec$8=class{constructor(t,e,r,n){this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$a(t,e,r),this.decoder=new Decoder$a(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};const from$d=({name:t,prefix:e,encode:r,decode:n})=>new Codec$8(t,e,r,n),baseX$8=({prefix:t,name:e,alphabet:r})=>{const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$8(r,e);return from$d({prefix:t,name:e,encode:n,decode:a=>coerce$8(o(a))})},decode$P=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode$C=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648$8=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from$d({prefix:e,name:t,encode(o){return encode$C(o,n,r)},decode(o){return decode$P(o,n,r,t)}}),identity$7=from$d({prefix:"\0",name:"identity",encode:t=>toString$h(t),decode:t=>fromString$e(t)}),identityBase$7=Object.freeze(Object.defineProperty({__proto__:null,identity:identity$7},Symbol.toStringTag,{value:"Module"})),base2$e=rfc4648$8({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),base2$f=Object.freeze(Object.defineProperty({__proto__:null,base2:base2$e},Symbol.toStringTag,{value:"Module"})),base8$e=rfc4648$8({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),base8$f=Object.freeze(Object.defineProperty({__proto__:null,base8:base8$e},Symbol.toStringTag,{value:"Module"})),base10$e=baseX$8({prefix:"9",name:"base10",alphabet:"0123456789"}),base10$f=Object.freeze(Object.defineProperty({__proto__:null,base10:base10$e},Symbol.toStringTag,{value:"Module"})),base16$e=rfc4648$8({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),base16upper$7=rfc4648$8({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),base16$f=Object.freeze(Object.defineProperty({__proto__:null,base16:base16$e,base16upper:base16upper$7},Symbol.toStringTag,{value:"Module"})),base32$d=rfc4648$8({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),base32upper$6=rfc4648$8({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),base32pad$6=rfc4648$8({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),base32padupper$6=rfc4648$8({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),base32hex$6=rfc4648$8({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),base32hexupper$6=rfc4648$8({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),base32hexpad$6=rfc4648$8({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),base32hexpadupper$6=rfc4648$8({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),base32z$6=rfc4648$8({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),base32$e=Object.freeze(Object.defineProperty({__proto__:null,base32:base32$d,base32hex:base32hex$6,base32hexpad:base32hexpad$6,base32hexpadupper:base32hexpadupper$6,base32hexupper:base32hexupper$6,base32pad:base32pad$6,base32padupper:base32padupper$6,base32upper:base32upper$6,base32z:base32z$6},Symbol.toStringTag,{value:"Module"})),base36$e=baseX$8({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),base36upper$7=baseX$8({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),base36$f=Object.freeze(Object.defineProperty({__proto__:null,base36:base36$e,base36upper:base36upper$7},Symbol.toStringTag,{value:"Module"})),base58btc$7=baseX$8({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),base58flickr$6=baseX$8({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),base58$6=Object.freeze(Object.defineProperty({__proto__:null,base58btc:base58btc$7,base58flickr:base58flickr$6},Symbol.toStringTag,{value:"Module"})),base64$e=rfc4648$8({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),base64pad$7=rfc4648$8({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),base64url$7=rfc4648$8({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),base64urlpad$7=rfc4648$8({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),base64$f=Object.freeze(Object.defineProperty({__proto__:null,base64:base64$e,base64pad:base64pad$7,base64url:base64url$7,base64urlpad:base64urlpad$7},Symbol.toStringTag,{value:"Module"})),alphabet$8=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),alphabetBytesToChars$7=alphabet$8.reduce((t,e,r)=>(t[r]=e,t),[]),alphabetCharsToBytes$7=alphabet$8.reduce((t,e,r)=>(t[e.codePointAt(0)]=r,t),[]);function encode$B(t){return t.reduce((e,r)=>(e+=alphabetBytesToChars$7[r],e),"")}function decode$O(t){const e=[];for(const r of t){const n=alphabetCharsToBytes$7[r.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${r}`);e.push(n)}return new Uint8Array(e)}const base256emoji$e=from$d({prefix:"\u{1F680}",name:"base256emoji",encode:encode$B,decode:decode$O}),base256emoji$f=Object.freeze(Object.defineProperty({__proto__:null,base256emoji:base256emoji$e},Symbol.toStringTag,{value:"Module"})),from$c=({name:t,code:e,encode:r})=>new Hasher$4(t,e,r);let Hasher$4=class{constructor(t,e,r){this.name=t,this.code=e,this.encode=r}digest(t){if(t instanceof Uint8Array){const e=this.encode(t);return e instanceof Uint8Array?create$b(this.code,e):e.then(r=>create$b(this.code,r))}else throw Error("Unknown type, must be binary type")}};const sha$4=t=>async e=>new Uint8Array(await crypto.subtle.digest(t,e)),sha256$5=from$c({name:"sha2-256",code:18,encode:sha$4("SHA-256")}),sha512=from$c({name:"sha2-512",code:19,encode:sha$4("SHA-512")}),sha2=Object.freeze(Object.defineProperty({__proto__:null,sha256:sha256$5,sha512},Symbol.toStringTag,{value:"Module"})),name$2="raw",code$1=85,encode$A=t=>coerce$8(t),decode$N=t=>coerce$8(t),raw=Object.freeze(Object.defineProperty({__proto__:null,code:code$1,decode:decode$N,encode:encode$A,name:name$2},Symbol.toStringTag,{value:"Module"})),textEncoder=new TextEncoder,textDecoder=new TextDecoder,name$1="json",code=512,encode$z=t=>textEncoder.encode(JSON.stringify(t)),decode$M=t=>JSON.parse(textDecoder.decode(t)),json=Object.freeze(Object.defineProperty({__proto__:null,code,decode:decode$M,encode:encode$z,name:name$1},Symbol.toStringTag,{value:"Module"})),format$7=(t,e)=>{const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$7(r,baseCache$7(t),e||base58btc$7.encoder);default:return toStringV1$7(r,baseCache$7(t),e||base32$d.encoder)}},cache$9=new WeakMap,baseCache$7=t=>{const e=cache$9.get(t);if(e==null){const r=new Map;return cache$9.set(t,r),r}return e};let CID$7=class qe{constructor(e,r,n,o){this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$7)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$7)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return qe.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$b(e,r);return qe.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return qe.equals(this,e)}static equals(e,r){const n=r;return n&&e.code===n.code&&e.version===n.version&&equals$g(e.multihash,n.multihash)}toString(e){return format$7(this,e)}toJSON(){return{"/":format$7(this)}}link(){return this}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof qe)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new qe(n,o,a,c||encodeCID$8(n,o,a.bytes))}else if(r[cidSymbol$7]===!0){const{version:n,multihash:o,code:a}=r,c=decode$Q(o);return qe.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$7)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$7}) block encoding`);return new qe(e,r,n,n.bytes)}case 1:{const o=encodeCID$8(e,r,n.bytes);return new qe(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return qe.create(0,DAG_PB_CODE$7,e)}static createV1(e,r){return qe.create(1,e,r)}static decode(e){const[r,n]=qe.decodeFirst(e);if(n.length)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=qe.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$8(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$8(r.multihashCode,r.digestSize,a,o);return[r.version===0?qe.createV0(c):qe.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$R(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$7;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$7(e,r),a=qe.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$7(a).set(n,e),a}};const parseCIDtoBytes$7=(t,e)=>{switch(t[0]){case"Q":{const r=e||base58btc$7;return[base58btc$7.prefix,r.decode(`${base58btc$7.prefix}${t}`)]}case base58btc$7.prefix:{const r=e||base58btc$7;return[base58btc$7.prefix,r.decode(t)]}case base32$d.prefix:{const r=e||base32$d;return[base32$d.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}},toStringV0$7=(t,e,r)=>{const{prefix:n}=r;if(n!==base58btc$7.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o},toStringV1$7=(t,e,r)=>{const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o},DAG_PB_CODE$7=112,SHA_256_CODE$7=18,encodeCID$8=(t,e,r)=>{const n=encodingLength$b(t),o=n+encodingLength$b(e),a=new Uint8Array(o+r.byteLength);return encodeTo$8(t,a,0),encodeTo$8(e,a,n),a.set(r,o),a},cidSymbol$7=Symbol.for("@ipld/js-cid/CID"),bases$7={...identityBase$7,...base2$f,...base8$f,...base10$f,...base16$f,...base32$e,...base36$f,...base58$6,...base64$f,...base256emoji$f},hashes={...sha2,...identity$9},codecs={raw,json},isV4$7=isIPv4,isV6$7=isIPv6,toBytes$7=function(t){let e=0;if(t=t.toString().trim(),isV4$7(t)){const r=new Uint8Array(e+4);return t.split(/\./g).forEach(n=>{r[e++]=parseInt(n,10)&255}),r}if(isV6$7(t)){const r=t.split(":",8);let n;for(n=0;n<r.length;n++){const a=isV4$7(r[n]);let c;a&&(c=toBytes$7(r[n]),r[n]=toString$D(c.slice(0,2),"base16")),c!=null&&++n<8&&r.splice(n,0,toString$D(c.slice(2,4),"base16"))}if(r[0]==="")for(;r.length<8;)r.unshift("0");else if(r[r.length-1]==="")for(;r.length<8;)r.push("0");else if(r.length<8){for(n=0;n<r.length&&r[n]!=="";n++);const a=[n,1];for(n=9-r.length;n>0;n--)a.push("0");r.splice.apply(r,a)}const o=new Uint8Array(e+16);for(n=0;n<r.length;n++){const a=parseInt(r[n],16);o[e++]=a>>8&255,o[e++]=a&255}return o}throw new Error("invalid ip address")},toString$g=function(t,e=0,r){e=~~e,r=r??t.length-e;const n=new DataView(t.buffer);if(r===4){const o=[];for(let a=0;a<r;a++)o.push(t[e+a]);return o.join(".")}if(r===16){const o=[];for(let a=0;a<r;a+=2)o.push(n.getUint16(e+a).toString(16));return o.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""},V$7=-1,names$7={},codes$9={},table$7=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,V$7,"ip6zone"],[43,8,"ipcidr"],[53,V$7,"dns",!0],[54,V$7,"dns4",!0],[55,V$7,"dns6",!0],[56,V$7,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc"],[281,0,"webrtc-w3c"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,V$7,"unix",!1,!0],[421,V$7,"ipfs"],[421,V$7,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,V$7,"garlic64"],[448,0,"tls"],[449,V$7,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,V$7,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[777,V$7,"memory"]];table$7.forEach(t=>{const e=createProtocol$7(...t);codes$9[e.code]=e,names$7[e.name]=e});function createProtocol$7(t,e,r,n,o){return{code:t,size:e,name:r,resolvable:!!n,path:!!o}}function getProtocol$7(t){if(typeof t=="number"){if(codes$9[t]!=null)return codes$9[t];throw new Error(`no protocol with code: ${t}`)}else if(typeof t=="string"){if(names$7[t]!=null)return names$7[t];throw new Error(`no protocol with name: ${t}`)}throw new Error(`invalid protocol id type: ${typeof t}`)}function convertToString$7(t,e){switch(getProtocol$7(t).code){case 4:case 41:return bytes2ip$7(e);case 42:return bytes2str$7(e);case 6:case 273:case 33:case 132:return bytes2port$7(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return bytes2str$7(e);case 421:return bytes2mh$7(e);case 444:return bytes2onion$7(e);case 445:return bytes2onion$7(e);case 466:return bytes2mb$7(e);default:return toString$D(e,"base16")}}function convertToBytes$7(t,e){switch(getProtocol$7(t).code){case 4:return ip2bytes$7(e);case 41:return ip2bytes$7(e);case 42:return str2bytes$7(e);case 6:case 273:case 33:case 132:return port2bytes$7(parseInt(e,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return str2bytes$7(e);case 421:return mh2bytes$7(e);case 444:return onion2bytes$7(e);case 445:return onion32bytes$7(e);case 466:return mb2bytes$7(e);default:return fromString$y(e,"base16")}}const decoders$7=Object.values(bases$7).map(t=>t.decoder),anybaseDecoder$7=function(){let t=decoders$7[0].or(decoders$7[1]);return decoders$7.slice(2).forEach(e=>t=t.or(e)),t}();function ip2bytes$7(t){if(!isIP(t))throw new Error("invalid ip address");return toBytes$7(t)}function bytes2ip$7(t){const e=toString$g(t,0,t.length);if(e==null)throw new Error("ipBuff is required");if(!isIP(e))throw new Error("invalid ip address");return e}function port2bytes$7(t){const e=new ArrayBuffer(2);return new DataView(e).setUint16(0,t),new Uint8Array(e)}function bytes2port$7(t){return new DataView(t.buffer).getUint16(t.byteOffset)}function str2bytes$7(t){const e=fromString$y(t),r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function bytes2str$7(t){const e=varint$w.decode(t);if(t=t.slice(varint$w.decode.bytes),t.length!==e)throw new Error("inconsistent lengths");return toString$D(t)}function mh2bytes$7(t){let e;t[0]==="Q"||t[0]==="1"?e=decode$Q(base58btc$7.decode(`z${t}`)).bytes:e=CID$7.parse(t).multihash.bytes;const r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function mb2bytes$7(t){const e=anybaseDecoder$7.decode(t),r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function bytes2mb$7(t){const e=varint$w.decode(t),r=t.slice(varint$w.decode.bytes);if(r.length!==e)throw new Error("inconsistent lengths");return"u"+toString$D(r,"base64url")}function bytes2mh$7(t){const e=varint$w.decode(t),r=t.slice(varint$w.decode.bytes);if(r.length!==e)throw new Error("inconsistent lengths");return toString$D(r,"base58btc")}function onion2bytes$7(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==16)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion address.`);const r=base32$d.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes$7(n);return concat$8([r,o],r.length+o.length)}function onion32bytes$7(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==56)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion3 address.`);const r=base32$d.decode(`b${e[0]}`),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes$7(n);return concat$8([r,o],r.length+o.length)}function bytes2onion$7(t){const e=t.slice(0,t.length-2),r=t.slice(t.length-2),n=toString$D(e,"base32"),o=bytes2port$7(r);return`${n}:${o}`}function stringToStringTuples$5(t){const e=[],r=t.split("/").slice(1);if(r.length===1&&r[0]==="")return[];for(let n=0;n<r.length;n++){const o=r[n],a=getProtocol$7(o);if(a.size===0){e.push([o]);continue}if(n++,n>=r.length)throw ParseError$7("invalid address: "+t);if(a.path===!0){e.push([o,cleanPath$7(r.slice(n).join("/"))]);break}e.push([o,r[n]])}return e}function stringTuplesToString$7(t){const e=[];return t.map(r=>{const n=protoFromTuple$5(r);return e.push(n.name),r.length>1&&r[1]!=null&&e.push(r[1]),null}),cleanPath$7(e.join("/"))}function stringTuplesToTuples$5(t){return t.map(e=>{Array.isArray(e)||(e=[e]);const r=protoFromTuple$5(e);return e.length>1?[r.code,convertToBytes$7(r.code,e[1])]:[r.code]})}function tuplesToStringTuples$5(t){return t.map(e=>{const r=protoFromTuple$5(e);return e[1]!=null?[r.code,convertToString$7(r.code,e[1])]:[r.code]})}function tuplesToBytes$7(t){return fromBytes$5(concat$8(t.map(e=>{const r=protoFromTuple$5(e);let n=Uint8Array.from(varint$w.encode(r.code));return e.length>1&&e[1]!=null&&(n=concat$8([n,e[1]])),n})))}function sizeForAddr$7(t,e){return t.size>0?t.size/8:t.size===0?0:varint$w.decode(e)+(varint$w.decode.bytes??0)}function bytesToTuples$5(t){const e=[];let r=0;for(;r<t.length;){const n=varint$w.decode(t,r),o=varint$w.decode.bytes??0,a=getProtocol$7(n),c=sizeForAddr$7(a,t.slice(r+o));if(c===0){e.push([n]),r+=o;continue}const u=t.slice(r+o,r+o+c);if(r+=c+o,r>t.length)throw ParseError$7("Invalid address Uint8Array: "+toString$D(t,"base16"));e.push([n,u])}return e}function bytesToString$5(t){const e=bytesToTuples$5(t),r=tuplesToStringTuples$5(e);return stringTuplesToString$7(r)}function stringToBytes$5(t){t=cleanPath$7(t);const e=stringToStringTuples$5(t),r=stringTuplesToTuples$5(e);return tuplesToBytes$7(r)}function fromString$d(t){return stringToBytes$5(t)}function fromBytes$5(t){const e=validateBytes$5(t);if(e!=null)throw e;return Uint8Array.from(t)}function validateBytes$5(t){try{bytesToTuples$5(t)}catch(e){return e}}function cleanPath$7(t){return"/"+t.trim().split("/").filter(e=>e).join("/")}function ParseError$7(t){return new Error("Error parsing address: "+t)}function protoFromTuple$5(t){return getProtocol$7(t[0])}var __classPrivateFieldGet$5=function(t,e,r,n){if(r==="a"&&!n)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?t!==e||!n:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return r==="m"?n:r==="a"?n.call(t):n?n.value:e.get(t)},__classPrivateFieldSet$5=function(t,e,r,n,o){if(n==="m")throw new TypeError("Private method is not writable");if(n==="a"&&!o)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?t!==e||!o:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return n==="a"?o.call(t,r):o?o.value=r:e.set(t,r),r},_DefaultMultiaddr_string$5,_DefaultMultiaddr_tuples$5,_DefaultMultiaddr_stringTuples$5,_a$5;const inspect$7=Symbol.for("nodejs.util.inspect.custom"),DNS_CODES$7=[getProtocol$7("dns").code,getProtocol$7("dns4").code,getProtocol$7("dns6").code,getProtocol$7("dnsaddr").code],resolvers$7=new Map,symbol$b=Symbol.for("@multiformats/js-multiaddr/multiaddr");function isMultiaddr$7(t){return!!t?.[symbol$b]}let DefaultMultiaddr$5=class Lt{constructor(e){if(_DefaultMultiaddr_string$5.set(this,void 0),_DefaultMultiaddr_tuples$5.set(this,void 0),_DefaultMultiaddr_stringTuples$5.set(this,void 0),this[_a$5]=!0,e==null&&(e=""),e instanceof Uint8Array)this.bytes=fromBytes$5(e);else if(typeof e=="string"){if(e.length>0&&e.charAt(0)!=="/")throw new Error(`multiaddr "${e}" must start with a "/"`);this.bytes=fromString$d(e)}else if(isMultiaddr$7(e))this.bytes=fromBytes$5(e.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr")}toString(){return __classPrivateFieldGet$5(this,_DefaultMultiaddr_string$5,"f")==null&&__classPrivateFieldSet$5(this,_DefaultMultiaddr_string$5,bytesToString$5(this.bytes),"f"),__classPrivateFieldGet$5(this,_DefaultMultiaddr_string$5,"f")}toJSON(){return this.toString()}toOptions(){let e,r,n,o,a="";const c=getProtocol$7("tcp"),u=getProtocol$7("udp"),l=getProtocol$7("ip4"),f=getProtocol$7("ip6"),p=getProtocol$7("dns6"),g=getProtocol$7("ip6zone");for(const[$,_]of this.stringTuples())$===g.code&&(a=`%${_??""}`),DNS_CODES$7.includes($)&&(r=c.name,o=443,n=`${_??""}${a}`,e=$===p.code?6:4),($===c.code||$===u.code)&&(r=getProtocol$7($).name,o=parseInt(_??"")),($===l.code||$===f.code)&&(r=getProtocol$7($).name,n=`${_??""}${a}`,e=$===f.code?6:4);if(e==null||r==null||n==null||o==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:e,host:n,transport:r,port:o}}protos(){return this.protoCodes().map(e=>Object.assign({},getProtocol$7(e)))}protoCodes(){const e=[],r=this.bytes;let n=0;for(;n<r.length;){const o=varint$w.decode(r,n),a=varint$w.decode.bytes??0,c=getProtocol$7(o),u=sizeForAddr$7(c,r.slice(n+a));n+=u+a,e.push(o)}return e}protoNames(){return this.protos().map(e=>e.name)}tuples(){return __classPrivateFieldGet$5(this,_DefaultMultiaddr_tuples$5,"f")==null&&__classPrivateFieldSet$5(this,_DefaultMultiaddr_tuples$5,bytesToTuples$5(this.bytes),"f"),__classPrivateFieldGet$5(this,_DefaultMultiaddr_tuples$5,"f")}stringTuples(){return __classPrivateFieldGet$5(this,_DefaultMultiaddr_stringTuples$5,"f")==null&&__classPrivateFieldSet$5(this,_DefaultMultiaddr_stringTuples$5,tuplesToStringTuples$5(this.tuples()),"f"),__classPrivateFieldGet$5(this,_DefaultMultiaddr_stringTuples$5,"f")}encapsulate(e){return e=new Lt(e),new Lt(this.toString()+e.toString())}decapsulate(e){const r=e.toString(),n=this.toString(),o=n.lastIndexOf(r);if(o<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${e.toString()}`);return new Lt(n.slice(0,o))}decapsulateCode(e){const r=this.tuples();for(let n=r.length-1;n>=0;n--)if(r[n][0]===e)return new Lt(tuplesToBytes$7(r.slice(0,n)));return this}getPeerId(){try{const e=this.stringTuples().filter(r=>r[0]===names$7.ipfs.code).pop();if(e?.[1]!=null){const r=e[1];return r[0]==="Q"||r[0]==="1"?toString$D(base58btc$7.decode(`z${r}`),"base58btc"):toString$D(CID$7.parse(r).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){let e=null;try{e=this.stringTuples().filter(r=>getProtocol$7(r[0]).path===!0)[0][1],e==null&&(e=null)}catch{e=null}return e}equals(e){return equals$R(this.bytes,e.bytes)}async resolve(e){const r=this.protos().find(o=>o.resolvable);if(r==null)return[this];const n=resolvers$7.get(r.name);if(n==null)throw errcode(new Error(`no available resolver for ${r.name}`),"ERR_NO_AVAILABLE_RESOLVER");return(await n(this,e)).map(o=>new Lt(o))}nodeAddress(){const e=this.toOptions();if(e.transport!=="tcp"&&e.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${e.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:e.family,address:e.host,port:e.port}}isThinWaistAddress(e){const r=(e??this).protos();return!(r.length!==2||r[0].code!==4&&r[0].code!==41||r[1].code!==6&&r[1].code!==273)}[(_DefaultMultiaddr_string$5=new WeakMap,_DefaultMultiaddr_tuples$5=new WeakMap,_DefaultMultiaddr_stringTuples$5=new WeakMap,_a$5=symbol$b,inspect$7)](){return`Multiaddr(${bytesToString$5(this.bytes)})`}};function multiaddr$7(t){return new DefaultMultiaddr$5(t)}const isV4$6=isIPv4,isV6$6=isIPv6,toBytes$6=function(t){let e=0;if(t=t.toString().trim(),isV4$6(t)){const r=new Uint8Array(e+4);return t.split(/\./g).forEach(n=>{r[e++]=parseInt(n,10)&255}),r}if(isV6$6(t)){const r=t.split(":",8);let n;for(n=0;n<r.length;n++){const a=isV4$6(r[n]);let c;a&&(c=toBytes$6(r[n]),r[n]=toString$D(c.slice(0,2),"base16")),c!=null&&++n<8&&r.splice(n,0,toString$D(c.slice(2,4),"base16"))}if(r[0]==="")for(;r.length<8;)r.unshift("0");else if(r[r.length-1]==="")for(;r.length<8;)r.push("0");else if(r.length<8){for(n=0;n<r.length&&r[n]!=="";n++);const a=[n,1];for(n=9-r.length;n>0;n--)a.push("0");r.splice.apply(r,a)}const o=new Uint8Array(e+16);for(n=0;n<r.length;n++){const a=parseInt(r[n],16);o[e++]=a>>8&255,o[e++]=a&255}return o}throw new Error("invalid ip address")},toString$f=function(t,e=0,r){e=~~e,r=r??t.length-e;const n=new DataView(t.buffer);if(r===4){const o=[];for(let a=0;a<r;a++)o.push(t[e+a]);return o.join(".")}if(r===16){const o=[];for(let a=0;a<r;a+=2)o.push(n.getUint16(e+a).toString(16));return o.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""},V$6=-1,names$6={},codes$8={},table$6=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,V$6,"ip6zone"],[43,8,"ipcidr"],[53,V$6,"dns",!0],[54,V$6,"dns4",!0],[55,V$6,"dns6",!0],[56,V$6,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc"],[281,0,"webrtc-w3c"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,V$6,"unix",!1,!0],[421,V$6,"ipfs"],[421,V$6,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,V$6,"garlic64"],[448,0,"tls"],[449,V$6,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,V$6,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[777,V$6,"memory"]];table$6.forEach(t=>{const e=createProtocol$6(...t);codes$8[e.code]=e,names$6[e.name]=e});function createProtocol$6(t,e,r,n,o){return{code:t,size:e,name:r,resolvable:!!n,path:!!o}}function getProtocol$6(t){if(typeof t=="number"){if(codes$8[t]!=null)return codes$8[t];throw new Error(`no protocol with code: ${t}`)}else if(typeof t=="string"){if(names$6[t]!=null)return names$6[t];throw new Error(`no protocol with name: ${t}`)}throw new Error(`invalid protocol id type: ${typeof t}`)}const identity$6=from$z({prefix:"\0",name:"identity",encode:t=>toString$x(t),decode:t=>fromString$r(t)}),identityBase$6=Object.freeze(Object.defineProperty({__proto__:null,identity:identity$6},Symbol.toStringTag,{value:"Module"})),base2$c=rfc4648$n({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),base2$d=Object.freeze(Object.defineProperty({__proto__:null,base2:base2$c},Symbol.toStringTag,{value:"Module"})),base8$c=rfc4648$n({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),base8$d=Object.freeze(Object.defineProperty({__proto__:null,base8:base8$c},Symbol.toStringTag,{value:"Module"})),base10$c=baseX$m({prefix:"9",name:"base10",alphabet:"0123456789"}),base10$d=Object.freeze(Object.defineProperty({__proto__:null,base10:base10$c},Symbol.toStringTag,{value:"Module"})),base16$c=rfc4648$n({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),base16upper$6=rfc4648$n({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),base16$d=Object.freeze(Object.defineProperty({__proto__:null,base16:base16$c,base16upper:base16upper$6},Symbol.toStringTag,{value:"Module"})),base36$c=baseX$m({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),base36upper$6=baseX$m({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),base36$d=Object.freeze(Object.defineProperty({__proto__:null,base36:base36$c,base36upper:base36upper$6},Symbol.toStringTag,{value:"Module"})),base64$c=rfc4648$n({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),base64pad$6=rfc4648$n({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),base64url$6=rfc4648$n({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),base64urlpad$6=rfc4648$n({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),base64$d=Object.freeze(Object.defineProperty({__proto__:null,base64:base64$c,base64pad:base64pad$6,base64url:base64url$6,base64urlpad:base64urlpad$6},Symbol.toStringTag,{value:"Module"})),alphabet$7=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),alphabetBytesToChars$6=alphabet$7.reduce((t,e,r)=>(t[r]=e,t),[]),alphabetCharsToBytes$6=alphabet$7.reduce((t,e,r)=>(t[e.codePointAt(0)]=r,t),[]);function encode$y(t){return t.reduce((e,r)=>(e+=alphabetBytesToChars$6[r],e),"")}function decode$L(t){const e=[];for(const r of t){const n=alphabetCharsToBytes$6[r.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${r}`);e.push(n)}return new Uint8Array(e)}const base256emoji$c=from$z({prefix:"\u{1F680}",name:"base256emoji",encode:encode$y,decode:decode$L}),base256emoji$d=Object.freeze(Object.defineProperty({__proto__:null,base256emoji:base256emoji$c},Symbol.toStringTag,{value:"Module"}));new TextEncoder,new TextDecoder;const bases$6={...identityBase$6,...base2$d,...base8$d,...base10$d,...base16$d,...base32$w,...base36$d,...base58$c,...base64$d,...base256emoji$d};function convertToString$6(t,e){switch(getProtocol$6(t).code){case 4:case 41:return bytes2ip$6(e);case 42:return bytes2str$6(e);case 6:case 273:case 33:case 132:return bytes2port$6(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return bytes2str$6(e);case 421:return bytes2mh$6(e);case 444:return bytes2onion$6(e);case 445:return bytes2onion$6(e);case 466:return bytes2mb$6(e);default:return toString$D(e,"base16")}}function convertToBytes$6(t,e){switch(getProtocol$6(t).code){case 4:return ip2bytes$6(e);case 41:return ip2bytes$6(e);case 42:return str2bytes$6(e);case 6:case 273:case 33:case 132:return port2bytes$6(parseInt(e,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return str2bytes$6(e);case 421:return mh2bytes$6(e);case 444:return onion2bytes$6(e);case 445:return onion32bytes$6(e);case 466:return mb2bytes$6(e);default:return fromString$y(e,"base16")}}const decoders$6=Object.values(bases$6).map(t=>t.decoder),anybaseDecoder$6=function(){let t=decoders$6[0].or(decoders$6[1]);return decoders$6.slice(2).forEach(e=>t=t.or(e)),t}();function ip2bytes$6(t){if(!isIP(t))throw new Error("invalid ip address");return toBytes$6(t)}function bytes2ip$6(t){const e=toString$f(t,0,t.length);if(e==null)throw new Error("ipBuff is required");if(!isIP(e))throw new Error("invalid ip address");return e}function port2bytes$6(t){const e=new ArrayBuffer(2);return new DataView(e).setUint16(0,t),new Uint8Array(e)}function bytes2port$6(t){return new DataView(t.buffer).getUint16(t.byteOffset)}function str2bytes$6(t){const e=fromString$y(t),r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function bytes2str$6(t){const e=varint$w.decode(t);if(t=t.slice(varint$w.decode.bytes),t.length!==e)throw new Error("inconsistent lengths");return toString$D(t)}function mh2bytes$6(t){let e;t[0]==="Q"||t[0]==="1"?e=decode$1S(base58btc$k.decode(`z${t}`)).bytes:e=CID$i.parse(t).multihash.bytes;const r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function mb2bytes$6(t){const e=anybaseDecoder$6.decode(t),r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function bytes2mb$6(t){const e=varint$w.decode(t),r=t.slice(varint$w.decode.bytes);if(r.length!==e)throw new Error("inconsistent lengths");return"u"+toString$D(r,"base64url")}function bytes2mh$6(t){const e=varint$w.decode(t),r=t.slice(varint$w.decode.bytes);if(r.length!==e)throw new Error("inconsistent lengths");return toString$D(r,"base58btc")}function onion2bytes$6(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==16)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion address.`);const r=base32$v.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes$6(n);return concat$8([r,o],r.length+o.length)}function onion32bytes$6(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==56)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion3 address.`);const r=base32$v.decode(`b${e[0]}`),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes$6(n);return concat$8([r,o],r.length+o.length)}function bytes2onion$6(t){const e=t.slice(0,t.length-2),r=t.slice(t.length-2),n=toString$D(e,"base32"),o=bytes2port$6(r);return`${n}:${o}`}function stringToStringTuples$4(t){const e=[],r=t.split("/").slice(1);if(r.length===1&&r[0]==="")return[];for(let n=0;n<r.length;n++){const o=r[n],a=getProtocol$6(o);if(a.size===0){e.push([o]);continue}if(n++,n>=r.length)throw ParseError$6("invalid address: "+t);if(a.path===!0){e.push([o,cleanPath$6(r.slice(n).join("/"))]);break}e.push([o,r[n]])}return e}function stringTuplesToString$6(t){const e=[];return t.map(r=>{const n=protoFromTuple$4(r);return e.push(n.name),r.length>1&&r[1]!=null&&e.push(r[1]),null}),cleanPath$6(e.join("/"))}function stringTuplesToTuples$4(t){return t.map(e=>{Array.isArray(e)||(e=[e]);const r=protoFromTuple$4(e);return e.length>1?[r.code,convertToBytes$6(r.code,e[1])]:[r.code]})}function tuplesToStringTuples$4(t){return t.map(e=>{const r=protoFromTuple$4(e);return e[1]!=null?[r.code,convertToString$6(r.code,e[1])]:[r.code]})}function tuplesToBytes$6(t){return fromBytes$4(concat$8(t.map(e=>{const r=protoFromTuple$4(e);let n=Uint8Array.from(varint$w.encode(r.code));return e.length>1&&e[1]!=null&&(n=concat$8([n,e[1]])),n})))}function sizeForAddr$6(t,e){return t.size>0?t.size/8:t.size===0?0:varint$w.decode(e)+(varint$w.decode.bytes??0)}function bytesToTuples$4(t){const e=[];let r=0;for(;r<t.length;){const n=varint$w.decode(t,r),o=varint$w.decode.bytes??0,a=getProtocol$6(n),c=sizeForAddr$6(a,t.slice(r+o));if(c===0){e.push([n]),r+=o;continue}const u=t.slice(r+o,r+o+c);if(r+=c+o,r>t.length)throw ParseError$6("Invalid address Uint8Array: "+toString$D(t,"base16"));e.push([n,u])}return e}function bytesToString$4(t){const e=bytesToTuples$4(t),r=tuplesToStringTuples$4(e);return stringTuplesToString$6(r)}function stringToBytes$4(t){t=cleanPath$6(t);const e=stringToStringTuples$4(t),r=stringTuplesToTuples$4(e);return tuplesToBytes$6(r)}function fromString$c(t){return stringToBytes$4(t)}function fromBytes$4(t){const e=validateBytes$4(t);if(e!=null)throw e;return Uint8Array.from(t)}function validateBytes$4(t){try{bytesToTuples$4(t)}catch(e){return e}}function cleanPath$6(t){return"/"+t.trim().split("/").filter(e=>e).join("/")}function ParseError$6(t){return new Error("Error parsing address: "+t)}function protoFromTuple$4(t){return getProtocol$6(t[0])}var __classPrivateFieldGet$4=function(t,e,r,n){if(r==="a"&&!n)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?t!==e||!n:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return r==="m"?n:r==="a"?n.call(t):n?n.value:e.get(t)},__classPrivateFieldSet$4=function(t,e,r,n,o){if(n==="m")throw new TypeError("Private method is not writable");if(n==="a"&&!o)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?t!==e||!o:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return n==="a"?o.call(t,r):o?o.value=r:e.set(t,r),r},_DefaultMultiaddr_string$4,_DefaultMultiaddr_tuples$4,_DefaultMultiaddr_stringTuples$4,_a$4;const inspect$6=Symbol.for("nodejs.util.inspect.custom"),DNS_CODES$6=[getProtocol$6("dns").code,getProtocol$6("dns4").code,getProtocol$6("dns6").code,getProtocol$6("dnsaddr").code],resolvers$6=new Map,symbol$a=Symbol.for("@multiformats/js-multiaddr/multiaddr");function isMultiaddr$6(t){return!!t?.[symbol$a]}let DefaultMultiaddr$4=class Bt{constructor(e){if(_DefaultMultiaddr_string$4.set(this,void 0),_DefaultMultiaddr_tuples$4.set(this,void 0),_DefaultMultiaddr_stringTuples$4.set(this,void 0),this[_a$4]=!0,e==null&&(e=""),e instanceof Uint8Array)this.bytes=fromBytes$4(e);else if(typeof e=="string"){if(e.length>0&&e.charAt(0)!=="/")throw new Error(`multiaddr "${e}" must start with a "/"`);this.bytes=fromString$c(e)}else if(isMultiaddr$6(e))this.bytes=fromBytes$4(e.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr")}toString(){return __classPrivateFieldGet$4(this,_DefaultMultiaddr_string$4,"f")==null&&__classPrivateFieldSet$4(this,_DefaultMultiaddr_string$4,bytesToString$4(this.bytes),"f"),__classPrivateFieldGet$4(this,_DefaultMultiaddr_string$4,"f")}toJSON(){return this.toString()}toOptions(){let e,r,n,o,a="";const c=getProtocol$6("tcp"),u=getProtocol$6("udp"),l=getProtocol$6("ip4"),f=getProtocol$6("ip6"),p=getProtocol$6("dns6"),g=getProtocol$6("ip6zone");for(const[$,_]of this.stringTuples())$===g.code&&(a=`%${_??""}`),DNS_CODES$6.includes($)&&(r=c.name,o=443,n=`${_??""}${a}`,e=$===p.code?6:4),($===c.code||$===u.code)&&(r=getProtocol$6($).name,o=parseInt(_??"")),($===l.code||$===f.code)&&(r=getProtocol$6($).name,n=`${_??""}${a}`,e=$===f.code?6:4);if(e==null||r==null||n==null||o==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:e,host:n,transport:r,port:o}}protos(){return this.protoCodes().map(e=>Object.assign({},getProtocol$6(e)))}protoCodes(){const e=[],r=this.bytes;let n=0;for(;n<r.length;){const o=varint$w.decode(r,n),a=varint$w.decode.bytes??0,c=getProtocol$6(o),u=sizeForAddr$6(c,r.slice(n+a));n+=u+a,e.push(o)}return e}protoNames(){return this.protos().map(e=>e.name)}tuples(){return __classPrivateFieldGet$4(this,_DefaultMultiaddr_tuples$4,"f")==null&&__classPrivateFieldSet$4(this,_DefaultMultiaddr_tuples$4,bytesToTuples$4(this.bytes),"f"),__classPrivateFieldGet$4(this,_DefaultMultiaddr_tuples$4,"f")}stringTuples(){return __classPrivateFieldGet$4(this,_DefaultMultiaddr_stringTuples$4,"f")==null&&__classPrivateFieldSet$4(this,_DefaultMultiaddr_stringTuples$4,tuplesToStringTuples$4(this.tuples()),"f"),__classPrivateFieldGet$4(this,_DefaultMultiaddr_stringTuples$4,"f")}encapsulate(e){return e=new Bt(e),new Bt(this.toString()+e.toString())}decapsulate(e){const r=e.toString(),n=this.toString(),o=n.lastIndexOf(r);if(o<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${e.toString()}`);return new Bt(n.slice(0,o))}decapsulateCode(e){const r=this.tuples();for(let n=r.length-1;n>=0;n--)if(r[n][0]===e)return new Bt(tuplesToBytes$6(r.slice(0,n)));return this}getPeerId(){try{const e=this.stringTuples().filter(r=>r[0]===names$6.ipfs.code).pop();if(e?.[1]!=null){const r=e[1];return r[0]==="Q"||r[0]==="1"?toString$D(base58btc$k.decode(`z${r}`),"base58btc"):toString$D(CID$i.parse(r).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){let e=null;try{e=this.stringTuples().filter(r=>getProtocol$6(r[0]).path===!0)[0][1],e==null&&(e=null)}catch{e=null}return e}equals(e){return equals$R(this.bytes,e.bytes)}async resolve(e){const r=this.protos().find(o=>o.resolvable);if(r==null)return[this];const n=resolvers$6.get(r.name);if(n==null)throw errcode(new Error(`no available resolver for ${r.name}`),"ERR_NO_AVAILABLE_RESOLVER");return(await n(this,e)).map(o=>new Bt(o))}nodeAddress(){const e=this.toOptions();if(e.transport!=="tcp"&&e.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${e.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:e.family,address:e.host,port:e.port}}isThinWaistAddress(e){const r=(e??this).protos();return!(r.length!==2||r[0].code!==4&&r[0].code!==41||r[1].code!==6&&r[1].code!==273)}[(_DefaultMultiaddr_string$4=new WeakMap,_DefaultMultiaddr_tuples$4=new WeakMap,_DefaultMultiaddr_stringTuples$4=new WeakMap,_a$4=symbol$a,inspect$6)](){return`Multiaddr(${bytesToString$4(this.bytes)})`}};function multiaddr$6(t){return new DefaultMultiaddr$4(t)}function toUrlString(t){try{t=multiaddrToUri(multiaddr$6(t))}catch{}return t=t.toString(),t}const getAgent=()=>{},log$V=logger$3("ipfs-http-client:lib:error-handler"),merge$1=mergeOptions$h.bind({ignoreUndefined:!0}),DEFAULT_PROTOCOL=env.isBrowser||env.isWebWorker?location.protocol:"http",DEFAULT_HOST=env.isBrowser||env.isWebWorker?location.hostname:"localhost",DEFAULT_PORT=env.isBrowser||env.isWebWorker?location.port:"5001",normalizeOptions=(t={})=>{let e,r={},n;if(typeof t=="string"||isMultiaddr$7(t))e=new URL(toUrlString(t));else if(t instanceof URL)e=t;else if(typeof t.url=="string"||isMultiaddr$7(t.url))e=new URL(toUrlString(t.url)),r=t;else if(t.url instanceof URL)e=t.url,r=t;else{r=t||{};const o=(r.protocol||DEFAULT_PROTOCOL).replace(":",""),a=(r.host||DEFAULT_HOST).split(":")[0],c=r.port||DEFAULT_PORT;e=new URL(`${o}://${a}:${c}`)}if(r.apiPath?e.pathname=r.apiPath:(e.pathname==="/"||e.pathname===void 0)&&(e.pathname="api/v0"),env.isNode){const o=getAgent();n=r.agent||new o({keepAlive:!0,maxSockets:6})}return{...r,host:e.host,protocol:e.protocol.replace(":",""),port:Number(e.port),apiPath:e.pathname,url:e,agent:n}},errorHandler=async t=>{let e;try{if((t.headers.get("Content-Type")||"").startsWith("application/json")){const n=await t.json();log$V(n),e=n.Message||n.message}else e=await t.text()}catch(n){log$V("Failed to parse error response",n),e=n.message}let r=new HTTP$4.HTTPError(t);throw e&&(e.includes("deadline has elapsed")&&(r=new HTTP$4.TimeoutError),e&&e.includes("context deadline exceeded")&&(r=new HTTP$4.TimeoutError)),e&&e.includes("request timed out")&&(r=new HTTP$4.TimeoutError),e&&(r.message=e),r},KEBAB_REGEX=/[A-Z\u00C0-\u00D6\u00D8-\u00DE]/g,kebabCase=t=>t.replace(KEBAB_REGEX,function(e){return"-"+e.toLowerCase()}),parseTimeout=t=>typeof t=="string"?parse$4(t):t;class Client extends HTTP$4{constructor(e={}){const r=normalizeOptions(e);super({timeout:parseTimeout(r.timeout||0)||void 0,headers:r.headers,base:`${r.url}`,handleError:errorHandler,transformSearchParams:o=>{const a=new URLSearchParams;for(const[c,u]of o)u!=="undefined"&&u!=="null"&&c!=="signal"&&a.append(kebabCase(c),u),c==="timeout"&&!isNaN(u)&&a.append(kebabCase(c),u);return a},agent:r.agent}),delete this.get,delete this.put,delete this.delete,delete this.options;const n=this.fetch;this.fetch=(o,a={})=>(typeof o=="string"&&!o.startsWith("/")&&(o=`${r.url}/${o}`),n.call(this,o,merge$1(a,{method:"POST"})))}}HTTP$4.HTTPError;const configure$1=t=>e=>t(new Client(e),e);function modeToString$1(t){if(t!=null)return typeof t=="string"?t:t.toString(8).padStart(4,"0")}function parseMtime(t){if(t==null)return;let e;if(t.secs!=null&&(e={secs:t.secs,nsecs:t.nsecs}),t.Seconds!=null&&(e={secs:t.Seconds,nsecs:t.FractionalNanoseconds}),Array.isArray(t)&&(e={secs:t[0],nsecs:t[1]}),t instanceof Date){const r=t.getTime(),n=Math.floor(r/1e3);e={secs:n,nsecs:(r-n*1e3)*1e3}}if(Object.prototype.hasOwnProperty.call(e,"secs")){if(e!=null&&e.nsecs!=null&&(e.nsecs<0||e.nsecs>999999999))throw errcode(new Error("mtime-nsecs must be within the range [0,999999999]"),"ERR_INVALID_MTIME_NSECS");return e}}function toUrlSearchParams({arg:t,searchParams:e,hashAlg:r,mtime:n,mode:o,...a}={}){e&&(a={...a,...e}),r&&(a.hash=r),n!=null&&(n=parseMtime(n),a.mtime=n.secs,a.mtimeNsecs=n.nsecs),o!=null&&(a.mode=modeToString$1(o)),a.timeout&&!isNaN(a.timeout)&&(a.timeout=`${a.timeout}ms`),t==null?t=[]:Array.isArray(t)||(t=[t]);const c=new URLSearchParams(a);return t.forEach(u=>c.append("arg",u)),c}const createWantlist=configure$1(t=>{async function e(r={}){return((await(await t.post("bitswap/wantlist",{signal:r.signal,searchParams:toUrlSearchParams(r),headers:r.headers})).json()).Keys||[]).map(n=>CID$7.parse(n["/"]))}return e}),createWantlistForPeer=configure$1(t=>{async function e(r,n={}){return((await(await t.post("bitswap/wantlist",{signal:n.signal,searchParams:toUrlSearchParams({...n,peer:r.toString()}),headers:n.headers})).json()).Keys||[]).map(o=>CID$7.parse(o["/"]))}return e}),createStat$4=configure$1(t=>{async function e(r={}){const n=await t.post("bitswap/stat",{searchParams:toUrlSearchParams(r),signal:r.signal,headers:r.headers});return toCoreInterface$4(await n.json())}return e});function toCoreInterface$4(t){return{provideBufLen:t.ProvideBufLen,wantlist:(t.Wantlist||[]).map(e=>CID$7.parse(e["/"])),peers:(t.Peers||[]).map(e=>peerIdFromString$1(e)),blocksReceived:BigInt(t.BlocksReceived),dataReceived:BigInt(t.DataReceived),blocksSent:BigInt(t.BlocksSent),dataSent:BigInt(t.DataSent),dupBlksReceived:BigInt(t.DupBlksReceived),dupDataReceived:BigInt(t.DupDataReceived)}}const createUnwant=configure$1(t=>{async function e(r,n={}){return(await t.post("bitswap/unwant",{signal:n.signal,searchParams:toUrlSearchParams({arg:r.toString(),...n}),headers:n.headers})).json()}return e});function createBitswap$1(t){return{wantlist:createWantlist(t),wantlistForPeer:createWantlistForPeer(t),unwant:createUnwant(t),stat:createStat$4(t)}}const createGet$5=configure$1(t=>{async function e(r,n={}){const o=await t.post("block/get",{signal:n.signal,searchParams:toUrlSearchParams({arg:r.toString(),...n}),headers:n.headers});return new Uint8Array(await o.arrayBuffer())}return e});async function normaliseContent(t){if(isBytes(t))return new Blob([t]);if(typeof t=="string"||t instanceof String)return new Blob([t.toString()]);if(isBlob(t))return t;if(isReadableStream(t)&&(t=browserReadableStreamToIt(t)),Symbol.iterator in t||Symbol.asyncIterator in t){const e=peekableIterator(t),{value:r,done:n}=await e.peek();if(n)return itToBlob(e);if(e.push(r),Number.isInteger(r))return new Blob([Uint8Array.from(await all$1(e))]);if(isBytes(r)||typeof r=="string"||r instanceof String)return itToBlob(e)}throw errcode(new Error(`Unexpected input: ${t}`),"ERR_UNEXPECTED_INPUT")}async function itToBlob(t){const e=[];for await(const r of t)e.push(r);return new Blob(e)}function normaliseInput(t){return normaliseCandidateMultiple(t,normaliseContent)}function modeToString(t){if(t!=null)return typeof t=="string"?t:t.toString(8).padStart(4,"0")}async function multipartRequest(t,e,r={}){const n=[],o=new FormData;let a=0,c=0;for await(const{content:u,path:l,mode:f,mtime:p}of normaliseInput(t)){let g="";const $=u?"file":"dir";a>0&&(g=`-${a}`);let _=$+g;const b=[];if(f!=null&&b.push(`mode=${modeToString(f)}`),p!=null){const{secs:D,nsecs:v}=p;b.push(`mtime=${D}`),v!=null&&b.push(`mtime-nsecs=${v}`)}if(b.length&&(_=`${_}?${b.join("&")}`),u){o.set(_,u,l!=null?encodeURIComponent(l):void 0);const D=c+u.size;n.push({name:l,start:c,end:D}),c=D}else if(l!=null)o.set(_,new File([""],encodeURIComponent(l),{type:"application/x-directory"}));else throw new Error("path or content or both must be set");a++}return{total:c,parts:n,headers:r,body:o}}function filter(t){return t.filter(Boolean)}function abortSignal(...t){return anySignal_2(filter(t))}const createPut$3=configure$1(t=>{async function e(r,n={}){const o=new AbortController,a=abortSignal(o.signal,n.signal);let c;try{c=await(await t.post("block/put",{signal:a,searchParams:toUrlSearchParams(n),...await multipartRequest([r],o,n.headers)})).json()}catch(u){if(n.format==="dag-pb")return e(r,{...n,format:"protobuf"});if(n.format==="dag-cbor")return e(r,{...n,format:"cbor"});throw u}return CID$7.parse(c.Key)}return e}),createRm$6=configure$1(t=>{async function*e(r,n={}){Array.isArray(r)||(r=[r]);const o=await t.post("block/rm",{signal:n.signal,searchParams:toUrlSearchParams({arg:r.map(a=>a.toString()),"stream-channels":!0,...n}),headers:n.headers});for await(const a of o.ndjson())yield toCoreInterface$3(a)}return e});function toCoreInterface$3(t){const e={cid:CID$7.parse(t.Hash)};return t.Error&&(e.error=new Error(t.Error)),e}const createStat$3=configure$1(t=>{async function e(r,n={}){const o=await(await t.post("block/stat",{signal:n.signal,searchParams:toUrlSearchParams({arg:r.toString(),...n}),headers:n.headers})).json();return{cid:CID$7.parse(o.Key),size:o.Size}}return e});function createBlock(t){return{get:createGet$5(t),put:createPut$3(t),rm:createRm$6(t),stat:createStat$3(t)}}const createAdd$4=configure$1(t=>{async function e(r,n={}){const o=await t.post("bootstrap/add",{signal:n.signal,searchParams:toUrlSearchParams({arg:r,...n}),headers:n.headers}),{Peers:a}=await o.json();return{Peers:a.map(c=>multiaddr$7(c))}}return e}),createClear=configure$1(t=>{async function e(r={}){const n=await t.post("bootstrap/rm",{signal:r.signal,searchParams:toUrlSearchParams({...r,all:!0}),headers:r.headers}),{Peers:o}=await n.json();return{Peers:o.map(a=>multiaddr$7(a))}}return e}),createList$2=configure$1(t=>{async function e(r={}){const n=await t.post("bootstrap/list",{signal:r.signal,searchParams:toUrlSearchParams(r),headers:r.headers}),{Peers:o}=await n.json();return{Peers:o.map(a=>multiaddr$7(a))}}return e}),createReset=configure$1(t=>{async function e(r={}){const n=await t.post("bootstrap/add",{signal:r.signal,searchParams:toUrlSearchParams({...r,default:!0}),headers:r.headers}),{Peers:o}=await n.json();return{Peers:o.map(a=>multiaddr$7(a))}}return e}),createRm$5=configure$1(t=>{async function e(r,n={}){const o=await t.post("bootstrap/rm",{signal:n.signal,searchParams:toUrlSearchParams({arg:r,...n}),headers:n.headers}),{Peers:a}=await o.json();return{Peers:a.map(c=>multiaddr$7(c))}}return e});function createBootstrap(t){return{add:createAdd$4(t),clear:createClear(t),list:createList$2(t),reset:createReset(t),rm:createRm$5(t)}}const createApply=configure$1(t=>{async function e(r,n={}){const o=await(await t.post("config/profile/apply",{signal:n.signal,searchParams:toUrlSearchParams({arg:r,...n}),headers:n.headers})).json();return{original:o.OldCfg,updated:o.NewCfg}}return e});function objectToCamel(t){if(t==null)return t;const e=/^[A-Z]+$/,r={};return Object.keys(t).reduce((n,o)=>(e.test(o)?n[o.toLowerCase()]=t[o]:e.test(o[0])?n[o[0].toLowerCase()+o.slice(1)]=t[o]:n[o]=t[o],n),r)}const createList$1=configure$1(t=>{async function e(r={}){return(await(await t.post("config/profile/list",{signal:r.signal,searchParams:toUrlSearchParams(r),headers:r.headers})).json()).map(n=>objectToCamel(n))}return e});function createProfiles(t){return{apply:createApply(t),list:createList$1(t)}}const createGet$4=configure$1(t=>async(e,r={})=>{if(!e)throw new Error("key argument is required");return(await(await t.post("config",{signal:r.signal,searchParams:toUrlSearchParams({arg:e,...r}),headers:r.headers})).json()).Value}),createGetAll=configure$1(t=>async(e={})=>await(await t.post("config/show",{signal:e.signal,searchParams:toUrlSearchParams({...e}),headers:e.headers})).json()),createReplace=configure$1(t=>async(e,r={})=>{const n=new AbortController,o=abortSignal(n.signal,r.signal);await(await t.post("config/replace",{signal:o,searchParams:toUrlSearchParams(r),...await multipartRequest([fromString$y(JSON.stringify(e))],n,r.headers)})).text()}),createSet=configure$1(t=>async(e,r,n={})=>{if(typeof e!="string")throw new Error("Invalid key type");const o={...n,...encodeParam(e,r)};await(await t.post("config",{signal:n.signal,searchParams:toUrlSearchParams(o),headers:n.headers})).text()}),encodeParam=(t,e)=>{switch(typeof e){case"boolean":return{arg:[t,e.toString()],bool:!0};case"string":return{arg:[t,e]};default:return{arg:[t,JSON.stringify(e)],json:!0}}};function createConfig(t){return{getAll:createGetAll(t),get:createGet$4(t),set:createSet(t),replace:createReplace(t),profiles:createProfiles(t)}}const createExport$1=configure$1(t=>{async function*e(r,n={}){yield*(await t.post("dag/export",{signal:n.signal,searchParams:toUrlSearchParams({arg:r.toString()}),headers:n.headers})).iterator()}return e});async function*resolve(t,e,r,n,o){const a=async f=>{const p=await r.getCodec(f.code),g=await n(f,o);return p.decode(g)},c=e.split("/").filter(Boolean);let u=await a(t),l=t;for(;c.length;){const f=c.shift();if(!f)throw errcode(new Error(`Could not resolve path "${e}"`),"ERR_INVALID_PATH");if(Object.prototype.hasOwnProperty.call(u,f))u=u[f],yield{value:u,remainderPath:c.join("/")};else throw errcode(new Error(`no link named "${f}" under ${l}`),"ERR_NO_LINK");const p=CID$7.asCID(u);p&&(l=p,u=await a(u))}yield{value:u,remainderPath:""}}const createGet$3=(t,e)=>configure$1((r,n)=>{const o=createGet$5(n);return async(a,c={})=>{if(c.path){const f=c.localResolve?await first$1(resolve(a,c.path,t,o,c)):await last(resolve(a,c.path,t,o,c));if(!f)throw errcode(new Error("Not found"),"ERR_NOT_FOUND");return f}const u=await t.getCodec(a.code),l=await o(a,c);return{value:u.decode(l),remainderPath:""}}})(e),createImport$1=configure$1(t=>{async function*e(r,n={}){const o=new AbortController,a=abortSignal(o.signal,n.signal),{headers:c,body:u}=await multipartRequest(r,o,n.headers),l=await t.post("dag/import",{signal:a,headers:c,body:u,searchParams:toUrlSearchParams({"pin-roots":n.pinRoots})});for await(const{Root:f}of l.ndjson())if(f!==void 0){const{Cid:{"/":p},PinErrorMsg:g}=f;yield{root:{cid:CID$7.parse(p),pinErrorMsg:g}}}}return e}),createPut$2=(t,e)=>configure$1(r=>async(n,o={})=>{const a={storeCodec:"dag-cbor",hashAlg:"sha2-256",...o};let c;if(a.inputCodec){if(!(n instanceof Uint8Array))throw new Error("Can only inputCodec on raw bytes that can be decoded");c=n}else c=(await t.getCodec(a.storeCodec)).encode(n),a.inputCodec=a.storeCodec;const u=new AbortController,l=abortSignal(u.signal,a.signal),f=await(await r.post("dag/put",{timeout:a.timeout,signal:l,searchParams:toUrlSearchParams(a),...await multipartRequest([c],u,a.headers)})).json();return CID$7.parse(f.Cid["/"])})(e),createResolve$2=configure$1(t=>async(e,r={})=>{const n=await(await t.post("dag/resolve",{signal:r.signal,searchParams:toUrlSearchParams({arg:`${e}${r.path?`/${r.path}`.replace(/\/[/]+/g,"/"):""}`,...r}),headers:r.headers})).json();return{cid:CID$7.parse(n.Cid["/"]),remainderPath:n.RemPath}});function createDag(t,e){return{export:createExport$1(e),get:createGet$3(t,e),import:createImport$1(e),put:createPut$2(t,e),resolve:createResolve$2(e)}}const SendingQuery=0,PeerResponse=1,FinalPeer=2,QueryError=3,Provider=4,Value=5,AddingPeer=6,DialingPeer=7,mapEvent=t=>{if(t.Type===SendingQuery)return{name:"SENDING_QUERY",type:t.Type};if(t.Type===PeerResponse)return{from:peerIdFromString$1(t.ID),name:"PEER_RESPONSE",type:t.Type,messageType:0,messageName:"PUT_VALUE",closer:(t.Responses||[]).map(({ID:e,Addrs:r})=>({id:peerIdFromString$1(e),multiaddrs:r.map(n=>multiaddr$7(n)),protocols:[]})),providers:(t.Responses||[]).map(({ID:e,Addrs:r})=>({id:peerIdFromString$1(e),multiaddrs:r.map(n=>multiaddr$7(n)),protocols:[]}))};if(t.Type===FinalPeer){let e={id:t.ID??peerIdFromString$1(t.ID),multiaddrs:[],protocols:[]};return t.Responses&&t.Responses.length&&(e={id:peerIdFromString$1(t.Responses[0].ID),multiaddrs:t.Responses[0].Addrs.map(r=>multiaddr$7(r)),protocols:[]}),{name:"FINAL_PEER",type:t.Type,peer:e}}if(t.Type===QueryError)return{name:"QUERY_ERROR",type:t.Type,error:new Error(t.Extra)};if(t.Type===Provider)return{name:"PROVIDER",type:t.Type,providers:t.Responses.map(({ID:e,Addrs:r})=>({id:peerIdFromString$1(e),multiaddrs:r.map(n=>multiaddr$7(n)),protocols:[]}))};if(t.Type===Value)return{name:"VALUE",type:t.Type,value:fromString$y(t.Extra,"base64pad")};if(t.Type===AddingPeer){const e=t.Responses.map(({ID:r})=>peerIdFromString$1(r));if(!e.length)throw new Error("No peer found");return{name:"ADDING_PEER",type:t.Type,peer:e[0]}}if(t.Type===DialingPeer)return{name:"DIALING_PEER",type:t.Type,peer:peerIdFromString$1(t.ID)};throw new Error("Unknown DHT event type")},createFindPeer=configure$1(t=>{async function*e(r,n={}){const o=await t.post("dht/findpeer",{signal:n.signal,searchParams:toUrlSearchParams({arg:r,...n}),headers:n.headers});for await(const a of o.ndjson())yield mapEvent(a)}return e}),createFindProvs=configure$1(t=>{async function*e(r,n={}){const o=await t.post("dht/findprovs",{signal:n.signal,searchParams:toUrlSearchParams({arg:r.toString(),...n}),headers:n.headers});for await(const a of o.ndjson())yield mapEvent(a)}return e}),createGet$2=configure$1(t=>{async function*e(r,n={}){const o=await t.post("dht/get",{signal:n.signal,searchParams:toUrlSearchParams({arg:r instanceof Uint8Array?toString$D(r):r.toString(),...n}),headers:n.headers});for await(const a of o.ndjson())yield mapEvent(a)}return e}),createProvide=configure$1(t=>{async function*e(r,n={recursive:!1}){const o=Array.isArray(r)?r:[r],a=await t.post("dht/provide",{signal:n.signal,searchParams:toUrlSearchParams({arg:o.map(c=>c.toString()),...n}),headers:n.headers});for await(const c of a.ndjson())yield mapEvent(c)}return e}),createPut$1=configure$1(t=>{async function*e(r,n,o={}){const a=new AbortController,c=abortSignal(a.signal,o.signal),u=await t.post("dht/put",{signal:c,searchParams:toUrlSearchParams({arg:r instanceof Uint8Array?toString$D(r):r.toString(),...o}),...await multipartRequest([n],a,o.headers)});for await(const l of u.ndjson())yield mapEvent(l)}return e}),createQuery=configure$1(t=>{async function*e(r,n={}){const o=await t.post("dht/query",{signal:n.signal,searchParams:toUrlSearchParams({arg:r.toString(),...n}),headers:n.headers});for await(const a of o.ndjson())yield mapEvent(a)}return e});function createDht$1(t){return{findPeer:createFindPeer(t),findProvs:createFindProvs(t),get:createGet$2(t),provide:createProvide(t),put:createPut$1(t),query:createQuery(t)}}const createCmds=configure$1(t=>{async function e(r={}){return(await t.post("diag/cmds",{signal:r.signal,searchParams:toUrlSearchParams(r),headers:r.headers})).json()}return e}),createNet=configure$1(t=>{async function e(r={}){return(await t.post("diag/net",{signal:r.signal,searchParams:toUrlSearchParams(r),headers:r.headers})).json()}return e}),createSys=configure$1(t=>{async function e(r={}){return(await t.post("diag/sys",{signal:r.signal,searchParams:toUrlSearchParams(r),headers:r.headers})).json()}return e});function createDiag(t){return{cmds:createCmds(t),net:createNet(t),sys:createSys(t)}}const createChmod=configure$1(t=>{async function e(r,n,o={}){await(await t.post("files/chmod",{signal:o.signal,searchParams:toUrlSearchParams({arg:r,mode:n,...o}),headers:o.headers})).text()}return e}),createCp=configure$1(t=>{async function e(r,n,o={}){const a=Array.isArray(r)?r:[r];await(await t.post("files/cp",{signal:o.signal,searchParams:toUrlSearchParams({arg:a.concat(n).map(c=>CID$7.asCID(c)?`/ipfs/${c}`:c),...o}),headers:o.headers})).text()}return e}),createFlush=configure$1(t=>{async function e(r,n={}){if(!r||typeof r!="string")throw new Error("ipfs.files.flush requires a path");const o=await(await t.post("files/flush",{signal:n.signal,searchParams:toUrlSearchParams({arg:r,...n}),headers:n.headers})).json();return CID$7.parse(o.Cid)}return e});function objectToCamelWithMetadata(t){const e=objectToCamel(t);return Object.prototype.hasOwnProperty.call(e,"mode")&&(e.mode=parseInt(e.mode,8)),Object.prototype.hasOwnProperty.call(e,"mtime")&&(e.mtime={secs:e.mtime,nsecs:e.mtimeNsecs||0},delete e.mtimeNsecs),e}const createLs$6=configure$1(t=>{async function*e(r,n={}){if(!r)throw new Error("ipfs.files.ls requires a path");const o=await t.post("files/ls",{signal:n.signal,searchParams:toUrlSearchParams({arg:CID$7.asCID(r)?`/ipfs/${r}`:r,long:!0,...n,stream:!0}),headers:n.headers});for await(const a of o.ndjson())if("Entries"in a)for(const c of a.Entries||[])yield toCoreInterface$2(objectToCamelWithMetadata(c));else yield toCoreInterface$2(objectToCamelWithMetadata(a))}return e});function toCoreInterface$2(t){return t.hash&&(t.cid=CID$7.parse(t.hash)),delete t.hash,t.type=t.type===1?"directory":"file",t}const createMkdir=configure$1(t=>{async function e(r,n={}){await(await t.post("files/mkdir",{signal:n.signal,searchParams:toUrlSearchParams({arg:r,...n}),headers:n.headers})).text()}return e}),createMv=configure$1(t=>{async function e(r,n,o={}){Array.isArray(r)||(r=[r]),await(await t.post("files/mv",{signal:o.signal,searchParams:toUrlSearchParams({arg:r.concat(n),...o}),headers:o.headers})).text()}return e});var source$1=t=>{if(t[Symbol.asyncIterator])return t;if(t.getReader)return async function*(){const e=t.getReader();try{for(;;){const{done:r,value:n}=await e.read();if(r)return;yield n}}finally{e.releaseLock()}}();throw new Error("unknown stream")};const toIterable=getDefaultExportFromCjs(source$1),createRead=configure$1(t=>{async function*e(r,n={}){const o=await t.post("files/read",{signal:n.signal,searchParams:toUrlSearchParams({arg:r,count:n.length,...n}),headers:n.headers});yield*toIterable(o.body)}return e}),createRm$4=configure$1(t=>{async function e(r,n={}){const o=await t.post("files/rm",{signal:n.signal,searchParams:toUrlSearchParams({arg:r,...n}),headers:n.headers}),a=await o.text();if(a!==""){const c=new HTTP$4.HTTPError(o);throw c.message=a,c}}return e}),createStat$2=configure$1(t=>{async function e(r,n={}){const o=await(await t.post("files/stat",{signal:n.signal,searchParams:toUrlSearchParams({arg:r,...n}),headers:n.headers})).json();return o.WithLocality=o.WithLocality||!1,toCoreInterface$1(objectToCamelWithMetadata(o))}return e});function toCoreInterface$1(t){return t.cid=CID$7.parse(t.hash),delete t.hash,t}const createTouch=configure$1(t=>{async function e(r,n={}){await(await t.post("files/touch",{signal:n.signal,searchParams:toUrlSearchParams({arg:r,...n}),headers:n.headers})).text()}return e}),createWrite=configure$1(t=>{async function e(r,n,o={}){const a=new AbortController,c=abortSignal(a.signal,o.signal);await(await t.post("files/write",{signal:c,searchParams:toUrlSearchParams({arg:r,streamChannels:!0,count:o.length,...o}),...await multipartRequest([{content:n,path:"arg",mode:modeToString$1(o.mode),mtime:parseMtime(o.mtime)}],a,o.headers)})).text()}return e});function createFiles(t){return{chmod:createChmod(t),cp:createCp(t),flush:createFlush(t),ls:createLs$6(t),mkdir:createMkdir(t),mv:createMv(t),read:createRead(t),rm:createRm$4(t),stat:createStat$2(t),touch:createTouch(t),write:createWrite(t)}}const createExport=configure$1(t=>async(e,r,n={})=>{throw errcode(new Error("Not implemented"),"ERR_NOT_IMPLEMENTED")}),createGen=configure$1(t=>{async function e(r,n){const o=n??{type:"Ed25519"},a=await(await t.post("key/gen",{signal:o.signal,searchParams:toUrlSearchParams({arg:r,...o}),headers:o.headers})).json();return objectToCamel(a)}return e}),createImport=configure$1(t=>{async function e(r,n,o,a={}){const c=await(await t.post("key/import",{signal:a.signal,searchParams:toUrlSearchParams({arg:r,pem:n,password:o,...a}),headers:a.headers})).json();return objectToCamel(c)}return e}),createInfo=configure$1(t=>async(e,r={})=>{throw errcode(new Error("Not implemented"),"ERR_NOT_IMPLEMENTED")}),createList=configure$1(t=>{async function e(r={}){return((await(await t.post("key/list",{signal:r.signal,searchParams:toUrlSearchParams(r),headers:r.headers})).json()).Keys||[]).map(n=>objectToCamel(n))}return e}),createRename=configure$1(t=>{async function e(r,n,o={}){const a=await t.post("key/rename",{signal:o.signal,searchParams:toUrlSearchParams({arg:[r,n],...o}),headers:o.headers});return objectToCamel(await a.json())}return e}),createRm$3=configure$1(t=>{async function e(r,n={}){const o=await(await t.post("key/rm",{signal:n.signal,searchParams:toUrlSearchParams({arg:r,...n}),headers:n.headers})).json();return objectToCamel(o.Keys[0])}return e});function createKey(t){return{export:createExport(t),gen:createGen(t),import:createImport(t),info:createInfo(t),list:createList(t),rename:createRename(t),rm:createRm$3(t)}}const createLevel=configure$1(t=>{async function e(r,n,o={}){const a=await t.post("log/level",{signal:o.signal,searchParams:toUrlSearchParams({arg:[r,n],...o}),headers:o.headers});return objectToCamel(await a.json())}return e}),createLs$5=configure$1(t=>{async function e(r={}){return(await(await t.post("log/ls",{signal:r.signal,searchParams:toUrlSearchParams(r),headers:r.headers})).json()).Strings}return e}),createTail=configure$1(t=>{async function*e(r={}){yield*(await t.post("log/tail",{signal:r.signal,searchParams:toUrlSearchParams(r),headers:r.headers})).ndjson()}return e});function createLog(t){return{level:createLevel(t),ls:createLs$5(t),tail:createTail(t)}}const createPublish$1=configure$1(t=>{async function e(r,n={}){const o=await t.post("name/publish",{signal:n.signal,searchParams:toUrlSearchParams({arg:`${r}`,...n}),headers:n.headers});return objectToCamel(await o.json())}return e}),createResolve$1=configure$1(t=>{async function*e(r,n={}){const o=await t.post("name/resolve",{signal:n.signal,searchParams:toUrlSearchParams({arg:r,stream:!0,...n}),headers:n.headers});for await(const a of o.ndjson())yield a.Path}return e}),createCancel=configure$1(t=>{async function e(r,n={}){const o=await t.post("name/pubsub/cancel",{signal:n.signal,searchParams:toUrlSearchParams({arg:r,...n}),headers:n.headers});return objectToCamel(await o.json())}return e}),createState=configure$1(t=>{async function e(r={}){const n=await t.post("name/pubsub/state",{signal:r.signal,searchParams:toUrlSearchParams(r),headers:r.headers});return objectToCamel(await n.json())}return e}),createSubs=configure$1(t=>{async function e(r={}){return(await(await t.post("name/pubsub/subs",{signal:r.signal,searchParams:toUrlSearchParams(r),headers:r.headers})).json()).Strings||[]}return e});function createPubsub$2(t){return{cancel:createCancel(t),state:createState(t),subs:createSubs(t)}}function createName(t){return{publish:createPublish$1(t),resolve:createResolve$1(t),pubsub:createPubsub$2(t)}}const createData=configure$1(t=>{async function e(r,n={}){const o=await(await t.post("object/data",{signal:n.signal,searchParams:toUrlSearchParams({arg:`${r instanceof Uint8Array?CID$7.decode(r):r}`,...n}),headers:n.headers})).arrayBuffer();return new Uint8Array(o,0,o.byteLength)}return e}),createGet$1=configure$1(t=>{async function e(r,n={}){const o=await(await t.post("object/get",{signal:n.signal,searchParams:toUrlSearchParams({arg:`${r instanceof Uint8Array?CID$7.decode(r):r}`,dataEncoding:"base64",...n}),headers:n.headers})).json();return{Data:fromString$y(o.Data,"base64pad"),Links:(o.Links||[]).map(a=>({Name:a.Name,Hash:CID$7.parse(a.Hash),Tsize:a.Size}))}}return e}),createLinks=configure$1(t=>{async function e(r,n={}){return((await(await t.post("object/links",{signal:n.signal,searchParams:toUrlSearchParams({arg:`${r instanceof Uint8Array?CID$7.decode(r):r}`,...n}),headers:n.headers})).json()).Links||[]).map(o=>({Name:o.Name,Tsize:o.Size,Hash:CID$7.parse(o.Hash)}))}return e}),createNew=configure$1(t=>{async function e(r={}){const n=await t.post("object/new",{signal:r.signal,searchParams:toUrlSearchParams({arg:r.template,...r}),headers:r.headers}),{Hash:o}=await n.json();return CID$7.parse(o)}return e}),createPut=(t,e)=>configure$1(r=>{const n=createPut$2(t,e);async function o(a,c={}){return n(a,{...c,storeCodec:"dag-pb",hashAlg:"sha2-256",version:1})}return o})(e),createStat$1=configure$1(t=>{async function e(r,n={}){const o=await(await t.post("object/stat",{signal:n.signal,searchParams:toUrlSearchParams({arg:`${r}`,...n}),headers:n.headers})).json();return{...o,Hash:CID$7.parse(o.Hash)}}return e}),createAddLink=configure$1(t=>{async function e(r,n,o={}){const a=await t.post("object/patch/add-link",{signal:o.signal,searchParams:toUrlSearchParams({arg:[`${r}`,n.Name||n.name||"",(n.Hash||n.cid||"").toString()||null],...o}),headers:o.headers}),{Hash:c}=await a.json();return CID$7.parse(c)}return e}),createAppendData=configure$1(t=>{async function e(r,n,o={}){const a=new AbortController,c=abortSignal(a.signal,o.signal),u=await t.post("object/patch/append-data",{signal:c,searchParams:toUrlSearchParams({arg:`${r}`,...o}),...await multipartRequest([n],a,o.headers)}),{Hash:l}=await u.json();return CID$7.parse(l)}return e}),createRmLink=configure$1(t=>{async function e(r,n,o={}){const a=await t.post("object/patch/rm-link",{signal:o.signal,searchParams:toUrlSearchParams({arg:[`${r}`,n.Name||n.name||null],...o}),headers:o.headers}),{Hash:c}=await a.json();return CID$7.parse(c)}return e}),createSetData=configure$1(t=>{async function e(r,n,o={}){const a=new AbortController,c=abortSignal(a.signal,o.signal),u=await t.post("object/patch/set-data",{signal:c,searchParams:toUrlSearchParams({arg:[`${r}`],...o}),...await multipartRequest([n],a,o.headers)}),{Hash:l}=await u.json();return CID$7.parse(l)}return e});function createPatch(t){return{addLink:createAddLink(t),appendData:createAppendData(t),rmLink:createRmLink(t),setData:createSetData(t)}}function createObject(t,e){return{data:createData(e),get:createGet$1(e),links:createLinks(e),new:createNew(e),put:createPut(t,e),stat:createStat$1(e),patch:createPatch(e)}}const createAddAll$1=configure$1(t=>{async function*e(r,n={}){for await(const{path:o,recursive:a,metadata:c}of normaliseInput$3(r)){const u=await t.post("pin/add",{signal:n.signal,searchParams:toUrlSearchParams({...n,arg:o,recursive:a,metadata:c?JSON.stringify(c):void 0,stream:!0}),headers:n.headers});for await(const l of u.ndjson()){if(l.Pins){for(const f of l.Pins)yield CID$7.parse(f);continue}yield CID$7.parse(l)}}}return e});function createAdd$3(t){const e=createAddAll$1(t);return configure$1(()=>{async function r(n,o={}){return last(e([{path:n,...o}],o))}return r})(t)}function toPin(t,e,r){const n={type:t,cid:CID$7.parse(e)};return r&&(n.metadata=r),n}const createLs$4=configure$1(t=>{async function*e(r={}){let n=[];r.paths&&(n=Array.isArray(r.paths)?r.paths:[r.paths]);const o=await t.post("pin/ls",{signal:r.signal,searchParams:toUrlSearchParams({...r,arg:n.map(a=>`${a}`),stream:!0}),headers:r.headers});for await(const a of o.ndjson()){if(a.Keys){for(const c of Object.keys(a.Keys))yield toPin(a.Keys[c].Type,c,a.Keys[c].Metadata);return}yield toPin(a.Type,a.Cid,a.Metadata)}}return e}),createRmAll$1=configure$1(t=>{async function*e(r,n={}){for await(const{path:o,recursive:a}of normaliseInput$3(r)){const c=new URLSearchParams(n.searchParams);c.append("arg",`${o}`),a!=null&&c.set("recursive",String(a));const u=await t.post("pin/rm",{signal:n.signal,headers:n.headers,searchParams:toUrlSearchParams({...n,arg:`${o}`,recursive:a})});for await(const l of u.ndjson()){if(l.Pins){yield*l.Pins.map(f=>CID$7.parse(f));continue}yield CID$7.parse(l)}}}return e}),createRm$2=t=>{const e=createRmAll$1(t);return configure$1(()=>{async function r(n,o={}){return last(e([{path:n,...o}],o))}return r})(t)},decodePin=({Name:t,Status:e,Cid:r})=>({cid:CID$7.parse(r),name:t,status:e}),encodeService=t=>{if(typeof t=="string"&&t!=="")return t;throw new TypeError("service name must be passed")},encodeCID$7=t=>{if(CID$7.asCID(t))return t.toString();throw new TypeError(`CID instance expected instead of ${typeof t}`)},encodeQuery=({service:t,cid:e,name:r,status:n,all:o})=>{const a=toUrlSearchParams({service:encodeService(t),name:r,force:o?!0:void 0});if(e)for(const c of e)a.append("cid",encodeCID$7(c));if(n)for(const c of n)a.append("status",c);return a},encodeAddParams=({cid:t,service:e,background:r,name:n,origins:o})=>{const a=toUrlSearchParams({arg:encodeCID$7(t),service:encodeService(e),name:n,background:r?!0:void 0});if(o)for(const c of o)a.append("origin",c.toString());return a};function createAdd$2(t){async function e(r,{timeout:n,signal:o,headers:a,...c}){const u=await t.post("pin/remote/add",{timeout:n,signal:o,headers:a,searchParams:encodeAddParams({cid:r,...c})});return decodePin(await u.json())}return e}function createLs$3(t){async function*e({timeout:r,signal:n,headers:o,...a}){const c=await t.post("pin/remote/ls",{timeout:r,signal:n,headers:o,searchParams:encodeQuery(a)});for await(const u of c.ndjson())yield decodePin(u)}return e}function createRm$1(t){async function e({timeout:r,signal:n,headers:o,...a}){await t.post("pin/remote/rm",{timeout:r,signal:n,headers:o,searchParams:encodeQuery({...a,all:!1})})}return e}function createRmAll(t){async function e({timeout:r,signal:n,headers:o,...a}){await t.post("pin/remote/rm",{timeout:r,signal:n,headers:o,searchParams:encodeQuery({...a,all:!0})})}return e}function encodeEndpoint(t){const e=String(t);if(e==="undefined")throw Error("endpoint is required");return e[e.length-1]==="/"?e.slice(0,-1):e}function decodeRemoteService(t){return{service:t.Service,endpoint:new URL(t.ApiEndpoint),...t.Stat&&{stat:decodeStat(t.Stat)}}}function decodeStat(t){switch(t.Status){case"valid":{const{Pinning:e,Pinned:r,Queued:n,Failed:o}=t.PinCount;return{status:"valid",pinCount:{queued:n,pinning:e,pinned:r,failed:o}}}case"invalid":return{status:"invalid"};default:return{status:t.Status}}}function createAdd$1(t){async function e(r,n){const{endpoint:o,key:a,headers:c,timeout:u,signal:l}=n;await t.post("pin/remote/service/add",{timeout:u,signal:l,searchParams:toUrlSearchParams({arg:[r,encodeEndpoint(o),a]}),headers:c})}return e}function createLs$2(t){async function e(r={}){const{stat:n,headers:o,timeout:a,signal:c}=r,u=await t.post("pin/remote/service/ls",{timeout:a,signal:c,headers:o,searchParams:n===!0?toUrlSearchParams({stat:n}):void 0}),{RemoteServices:l}=await u.json();return l.map(decodeRemoteService)}return e}function createRm(t){async function e(r,n={}){await t.post("pin/remote/service/rm",{signal:n.signal,headers:n.headers,searchParams:toUrlSearchParams({arg:r})})}return e}function createService(t){const e=new Client(t);return{add:createAdd$1(e),ls:createLs$2(e),rm:createRm(e)}}function createRemote(t){const e=new Client(t);return{add:createAdd$2(e),ls:createLs$3(e),rm:createRm$1(e),rmAll:createRmAll(e),service:createService(t)}}function createPin(t){return{addAll:createAddAll$1(t),add:createAdd$3(t),ls:createLs$4(t),rmAll:createRmAll$1(t),rm:createRm$2(t),remote:createRemote(t)}}const rpcArrayToTextArray=t=>Array.isArray(t)?t.map(rpcToText):t,rpcToText=t=>toString$D(rpcToBytes(t)),rpcToBytes=t=>base64url$7.decode(t),rpcToBigInt=t=>BigInt(`0x${toString$D(base64url$7.decode(t),"base16")}`),textToUrlSafeRpc=t=>base64url$7.encode(fromString$y(t)),createLs$1=configure$1(t=>{async function e(r={}){const{Strings:n}=await(await t.post("pubsub/ls",{signal:r.signal,searchParams:toUrlSearchParams(r),headers:r.headers})).json();return rpcArrayToTextArray(n)||[]}return e}),createPeers$2=configure$1(t=>{async function e(r,n={}){const o=await t.post("pubsub/peers",{signal:n.signal,searchParams:toUrlSearchParams({arg:textToUrlSafeRpc(r),...n}),headers:n.headers}),{Strings:a}=await o.json();return a||[]}return e}),createPublish=configure$1(t=>{async function e(r,n,o={}){const a=toUrlSearchParams({arg:textToUrlSafeRpc(r),...o}),c=new AbortController,u=abortSignal(c.signal,o.signal);await(await t.post("pubsub/pub",{signal:u,searchParams:a,...await multipartRequest([n],c,o.headers)})).text()}return e}),log$U=logger$3("ipfs-http-client:pubsub:subscribe"),createSubscribe=(t,e)=>configure$1(r=>{async function n(o,a,c={}){c.signal=e.subscribe(o,a,c.signal);let u,l;const f=new Promise((g,$)=>{u=g,l=$}),p=setTimeout(()=>u(),1e3);return r.post("pubsub/sub",{signal:c.signal,searchParams:toUrlSearchParams({arg:textToUrlSafeRpc(o),...c}),headers:c.headers}).catch(g=>{e.unsubscribe(o,a),l(g)}).then(g=>{clearTimeout(p),g&&(readMessages(g,{onMessage:$=>{if(a){if(typeof a=="function"){a($);return}typeof a.handleEvent=="function"&&a.handleEvent($)}},onEnd:()=>e.unsubscribe(o,a),onError:c.onError}),u())}),f}return n})(t);async function readMessages(t,{onMessage:e,onEnd:r,onError:n}){n=n||log$U;try{for await(const o of t.ndjson())try{if(!o.from)continue;o.from!=null&&o.seqno!=null?e({type:"signed",from:peerIdFromString$1(o.from),data:rpcToBytes(o.data),sequenceNumber:rpcToBigInt(o.seqno),topic:rpcToText(o.topicIDs[0]),key:rpcToBytes(o.key??"u"),signature:rpcToBytes(o.signature??"u")}):e({type:"unsigned",data:rpcToBytes(o.data),topic:rpcToText(o.topicIDs[0])})}catch(a){a.message=`Failed to parse pubsub message: ${a.message}`,n(a,!1,o)}}catch(o){isAbortError(o)||n(o,!0)}finally{r()}}const isAbortError=t=>{switch(t.type){case"aborted":return!0;case"abort":return!0;default:return t.name==="AbortError"}},createUnsubscribe=(t,e)=>{async function r(n,o){e.unsubscribe(n,o)}return r};class SubscriptionTracker{constructor(){this._subs=new Map}subscribe(e,r,n){const o=this._subs.get(e)||[];if(o.find(c=>c.handler===r))throw new Error(`Already subscribed to ${e} with this handler`);const a=new AbortController;return this._subs.set(e,[{handler:r,controller:a}].concat(o)),n&&n.addEventListener("abort",()=>this.unsubscribe(e,r)),a.signal}unsubscribe(e,r){const n=this._subs.get(e)||[];let o;r?(this._subs.set(e,n.filter(a=>a.handler!==r)),o=n.filter(a=>a.handler===r)):(this._subs.set(e,[]),o=n),(this._subs.get(e)||[]).length||this._subs.delete(e),o.forEach(a=>a.controller.abort())}}function createPubsub$1(t){const e=new SubscriptionTracker;return{ls:createLs$1(t),peers:createPeers$2(t),publish:createPublish(t),subscribe:createSubscribe(t,e),unsubscribe:createUnsubscribe(t,e)}}const createLocal=configure$1(t=>{async function*e(r={}){yield*(await t.post("refs/local",{signal:r.signal,transform:objectToCamel,searchParams:toUrlSearchParams(r),headers:r.headers})).ndjson()}return e}),createRefs=configure$1((t,e)=>Object.assign(async function*(r,n={}){const o=Array.isArray(r)?r:[r];yield*(await t.post("refs",{signal:n.signal,searchParams:toUrlSearchParams({arg:o.map(a=>`${a instanceof Uint8Array?CID$7.decode(a):a}`),...n}),headers:n.headers,transform:objectToCamel})).ndjson()},{local:createLocal(e)})),createGc=configure$1(t=>{async function*e(r={}){yield*(await t.post("repo/gc",{signal:r.signal,searchParams:toUrlSearchParams(r),headers:r.headers,transform:n=>({err:n.Error?new Error(n.Error):null,cid:(n.Key||{})["/"]?CID$7.parse(n.Key["/"]):null})})).ndjson()}return e}),createStat=configure$1(t=>{async function e(r={}){const n=await(await t.post("repo/stat",{signal:r.signal,searchParams:toUrlSearchParams(r),headers:r.headers})).json();return{numObjects:BigInt(n.NumObjects),repoSize:BigInt(n.RepoSize),repoPath:n.RepoPath,version:n.Version,storageMax:BigInt(n.StorageMax)}}return e}),createVersion$1=configure$1(t=>{async function e(r={}){return(await(await t.post("repo/version",{signal:r.signal,searchParams:toUrlSearchParams(r),headers:r.headers})).json()).Version}return e});function createRepo(t){return{gc:createGc(t),stat:createStat(t),version:createVersion$1(t)}}const createBw=configure$1(t=>{async function*e(r={}){yield*(await t.post("stats/bw",{signal:r.signal,searchParams:toUrlSearchParams(r),headers:r.headers,transform:n=>({totalIn:BigInt(n.TotalIn),totalOut:BigInt(n.TotalOut),rateIn:parseFloat(n.RateIn),rateOut:parseFloat(n.RateOut)})})).ndjson()}return e});function createStats(t){return{bitswap:createStat$4(t),repo:createStat(t),bw:createBw(t)}}const createAddrs$1=configure$1(t=>{async function e(r={}){const n=await t.post("swarm/addrs",{signal:r.signal,searchParams:toUrlSearchParams(r),headers:r.headers}),{Addrs:o}=await n.json();return Object.keys(o).map(a=>({id:peerIdFromString$1(a),addrs:(o[a]||[]).map(c=>multiaddr$7(c))}))}return e}),createConnect$1=configure$1(t=>{async function e(r,n={}){const o=await t.post("swarm/connect",{signal:n.signal,searchParams:toUrlSearchParams({arg:r,...n}),headers:n.headers}),{Strings:a}=await o.json();return a||[]}return e}),createDisconnect$1=configure$1(t=>{async function e(r,n={}){const o=await t.post("swarm/disconnect",{signal:n.signal,searchParams:toUrlSearchParams({arg:r,...n}),headers:n.headers}),{Strings:a}=await o.json();return a||[]}return e}),createLocalAddrs$1=configure$1(t=>{async function e(r={}){const n=await t.post("swarm/addrs/local",{signal:r.signal,searchParams:toUrlSearchParams(r),headers:r.headers}),{Strings:o}=await n.json();return(o||[]).map(a=>multiaddr$7(a))}return e}),createPeers$1=configure$1(t=>{async function e(r={}){const n=await t.post("swarm/peers",{signal:r.signal,searchParams:toUrlSearchParams(r),headers:r.headers}),{Peers:o}=await n.json();return(o||[]).map(a=>({addr:multiaddr$7(a.Addr),peer:peerIdFromString$1(a.Peer),muxer:a.Muxer,latency:a.Latency,streams:a.Streams,direction:a.Direction==null?void 0:a.Direction===0?"inbound":"outbound"}))}return e});function createSwarm(t){return{addrs:createAddrs$1(t),connect:createConnect$1(t),disconnect:createDisconnect$1(t),localAddrs:createLocalAddrs$1(t),peers:createPeers$1(t)}}const createAddAll=configure$1(t=>{async function*e(r,n={}){const o=new AbortController,a=abortSignal(o.signal,n.signal),{headers:c,body:u,total:l,parts:f}=await multipartRequest(r,o,n.headers),[p,g]=typeof n.progress=="function"?createProgressHandler(l,f,n.progress):[void 0,void 0],$=await t.post("add",{searchParams:toUrlSearchParams({"stream-channels":!0,...n,progress:!!p}),onUploadProgress:g,signal:a,headers:c,body:u});for await(let _ of $.ndjson())_=objectToCamel(_),_.hash!==void 0?yield toCoreInterface(_):p&&p(_.bytes||0,_.name)}return e}),createProgressHandler=(t,e,r)=>e?[void 0,createOnUploadProgress(t,e,r)]:[r,void 0],createOnUploadProgress=(t,e,r)=>{let n=0;const o=e.length;return({loaded:a,total:c})=>{const u=Math.floor(a/c*t);for(;n<o;){const{start:l,end:f,name:p}=e[n];if(u<f){r(u-l,p);break}else r(f-l,p),n+=1}}};function toCoreInterface({name:t,hash:e,size:r,mode:n,mtime:o,mtimeNsecs:a}){const c={path:t,cid:CID$7.parse(e),size:parseInt(r)};return n!=null&&(c.mode=parseInt(n,8)),o!=null&&(c.mtime={secs:o,nsecs:a||0}),c}function createAdd(t){const e=createAddAll(t);return configure$1(()=>{async function r(n,o={}){return await last(e(normaliseInput$2(n),o))}return r})(t)}const createCat=configure$1(t=>{async function*e(r,n={}){yield*(await t.post("cat",{signal:n.signal,searchParams:toUrlSearchParams({arg:r.toString(),...n}),headers:n.headers})).iterator()}return e}),createCommands=configure$1(t=>async(e={})=>(await t.post("commands",{signal:e.signal,searchParams:toUrlSearchParams(e),headers:e.headers})).json()),createDns=configure$1(t=>async(e,r={})=>(await(await t.post("dns",{signal:r.signal,searchParams:toUrlSearchParams({arg:e,...r}),headers:r.headers})).json()).Path),createGetEndpointConfig=configure$1(t=>()=>{const e=new URL(t.opts.base||"");return{host:e.hostname,port:e.port,protocol:e.protocol,pathname:e.pathname,"api-path":e.pathname}}),createGet=configure$1(t=>{async function*e(r,n={}){const o={arg:`${r instanceof Uint8Array?CID$7.decode(r):r}`,...n};o.compressionLevel&&(o["compression-level"]=o.compressionLevel,delete o.compressionLevel),yield*(await t.post("get",{signal:n.signal,searchParams:toUrlSearchParams(o),headers:n.headers})).iterator()}return e}),createId=configure$1(t=>{async function e(r={}){const n=await(await t.post("id",{signal:r.signal,searchParams:toUrlSearchParams({arg:r.peerId?r.peerId.toString():void 0,...r}),headers:r.headers})).json(),o={...objectToCamel(n)};return o.id=peerIdFromString$1(o.id),o.addresses&&(o.addresses=o.addresses.map(a=>multiaddr$7(a))),o}return e}),createIsOnline=t=>{const e=createId(t);async function r(n={}){const o=await e(n);return!!(o&&o.addresses&&o.addresses.length)}return r},createLs=configure$1((t,e)=>{async function*r(n,o={}){const a=`${n instanceof Uint8Array?CID$7.decode(n):n}`;async function c(l){let f=l.Hash;if(f.includes("/")){const g=f.startsWith("/ipfs/")?f:`/ipfs/${f}`;f=(await createStat$2(e)(g)).cid}else f=CID$7.parse(f);const p={name:l.Name,path:a+(l.Name?`/${l.Name}`:""),size:l.Size,cid:f,type:typeOf(l)};return l.Mode&&(p.mode=parseInt(l.Mode,8)),l.Mtime!==void 0&&l.Mtime!==null&&(p.mtime={secs:l.Mtime},l.MtimeNsecs!==void 0&&l.MtimeNsecs!==null&&(p.mtime.nsecs=l.MtimeNsecs)),p}const u=await t.post("ls",{signal:o.signal,searchParams:toUrlSearchParams({arg:a,...o}),headers:o.headers});for await(let l of u.ndjson()){if(l=l.Objects,!l)throw new Error("expected .Objects in results");if(l=l[0],!l)throw new Error("expected one array in results.Objects");const f=l.Links;if(!Array.isArray(f))throw new Error("expected one array in results.Objects[0].Links");if(!f.length){yield c(l);return}yield*f.map(c)}}return r});function typeOf(t){switch(t.Type){case 1:case 5:return"dir";case 2:return"file";default:return"file"}}const createMount=configure$1(t=>{async function e(r={}){const n=await t.post("dns",{signal:r.signal,searchParams:toUrlSearchParams(r),headers:r.headers});return objectToCamel(await n.json())}return e}),createPing$1=configure$1(t=>{async function*e(r,n={}){yield*(await t.post("ping",{signal:n.signal,searchParams:toUrlSearchParams({arg:`${r}`,...n}),headers:n.headers,transform:objectToCamel})).ndjson()}return e}),createResolve=configure$1(t=>{async function e(r,n={}){const o=await t.post("resolve",{signal:n.signal,searchParams:toUrlSearchParams({arg:r,...n}),headers:n.headers}),{Path:a}=await o.json();return a}return e}),createStart=configure$1(t=>async(e={})=>{throw errcode(new Error("Not implemented"),"ERR_NOT_IMPLEMENTED")}),createStop=configure$1(t=>{async function e(r={}){await(await t.post("shutdown",{signal:r.signal,searchParams:toUrlSearchParams(r),headers:r.headers})).text()}return e}),createVersion=configure$1(t=>{async function e(r={}){const n=await t.post("version",{signal:r.signal,searchParams:toUrlSearchParams(r),headers:r.headers});return{...objectToCamel(await n.json()),"ipfs-http-client":"1.0.0"}}return e});function create$a(t={}){const e={name:identity$8.name,code:identity$8.code,encode:l=>l,decode:l=>l},r=Object.values(bases$7);(t.ipld&&t.ipld.bases?t.ipld.bases:[]).forEach(l=>r.push(l));const n=new Multibases({bases:r,loadBase:t.ipld&&t.ipld.loadBase}),o=Object.values(codecs);[dagPB,dagCBOR,dagJSON,dagJOSE,e].concat(t.ipld&&t.ipld.codecs||[]).forEach(l=>o.push(l));const a=new Multicodecs({codecs:o,loadCodec:t.ipld&&t.ipld.loadCodec}),c=Object.values(hashes);(t.ipld&&t.ipld.hashers?t.ipld.hashers:[]).forEach(l=>c.push(l));const u=new Multihashes({hashers:c,loadHasher:t.ipld&&t.ipld.loadHasher});return{add:createAdd(t),addAll:createAddAll(t),bitswap:createBitswap$1(t),block:createBlock(t),bootstrap:createBootstrap(t),cat:createCat(t),commands:createCommands(t),config:createConfig(t),dag:createDag(a,t),dht:createDht$1(t),diag:createDiag(t),dns:createDns(t),files:createFiles(t),get:createGet(t),getEndpointConfig:createGetEndpointConfig(t),id:createId(t),isOnline:createIsOnline(t),key:createKey(t),log:createLog(t),ls:createLs(t),mount:createMount(t),name:createName(t),object:createObject(a,t),pin:createPin(t),ping:createPing$1(t),pubsub:createPubsub$1(t),refs:createRefs(t),repo:createRepo(t),resolve:createResolve(t),start:createStart(t),stats:createStats(t),stop:createStop(t),swarm:createSwarm(t),version:createVersion(t),bases:n,codecs:a,hashers:u}}let AbortError$6=class extends Error{constructor(t,e){super(t??"The operation was aborted"),this.type="aborted",this.code=e??"ABORT_ERR"}};function abortableSource$5(t,e,r){const n=r??{},o=getIterator(t);async function*a(){let c;const u=()=>{c?.()};for(e.addEventListener("abort",u);;){let l;try{if(e.aborted){const{abortMessage:p,abortCode:g}=n;throw new AbortError$6(p,g)}const f=new Promise((p,g)=>{c=()=>{const{abortMessage:$,abortCode:_}=n;g(new AbortError$6($,_))}});l=await Promise.race([f,o.next()]),c=null}catch(f){e.removeEventListener("abort",u);const p=f.type==="aborted"&&e.aborted;if(p&&n.onAbort!=null&&await n.onAbort(t),typeof o.return=="function")try{const g=o.return();g instanceof Promise&&g.catch($=>{n.onReturnError!=null&&n.onReturnError($)})}catch(g){n.onReturnError!=null&&n.onReturnError(g)}if(p&&n.returnOnAbort===!0)return;throw f}if(l.done===!0)break;yield l.value}e.removeEventListener("abort",u)}return a()}const isV4$5=isIPv4,isV6$5=isIPv6,toBytes$5=function(t){let e=0;if(t=t.toString().trim(),isV4$5(t)){const r=new Uint8Array(e+4);return t.split(/\./g).forEach(n=>{r[e++]=parseInt(n,10)&255}),r}if(isV6$5(t)){const r=t.split(":",8);let n;for(n=0;n<r.length;n++){const a=isV4$5(r[n]);let c;a&&(c=toBytes$5(r[n]),r[n]=toString$D(c.slice(0,2),"base16")),c!=null&&++n<8&&r.splice(n,0,toString$D(c.slice(2,4),"base16"))}if(r[0]==="")for(;r.length<8;)r.unshift("0");else if(r[r.length-1]==="")for(;r.length<8;)r.push("0");else if(r.length<8){for(n=0;n<r.length&&r[n]!=="";n++);const a=[n,1];for(n=9-r.length;n>0;n--)a.push("0");r.splice.apply(r,a)}const o=new Uint8Array(e+16);for(n=0;n<r.length;n++){const a=parseInt(r[n],16);o[e++]=a>>8&255,o[e++]=a&255}return o}throw new Error("invalid ip address")},toString$e=function(t,e=0,r){e=~~e,r=r??t.length-e;const n=new DataView(t.buffer);if(r===4){const o=[];for(let a=0;a<r;a++)o.push(t[e+a]);return o.join(".")}if(r===16){const o=[];for(let a=0;a<r;a+=2)o.push(n.getUint16(e+a).toString(16));return o.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""},V$5=-1,names$5={},codes$7={},table$5=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,V$5,"ip6zone"],[43,8,"ipcidr"],[53,V$5,"dns",!0],[54,V$5,"dns4",!0],[55,V$5,"dns6",!0],[56,V$5,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc"],[281,0,"webrtc-w3c"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,V$5,"unix",!1,!0],[421,V$5,"ipfs"],[421,V$5,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,V$5,"garlic64"],[448,0,"tls"],[449,V$5,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,V$5,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[777,V$5,"memory"]];table$5.forEach(t=>{const e=createProtocol$5(...t);codes$7[e.code]=e,names$5[e.name]=e});function createProtocol$5(t,e,r,n,o){return{code:t,size:e,name:r,resolvable:!!n,path:!!o}}function getProtocol$5(t){if(typeof t=="number"){if(codes$7[t]!=null)return codes$7[t];throw new Error(`no protocol with code: ${t}`)}else if(typeof t=="string"){if(names$5[t]!=null)return names$5[t];throw new Error(`no protocol with name: ${t}`)}throw new Error(`invalid protocol id type: ${typeof t}`)}var encode_1$8=encode$x,MSB$d=128,REST$d=127,MSBALL$8=~REST$d,INT$8=Math.pow(2,31);function encode$x(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$8;)e[r++]=t&255|MSB$d,t/=128;for(;t&MSBALL$8;)e[r++]=t&255|MSB$d,t>>>=7;return e[r]=t|0,encode$x.bytes=r-n+1,e}var decode$K=read$9,MSB$1$8=128,REST$1$8=127;function read$9(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$9.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$8)<<o:(c&REST$1$8)*Math.pow(2,o),o+=7}while(c>=MSB$1$8);return read$9.bytes=a-n,r}var N1$b=Math.pow(2,7),N2$b=Math.pow(2,14),N3$b=Math.pow(2,21),N4$b=Math.pow(2,28),N5$b=Math.pow(2,35),N6$b=Math.pow(2,42),N7$b=Math.pow(2,49),N8$8=Math.pow(2,56),N9$8=Math.pow(2,63),length$9=function(t){return t<N1$b?1:t<N2$b?2:t<N3$b?3:t<N4$b?4:t<N5$b?5:t<N6$b?6:t<N7$b?7:t<N8$8?8:t<N9$8?9:10},varint$9={encode:encode_1$8,decode:decode$K,encodingLength:length$9},_brrp_varint$7=varint$9;const decode$J=(t,e=0)=>[_brrp_varint$7.decode(t,e),_brrp_varint$7.decode.bytes],encodeTo$7=(t,e,r=0)=>(_brrp_varint$7.encode(t,e,r),e),encodingLength$a=t=>_brrp_varint$7.encodingLength(t),equals$f=(t,e)=>{if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0},coerce$7=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")},fromString$b=t=>new TextEncoder().encode(t),toString$d=t=>new TextDecoder().decode(t),create$9=(t,e)=>{const r=e.byteLength,n=encodingLength$a(t),o=n+encodingLength$a(r),a=new Uint8Array(o+r);return encodeTo$7(t,a,0),encodeTo$7(r,a,n),a.set(e,o),new Digest$7(t,r,e,a)},decode$I=t=>{const e=coerce$7(t),[r,n]=decode$J(e),[o,a]=decode$J(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$7(r,o,c,e)},equals$e=(t,e)=>{if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$f(t.bytes,r.bytes)}};let Digest$7=class{constructor(t,e,r,n){this.code=t,this.size=e,this.digest=r,this.bytes=n}};function base$a(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$9=base$a,_brrp__multiformats_scope_baseX$7=src$9;let Encoder$9=class{constructor(t,e,r){this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$9=class{constructor(t,e,r){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$a(this,t)}},ComposedDecoder$7=class{constructor(t){this.decoders=t}or(t){return or$a(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$a=(t,e)=>new ComposedDecoder$7({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});let Codec$7=class{constructor(t,e,r,n){this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$9(t,e,r),this.decoder=new Decoder$9(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};const from$b=({name:t,prefix:e,encode:r,decode:n})=>new Codec$7(t,e,r,n),baseX$7=({prefix:t,name:e,alphabet:r})=>{const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$7(r,e);return from$b({prefix:t,name:e,encode:n,decode:a=>coerce$7(o(a))})},decode$H=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode$w=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648$7=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from$b({prefix:e,name:t,encode(o){return encode$w(o,n,r)},decode(o){return decode$H(o,n,r,t)}}),base58btc$6=baseX$7({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),base58flickr$5=baseX$7({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),base58$5=Object.freeze(Object.defineProperty({__proto__:null,base58btc:base58btc$6,base58flickr:base58flickr$5},Symbol.toStringTag,{value:"Module"})),base32$b=rfc4648$7({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),base32upper$5=rfc4648$7({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),base32pad$5=rfc4648$7({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),base32padupper$5=rfc4648$7({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),base32hex$5=rfc4648$7({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),base32hexupper$5=rfc4648$7({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),base32hexpad$5=rfc4648$7({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),base32hexpadupper$5=rfc4648$7({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),base32z$5=rfc4648$7({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),base32$c=Object.freeze(Object.defineProperty({__proto__:null,base32:base32$b,base32hex:base32hex$5,base32hexpad:base32hexpad$5,base32hexpadupper:base32hexpadupper$5,base32hexupper:base32hexupper$5,base32pad:base32pad$5,base32padupper:base32padupper$5,base32upper:base32upper$5,base32z:base32z$5},Symbol.toStringTag,{value:"Module"})),format$6=(t,e)=>{const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$6(r,baseCache$6(t),e||base58btc$6.encoder);default:return toStringV1$6(r,baseCache$6(t),e||base32$b.encoder)}},cache$8=new WeakMap,baseCache$6=t=>{const e=cache$8.get(t);if(e==null){const r=new Map;return cache$8.set(t,r),r}return e};let CID$6=class Ge{constructor(e,r,n,o){this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$6)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$6)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return Ge.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$9(e,r);return Ge.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return Ge.equals(this,e)}static equals(e,r){const n=r;return n&&e.code===n.code&&e.version===n.version&&equals$e(e.multihash,n.multihash)}toString(e){return format$6(this,e)}toJSON(){return{"/":format$6(this)}}link(){return this}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof Ge)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new Ge(n,o,a,c||encodeCID$6(n,o,a.bytes))}else if(r[cidSymbol$6]===!0){const{version:n,multihash:o,code:a}=r,c=decode$I(o);return Ge.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$6)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$6}) block encoding`);return new Ge(e,r,n,n.bytes)}case 1:{const o=encodeCID$6(e,r,n.bytes);return new Ge(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return Ge.create(0,DAG_PB_CODE$6,e)}static createV1(e,r){return Ge.create(1,e,r)}static decode(e){const[r,n]=Ge.decodeFirst(e);if(n.length)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=Ge.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$7(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$7(r.multihashCode,r.digestSize,a,o);return[r.version===0?Ge.createV0(c):Ge.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$J(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$6;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$6(e,r),a=Ge.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$6(a).set(n,e),a}};const parseCIDtoBytes$6=(t,e)=>{switch(t[0]){case"Q":{const r=e||base58btc$6;return[base58btc$6.prefix,r.decode(`${base58btc$6.prefix}${t}`)]}case base58btc$6.prefix:{const r=e||base58btc$6;return[base58btc$6.prefix,r.decode(t)]}case base32$b.prefix:{const r=e||base32$b;return[base32$b.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}},toStringV0$6=(t,e,r)=>{const{prefix:n}=r;if(n!==base58btc$6.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o},toStringV1$6=(t,e,r)=>{const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o},DAG_PB_CODE$6=112,SHA_256_CODE$6=18,encodeCID$6=(t,e,r)=>{const n=encodingLength$a(t),o=n+encodingLength$a(e),a=new Uint8Array(o+r.byteLength);return encodeTo$7(t,a,0),encodeTo$7(e,a,n),a.set(r,o),a},cidSymbol$6=Symbol.for("@ipld/js-cid/CID"),identity$5=from$b({prefix:"\0",name:"identity",encode:t=>toString$d(t),decode:t=>fromString$b(t)}),identityBase$5=Object.freeze(Object.defineProperty({__proto__:null,identity:identity$5},Symbol.toStringTag,{value:"Module"})),base2$a=rfc4648$7({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),base2$b=Object.freeze(Object.defineProperty({__proto__:null,base2:base2$a},Symbol.toStringTag,{value:"Module"})),base8$a=rfc4648$7({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),base8$b=Object.freeze(Object.defineProperty({__proto__:null,base8:base8$a},Symbol.toStringTag,{value:"Module"})),base10$a=baseX$7({prefix:"9",name:"base10",alphabet:"0123456789"}),base10$b=Object.freeze(Object.defineProperty({__proto__:null,base10:base10$a},Symbol.toStringTag,{value:"Module"})),base16$a=rfc4648$7({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),base16upper$5=rfc4648$7({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),base16$b=Object.freeze(Object.defineProperty({__proto__:null,base16:base16$a,base16upper:base16upper$5},Symbol.toStringTag,{value:"Module"})),base36$a=baseX$7({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),base36upper$5=baseX$7({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),base36$b=Object.freeze(Object.defineProperty({__proto__:null,base36:base36$a,base36upper:base36upper$5},Symbol.toStringTag,{value:"Module"})),base64$a=rfc4648$7({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),base64pad$5=rfc4648$7({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),base64url$5=rfc4648$7({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),base64urlpad$5=rfc4648$7({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),base64$b=Object.freeze(Object.defineProperty({__proto__:null,base64:base64$a,base64pad:base64pad$5,base64url:base64url$5,base64urlpad:base64urlpad$5},Symbol.toStringTag,{value:"Module"})),alphabet$6=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),alphabetBytesToChars$5=alphabet$6.reduce((t,e,r)=>(t[r]=e,t),[]),alphabetCharsToBytes$5=alphabet$6.reduce((t,e,r)=>(t[e.codePointAt(0)]=r,t),[]);function encode$v(t){return t.reduce((e,r)=>(e+=alphabetBytesToChars$5[r],e),"")}function decode$G(t){const e=[];for(const r of t){const n=alphabetCharsToBytes$5[r.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${r}`);e.push(n)}return new Uint8Array(e)}const base256emoji$a=from$b({prefix:"\u{1F680}",name:"base256emoji",encode:encode$v,decode:decode$G}),base256emoji$b=Object.freeze(Object.defineProperty({__proto__:null,base256emoji:base256emoji$a},Symbol.toStringTag,{value:"Module"}));new TextEncoder,new TextDecoder;const bases$5={...identityBase$5,...base2$b,...base8$b,...base10$b,...base16$b,...base32$c,...base36$b,...base58$5,...base64$b,...base256emoji$b};function convertToString$5(t,e){switch(getProtocol$5(t).code){case 4:case 41:return bytes2ip$5(e);case 42:return bytes2str$5(e);case 6:case 273:case 33:case 132:return bytes2port$5(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return bytes2str$5(e);case 421:return bytes2mh$5(e);case 444:return bytes2onion$5(e);case 445:return bytes2onion$5(e);case 466:return bytes2mb$5(e);default:return toString$D(e,"base16")}}function convertToBytes$5(t,e){switch(getProtocol$5(t).code){case 4:return ip2bytes$5(e);case 41:return ip2bytes$5(e);case 42:return str2bytes$5(e);case 6:case 273:case 33:case 132:return port2bytes$5(parseInt(e,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return str2bytes$5(e);case 421:return mh2bytes$5(e);case 444:return onion2bytes$5(e);case 445:return onion32bytes$5(e);case 466:return mb2bytes$5(e);default:return fromString$y(e,"base16")}}const decoders$5=Object.values(bases$5).map(t=>t.decoder),anybaseDecoder$5=function(){let t=decoders$5[0].or(decoders$5[1]);return decoders$5.slice(2).forEach(e=>t=t.or(e)),t}();function ip2bytes$5(t){if(!isIP(t))throw new Error("invalid ip address");return toBytes$5(t)}function bytes2ip$5(t){const e=toString$e(t,0,t.length);if(e==null)throw new Error("ipBuff is required");if(!isIP(e))throw new Error("invalid ip address");return e}function port2bytes$5(t){const e=new ArrayBuffer(2);return new DataView(e).setUint16(0,t),new Uint8Array(e)}function bytes2port$5(t){return new DataView(t.buffer).getUint16(t.byteOffset)}function str2bytes$5(t){const e=fromString$y(t),r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function bytes2str$5(t){const e=varint$w.decode(t);if(t=t.slice(varint$w.decode.bytes),t.length!==e)throw new Error("inconsistent lengths");return toString$D(t)}function mh2bytes$5(t){let e;t[0]==="Q"||t[0]==="1"?e=decode$I(base58btc$6.decode(`z${t}`)).bytes:e=CID$6.parse(t).multihash.bytes;const r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function mb2bytes$5(t){const e=anybaseDecoder$5.decode(t),r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function bytes2mb$5(t){const e=varint$w.decode(t),r=t.slice(varint$w.decode.bytes);if(r.length!==e)throw new Error("inconsistent lengths");return"u"+toString$D(r,"base64url")}function bytes2mh$5(t){const e=varint$w.decode(t),r=t.slice(varint$w.decode.bytes);if(r.length!==e)throw new Error("inconsistent lengths");return toString$D(r,"base58btc")}function onion2bytes$5(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==16)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion address.`);const r=base32$b.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes$5(n);return concat$8([r,o],r.length+o.length)}function onion32bytes$5(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==56)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion3 address.`);const r=base32$b.decode(`b${e[0]}`),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes$5(n);return concat$8([r,o],r.length+o.length)}function bytes2onion$5(t){const e=t.slice(0,t.length-2),r=t.slice(t.length-2),n=toString$D(e,"base32"),o=bytes2port$5(r);return`${n}:${o}`}function stringToStringTuples$3(t){const e=[],r=t.split("/").slice(1);if(r.length===1&&r[0]==="")return[];for(let n=0;n<r.length;n++){const o=r[n],a=getProtocol$5(o);if(a.size===0){e.push([o]);continue}if(n++,n>=r.length)throw ParseError$5("invalid address: "+t);if(a.path===!0){e.push([o,cleanPath$5(r.slice(n).join("/"))]);break}e.push([o,r[n]])}return e}function stringTuplesToString$5(t){const e=[];return t.map(r=>{const n=protoFromTuple$3(r);return e.push(n.name),r.length>1&&r[1]!=null&&e.push(r[1]),null}),cleanPath$5(e.join("/"))}function stringTuplesToTuples$3(t){return t.map(e=>{Array.isArray(e)||(e=[e]);const r=protoFromTuple$3(e);return e.length>1?[r.code,convertToBytes$5(r.code,e[1])]:[r.code]})}function tuplesToStringTuples$3(t){return t.map(e=>{const r=protoFromTuple$3(e);return e[1]!=null?[r.code,convertToString$5(r.code,e[1])]:[r.code]})}function tuplesToBytes$5(t){return fromBytes$3(concat$8(t.map(e=>{const r=protoFromTuple$3(e);let n=Uint8Array.from(varint$w.encode(r.code));return e.length>1&&e[1]!=null&&(n=concat$8([n,e[1]])),n})))}function sizeForAddr$5(t,e){return t.size>0?t.size/8:t.size===0?0:varint$w.decode(e)+(varint$w.decode.bytes??0)}function bytesToTuples$3(t){const e=[];let r=0;for(;r<t.length;){const n=varint$w.decode(t,r),o=varint$w.decode.bytes??0,a=getProtocol$5(n),c=sizeForAddr$5(a,t.slice(r+o));if(c===0){e.push([n]),r+=o;continue}const u=t.slice(r+o,r+o+c);if(r+=c+o,r>t.length)throw ParseError$5("Invalid address Uint8Array: "+toString$D(t,"base16"));e.push([n,u])}return e}function bytesToString$3(t){const e=bytesToTuples$3(t),r=tuplesToStringTuples$3(e);return stringTuplesToString$5(r)}function stringToBytes$3(t){t=cleanPath$5(t);const e=stringToStringTuples$3(t),r=stringTuplesToTuples$3(e);return tuplesToBytes$5(r)}function fromString$a(t){return stringToBytes$3(t)}function fromBytes$3(t){const e=validateBytes$3(t);if(e!=null)throw e;return Uint8Array.from(t)}function validateBytes$3(t){try{bytesToTuples$3(t)}catch(e){return e}}function cleanPath$5(t){return"/"+t.trim().split("/").filter(e=>e).join("/")}function ParseError$5(t){return new Error("Error parsing address: "+t)}function protoFromTuple$3(t){return getProtocol$5(t[0])}var __classPrivateFieldGet$3=function(t,e,r,n){if(r==="a"&&!n)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?t!==e||!n:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return r==="m"?n:r==="a"?n.call(t):n?n.value:e.get(t)},__classPrivateFieldSet$3=function(t,e,r,n,o){if(n==="m")throw new TypeError("Private method is not writable");if(n==="a"&&!o)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?t!==e||!o:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return n==="a"?o.call(t,r):o?o.value=r:e.set(t,r),r},_DefaultMultiaddr_string$3,_DefaultMultiaddr_tuples$3,_DefaultMultiaddr_stringTuples$3,_a$3;const inspect$5=Symbol.for("nodejs.util.inspect.custom"),DNS_CODES$5=[getProtocol$5("dns").code,getProtocol$5("dns4").code,getProtocol$5("dns6").code,getProtocol$5("dnsaddr").code],resolvers$5=new Map,symbol$9=Symbol.for("@multiformats/js-multiaddr/multiaddr");function isName(t){return isMultiaddr$5(t)?t.protos().some(e=>e.resolvable):!1}function isMultiaddr$5(t){return!!t?.[symbol$9]}let DefaultMultiaddr$3=class Ut{constructor(e){if(_DefaultMultiaddr_string$3.set(this,void 0),_DefaultMultiaddr_tuples$3.set(this,void 0),_DefaultMultiaddr_stringTuples$3.set(this,void 0),this[_a$3]=!0,e==null&&(e=""),e instanceof Uint8Array)this.bytes=fromBytes$3(e);else if(typeof e=="string"){if(e.length>0&&e.charAt(0)!=="/")throw new Error(`multiaddr "${e}" must start with a "/"`);this.bytes=fromString$a(e)}else if(isMultiaddr$5(e))this.bytes=fromBytes$3(e.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr")}toString(){return __classPrivateFieldGet$3(this,_DefaultMultiaddr_string$3,"f")==null&&__classPrivateFieldSet$3(this,_DefaultMultiaddr_string$3,bytesToString$3(this.bytes),"f"),__classPrivateFieldGet$3(this,_DefaultMultiaddr_string$3,"f")}toJSON(){return this.toString()}toOptions(){let e,r,n,o,a="";const c=getProtocol$5("tcp"),u=getProtocol$5("udp"),l=getProtocol$5("ip4"),f=getProtocol$5("ip6"),p=getProtocol$5("dns6"),g=getProtocol$5("ip6zone");for(const[$,_]of this.stringTuples())$===g.code&&(a=`%${_??""}`),DNS_CODES$5.includes($)&&(r=c.name,o=443,n=`${_??""}${a}`,e=$===p.code?6:4),($===c.code||$===u.code)&&(r=getProtocol$5($).name,o=parseInt(_??"")),($===l.code||$===f.code)&&(r=getProtocol$5($).name,n=`${_??""}${a}`,e=$===f.code?6:4);if(e==null||r==null||n==null||o==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:e,host:n,transport:r,port:o}}protos(){return this.protoCodes().map(e=>Object.assign({},getProtocol$5(e)))}protoCodes(){const e=[],r=this.bytes;let n=0;for(;n<r.length;){const o=varint$w.decode(r,n),a=varint$w.decode.bytes??0,c=getProtocol$5(o),u=sizeForAddr$5(c,r.slice(n+a));n+=u+a,e.push(o)}return e}protoNames(){return this.protos().map(e=>e.name)}tuples(){return __classPrivateFieldGet$3(this,_DefaultMultiaddr_tuples$3,"f")==null&&__classPrivateFieldSet$3(this,_DefaultMultiaddr_tuples$3,bytesToTuples$3(this.bytes),"f"),__classPrivateFieldGet$3(this,_DefaultMultiaddr_tuples$3,"f")}stringTuples(){return __classPrivateFieldGet$3(this,_DefaultMultiaddr_stringTuples$3,"f")==null&&__classPrivateFieldSet$3(this,_DefaultMultiaddr_stringTuples$3,tuplesToStringTuples$3(this.tuples()),"f"),__classPrivateFieldGet$3(this,_DefaultMultiaddr_stringTuples$3,"f")}encapsulate(e){return e=new Ut(e),new Ut(this.toString()+e.toString())}decapsulate(e){const r=e.toString(),n=this.toString(),o=n.lastIndexOf(r);if(o<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${e.toString()}`);return new Ut(n.slice(0,o))}decapsulateCode(e){const r=this.tuples();for(let n=r.length-1;n>=0;n--)if(r[n][0]===e)return new Ut(tuplesToBytes$5(r.slice(0,n)));return this}getPeerId(){try{const e=this.stringTuples().filter(r=>r[0]===names$5.ipfs.code).pop();if(e?.[1]!=null){const r=e[1];return r[0]==="Q"||r[0]==="1"?toString$D(base58btc$6.decode(`z${r}`),"base58btc"):toString$D(CID$6.parse(r).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){let e=null;try{e=this.stringTuples().filter(r=>getProtocol$5(r[0]).path===!0)[0][1],e==null&&(e=null)}catch{e=null}return e}equals(e){return equals$R(this.bytes,e.bytes)}async resolve(e){const r=this.protos().find(o=>o.resolvable);if(r==null)return[this];const n=resolvers$5.get(r.name);if(n==null)throw errcode(new Error(`no available resolver for ${r.name}`),"ERR_NO_AVAILABLE_RESOLVER");return(await n(this,e)).map(o=>new Ut(o))}nodeAddress(){const e=this.toOptions();if(e.transport!=="tcp"&&e.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${e.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:e.family,address:e.host,port:e.port}}isThinWaistAddress(e){const r=(e??this).protos();return!(r.length!==2||r[0].code!==4&&r[0].code!==41||r[1].code!==6&&r[1].code!==273)}[(_DefaultMultiaddr_string$3=new WeakMap,_DefaultMultiaddr_tuples$3=new WeakMap,_DefaultMultiaddr_stringTuples$3=new WeakMap,_a$3=symbol$9,inspect$5)](){return`Multiaddr(${bytesToString$3(this.bytes)})`}};function multiaddr$5(t){return new DefaultMultiaddr$3(t)}var TopicValidatorResult$1;(function(t){t.Accept="accept",t.Ignore="ignore",t.Reject="reject"})(TopicValidatorResult$1||(TopicValidatorResult$1={}));var FaultTolerance$3;(function(t){t[t.FATAL_ALL=0]="FATAL_ALL",t[t.NO_FATAL=1]="NO_FATAL"})(FaultTolerance$3||(FaultTolerance$3={}));let CodeError$1=class extends Error{constructor(e,r,n){super(e);N(this,"code");N(this,"props");this.code=r,this.name=n?.name??"CodeError",this.props=n??{}}},AggregateCodeError$1=class extends AggregateError{constructor(e,r,n,o){super(e,r);N(this,"code");N(this,"props");this.code=n,this.name=o?.name??"AggregateCodeError",this.props=o??{}}};function equals$d(t,e){if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0}function coerce$6(t){if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")}function fromString$9(t){return new TextEncoder().encode(t)}function toString$c(t){return new TextDecoder().decode(t)}function base$9(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$8=base$9,_brrp__multiformats_scope_baseX$6=src$8;let Encoder$8=class{constructor(t,e,r){N(this,"name");N(this,"prefix");N(this,"baseEncode");this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$8=class{constructor(t,e,r){N(this,"name");N(this,"prefix");N(this,"baseDecode");N(this,"prefixCodePoint");if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$9(this,t)}},ComposedDecoder$6=class{constructor(t){N(this,"decoders");this.decoders=t}or(t){return or$9(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r!=null)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};function or$9(t,e){return new ComposedDecoder$6({...t.decoders??{[t.prefix]:t},...e.decoders??{[e.prefix]:e}})}let Codec$6=class{constructor(t,e,r,n){N(this,"name");N(this,"prefix");N(this,"baseEncode");N(this,"baseDecode");N(this,"encoder");N(this,"decoder");this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$8(t,e,r),this.decoder=new Decoder$8(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};function from$a({name:t,prefix:e,encode:r,decode:n}){return new Codec$6(t,e,r,n)}function baseX$6({name:t,prefix:e,alphabet:r}){const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$6(r,t);return from$a({prefix:e,name:t,encode:n,decode:a=>coerce$6(o(a))})}function decode$F(t,e,r,n){const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c}function encode$u(t,e,r){const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c!==0&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a}function rfc4648$6({name:t,prefix:e,bitsPerChar:r,alphabet:n}){return from$a({prefix:e,name:t,encode(o){return encode$u(o,n,r)},decode(o){return decode$F(o,n,r,t)}})}const base58btc$5=baseX$6({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),base58flickr$4=baseX$6({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),base58$4=Object.freeze(Object.defineProperty({__proto__:null,base58btc:base58btc$5,base58flickr:base58flickr$4},Symbol.toStringTag,{value:"Module"})),base32$9=rfc4648$6({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),base32upper$4=rfc4648$6({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),base32pad$4=rfc4648$6({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),base32padupper$4=rfc4648$6({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),base32hex$4=rfc4648$6({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),base32hexupper$4=rfc4648$6({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),base32hexpad$4=rfc4648$6({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),base32hexpadupper$4=rfc4648$6({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),base32z$4=rfc4648$6({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),base32$a=Object.freeze(Object.defineProperty({__proto__:null,base32:base32$9,base32hex:base32hex$4,base32hexpad:base32hexpad$4,base32hexpadupper:base32hexpadupper$4,base32hexupper:base32hexupper$4,base32pad:base32pad$4,base32padupper:base32padupper$4,base32upper:base32upper$4,base32z:base32z$4},Symbol.toStringTag,{value:"Module"}));var encode_1$7=encode$t,MSB$c=128,REST$c=127,MSBALL$7=~REST$c,INT$7=Math.pow(2,31);function encode$t(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$7;)e[r++]=t&255|MSB$c,t/=128;for(;t&MSBALL$7;)e[r++]=t&255|MSB$c,t>>>=7;return e[r]=t|0,encode$t.bytes=r-n+1,e}var decode$E=read$8,MSB$1$7=128,REST$1$7=127;function read$8(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$8.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$7)<<o:(c&REST$1$7)*Math.pow(2,o),o+=7}while(c>=MSB$1$7);return read$8.bytes=a-n,r}var N1$a=Math.pow(2,7),N2$a=Math.pow(2,14),N3$a=Math.pow(2,21),N4$a=Math.pow(2,28),N5$a=Math.pow(2,35),N6$a=Math.pow(2,42),N7$a=Math.pow(2,49),N8$7=Math.pow(2,56),N9$7=Math.pow(2,63),length$8=function(t){return t<N1$a?1:t<N2$a?2:t<N3$a?3:t<N4$a?4:t<N5$a?5:t<N6$a?6:t<N7$a?7:t<N8$7?8:t<N9$7?9:10},varint$8={encode:encode_1$7,decode:decode$E,encodingLength:length$8},_brrp_varint$6=varint$8;function decode$D(t,e=0){return[_brrp_varint$6.decode(t,e),_brrp_varint$6.decode.bytes]}function encodeTo$6(t,e,r=0){return _brrp_varint$6.encode(t,e,r),e}function encodingLength$9(t){return _brrp_varint$6.encodingLength(t)}function create$8(t,e){const r=e.byteLength,n=encodingLength$9(t),o=n+encodingLength$9(r),a=new Uint8Array(o+r);return encodeTo$6(t,a,0),encodeTo$6(r,a,n),a.set(e,o),new Digest$6(t,r,e,a)}function decode$C(t){const e=coerce$6(t),[r,n]=decode$D(e),[o,a]=decode$D(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$6(r,o,c,e)}function equals$c(t,e){if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$d(t.bytes,r.bytes)}}let Digest$6=class{constructor(t,e,r,n){N(this,"code");N(this,"size");N(this,"digest");N(this,"bytes");this.code=t,this.size=e,this.digest=r,this.bytes=n}};function format$5(t,e){const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$5(r,baseCache$5(t),e??base58btc$5.encoder);default:return toStringV1$5(r,baseCache$5(t),e??base32$9.encoder)}}const cache$7=new WeakMap;function baseCache$5(t){const e=cache$7.get(t);if(e==null){const r=new Map;return cache$7.set(t,r),r}return e}let CID$5=class We{constructor(e,r,n,o){N(this,"code");N(this,"version");N(this,"multihash");N(this,"bytes");N(this,"/");N(this,zr,"CID");this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$5)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$5)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return We.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$8(e,r);return We.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return We.equals(this,e)}static equals(e,r){const n=r;return n!=null&&e.code===n.code&&e.version===n.version&&equals$c(e.multihash,n.multihash)}toString(e){return format$5(this,e)}toJSON(){return{"/":format$5(this)}}link(){return this}[(zr=Symbol.toStringTag,Symbol.for("nodejs.util.inspect.custom"))](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof We)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new We(n,o,a,c??encodeCID$5(n,o,a.bytes))}else if(r[cidSymbol$5]===!0){const{version:n,multihash:o,code:a}=r,c=decode$C(o);return We.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$5)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$5}) block encoding`);return new We(e,r,n,n.bytes)}case 1:{const o=encodeCID$5(e,r,n.bytes);return new We(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return We.create(0,DAG_PB_CODE$5,e)}static createV1(e,r){return We.create(1,e,r)}static decode(e){const[r,n]=We.decodeFirst(e);if(n.length!==0)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=We.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$6(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$6(r.multihashCode,r.digestSize,a,o);return[r.version===0?We.createV0(c):We.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$D(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$5;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$5(e,r),a=We.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$5(a).set(n,e),a}};function parseCIDtoBytes$5(t,e){switch(t[0]){case"Q":{const r=e??base58btc$5;return[base58btc$5.prefix,r.decode(`${base58btc$5.prefix}${t}`)]}case base58btc$5.prefix:{const r=e??base58btc$5;return[base58btc$5.prefix,r.decode(t)]}case base32$9.prefix:{const r=e??base32$9;return[base32$9.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}}function toStringV0$5(t,e,r){const{prefix:n}=r;if(n!==base58btc$5.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o}function toStringV1$5(t,e,r){const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o}const DAG_PB_CODE$5=112,SHA_256_CODE$5=18;function encodeCID$5(t,e,r){const n=encodingLength$9(t),o=n+encodingLength$9(e),a=new Uint8Array(o+r.byteLength);return encodeTo$6(t,a,0),encodeTo$6(e,a,n),a.set(r,o),a}const cidSymbol$5=Symbol.for("@ipld/js-cid/CID");function equals$b(t,e){if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0}const base10$8=baseX$6({prefix:"9",name:"base10",alphabet:"0123456789"}),base10$9=Object.freeze(Object.defineProperty({__proto__:null,base10:base10$8},Symbol.toStringTag,{value:"Module"})),base16$8=rfc4648$6({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),base16upper$4=rfc4648$6({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),base16$9=Object.freeze(Object.defineProperty({__proto__:null,base16:base16$8,base16upper:base16upper$4},Symbol.toStringTag,{value:"Module"})),base2$8=rfc4648$6({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),base2$9=Object.freeze(Object.defineProperty({__proto__:null,base2:base2$8},Symbol.toStringTag,{value:"Module"})),alphabet$5=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),alphabetBytesToChars$4=alphabet$5.reduce((t,e,r)=>(t[r]=e,t),[]),alphabetCharsToBytes$4=alphabet$5.reduce((t,e,r)=>(t[e.codePointAt(0)]=r,t),[]);function encode$s(t){return t.reduce((e,r)=>(e+=alphabetBytesToChars$4[r],e),"")}function decode$B(t){const e=[];for(const r of t){const n=alphabetCharsToBytes$4[r.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${r}`);e.push(n)}return new Uint8Array(e)}const base256emoji$8=from$a({prefix:"\u{1F680}",name:"base256emoji",encode:encode$s,decode:decode$B}),base256emoji$9=Object.freeze(Object.defineProperty({__proto__:null,base256emoji:base256emoji$8},Symbol.toStringTag,{value:"Module"})),base36$8=baseX$6({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),base36upper$4=baseX$6({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),base36$9=Object.freeze(Object.defineProperty({__proto__:null,base36:base36$8,base36upper:base36upper$4},Symbol.toStringTag,{value:"Module"})),base64$8=rfc4648$6({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),base64pad$4=rfc4648$6({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),base64url$4=rfc4648$6({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),base64urlpad$4=rfc4648$6({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),base64$9=Object.freeze(Object.defineProperty({__proto__:null,base64:base64$8,base64pad:base64pad$4,base64url:base64url$4,base64urlpad:base64urlpad$4},Symbol.toStringTag,{value:"Module"})),base8$8=rfc4648$6({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),base8$9=Object.freeze(Object.defineProperty({__proto__:null,base8:base8$8},Symbol.toStringTag,{value:"Module"})),identity$4=from$a({prefix:"\0",name:"identity",encode:t=>toString$c(t),decode:t=>fromString$9(t)}),identityBase$4=Object.freeze(Object.defineProperty({__proto__:null,identity:identity$4},Symbol.toStringTag,{value:"Module"}));new TextEncoder,new TextDecoder;const bases$4={...identityBase$4,...base2$9,...base8$9,...base10$9,...base16$9,...base32$a,...base36$9,...base58$4,...base64$9,...base256emoji$9};function asUint8Array$3(t){return globalThis.Buffer!=null?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):t}function allocUnsafe$8(t=0){return globalThis.Buffer?.allocUnsafe!=null?asUint8Array$3(globalThis.Buffer.allocUnsafe(t)):new Uint8Array(t)}function createCodec$2(t,e,r,n){return{name:t,prefix:e,encoder:{name:t,prefix:e,encode:r},decoder:{decode:n}}}const string$1=createCodec$2("utf8","u",t=>"u"+new TextDecoder("utf8").decode(t),t=>new TextEncoder().encode(t.substring(1))),ascii$1=createCodec$2("ascii","a",t=>{let e="a";for(let r=0;r<t.length;r++)e+=String.fromCharCode(t[r]);return e},t=>{t=t.substring(1);const e=allocUnsafe$8(t.length);for(let r=0;r<t.length;r++)e[r]=t.charCodeAt(r);return e}),BASES$1={utf8:string$1,"utf-8":string$1,hex:bases$4.base16,latin1:ascii$1,ascii:ascii$1,binary:ascii$1,...bases$4};function toString$b(t,e="utf8"){const r=BASES$1[e];if(r==null)throw new Error(`Unsupported encoding "${e}"`);return(e==="utf8"||e==="utf-8")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?globalThis.Buffer.from(t.buffer,t.byteOffset,t.byteLength).toString("utf8"):r.encoder.encode(t).substring(1)}function asUint8Array$2(t){return globalThis.Buffer!=null?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):t}function allocUnsafe$7(t=0){return globalThis.Buffer?.allocUnsafe!=null?asUint8Array$2(globalThis.Buffer.allocUnsafe(t)):new Uint8Array(t)}const N1$9=Math.pow(2,7),N2$9=Math.pow(2,14),N3$9=Math.pow(2,21),N4$9=Math.pow(2,28),N5$9=Math.pow(2,35),N6$9=Math.pow(2,42),N7$9=Math.pow(2,49),MSB$b=128,REST$b=127;function encodingLength$8(t){if(t<N1$9)return 1;if(t<N2$9)return 2;if(t<N3$9)return 3;if(t<N4$9)return 4;if(t<N5$9)return 5;if(t<N6$9)return 6;if(t<N7$9)return 7;if(Number.MAX_SAFE_INTEGER!=null&&t>Number.MAX_SAFE_INTEGER)throw new RangeError("Could not encode varint");return 8}function encodeUint8Array$2(t,e,r=0){switch(encodingLength$8(t)){case 8:e[r++]=t&255|MSB$b,t/=128;case 7:e[r++]=t&255|MSB$b,t/=128;case 6:e[r++]=t&255|MSB$b,t/=128;case 5:e[r++]=t&255|MSB$b,t/=128;case 4:e[r++]=t&255|MSB$b,t>>>=7;case 3:e[r++]=t&255|MSB$b,t>>>=7;case 2:e[r++]=t&255|MSB$b,t>>>=7;case 1:{e[r++]=t&255,t>>>=7;break}default:throw new Error("unreachable")}return e}function encodeUint8ArrayList$2(t,e,r=0){switch(encodingLength$8(t)){case 8:e.set(r++,t&255|MSB$b),t/=128;case 7:e.set(r++,t&255|MSB$b),t/=128;case 6:e.set(r++,t&255|MSB$b),t/=128;case 5:e.set(r++,t&255|MSB$b),t/=128;case 4:e.set(r++,t&255|MSB$b),t>>>=7;case 3:e.set(r++,t&255|MSB$b),t>>>=7;case 2:e.set(r++,t&255|MSB$b),t>>>=7;case 1:{e.set(r++,t&255),t>>>=7;break}default:throw new Error("unreachable")}return e}function decodeUint8Array$2(t,e){let r=t[e],n=0;if(n+=r&REST$b,r<MSB$b||(r=t[e+1],n+=(r&REST$b)<<7,r<MSB$b)||(r=t[e+2],n+=(r&REST$b)<<14,r<MSB$b)||(r=t[e+3],n+=(r&REST$b)<<21,r<MSB$b)||(r=t[e+4],n+=(r&REST$b)*N4$9,r<MSB$b)||(r=t[e+5],n+=(r&REST$b)*N5$9,r<MSB$b)||(r=t[e+6],n+=(r&REST$b)*N6$9,r<MSB$b)||(r=t[e+7],n+=(r&REST$b)*N7$9,r<MSB$b))return n;throw new RangeError("Could not decode varint")}function decodeUint8ArrayList$2(t,e){let r=t.get(e),n=0;if(n+=r&REST$b,r<MSB$b||(r=t.get(e+1),n+=(r&REST$b)<<7,r<MSB$b)||(r=t.get(e+2),n+=(r&REST$b)<<14,r<MSB$b)||(r=t.get(e+3),n+=(r&REST$b)<<21,r<MSB$b)||(r=t.get(e+4),n+=(r&REST$b)*N4$9,r<MSB$b)||(r=t.get(e+5),n+=(r&REST$b)*N5$9,r<MSB$b)||(r=t.get(e+6),n+=(r&REST$b)*N6$9,r<MSB$b)||(r=t.get(e+7),n+=(r&REST$b)*N7$9,r<MSB$b))return n;throw new RangeError("Could not decode varint")}function encode$r(t,e,r=0){return e==null&&(e=allocUnsafe$7(encodingLength$8(t))),e instanceof Uint8Array?encodeUint8Array$2(t,e,r):encodeUint8ArrayList$2(t,e,r)}function decode$A(t,e=0){return t instanceof Uint8Array?decodeUint8Array$2(t,e):decodeUint8ArrayList$2(t,e)}function concat$1(t,e){if(globalThis.Buffer!=null)return asUint8Array$3(globalThis.Buffer.concat(t,e));e==null&&(e=t.reduce((o,a)=>o+a.length,0));const r=allocUnsafe$8(e);let n=0;for(const o of t)r.set(o,n),n+=o.length;return asUint8Array$3(r)}function fromString$8(t,e="utf8"){const r=BASES$1[e];if(r==null)throw new Error(`Unsupported encoding "${e}"`);return(e==="utf8"||e==="utf-8")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?asUint8Array$3(globalThis.Buffer.from(t,"utf-8")):r.decoder.decode(`${r.prefix}${t}`)}const isV4$4=isIPv4,isV6$4=isIPv6,toBytes$4=function(t){let e=0;if(t=t.toString().trim(),isV4$4(t)){const r=new Uint8Array(e+4);return t.split(/\./g).forEach(n=>{r[e++]=parseInt(n,10)&255}),r}if(isV6$4(t)){const r=t.split(":",8);let n;for(n=0;n<r.length;n++){const a=isV4$4(r[n]);let c;a&&(c=toBytes$4(r[n]),r[n]=toString$b(c.slice(0,2),"base16")),c!=null&&++n<8&&r.splice(n,0,toString$b(c.slice(2,4),"base16"))}if(r[0]==="")for(;r.length<8;)r.unshift("0");else if(r[r.length-1]==="")for(;r.length<8;)r.push("0");else if(r.length<8){for(n=0;n<r.length&&r[n]!=="";n++);const a=[n,1];for(n=9-r.length;n>0;n--)a.push("0");r.splice.apply(r,a)}const o=new Uint8Array(e+16);for(n=0;n<r.length;n++){const a=parseInt(r[n],16);o[e++]=a>>8&255,o[e++]=a&255}return o}throw new Error("invalid ip address")},toString$a=function(t,e=0,r){e=~~e,r=r??t.length-e;const n=new DataView(t.buffer);if(r===4){const o=[];for(let a=0;a<r;a++)o.push(t[e+a]);return o.join(".")}if(r===16){const o=[];for(let a=0;a<r;a+=2)o.push(n.getUint16(e+a).toString(16));return o.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""},V$4=-1,names$4={},codes$6={},table$4=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,V$4,"ip6zone"],[43,8,"ipcidr"],[53,V$4,"dns",!0],[54,V$4,"dns4",!0],[55,V$4,"dns6",!0],[56,V$4,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc-direct"],[281,0,"webrtc"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,V$4,"unix",!1,!0],[421,V$4,"ipfs"],[421,V$4,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,V$4,"garlic64"],[448,0,"tls"],[449,V$4,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,V$4,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[777,V$4,"memory"]];table$4.forEach(t=>{const e=createProtocol$4(...t);codes$6[e.code]=e,names$4[e.name]=e});function createProtocol$4(t,e,r,n,o){return{code:t,size:e,name:r,resolvable:!!n,path:!!o}}function getProtocol$4(t){if(typeof t=="number"){if(codes$6[t]!=null)return codes$6[t];throw new Error(`no protocol with code: ${t}`)}else if(typeof t=="string"){if(names$4[t]!=null)return names$4[t];throw new Error(`no protocol with name: ${t}`)}throw new Error(`invalid protocol id type: ${typeof t}`)}getProtocol$4("ip4"),getProtocol$4("ip6"),getProtocol$4("ipcidr");function convertToString$4(t,e){switch(getProtocol$4(t).code){case 4:case 41:return bytes2ip$4(e);case 42:return bytes2str$4(e);case 6:case 273:case 33:case 132:return bytes2port$4(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return bytes2str$4(e);case 421:return bytes2mh$4(e);case 444:return bytes2onion$4(e);case 445:return bytes2onion$4(e);case 466:return bytes2mb$4(e);default:return toString$b(e,"base16")}}function convertToBytes$4(t,e){switch(getProtocol$4(t).code){case 4:return ip2bytes$4(e);case 41:return ip2bytes$4(e);case 42:return str2bytes$4(e);case 6:case 273:case 33:case 132:return port2bytes$4(parseInt(e,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return str2bytes$4(e);case 421:return mh2bytes$4(e);case 444:return onion2bytes$4(e);case 445:return onion32bytes$4(e);case 466:return mb2bytes$4(e);default:return fromString$8(e,"base16")}}const decoders$4=Object.values(bases$4).map(t=>t.decoder),anybaseDecoder$4=function(){let t=decoders$4[0].or(decoders$4[1]);return decoders$4.slice(2).forEach(e=>t=t.or(e)),t}();function ip2bytes$4(t){if(!isIP(t))throw new Error("invalid ip address");return toBytes$4(t)}function bytes2ip$4(t){const e=toString$a(t,0,t.length);if(e==null)throw new Error("ipBuff is required");if(!isIP(e))throw new Error("invalid ip address");return e}function port2bytes$4(t){const e=new ArrayBuffer(2);return new DataView(e).setUint16(0,t),new Uint8Array(e)}function bytes2port$4(t){return new DataView(t.buffer).getUint16(t.byteOffset)}function str2bytes$4(t){const e=fromString$8(t),r=Uint8Array.from(encode$r(e.length));return concat$1([r,e],r.length+e.length)}function bytes2str$4(t){const e=decode$A(t);if(t=t.slice(encodingLength$8(e)),t.length!==e)throw new Error("inconsistent lengths");return toString$b(t)}function mh2bytes$4(t){let e;t[0]==="Q"||t[0]==="1"?e=decode$C(base58btc$5.decode(`z${t}`)).bytes:e=CID$5.parse(t).multihash.bytes;const r=Uint8Array.from(encode$r(e.length));return concat$1([r,e],r.length+e.length)}function mb2bytes$4(t){const e=anybaseDecoder$4.decode(t),r=Uint8Array.from(encode$r(e.length));return concat$1([r,e],r.length+e.length)}function bytes2mb$4(t){const e=decode$A(t),r=t.slice(encodingLength$8(e));if(r.length!==e)throw new Error("inconsistent lengths");return"u"+toString$b(r,"base64url")}function bytes2mh$4(t){const e=decode$A(t),r=t.slice(encodingLength$8(e));if(r.length!==e)throw new Error("inconsistent lengths");return toString$b(r,"base58btc")}function onion2bytes$4(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==16)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion address.`);const r=base32$9.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes$4(n);return concat$1([r,o],r.length+o.length)}function onion32bytes$4(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==56)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion3 address.`);const r=base32$9.decode(`b${e[0]}`),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes$4(n);return concat$1([r,o],r.length+o.length)}function bytes2onion$4(t){const e=t.slice(0,t.length-2),r=t.slice(t.length-2),n=toString$b(e,"base32"),o=bytes2port$4(r);return`${n}:${o}`}function stringToMultiaddrParts$1(t){t=cleanPath$4(t);const e=[],r=[];let n=null;const o=t.split("/").slice(1);if(o.length===1&&o[0]==="")return{bytes:new Uint8Array,string:"/",tuples:[],stringTuples:[],path:null};for(let a=0;a<o.length;a++){const c=o[a],u=getProtocol$4(c);if(u.size===0){e.push([u.code]),r.push([u.code]);continue}if(a++,a>=o.length)throw ParseError$4("invalid address: "+t);if(u.path===!0){n=cleanPath$4(o.slice(a).join("/")),e.push([u.code,convertToBytes$4(u.code,n)]),r.push([u.code,n]);break}const l=convertToBytes$4(u.code,o[a]);e.push([u.code,l]),r.push([u.code,convertToString$4(u.code,l)])}return{string:stringTuplesToString$4(r),bytes:tuplesToBytes$4(e),tuples:e,stringTuples:r,path:n}}function bytesToMultiaddrParts$1(t){const e=[],r=[];let n=null,o=0;for(;o<t.length;){const a=decode$A(t,o),c=encodingLength$8(a),u=getProtocol$4(a),l=sizeForAddr$4(u,t.slice(o+c));if(l===0){e.push([a]),r.push([a]),o+=c;continue}const f=t.slice(o+c,o+c+l);if(o+=l+c,o>t.length)throw ParseError$4("Invalid address Uint8Array: "+toString$b(t,"base16"));e.push([a,f]);const p=convertToString$4(a,f);if(r.push([a,p]),u.path===!0){n=p;break}}return{bytes:Uint8Array.from(t),string:stringTuplesToString$4(r),tuples:e,stringTuples:r,path:n}}function stringTuplesToString$4(t){const e=[];return t.map(r=>{const n=getProtocol$4(r[0]);return e.push(n.name),r.length>1&&r[1]!=null&&e.push(r[1]),null}),cleanPath$4(e.join("/"))}function tuplesToBytes$4(t){return concat$1(t.map(e=>{const r=getProtocol$4(e[0]);let n=Uint8Array.from(encode$r(r.code));return e.length>1&&e[1]!=null&&(n=concat$1([n,e[1]])),n}))}function sizeForAddr$4(t,e){if(t.size>0)return t.size/8;if(t.size===0)return 0;{const r=decode$A(e instanceof Uint8Array?e:Uint8Array.from(e));return r+encodingLength$8(r)}}function cleanPath$4(t){return"/"+t.trim().split("/").filter(e=>e).join("/")}function ParseError$4(t){return new Error("Error parsing address: "+t)}const inspect$4=Symbol.for("nodejs.util.inspect.custom"),symbol$8=Symbol.for("@multiformats/js-multiaddr/multiaddr"),DNS_CODES$4=[getProtocol$4("dns").code,getProtocol$4("dns4").code,getProtocol$4("dns6").code,getProtocol$4("dnsaddr").code];let Multiaddr$1=(ut=class{constructor(e){N(this,"bytes");G(this,Pt,void 0);G(this,ft,void 0);G(this,Jt,void 0);G(this,er,void 0);N(this,Hr,!0);e==null&&(e="");let r;if(e instanceof Uint8Array)r=bytesToMultiaddrParts$1(e);else if(typeof e=="string"){if(e.length>0&&e.charAt(0)!=="/")throw new Error(`multiaddr "${e}" must start with a "/"`);r=stringToMultiaddrParts$1(e)}else if(isMultiaddr$4(e))r=bytesToMultiaddrParts$1(e.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr");this.bytes=r.bytes,W(this,Pt,r.string),W(this,ft,r.tuples),W(this,Jt,r.stringTuples),W(this,er,r.path)}toString(){return B(this,Pt)}toJSON(){return this.toString()}toOptions(){let e,r,n,o,a="";const c=getProtocol$4("tcp"),u=getProtocol$4("udp"),l=getProtocol$4("ip4"),f=getProtocol$4("ip6"),p=getProtocol$4("dns6"),g=getProtocol$4("ip6zone");for(const[$,_]of this.stringTuples())$===g.code&&(a=`%${_??""}`),DNS_CODES$4.includes($)&&(r=c.name,o=443,n=`${_??""}${a}`,e=$===p.code?6:4),($===c.code||$===u.code)&&(r=getProtocol$4($).name,o=parseInt(_??"")),($===l.code||$===f.code)&&(r=getProtocol$4($).name,n=`${_??""}${a}`,e=$===f.code?6:4);if(e==null||r==null||n==null||o==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:e,host:n,transport:r,port:o}}protos(){return B(this,ft).map(([e])=>Object.assign({},getProtocol$4(e)))}protoCodes(){return B(this,ft).map(([e])=>e)}protoNames(){return B(this,ft).map(([e])=>getProtocol$4(e).name)}tuples(){return B(this,ft)}stringTuples(){return B(this,Jt)}encapsulate(e){return e=new ut(e),new ut(this.toString()+e.toString())}decapsulate(e){const r=e.toString(),n=this.toString(),o=n.lastIndexOf(r);if(o<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${e.toString()}`);return new ut(n.slice(0,o))}decapsulateCode(e){const r=this.tuples();for(let n=r.length-1;n>=0;n--)if(r[n][0]===e)return new ut(tuplesToBytes$4(r.slice(0,n)));return this}getPeerId(){try{let e=[];this.stringTuples().forEach(([n,o])=>{n===names$4.p2p.code&&e.push([n,o]),n===names$4["p2p-circuit"].code&&(e=[])});const r=e.pop();if(r?.[1]!=null){const n=r[1];return n[0]==="Q"||n[0]==="1"?toString$b(base58btc$5.decode(`z${n}`),"base58btc"):toString$b(CID$5.parse(n).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){return B(this,er)}equals(e){return equals$b(this.bytes,e.bytes)}async resolve(e){const r=this.protos().find(o=>o.resolvable);if(r==null)return[this];const n=resolvers$4.get(r.name);if(n==null)throw new CodeError$1(`no available resolver for ${r.name}`,"ERR_NO_AVAILABLE_RESOLVER");return(await n(this,e)).map(o=>new ut(o))}nodeAddress(){const e=this.toOptions();if(e.transport!=="tcp"&&e.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${e.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:e.family,address:e.host,port:e.port}}isThinWaistAddress(e){const r=(e??this).protos();return!(r.length!==2||r[0].code!==4&&r[0].code!==41||r[1].code!==6&&r[1].code!==273)}[(Hr=symbol$8,inspect$4)](){return`Multiaddr(${B(this,Pt)})`}},Pt=new WeakMap,ft=new WeakMap,Jt=new WeakMap,er=new WeakMap,ut);const resolvers$4=new Map;function isMultiaddr$4(t){return!!t?.[symbol$8]}function multiaddr$4(t){return new Multiaddr$1(t)}const DNS4$2=base$8("dns4"),DNS6$2=base$8("dns6"),DNSADDR$2=base$8("dnsaddr"),DNS$2=or$8(base$8("dns"),DNSADDR$2,DNS4$2,DNS6$2),IP$2=or$8(base$8("ip4"),base$8("ip6")),TCP$2=or$8(and$2(IP$2,base$8("tcp")),and$2(DNS$2,base$8("tcp"))),WebSockets$3=or$8(and$2(TCP$2,base$8("ws")),and$2(DNS$2,base$8("ws"))),WebSocketsSecure$2=or$8(and$2(TCP$2,base$8("wss")),and$2(DNS$2,base$8("wss")),and$2(TCP$2,base$8("tls"),base$8("ws")),and$2(DNS$2,base$8("tls"),base$8("ws"))),WebRTCStar$2=or$8(and$2(WebSockets$3,base$8("p2p-webrtc-star"),base$8("p2p")),and$2(WebSocketsSecure$2,base$8("p2p-webrtc-star"),base$8("p2p")),and$2(WebSockets$3,base$8("p2p-webrtc-star")),and$2(WebSocketsSecure$2,base$8("p2p-webrtc-star")));function makeMatchesFunction$2(t){function e(r){let n;try{n=multiaddr$4(r)}catch{return!1}const o=t(n.protoNames());return o===null?!1:o===!0||o===!1?o:o.length===0}return e}function and$2(...t){function e(r){if(r.length<t.length)return null;let n=r;return t.some(o=>(n=typeof o=="function"?o().partialMatch(r):o.partialMatch(r),Array.isArray(n)&&(r=n),n===null)),n}return{toString:function(){return"{ "+t.join(" ")+" }"},input:t,matches:makeMatchesFunction$2(e),partialMatch:e}}function or$8(...t){function e(r){let n=null;return t.some(o=>{const a=typeof o=="function"?o().partialMatch(r):o.partialMatch(r);return a!=null?(n=a,!0):!1}),n}return{toString:function(){return"{ "+t.join(" ")+" }"},input:t,matches:makeMatchesFunction$2(e),partialMatch:e}}function base$8(t){const e=t;function r(o){let a;try{a=multiaddr$4(o)}catch{return!1}const c=a.protoNames();return c.length===1&&c[0]===e}function n(o){return o.length===0?null:o[0]===e?o.slice(1):null}return{toString:function(){return e},matches:r,partialMatch:n}}const CODE_P2P$1=421,CODE_CIRCUIT$1=290,CLOSE_TIMEOUT$1=2e3,PACKET_TYPES=Object.create(null);PACKET_TYPES.open="0",PACKET_TYPES.close="1",PACKET_TYPES.ping="2",PACKET_TYPES.pong="3",PACKET_TYPES.message="4",PACKET_TYPES.upgrade="5",PACKET_TYPES.noop="6";const PACKET_TYPES_REVERSE=Object.create(null);Object.keys(PACKET_TYPES).forEach(t=>{PACKET_TYPES_REVERSE[PACKET_TYPES[t]]=t});const ERROR_PACKET={type:"error",data:"parser error"},withNativeBlob$1=typeof Blob=="function"||typeof Blob<"u"&&Object.prototype.toString.call(Blob)==="[object BlobConstructor]",withNativeArrayBuffer$2=typeof ArrayBuffer=="function",isView$1=t=>typeof ArrayBuffer.isView=="function"?ArrayBuffer.isView(t):t&&t.buffer instanceof ArrayBuffer,encodePacket=({type:t,data:e},r,n)=>withNativeBlob$1&&e instanceof Blob?r?n(e):encodeBlobAsBase64(e,n):withNativeArrayBuffer$2&&(e instanceof ArrayBuffer||isView$1(e))?r?n(e):encodeBlobAsBase64(new Blob([e]),n):n(PACKET_TYPES[t]+(e||"")),encodeBlobAsBase64=(t,e)=>{const r=new FileReader;return r.onload=function(){const n=r.result.split(",")[1];e("b"+(n||""))},r.readAsDataURL(t)};function toArray(t){return t instanceof Uint8Array?t:t instanceof ArrayBuffer?new Uint8Array(t):new Uint8Array(t.buffer,t.byteOffset,t.byteLength)}let TEXT_ENCODER;function encodePacketToBinary(t,e){if(withNativeBlob$1&&t.data instanceof Blob)return t.data.arrayBuffer().then(toArray).then(e);if(withNativeArrayBuffer$2&&(t.data instanceof ArrayBuffer||isView$1(t.data)))return e(toArray(t.data));encodePacket(t,!1,r=>{TEXT_ENCODER||(TEXT_ENCODER=new TextEncoder),e(TEXT_ENCODER.encode(r))})}const chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",lookup$1=typeof Uint8Array>"u"?[]:new Uint8Array(256);for(let t=0;t<chars.length;t++)lookup$1[chars.charCodeAt(t)]=t;const decode$z=t=>{let e=t.length*.75,r=t.length,n,o=0,a,c,u,l;t[t.length-1]==="="&&(e--,t[t.length-2]==="="&&e--);const f=new ArrayBuffer(e),p=new Uint8Array(f);for(n=0;n<r;n+=4)a=lookup$1[t.charCodeAt(n)],c=lookup$1[t.charCodeAt(n+1)],u=lookup$1[t.charCodeAt(n+2)],l=lookup$1[t.charCodeAt(n+3)],p[o++]=a<<2|c>>4,p[o++]=(c&15)<<4|u>>2,p[o++]=(u&3)<<6|l&63;return f},withNativeArrayBuffer$1=typeof ArrayBuffer=="function",decodePacket=(t,e)=>{if(typeof t!="string")return{type:"message",data:mapBinary(t,e)};const r=t.charAt(0);return r==="b"?{type:"message",data:decodeBase64Packet(t.substring(1),e)}:PACKET_TYPES_REVERSE[r]?t.length>1?{type:PACKET_TYPES_REVERSE[r],data:t.substring(1)}:{type:PACKET_TYPES_REVERSE[r]}:ERROR_PACKET},decodeBase64Packet=(t,e)=>{if(withNativeArrayBuffer$1){const r=decode$z(t);return mapBinary(r,e)}else return{base64:!0,data:t}},mapBinary=(t,e)=>{switch(e){case"blob":return t instanceof Blob?t:new Blob([t]);case"arraybuffer":default:return t instanceof ArrayBuffer?t:t.buffer}},SEPARATOR="",encodePayload=(t,e)=>{const r=t.length,n=new Array(r);let o=0;t.forEach((a,c)=>{encodePacket(a,!1,u=>{n[c]=u,++o===r&&e(n.join(SEPARATOR))})})},decodePayload$1=(t,e)=>{const r=t.split(SEPARATOR),n=[];for(let o=0;o<r.length;o++){const a=decodePacket(r[o],e);if(n.push(a),a.type==="error")break}return n};function createPacketEncoderStream(){return new TransformStream({transform(t,e){encodePacketToBinary(t,r=>{const n=r.length;let o;if(n<126)o=new Uint8Array(1),new DataView(o.buffer).setUint8(0,n);else if(n<65536){o=new Uint8Array(3);const a=new DataView(o.buffer);a.setUint8(0,126),a.setUint16(1,n)}else{o=new Uint8Array(9);const a=new DataView(o.buffer);a.setUint8(0,127),a.setBigUint64(1,BigInt(n))}t.data&&typeof t.data!="string"&&(o[0]|=128),e.enqueue(o),e.enqueue(r)})}})}let TEXT_DECODER;function totalLength(t){return t.reduce((e,r)=>e+r.length,0)}function concatChunks(t,e){if(t[0].length===e)return t.shift();const r=new Uint8Array(e);let n=0;for(let o=0;o<e;o++)r[o]=t[0][n++],n===t[0].length&&(t.shift(),n=0);return t.length&&n<t[0].length&&(t[0]=t[0].slice(n)),r}function createPacketDecoderStream(t,e){TEXT_DECODER||(TEXT_DECODER=new TextDecoder);const r=[];let n=0,o=-1,a=!1;return new TransformStream({transform(c,u){for(r.push(c);;){if(n===0){if(totalLength(r)<1)break;const l=concatChunks(r,1);a=(l[0]&128)===128,o=l[0]&127,o<126?n=3:o===126?n=1:n=2}else if(n===1){if(totalLength(r)<2)break;const l=concatChunks(r,2);o=new DataView(l.buffer,l.byteOffset,l.length).getUint16(0),n=3}else if(n===2){if(totalLength(r)<8)break;const l=concatChunks(r,8),f=new DataView(l.buffer,l.byteOffset,l.length),p=f.getUint32(0);if(p>Math.pow(2,21)-1){u.enqueue(ERROR_PACKET);break}o=p*Math.pow(2,32)+f.getUint32(4),n=3}else{if(totalLength(r)<o)break;const l=concatChunks(r,o);u.enqueue(decodePacket(a?l:TEXT_DECODER.decode(l),e)),n=0}if(o===0||o>t){u.enqueue(ERROR_PACKET);break}}}})}const protocol$1=4;function Emitter(t){if(t)return mixin(t)}function mixin(t){for(var e in Emitter.prototype)t[e]=Emitter.prototype[e];return t}Emitter.prototype.on=Emitter.prototype.addEventListener=function(t,e){return this._callbacks=this._callbacks||{},(this._callbacks["$"+t]=this._callbacks["$"+t]||[]).push(e),this},Emitter.prototype.once=function(t,e){function r(){this.off(t,r),e.apply(this,arguments)}return r.fn=e,this.on(t,r),this},Emitter.prototype.off=Emitter.prototype.removeListener=Emitter.prototype.removeAllListeners=Emitter.prototype.removeEventListener=function(t,e){if(this._callbacks=this._callbacks||{},arguments.length==0)return this._callbacks={},this;var r=this._callbacks["$"+t];if(!r)return this;if(arguments.length==1)return delete this._callbacks["$"+t],this;for(var n,o=0;o<r.length;o++)if(n=r[o],n===e||n.fn===e){r.splice(o,1);break}return r.length===0&&delete this._callbacks["$"+t],this},Emitter.prototype.emit=function(t){this._callbacks=this._callbacks||{};for(var e=new Array(arguments.length-1),r=this._callbacks["$"+t],n=1;n<arguments.length;n++)e[n-1]=arguments[n];if(r){r=r.slice(0);for(var n=0,o=r.length;n<o;++n)r[n].apply(this,e)}return this},Emitter.prototype.emitReserved=Emitter.prototype.emit,Emitter.prototype.listeners=function(t){return this._callbacks=this._callbacks||{},this._callbacks["$"+t]||[]},Emitter.prototype.hasListeners=function(t){return!!this.listeners(t).length};const globalThisShim=typeof self<"u"?self:typeof window<"u"?window:Function("return this")();function pick(t,...e){return e.reduce((r,n)=>(t.hasOwnProperty(n)&&(r[n]=t[n]),r),{})}const NATIVE_SET_TIMEOUT=globalThisShim.setTimeout,NATIVE_CLEAR_TIMEOUT=globalThisShim.clearTimeout;function installTimerFunctions(t,e){e.useNativeTimers?(t.setTimeoutFn=NATIVE_SET_TIMEOUT.bind(globalThisShim),t.clearTimeoutFn=NATIVE_CLEAR_TIMEOUT.bind(globalThisShim)):(t.setTimeoutFn=globalThisShim.setTimeout.bind(globalThisShim),t.clearTimeoutFn=globalThisShim.clearTimeout.bind(globalThisShim))}const BASE64_OVERHEAD=1.33;function byteLength(t){return typeof t=="string"?utf8Length(t):Math.ceil((t.byteLength||t.size)*BASE64_OVERHEAD)}function utf8Length(t){let e=0,r=0;for(let n=0,o=t.length;n<o;n++)e=t.charCodeAt(n),e<128?r+=1:e<2048?r+=2:e<55296||e>=57344?r+=3:(n++,r+=4);return r}function encode$q(t){let e="";for(let r in t)t.hasOwnProperty(r)&&(e.length&&(e+="&"),e+=encodeURIComponent(r)+"="+encodeURIComponent(t[r]));return e}function decode$y(t){let e={},r=t.split("&");for(let n=0,o=r.length;n<o;n++){let a=r[n].split("=");e[decodeURIComponent(a[0])]=decodeURIComponent(a[1])}return e}class TransportError extends Error{constructor(e,r,n){super(e),this.description=r,this.context=n,this.type="TransportError"}}class Transport extends Emitter{constructor(e){super(),this.writable=!1,installTimerFunctions(this,e),this.opts=e,this.query=e.query,this.socket=e.socket}onError(e,r,n){return super.emitReserved("error",new TransportError(e,r,n)),this}open(){return this.readyState="opening",this.doOpen(),this}close(){return(this.readyState==="opening"||this.readyState==="open")&&(this.doClose(),this.onClose()),this}send(e){this.readyState==="open"&&this.write(e)}onOpen(){this.readyState="open",this.writable=!0,super.emitReserved("open")}onData(e){const r=decodePacket(e,this.socket.binaryType);this.onPacket(r)}onPacket(e){super.emitReserved("packet",e)}onClose(e){this.readyState="closed",super.emitReserved("close",e)}pause(e){}createUri(e,r={}){return e+"://"+this._hostname()+this._port()+this.opts.path+this._query(r)}_hostname(){const e=this.opts.hostname;return e.indexOf(":")===-1?e:"["+e+"]"}_port(){return this.opts.port&&(this.opts.secure&&+(this.opts.port!==443)||!this.opts.secure&&Number(this.opts.port)!==80)?":"+this.opts.port:""}_query(e){const r=encode$q(e);return r.length?"?"+r:""}}const alphabet$4="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""),length$7=64,map$1={};let seed=0,i=0,prev;function encode$p(t){let e="";do e=alphabet$4[t%length$7]+e,t=Math.floor(t/length$7);while(t>0);return e}function yeast(){const t=encode$p(+new Date);return t!==prev?(seed=0,prev=t):t+"."+encode$p(seed++)}for(;i<length$7;i++)map$1[alphabet$4[i]]=i;let value=!1;try{value=typeof XMLHttpRequest<"u"&&"withCredentials"in new XMLHttpRequest}catch(t){}const hasCORS=value;function XHR(t){const e=t.xdomain;try{if(typeof XMLHttpRequest<"u"&&(!e||hasCORS))return new XMLHttpRequest}catch{}if(!e)try{return new globalThisShim[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP")}catch{}}function createCookieJar(){}function empty(){}const hasXHR2=function(){return new XHR({xdomain:!1}).responseType!=null}();class Polling extends Transport{constructor(e){if(super(e),this.polling=!1,typeof location<"u"){const n=location.protocol==="https:";let o=location.port;o||(o=n?"443":"80"),this.xd=typeof location<"u"&&e.hostname!==location.hostname||o!==e.port}const r=e&&e.forceBase64;this.supportsBinary=hasXHR2&&!r,this.opts.withCredentials&&(this.cookieJar=void 0)}get name(){return"polling"}doOpen(){this.poll()}pause(e){this.readyState="pausing";const r=()=>{this.readyState="paused",e()};if(this.polling||!this.writable){let n=0;this.polling&&(n++,this.once("pollComplete",function(){--n||r()})),this.writable||(n++,this.once("drain",function(){--n||r()}))}else r()}poll(){this.polling=!0,this.doPoll(),this.emitReserved("poll")}onData(e){const r=n=>{if(this.readyState==="opening"&&n.type==="open"&&this.onOpen(),n.type==="close")return this.onClose({description:"transport closed by the server"}),!1;this.onPacket(n)};decodePayload$1(e,this.socket.binaryType).forEach(r),this.readyState!=="closed"&&(this.polling=!1,this.emitReserved("pollComplete"),this.readyState==="open"&&this.poll())}doClose(){const e=()=>{this.write([{type:"close"}])};this.readyState==="open"?e():this.once("open",e)}write(e){this.writable=!1,encodePayload(e,r=>{this.doWrite(r,()=>{this.writable=!0,this.emitReserved("drain")})})}uri(){const e=this.opts.secure?"https":"http",r=this.query||{};return this.opts.timestampRequests!==!1&&(r[this.opts.timestampParam]=yeast()),!this.supportsBinary&&!r.sid&&(r.b64=1),this.createUri(e,r)}request(e={}){return Object.assign(e,{xd:this.xd,cookieJar:this.cookieJar},this.opts),new Request(this.uri(),e)}doWrite(e,r){const n=this.request({method:"POST",data:e});n.on("success",r),n.on("error",(o,a)=>{this.onError("xhr post error",o,a)})}doPoll(){const e=this.request();e.on("data",this.onData.bind(this)),e.on("error",(r,n)=>{this.onError("xhr poll error",r,n)}),this.pollXhr=e}}class Request extends Emitter{constructor(e,r){super(),installTimerFunctions(this,r),this.opts=r,this.method=r.method||"GET",this.uri=e,this.data=r.data!==void 0?r.data:null,this.create()}create(){var e;const r=pick(this.opts,"agent","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","autoUnref");r.xdomain=!!this.opts.xd;const n=this.xhr=new XHR(r);try{n.open(this.method,this.uri,!0);try{if(this.opts.extraHeaders){n.setDisableHeaderCheck&&n.setDisableHeaderCheck(!0);for(let o in this.opts.extraHeaders)this.opts.extraHeaders.hasOwnProperty(o)&&n.setRequestHeader(o,this.opts.extraHeaders[o])}}catch{}if(this.method==="POST")try{n.setRequestHeader("Content-type","text/plain;charset=UTF-8")}catch{}try{n.setRequestHeader("Accept","*/*")}catch{}(e=this.opts.cookieJar)===null||e===void 0||e.addCookies(n),"withCredentials"in n&&(n.withCredentials=this.opts.withCredentials),this.opts.requestTimeout&&(n.timeout=this.opts.requestTimeout),n.onreadystatechange=()=>{var o;n.readyState===3&&((o=this.opts.cookieJar)===null||o===void 0||o.parseCookies(n)),n.readyState===4&&(n.status===200||n.status===1223?this.onLoad():this.setTimeoutFn(()=>{this.onError(typeof n.status=="number"?n.status:0)},0))},n.send(this.data)}catch(o){this.setTimeoutFn(()=>{this.onError(o)},0);return}typeof document<"u"&&(this.index=Request.requestsCount++,Request.requests[this.index]=this)}onError(e){this.emitReserved("error",e,this.xhr),this.cleanup(!0)}cleanup(e){if(!(typeof this.xhr>"u"||this.xhr===null)){if(this.xhr.onreadystatechange=empty,e)try{this.xhr.abort()}catch{}typeof document<"u"&&delete Request.requests[this.index],this.xhr=null}}onLoad(){const e=this.xhr.responseText;e!==null&&(this.emitReserved("data",e),this.emitReserved("success"),this.cleanup())}abort(){this.cleanup()}}if(Request.requestsCount=0,Request.requests={},typeof document<"u"){if(typeof attachEvent=="function")attachEvent("onunload",unloadHandler);else if(typeof addEventListener=="function"){const t="onpagehide"in globalThisShim?"pagehide":"unload";addEventListener(t,unloadHandler,!1)}}function unloadHandler(){for(let t in Request.requests)Request.requests.hasOwnProperty(t)&&Request.requests[t].abort()}const nextTick=typeof Promise=="function"&&typeof Promise.resolve=="function"?t=>Promise.resolve().then(t):(t,e)=>e(t,0),WebSocket$2=globalThisShim.WebSocket||globalThisShim.MozWebSocket,usingBrowserWebSocket=!0,defaultBinaryType="arraybuffer",isReactNative=typeof navigator<"u"&&typeof navigator.product=="string"&&navigator.product.toLowerCase()==="reactnative";class WS extends Transport{constructor(e){super(e),this.supportsBinary=!e.forceBase64}get name(){return"websocket"}doOpen(){if(!this.check())return;const e=this.uri(),r=this.opts.protocols,n=isReactNative?{}:pick(this.opts,"agent","perMessageDeflate","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","localAddress","protocolVersion","origin","maxPayload","family","checkServerIdentity");this.opts.extraHeaders&&(n.headers=this.opts.extraHeaders);try{this.ws=usingBrowserWebSocket&&!isReactNative?r?new WebSocket$2(e,r):new WebSocket$2(e):new WebSocket$2(e,r,n)}catch(o){return this.emitReserved("error",o)}this.ws.binaryType=this.socket.binaryType,this.addEventListeners()}addEventListeners(){this.ws.onopen=()=>{this.opts.autoUnref&&this.ws._socket.unref(),this.onOpen()},this.ws.onclose=e=>this.onClose({description:"websocket connection closed",context:e}),this.ws.onmessage=e=>this.onData(e.data),this.ws.onerror=e=>this.onError("websocket error",e)}write(e){this.writable=!1;for(let r=0;r<e.length;r++){const n=e[r],o=r===e.length-1;encodePacket(n,this.supportsBinary,a=>{const c={};try{usingBrowserWebSocket&&this.ws.send(a)}catch{}o&&nextTick(()=>{this.writable=!0,this.emitReserved("drain")},this.setTimeoutFn)})}}doClose(){typeof this.ws<"u"&&(this.ws.close(),this.ws=null)}uri(){const e=this.opts.secure?"wss":"ws",r=this.query||{};return this.opts.timestampRequests&&(r[this.opts.timestampParam]=yeast()),this.supportsBinary||(r.b64=1),this.createUri(e,r)}check(){return!!WebSocket$2}}class WT extends Transport{get name(){return"webtransport"}doOpen(){typeof WebTransport=="function"&&(this.transport=new WebTransport(this.createUri("https"),this.opts.transportOptions[this.name]),this.transport.closed.then(()=>{this.onClose()}).catch(e=>{this.onError("webtransport error",e)}),this.transport.ready.then(()=>{this.transport.createBidirectionalStream().then(e=>{const r=createPacketDecoderStream(Number.MAX_SAFE_INTEGER,this.socket.binaryType),n=e.readable.pipeThrough(r).getReader(),o=createPacketEncoderStream();o.readable.pipeTo(e.writable),this.writer=o.writable.getWriter();const a=()=>{n.read().then(({done:u,value:l})=>{u||(this.onPacket(l),a())}).catch(u=>{})};a();const c={type:"open"};this.query.sid&&(c.data=`{"sid":"${this.query.sid}"}`),this.writer.write(c).then(()=>this.onOpen())})}))}write(e){this.writable=!1;for(let r=0;r<e.length;r++){const n=e[r],o=r===e.length-1;this.writer.write(n).then(()=>{o&&nextTick(()=>{this.writable=!0,this.emitReserved("drain")},this.setTimeoutFn)})}}doClose(){var e;(e=this.transport)===null||e===void 0||e.close()}}const transports={websocket:WS,webtransport:WT,polling:Polling},re=/^(?:(?![^:@\/?#]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@\/?#]*)(?::([^:@\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,parts=["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"];function parse$2(t){if(t.length>2e3)throw"URI too long";const e=t,r=t.indexOf("["),n=t.indexOf("]");r!=-1&&n!=-1&&(t=t.substring(0,r)+t.substring(r,n).replace(/:/g,";")+t.substring(n,t.length));let o=re.exec(t||""),a={},c=14;for(;c--;)a[parts[c]]=o[c]||"";return r!=-1&&n!=-1&&(a.source=e,a.host=a.host.substring(1,a.host.length-1).replace(/;/g,":"),a.authority=a.authority.replace("[","").replace("]","").replace(/;/g,":"),a.ipv6uri=!0),a.pathNames=pathNames(a,a.path),a.queryKey=queryKey(a,a.query),a}function pathNames(t,e){const r=/\/{2,9}/g,n=e.replace(r,"/").split("/");return(e.slice(0,1)=="/"||e.length===0)&&n.splice(0,1),e.slice(-1)=="/"&&n.splice(n.length-1,1),n}function queryKey(t,e){const r={};return e.replace(/(?:^|&)([^&=]*)=?([^&]*)/g,function(n,o,a){o&&(r[o]=a)}),r}let Socket$1=class Ft extends Emitter{constructor(e,r={}){super(),this.binaryType=defaultBinaryType,this.writeBuffer=[],e&&typeof e=="object"&&(r=e,e=null),e?(e=parse$2(e),r.hostname=e.host,r.secure=e.protocol==="https"||e.protocol==="wss",r.port=e.port,e.query&&(r.query=e.query)):r.host&&(r.hostname=parse$2(r.host).host),installTimerFunctions(this,r),this.secure=r.secure!=null?r.secure:typeof location<"u"&&location.protocol==="https:",r.hostname&&!r.port&&(r.port=this.secure?"443":"80"),this.hostname=r.hostname||(typeof location<"u"?location.hostname:"localhost"),this.port=r.port||(typeof location<"u"&&location.port?location.port:this.secure?"443":"80"),this.transports=r.transports||["polling","websocket","webtransport"],this.writeBuffer=[],this.prevBufferLen=0,this.opts=Object.assign({path:"/engine.io",agent:!1,withCredentials:!1,upgrade:!0,timestampParam:"t",rememberUpgrade:!1,addTrailingSlash:!0,rejectUnauthorized:!0,perMessageDeflate:{threshold:1024},transportOptions:{},closeOnBeforeunload:!1},r),this.opts.path=this.opts.path.replace(/\/$/,"")+(this.opts.addTrailingSlash?"/":""),typeof this.opts.query=="string"&&(this.opts.query=decode$y(this.opts.query)),this.id=null,this.upgrades=null,this.pingInterval=null,this.pingTimeout=null,this.pingTimeoutTimer=null,typeof addEventListener=="function"&&(this.opts.closeOnBeforeunload&&(this.beforeunloadEventListener=()=>{this.transport&&(this.transport.removeAllListeners(),this.transport.close())},addEventListener("beforeunload",this.beforeunloadEventListener,!1)),this.hostname!=="localhost"&&(this.offlineEventListener=()=>{this.onClose("transport close",{description:"network connection lost"})},addEventListener("offline",this.offlineEventListener,!1))),this.open()}createTransport(e){const r=Object.assign({},this.opts.query);r.EIO=protocol$1,r.transport=e,this.id&&(r.sid=this.id);const n=Object.assign({},this.opts,{query:r,socket:this,hostname:this.hostname,secure:this.secure,port:this.port},this.opts.transportOptions[e]);return new transports[e](n)}open(){let e;if(this.opts.rememberUpgrade&&Ft.priorWebsocketSuccess&&this.transports.indexOf("websocket")!==-1)e="websocket";else if(this.transports.length===0){this.setTimeoutFn(()=>{this.emitReserved("error","No transports available")},0);return}else e=this.transports[0];this.readyState="opening";try{e=this.createTransport(e)}catch{this.transports.shift(),this.open();return}e.open(),this.setTransport(e)}setTransport(e){this.transport&&this.transport.removeAllListeners(),this.transport=e,e.on("drain",this.onDrain.bind(this)).on("packet",this.onPacket.bind(this)).on("error",this.onError.bind(this)).on("close",r=>this.onClose("transport close",r))}probe(e){let r=this.createTransport(e),n=!1;Ft.priorWebsocketSuccess=!1;const o=()=>{n||(r.send([{type:"ping",data:"probe"}]),r.once("packet",g=>{if(!n)if(g.type==="pong"&&g.data==="probe"){if(this.upgrading=!0,this.emitReserved("upgrading",r),!r)return;Ft.priorWebsocketSuccess=r.name==="websocket",this.transport.pause(()=>{n||this.readyState!=="closed"&&(p(),this.setTransport(r),r.send([{type:"upgrade"}]),this.emitReserved("upgrade",r),r=null,this.upgrading=!1,this.flush())})}else{const $=new Error("probe error");$.transport=r.name,this.emitReserved("upgradeError",$)}}))};function a(){n||(n=!0,p(),r.close(),r=null)}const c=g=>{const $=new Error("probe error: "+g);$.transport=r.name,a(),this.emitReserved("upgradeError",$)};function u(){c("transport closed")}function l(){c("socket closed")}function f(g){r&&g.name!==r.name&&a()}const p=()=>{r.removeListener("open",o),r.removeListener("error",c),r.removeListener("close",u),this.off("close",l),this.off("upgrading",f)};r.once("open",o),r.once("error",c),r.once("close",u),this.once("close",l),this.once("upgrading",f),this.upgrades.indexOf("webtransport")!==-1&&e!=="webtransport"?this.setTimeoutFn(()=>{n||r.open()},200):r.open()}onOpen(){if(this.readyState="open",Ft.priorWebsocketSuccess=this.transport.name==="websocket",this.emitReserved("open"),this.flush(),this.readyState==="open"&&this.opts.upgrade){let e=0;const r=this.upgrades.length;for(;e<r;e++)this.probe(this.upgrades[e])}}onPacket(e){if(this.readyState==="opening"||this.readyState==="open"||this.readyState==="closing")switch(this.emitReserved("packet",e),this.emitReserved("heartbeat"),this.resetPingTimeout(),e.type){case"open":this.onHandshake(JSON.parse(e.data));break;case"ping":this.sendPacket("pong"),this.emitReserved("ping"),this.emitReserved("pong");break;case"error":const r=new Error("server error");r.code=e.data,this.onError(r);break;case"message":this.emitReserved("data",e.data),this.emitReserved("message",e.data);break}}onHandshake(e){this.emitReserved("handshake",e),this.id=e.sid,this.transport.query.sid=e.sid,this.upgrades=this.filterUpgrades(e.upgrades),this.pingInterval=e.pingInterval,this.pingTimeout=e.pingTimeout,this.maxPayload=e.maxPayload,this.onOpen(),this.readyState!=="closed"&&this.resetPingTimeout()}resetPingTimeout(){this.clearTimeoutFn(this.pingTimeoutTimer),this.pingTimeoutTimer=this.setTimeoutFn(()=>{this.onClose("ping timeout")},this.pingInterval+this.pingTimeout),this.opts.autoUnref&&this.pingTimeoutTimer.unref()}onDrain(){this.writeBuffer.splice(0,this.prevBufferLen),this.prevBufferLen=0,this.writeBuffer.length===0?this.emitReserved("drain"):this.flush()}flush(){if(this.readyState!=="closed"&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length){const e=this.getWritablePackets();this.transport.send(e),this.prevBufferLen=e.length,this.emitReserved("flush")}}getWritablePackets(){if(!(this.maxPayload&&this.transport.name==="polling"&&this.writeBuffer.length>1))return this.writeBuffer;let e=1;for(let r=0;r<this.writeBuffer.length;r++){const n=this.writeBuffer[r].data;if(n&&(e+=byteLength(n)),r>0&&e>this.maxPayload)return this.writeBuffer.slice(0,r);e+=2}return this.writeBuffer}write(e,r,n){return this.sendPacket("message",e,r,n),this}send(e,r,n){return this.sendPacket("message",e,r,n),this}sendPacket(e,r,n,o){if(typeof r=="function"&&(o=r,r=void 0),typeof n=="function"&&(o=n,n=null),this.readyState==="closing"||this.readyState==="closed")return;n=n||{},n.compress=n.compress!==!1;const a={type:e,data:r,options:n};this.emitReserved("packetCreate",a),this.writeBuffer.push(a),o&&this.once("flush",o),this.flush()}close(){const e=()=>{this.onClose("forced close"),this.transport.close()},r=()=>{this.off("upgrade",r),this.off("upgradeError",r),e()},n=()=>{this.once("upgrade",r),this.once("upgradeError",r)};return(this.readyState==="opening"||this.readyState==="open")&&(this.readyState="closing",this.writeBuffer.length?this.once("drain",()=>{this.upgrading?n():e()}):this.upgrading?n():e()),this}onError(e){Ft.priorWebsocketSuccess=!1,this.emitReserved("error",e),this.onClose("transport error",e)}onClose(e,r){(this.readyState==="opening"||this.readyState==="open"||this.readyState==="closing")&&(this.clearTimeoutFn(this.pingTimeoutTimer),this.transport.removeAllListeners("close"),this.transport.close(),this.transport.removeAllListeners(),typeof removeEventListener=="function"&&(removeEventListener("beforeunload",this.beforeunloadEventListener,!1),removeEventListener("offline",this.offlineEventListener,!1)),this.readyState="closed",this.id=null,this.emitReserved("close",e,r),this.writeBuffer=[],this.prevBufferLen=0)}filterUpgrades(e){const r=[];let n=0;const o=e.length;for(;n<o;n++)~this.transports.indexOf(e[n])&&r.push(e[n]);return r}};Socket$1.protocol=protocol$1;function url(t,e="",r){let n=t;r=r||typeof location<"u"&&location,t==null&&(t=r.protocol+"//"+r.host),typeof t=="string"&&(t.charAt(0)==="/"&&(t.charAt(1)==="/"?t=r.protocol+t:t=r.host+t),/^(https?|wss?):\/\//.test(t)||(typeof r<"u"?t=r.protocol+"//"+t:t="https://"+t),n=parse$2(t)),n.port||(/^(http|ws)$/.test(n.protocol)?n.port="80":/^(http|ws)s$/.test(n.protocol)&&(n.port="443")),n.path=n.path||"/";const o=n.host.indexOf(":")!==-1?"["+n.host+"]":n.host;return n.id=n.protocol+"://"+o+":"+n.port+e,n.href=n.protocol+"://"+o+(r&&r.port===n.port?"":":"+n.port),n}const withNativeArrayBuffer=typeof ArrayBuffer=="function",isView=t=>typeof ArrayBuffer.isView=="function"?ArrayBuffer.isView(t):t.buffer instanceof ArrayBuffer,toString$9=Object.prototype.toString,withNativeBlob=typeof Blob=="function"||typeof Blob<"u"&&toString$9.call(Blob)==="[object BlobConstructor]",withNativeFile=typeof File=="function"||typeof File<"u"&&toString$9.call(File)==="[object FileConstructor]";function isBinary(t){return withNativeArrayBuffer&&(t instanceof ArrayBuffer||isView(t))||withNativeBlob&&t instanceof Blob||withNativeFile&&t instanceof File}function hasBinary(t,e){if(!t||typeof t!="object")return!1;if(Array.isArray(t)){for(let r=0,n=t.length;r<n;r++)if(hasBinary(t[r]))return!0;return!1}if(isBinary(t))return!0;if(t.toJSON&&typeof t.toJSON=="function"&&arguments.length===1)return hasBinary(t.toJSON(),!0);for(const r in t)if(Object.prototype.hasOwnProperty.call(t,r)&&hasBinary(t[r]))return!0;return!1}function deconstructPacket(t){const e=[],r=t.data,n=t;return n.data=_deconstructPacket(r,e),n.attachments=e.length,{packet:n,buffers:e}}function _deconstructPacket(t,e){if(!t)return t;if(isBinary(t)){const r={_placeholder:!0,num:e.length};return e.push(t),r}else if(Array.isArray(t)){const r=new Array(t.length);for(let n=0;n<t.length;n++)r[n]=_deconstructPacket(t[n],e);return r}else if(typeof t=="object"&&!(t instanceof Date)){const r={};for(const n in t)Object.prototype.hasOwnProperty.call(t,n)&&(r[n]=_deconstructPacket(t[n],e));return r}return t}function reconstructPacket(t,e){return t.data=_reconstructPacket(t.data,e),delete t.attachments,t}function _reconstructPacket(t,e){if(!t)return t;if(t&&t._placeholder===!0){if(typeof t.num=="number"&&t.num>=0&&t.num<e.length)return e[t.num];throw new Error("illegal attachments")}else if(Array.isArray(t))for(let r=0;r<t.length;r++)t[r]=_reconstructPacket(t[r],e);else if(typeof t=="object")for(const r in t)Object.prototype.hasOwnProperty.call(t,r)&&(t[r]=_reconstructPacket(t[r],e));return t}const RESERVED_EVENTS$1=["connect","connect_error","disconnect","disconnecting","newListener","removeListener"],protocol=5;var PacketType;(function(t){t[t.CONNECT=0]="CONNECT",t[t.DISCONNECT=1]="DISCONNECT",t[t.EVENT=2]="EVENT",t[t.ACK=3]="ACK",t[t.CONNECT_ERROR=4]="CONNECT_ERROR",t[t.BINARY_EVENT=5]="BINARY_EVENT",t[t.BINARY_ACK=6]="BINARY_ACK"})(PacketType||(PacketType={}));let Encoder$7=class{constructor(t){this.replacer=t}encode(t){return(t.type===PacketType.EVENT||t.type===PacketType.ACK)&&hasBinary(t)?this.encodeAsBinary({type:t.type===PacketType.EVENT?PacketType.BINARY_EVENT:PacketType.BINARY_ACK,nsp:t.nsp,data:t.data,id:t.id}):[this.encodeAsString(t)]}encodeAsString(t){let e=""+t.type;return(t.type===PacketType.BINARY_EVENT||t.type===PacketType.BINARY_ACK)&&(e+=t.attachments+"-"),t.nsp&&t.nsp!=="/"&&(e+=t.nsp+","),t.id!=null&&(e+=t.id),t.data!=null&&(e+=JSON.stringify(t.data,this.replacer)),e}encodeAsBinary(t){const e=deconstructPacket(t),r=this.encodeAsString(e.packet),n=e.buffers;return n.unshift(r),n}};function isObject(t){return Object.prototype.toString.call(t)==="[object Object]"}let Decoder$7=class Or extends Emitter{constructor(e){super(),this.reviver=e}add(e){let r;if(typeof e=="string"){if(this.reconstructor)throw new Error("got plaintext data when reconstructing a packet");r=this.decodeString(e);const n=r.type===PacketType.BINARY_EVENT;n||r.type===PacketType.BINARY_ACK?(r.type=n?PacketType.EVENT:PacketType.ACK,this.reconstructor=new BinaryReconstructor(r),r.attachments===0&&super.emitReserved("decoded",r)):super.emitReserved("decoded",r)}else if(isBinary(e)||e.base64)if(this.reconstructor)r=this.reconstructor.takeBinaryData(e),r&&(this.reconstructor=null,super.emitReserved("decoded",r));else throw new Error("got binary data when not reconstructing a packet");else throw new Error("Unknown type: "+e)}decodeString(e){let r=0;const n={type:Number(e.charAt(0))};if(PacketType[n.type]===void 0)throw new Error("unknown packet type "+n.type);if(n.type===PacketType.BINARY_EVENT||n.type===PacketType.BINARY_ACK){const a=r+1;for(;e.charAt(++r)!=="-"&&r!=e.length;);const c=e.substring(a,r);if(c!=Number(c)||e.charAt(r)!=="-")throw new Error("Illegal attachments");n.attachments=Number(c)}if(e.charAt(r+1)==="/"){const a=r+1;for(;++r&&!(e.charAt(r)===","||r===e.length););n.nsp=e.substring(a,r)}else n.nsp="/";const o=e.charAt(r+1);if(o!==""&&Number(o)==o){const a=r+1;for(;++r;){const c=e.charAt(r);if(c==null||Number(c)!=c){--r;break}if(r===e.length)break}n.id=Number(e.substring(a,r+1))}if(e.charAt(++r)){const a=this.tryParse(e.substr(r));if(Or.isPayloadValid(n.type,a))n.data=a;else throw new Error("invalid payload")}return n}tryParse(e){try{return JSON.parse(e,this.reviver)}catch{return!1}}static isPayloadValid(e,r){switch(e){case PacketType.CONNECT:return isObject(r);case PacketType.DISCONNECT:return r===void 0;case PacketType.CONNECT_ERROR:return typeof r=="string"||isObject(r);case PacketType.EVENT:case PacketType.BINARY_EVENT:return Array.isArray(r)&&(typeof r[0]=="number"||typeof r[0]=="string"&&RESERVED_EVENTS$1.indexOf(r[0])===-1);case PacketType.ACK:case PacketType.BINARY_ACK:return Array.isArray(r)}}destroy(){this.reconstructor&&(this.reconstructor.finishedReconstruction(),this.reconstructor=null)}};class BinaryReconstructor{constructor(e){this.packet=e,this.buffers=[],this.reconPack=e}takeBinaryData(e){if(this.buffers.push(e),this.buffers.length===this.reconPack.attachments){const r=reconstructPacket(this.reconPack,this.buffers);return this.finishedReconstruction(),r}return null}finishedReconstruction(){this.reconPack=null,this.buffers=[]}}const parser=Object.freeze(Object.defineProperty({__proto__:null,Decoder:Decoder$7,Encoder:Encoder$7,get PacketType(){return PacketType},protocol},Symbol.toStringTag,{value:"Module"}));function on(t,e,r){return t.on(e,r),function(){t.off(e,r)}}const RESERVED_EVENTS=Object.freeze({connect:1,connect_error:1,disconnect:1,disconnecting:1,newListener:1,removeListener:1});class Socket extends Emitter{constructor(e,r,n){super(),this.connected=!1,this.recovered=!1,this.receiveBuffer=[],this.sendBuffer=[],this._queue=[],this._queueSeq=0,this.ids=0,this.acks={},this.flags={},this.io=e,this.nsp=r,n&&n.auth&&(this.auth=n.auth),this._opts=Object.assign({},n),this.io._autoConnect&&this.open()}get disconnected(){return!this.connected}subEvents(){if(this.subs)return;const e=this.io;this.subs=[on(e,"open",this.onopen.bind(this)),on(e,"packet",this.onpacket.bind(this)),on(e,"error",this.onerror.bind(this)),on(e,"close",this.onclose.bind(this))]}get active(){return!!this.subs}connect(){return this.connected?this:(this.subEvents(),this.io._reconnecting||this.io.open(),this.io._readyState==="open"&&this.onopen(),this)}open(){return this.connect()}send(...e){return e.unshift("message"),this.emit.apply(this,e),this}emit(e,...r){if(RESERVED_EVENTS.hasOwnProperty(e))throw new Error('"'+e.toString()+'" is a reserved event name');if(r.unshift(e),this._opts.retries&&!this.flags.fromQueue&&!this.flags.volatile)return this._addToQueue(r),this;const n={type:PacketType.EVENT,data:r};if(n.options={},n.options.compress=this.flags.compress!==!1,typeof r[r.length-1]=="function"){const a=this.ids++,c=r.pop();this._registerAckCallback(a,c),n.id=a}const o=this.io.engine&&this.io.engine.transport&&this.io.engine.transport.writable;return this.flags.volatile&&(!o||!this.connected)||(this.connected?(this.notifyOutgoingListeners(n),this.packet(n)):this.sendBuffer.push(n)),this.flags={},this}_registerAckCallback(e,r){var n;const o=(n=this.flags.timeout)!==null&&n!==void 0?n:this._opts.ackTimeout;if(o===void 0){this.acks[e]=r;return}const a=this.io.setTimeoutFn(()=>{delete this.acks[e];for(let c=0;c<this.sendBuffer.length;c++)this.sendBuffer[c].id===e&&this.sendBuffer.splice(c,1);r.call(this,new Error("operation has timed out"))},o);this.acks[e]=(...c)=>{this.io.clearTimeoutFn(a),r.apply(this,[null,...c])}}emitWithAck(e,...r){const n=this.flags.timeout!==void 0||this._opts.ackTimeout!==void 0;return new Promise((o,a)=>{r.push((c,u)=>n?c?a(c):o(u):o(c)),this.emit(e,...r)})}_addToQueue(e){let r;typeof e[e.length-1]=="function"&&(r=e.pop());const n={id:this._queueSeq++,tryCount:0,pending:!1,args:e,flags:Object.assign({fromQueue:!0},this.flags)};e.push((o,...a)=>n!==this._queue[0]?void 0:(o!==null?n.tryCount>this._opts.retries&&(this._queue.shift(),r&&r(o)):(this._queue.shift(),r&&r(null,...a)),n.pending=!1,this._drainQueue())),this._queue.push(n),this._drainQueue()}_drainQueue(e=!1){if(!this.connected||this._queue.length===0)return;const r=this._queue[0];r.pending&&!e||(r.pending=!0,r.tryCount++,this.flags=r.flags,this.emit.apply(this,r.args))}packet(e){e.nsp=this.nsp,this.io._packet(e)}onopen(){typeof this.auth=="function"?this.auth(e=>{this._sendConnectPacket(e)}):this._sendConnectPacket(this.auth)}_sendConnectPacket(e){this.packet({type:PacketType.CONNECT,data:this._pid?Object.assign({pid:this._pid,offset:this._lastOffset},e):e})}onerror(e){this.connected||this.emitReserved("connect_error",e)}onclose(e,r){this.connected=!1,delete this.id,this.emitReserved("disconnect",e,r)}onpacket(e){if(e.nsp===this.nsp)switch(e.type){case PacketType.CONNECT:e.data&&e.data.sid?this.onconnect(e.data.sid,e.data.pid):this.emitReserved("connect_error",new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));break;case PacketType.EVENT:case PacketType.BINARY_EVENT:this.onevent(e);break;case PacketType.ACK:case PacketType.BINARY_ACK:this.onack(e);break;case PacketType.DISCONNECT:this.ondisconnect();break;case PacketType.CONNECT_ERROR:this.destroy();const r=new Error(e.data.message);r.data=e.data.data,this.emitReserved("connect_error",r);break}}onevent(e){const r=e.data||[];e.id!=null&&r.push(this.ack(e.id)),this.connected?this.emitEvent(r):this.receiveBuffer.push(Object.freeze(r))}emitEvent(e){if(this._anyListeners&&this._anyListeners.length){const r=this._anyListeners.slice();for(const n of r)n.apply(this,e)}super.emit.apply(this,e),this._pid&&e.length&&typeof e[e.length-1]=="string"&&(this._lastOffset=e[e.length-1])}ack(e){const r=this;let n=!1;return function(...o){n||(n=!0,r.packet({type:PacketType.ACK,id:e,data:o}))}}onack(e){const r=this.acks[e.id];typeof r=="function"&&(r.apply(this,e.data),delete this.acks[e.id])}onconnect(e,r){this.id=e,this.recovered=r&&this._pid===r,this._pid=r,this.connected=!0,this.emitBuffered(),this.emitReserved("connect"),this._drainQueue(!0)}emitBuffered(){this.receiveBuffer.forEach(e=>this.emitEvent(e)),this.receiveBuffer=[],this.sendBuffer.forEach(e=>{this.notifyOutgoingListeners(e),this.packet(e)}),this.sendBuffer=[]}ondisconnect(){this.destroy(),this.onclose("io server disconnect")}destroy(){this.subs&&(this.subs.forEach(e=>e()),this.subs=void 0),this.io._destroy(this)}disconnect(){return this.connected&&this.packet({type:PacketType.DISCONNECT}),this.destroy(),this.connected&&this.onclose("io client disconnect"),this}close(){return this.disconnect()}compress(e){return this.flags.compress=e,this}get volatile(){return this.flags.volatile=!0,this}timeout(e){return this.flags.timeout=e,this}onAny(e){return this._anyListeners=this._anyListeners||[],this._anyListeners.push(e),this}prependAny(e){return this._anyListeners=this._anyListeners||[],this._anyListeners.unshift(e),this}offAny(e){if(!this._anyListeners)return this;if(e){const r=this._anyListeners;for(let n=0;n<r.length;n++)if(e===r[n])return r.splice(n,1),this}else this._anyListeners=[];return this}listenersAny(){return this._anyListeners||[]}onAnyOutgoing(e){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.push(e),this}prependAnyOutgoing(e){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.unshift(e),this}offAnyOutgoing(e){if(!this._anyOutgoingListeners)return this;if(e){const r=this._anyOutgoingListeners;for(let n=0;n<r.length;n++)if(e===r[n])return r.splice(n,1),this}else this._anyOutgoingListeners=[];return this}listenersAnyOutgoing(){return this._anyOutgoingListeners||[]}notifyOutgoingListeners(e){if(this._anyOutgoingListeners&&this._anyOutgoingListeners.length){const r=this._anyOutgoingListeners.slice();for(const n of r)n.apply(this,e.data)}}}function Backoff(t){t=t||{},this.ms=t.min||100,this.max=t.max||1e4,this.factor=t.factor||2,this.jitter=t.jitter>0&&t.jitter<=1?t.jitter:0,this.attempts=0}Backoff.prototype.duration=function(){var t=this.ms*Math.pow(this.factor,this.attempts++);if(this.jitter){var e=Math.random(),r=Math.floor(e*this.jitter*t);t=Math.floor(e*10)&1?t+r:t-r}return Math.min(t,this.max)|0},Backoff.prototype.reset=function(){this.attempts=0},Backoff.prototype.setMin=function(t){this.ms=t},Backoff.prototype.setMax=function(t){this.max=t},Backoff.prototype.setJitter=function(t){this.jitter=t};class Manager extends Emitter{constructor(e,r){var n;super(),this.nsps={},this.subs=[],e&&typeof e=="object"&&(r=e,e=void 0),r=r||{},r.path=r.path||"/socket.io",this.opts=r,installTimerFunctions(this,r),this.reconnection(r.reconnection!==!1),this.reconnectionAttempts(r.reconnectionAttempts||1/0),this.reconnectionDelay(r.reconnectionDelay||1e3),this.reconnectionDelayMax(r.reconnectionDelayMax||5e3),this.randomizationFactor((n=r.randomizationFactor)!==null&&n!==void 0?n:.5),this.backoff=new Backoff({min:this.reconnectionDelay(),max:this.reconnectionDelayMax(),jitter:this.randomizationFactor()}),this.timeout(r.timeout==null?2e4:r.timeout),this._readyState="closed",this.uri=e;const o=r.parser||parser;this.encoder=new o.Encoder,this.decoder=new o.Decoder,this._autoConnect=r.autoConnect!==!1,this._autoConnect&&this.open()}reconnection(e){return arguments.length?(this._reconnection=!!e,this):this._reconnection}reconnectionAttempts(e){return e===void 0?this._reconnectionAttempts:(this._reconnectionAttempts=e,this)}reconnectionDelay(e){var r;return e===void 0?this._reconnectionDelay:(this._reconnectionDelay=e,(r=this.backoff)===null||r===void 0||r.setMin(e),this)}randomizationFactor(e){var r;return e===void 0?this._randomizationFactor:(this._randomizationFactor=e,(r=this.backoff)===null||r===void 0||r.setJitter(e),this)}reconnectionDelayMax(e){var r;return e===void 0?this._reconnectionDelayMax:(this._reconnectionDelayMax=e,(r=this.backoff)===null||r===void 0||r.setMax(e),this)}timeout(e){return arguments.length?(this._timeout=e,this):this._timeout}maybeReconnectOnOpen(){!this._reconnecting&&this._reconnection&&this.backoff.attempts===0&&this.reconnect()}open(e){if(~this._readyState.indexOf("open"))return this;this.engine=new Socket$1(this.uri,this.opts);const r=this.engine,n=this;this._readyState="opening",this.skipReconnect=!1;const o=on(r,"open",function(){n.onopen(),e&&e()}),a=u=>{this.cleanup(),this._readyState="closed",this.emitReserved("error",u),e?e(u):this.maybeReconnectOnOpen()},c=on(r,"error",a);if(this._timeout!==!1){const u=this._timeout,l=this.setTimeoutFn(()=>{o(),a(new Error("timeout")),r.close()},u);this.opts.autoUnref&&l.unref(),this.subs.push(()=>{this.clearTimeoutFn(l)})}return this.subs.push(o),this.subs.push(c),this}connect(e){return this.open(e)}onopen(){this.cleanup(),this._readyState="open",this.emitReserved("open");const e=this.engine;this.subs.push(on(e,"ping",this.onping.bind(this)),on(e,"data",this.ondata.bind(this)),on(e,"error",this.onerror.bind(this)),on(e,"close",this.onclose.bind(this)),on(this.decoder,"decoded",this.ondecoded.bind(this)))}onping(){this.emitReserved("ping")}ondata(e){try{this.decoder.add(e)}catch(r){this.onclose("parse error",r)}}ondecoded(e){nextTick(()=>{this.emitReserved("packet",e)},this.setTimeoutFn)}onerror(e){this.emitReserved("error",e)}socket(e,r){let n=this.nsps[e];return n?this._autoConnect&&!n.active&&n.connect():(n=new Socket(this,e,r),this.nsps[e]=n),n}_destroy(e){const r=Object.keys(this.nsps);for(const n of r)if(this.nsps[n].active)return;this._close()}_packet(e){const r=this.encoder.encode(e);for(let n=0;n<r.length;n++)this.engine.write(r[n],e.options)}cleanup(){this.subs.forEach(e=>e()),this.subs.length=0,this.decoder.destroy()}_close(){this.skipReconnect=!0,this._reconnecting=!1,this.onclose("forced close"),this.engine&&this.engine.close()}disconnect(){return this._close()}onclose(e,r){this.cleanup(),this.backoff.reset(),this._readyState="closed",this.emitReserved("close",e,r),this._reconnection&&!this.skipReconnect&&this.reconnect()}reconnect(){if(this._reconnecting||this.skipReconnect)return this;const e=this;if(this.backoff.attempts>=this._reconnectionAttempts)this.backoff.reset(),this.emitReserved("reconnect_failed"),this._reconnecting=!1;else{const r=this.backoff.duration();this._reconnecting=!0;const n=this.setTimeoutFn(()=>{e.skipReconnect||(this.emitReserved("reconnect_attempt",e.backoff.attempts),!e.skipReconnect&&e.open(o=>{o?(e._reconnecting=!1,e.reconnect(),this.emitReserved("reconnect_error",o)):e.onreconnect()}))},r);this.opts.autoUnref&&n.unref(),this.subs.push(()=>{this.clearTimeoutFn(n)})}}onreconnect(){const e=this.backoff.attempts;this._reconnecting=!1,this.backoff.reset(),this.emitReserved("reconnect",e)}}const cache$6={};lookup=function(t,e){typeof t=="object"&&(e=t,t=void 0),e=e||{};const r=url(t,e.path||"/socket.io"),n=r.source,o=r.id,a=r.path,c=cache$6[o]&&a in cache$6[o].nsps,u=e.forceNew||e["force new connection"]||e.multiplex===!1||c;let l;return u?l=new Manager(n,e):(cache$6[o]||(cache$6[o]=new Manager(n,e)),l=cache$6[o]),r.query&&!e.query&&(e.query=r.queryKey),l.socket(r.path,e)},Object.assign(lookup,{Manager,Socket,io:lookup,connect:lookup});const MAX_BYTES=65536;function randomBytes$1(t){const e=new Uint8Array(t);let r=0;if(t>0)if(t>MAX_BYTES)for(;r<t;)r+MAX_BYTES>t?(crypto.getRandomValues(e.subarray(r,r+(t-r))),r+=t-r):(crypto.getRandomValues(e.subarray(r,r+MAX_BYTES)),r+=MAX_BYTES);else crypto.getRandomValues(e);return e}var random_browser=randomBytes$1;let MAX_BUFFERED_AMOUNT,CHANNEL_CLOSING_TIMEOUT;randomBytes$2=getDefaultExportFromCjs(random_browser),MAX_BUFFERED_AMOUNT=64*1024,CHANNEL_CLOSING_TIMEOUT=5*1e3;class WebRTCDataChannel{constructor(e,r){this.label=e.label,this.open=pDefer$1(),this.channel=e,this.channel.binaryType="arraybuffer",this.log=r.log,typeof this.channel.bufferedAmountLowThreshold=="number"&&(this.channel.bufferedAmountLowThreshold=MAX_BUFFERED_AMOUNT),e.addEventListener("message",o=>{r.onMessage(o)}),e.addEventListener("bufferedamountlow",()=>{this.log("stop backpressure: bufferedAmount %d",this.channel.bufferedAmount),this.open.resolve()}),e.addEventListener("open",()=>{this.open.resolve(),r.onOpen()}),e.addEventListener("close",()=>{r.onClose()}),e.addEventListener("error",o=>{if(o.error?.message==="Transport channel closed")return this.close();r.log.error('channel encounter an error in state "%s" message: "%s" detail: "%s',e.readyState,o.error?.message,o.error?.errorDetail);const a=o.error instanceof Error?o.error:new Error(`datachannel error: ${o.error?.message} ${o.error?.errorDetail}`);r.onError(errcode(a,"ERR_DATA_CHANNEL"))});let n=!1;this.closingInterval=setInterval(()=>{e.readyState==="closing"?(n&&r.onClose(),n=!0):n=!1},CHANNEL_CLOSING_TIMEOUT)}async send(e){await this.open.promise,this.channel.send(e),this.channel.bufferedAmount>MAX_BUFFERED_AMOUNT&&(this.log("start backpressure: bufferedAmount %d",this.channel.bufferedAmount),this.open=pDefer$1())}close(){clearInterval(this.closingInterval),this.channel.close()}get bufferedAmount(){return this.channel.bufferedAmount}}var delay$2={exports:{}};const randomInteger=(t,e)=>Math.floor(Math.random()*(e-t+1)+t),createAbortError=()=>{const t=new Error("Delay aborted");return t.name="AbortError",t},createDelay=({clearTimeout:t,setTimeout:e,willResolve:r})=>(n,{value:o,signal:a}={})=>{if(a&&a.aborted)return Promise.reject(createAbortError());let c,u,l;const f=t||clearTimeout,p=()=>{f(c),l(createAbortError())},g=()=>{a&&a.removeEventListener("abort",p)},$=new Promise((_,b)=>{u=()=>{g(),r?_(o):b(o)},l=b,c=(e||setTimeout)(u,n)});return a&&a.addEventListener("abort",p,{once:!0}),$.clear=()=>{f(c),c=null,u()},$},createWithTimers=t=>{const e=createDelay({...t,willResolve:!0});return e.reject=createDelay({...t,willResolve:!1}),e.range=(r,n,o)=>e(randomInteger(r,n),o),e},delay=createWithTimers();delay.createWithTimers=createWithTimers,delay$2.exports=delay,delay$2.exports.default=delay;var delayExports=delay$2.exports;const delay$1=getDefaultExportFromCjs(delayExports),DEFAULT_PEER_CONNECTION_CONFIG={iceServers:[{urls:["stun:stun.l.google.com:19302","stun:global.stun.twilio.com:3478"]}]};function getBrowserRTC(){if(typeof globalThis>"u")throw errcode(new Error("No WebRTC support detected"),"ERR_WEBRTC_SUPPORT");const t={RTCPeerConnection:globalThis.RTCPeerConnection??globalThis.mozRTCPeerConnection??globalThis.webkitRTCPeerConnection,RTCSessionDescription:globalThis.RTCSessionDescription??globalThis.mozRTCSessionDescription??globalThis.webkitRTCSessionDescription,RTCIceCandidate:globalThis.RTCIceCandidate??globalThis.mozRTCIceCandidate??globalThis.webkitRTCIceCandidate};if(t.RTCPeerConnection==null)throw errcode(new Error("No WebRTC support detected"),"ERR_WEBRTC_SUPPORT");return t}class WebRTCPeer extends EventEmitter$1{constructor(e){super(),this.id=e.id??toString$D(randomBytes$2(4),"hex").slice(0,7),this.log=logger$3(`libp2p:webrtc-peer:${e.logPrefix}:${this.id}`),this.wrtc=e.wrtc??getBrowserRTC(),this.peerConnection=new this.wrtc.RTCPeerConnection(Object.assign({},DEFAULT_PEER_CONNECTION_CONFIG,e.peerConnectionConfig)),this.closed=!1,this.connected=pDefer$1(),this.source=pushable(),this.sink=async r=>{if(await this.connected.promise,this.channel==null)throw errcode(new Error("Connected but no channel?!"),"ERR_DATA_CHANNEL");for await(const n of r)await this.channel.send(n);await this.close()}}handleDataChannelEvent(e){const r=e.channel;if(r==null){this.close(errcode(new Error("Data channel event is missing `channel` property"),"ERR_DATA_CHANNEL")).catch(n=>{this.log("Error closing after event channel was found to be null",n)});return}this.channel=new WebRTCDataChannel(r,{log:this.log,onMessage:n=>{this.source.push(new Uint8Array(n.data))},onOpen:()=>{this.connected.resolve(),this.dispatchEvent(new CustomEvent("ready"))},onClose:()=>{this.close().catch(n=>{this.log("error closing connection after channel close",n)})},onError:n=>{this.close(n).catch(o=>{this.log("error closing connection after channel error",o)})}})}async close(e){if(this.closed=!0,e==null&&this.channel!=null)for(;this.channel.bufferedAmount>0;)await delay$1(100);this.channel?.close(),this.peerConnection.close(),this.source.end(e),this.dispatchEvent(new CustomEvent("close"))}}class WebRTCHandshake extends EventEmitter$1{constructor(e){super(),this.log=e.log,this.peerConnection=e.peerConnection,this.wrtc=e.wrtc,this.status="idle",this.peerConnection.addEventListener("negotiationneeded",()=>{this.log("peer connection negotiation needed"),this.handleRenegotiate({type:"renegotiate"}).catch(r=>{this.log.error("could not renegotiate %o",r)})})}async handleSignal(e){if(this.log('incoming signal "%s"',e.type),e.type==="offer")return await this.handleOffer(e);if(e.type==="answer")return await this.handleAnswer(e);if(e.type==="candidate")return await this.handleCandidate(e);if(e.type==="renegotiate")return await this.handleRenegotiate(e);if(e.type==="goodbye")return await this.handleGoodye(e);this.log(`Unknown signal type ${e.type}`)}async handleOffer(e){}async handleAnswer(e){}async handleRenegotiate(e){}async handleGoodye(e){this.peerConnection.close()}async handleCandidate(e){const r=new this.wrtc.RTCIceCandidate(e.candidate);try{await this.peerConnection.addIceCandidate(r)}catch(n){if(r.address==null||r.address.endsWith(".local"))this.log("ignoring unsupported ICE candidate.");else throw errcode(n,"ERR_ADD_ICE_CANDIDATE")}}}const log$T=logger$3("libp2p:webrtc-peer:receiver");WebRTCReceiver=class extends WebRTCPeer{constructor(t={}){super({...t,logPrefix:"receiver"}),this.handshake=new WebRTCReceiverHandshake({log:this.log,peerConnection:this.peerConnection,wrtc:this.wrtc,answerOptions:t.answerOptions}),this.handshake.addEventListener("signal",e=>this.dispatchEvent(new CustomEvent("signal",{detail:e.detail}))),this.peerConnection.addEventListener("datachannel",e=>{this.handleDataChannelEvent(e)})}handleSignal(t){this.handshake.handleSignal(t).catch(e=>{this.log("error handling signal %o %o",t,e)})}};class WebRTCReceiverHandshake extends WebRTCHandshake{constructor(e){super(e),this.options=e,this.status="idle",this.iceCandidates=[]}async handleRenegotiate(){log$T.trace("renegotiate"),this.dispatchEvent(new CustomEvent("signal",{detail:{type:"renegotiate"}}))}async handleOffer(e){await this.peerConnection.setRemoteDescription(new this.wrtc.RTCSessionDescription(e));for(const n of this.iceCandidates)await this.handleCandidate(n);this.iceCandidates=[];const r=await this.peerConnection.createAnswer(this.options.answerOptions);await this.peerConnection.setLocalDescription(r),log$T.trace("handle offer",this.peerConnection.localDescription),this.dispatchEvent(new CustomEvent("signal",{detail:this.peerConnection.localDescription??r}))}async handleCandidate(e){if(this.peerConnection.remoteDescription==null||this.peerConnection.remoteDescription.type==null){this.iceCandidates.push(e);return}await super.handleCandidate(e)}}class TimeoutError extends Error{constructor(e){super(e),this.name="TimeoutError"}}let AbortError$5=class extends Error{constructor(t){super(),this.name="AbortError",this.message=t}};const getDOMException=t=>globalThis.DOMException===void 0?new AbortError$5(t):new DOMException(t),getAbortedReason=t=>{const e=t.reason===void 0?getDOMException("This operation was aborted."):t.reason;return e instanceof Error?e:getDOMException(e)};function pTimeout(t,e,r,n){let o;const a=new Promise((c,u)=>{if(typeof e!="number"||Math.sign(e)!==1)throw new TypeError(`Expected \`milliseconds\` to be a positive number, got \`${e}\``);if(e===Number.POSITIVE_INFINITY){c(t);return}if(n={customTimers:{setTimeout,clearTimeout},...n},n.signal){const{signal:l}=n;l.aborted&&u(getAbortedReason(l)),l.addEventListener("abort",()=>{u(getAbortedReason(l))})}o=n.customTimers.setTimeout.call(void 0,()=>{if(typeof r=="function"){try{c(r())}catch(p){u(p)}return}const l=typeof r=="string"?r:`Promise timed out after ${e} milliseconds`,f=r instanceof Error?r:new TimeoutError(l);typeof t.cancel=="function"&&t.cancel(),u(f)},e),(async()=>{try{c(await t)}catch(l){u(l)}finally{n.customTimers.clearTimeout.call(void 0,o)}})()});return a.clear=()=>{clearTimeout(o),o=void 0},a}const normalizeEmitter=t=>{const e=t.on||t.addListener||t.addEventListener,r=t.off||t.removeListener||t.removeEventListener;if(!e||!r)throw new TypeError("Emitter is not compatible");return{addListener:e.bind(t),removeListener:r.bind(t)}};function pEventMultiple(t,e,r){let n;const o=new Promise((a,c)=>{if(r={rejectionEvents:["error"],multiArgs:!1,resolveImmediately:!1,...r},!(r.count>=0&&(r.count===Number.POSITIVE_INFINITY||Number.isInteger(r.count))))throw new TypeError("The `count` option should be at least 0 or more");const u=[e].flat(),l=[],{addListener:f,removeListener:p}=normalizeEmitter(t),g=(..._)=>{const b=r.multiArgs?_:_[0];r.filter&&!r.filter(b)||(l.push(b),r.count===l.length&&(n(),a(l)))},$=_=>{n(),c(_)};n=()=>{for(const _ of u)p(_,g);for(const _ of r.rejectionEvents)p(_,$)};for(const _ of u)f(_,g);for(const _ of r.rejectionEvents)f(_,$);r.resolveImmediately&&a(l)});if(o.cancel=n,typeof r.timeout=="number"){const a=pTimeout(o,r.timeout);return a.cancel=n,a}return o}function pEvent(t,e,r){typeof r=="function"&&(r={filter:r}),r={...r,count:1,resolveImmediately:!1};const n=pEventMultiple(t,e,r),o=n.then(a=>a[0]);return o.cancel=n.cancel,o}const log$S=logger$3("libp2p:webrtc-peer:initator"),ICECOMPLETE_TIMEOUT=1e3;WebRTCInitiator=class extends WebRTCPeer{constructor(t={}){super({...t,logPrefix:"initiator"}),this.handleDataChannelEvent({channel:this.peerConnection.createDataChannel(t.dataChannelLabel??toString$D(randomBytes$2(20),"hex").slice(0,7),t.dataChannelInit)}),this.handshake=new WebRTCInitiatorHandshake({log:this.log,peerConnection:this.peerConnection,wrtc:this.wrtc,offerOptions:t.offerOptions}),this.handshake.addEventListener("signal",e=>{this.dispatchEvent(new CustomEvent("signal",{detail:e.detail}))})}handleSignal(t){this.handshake.handleSignal(t).catch(e=>{this.log("error handling signal %o %o",t,e)})}};class WebRTCInitiatorHandshake extends WebRTCHandshake{constructor(e){super(e),this.options=e,this.status="idle",this.peerConnection.addEventListener("icecandidate",r=>{if(r.candidate==null)return;const n={type:"candidate",candidate:{candidate:r.candidate.candidate,sdpMLineIndex:r.candidate.sdpMLineIndex,sdpMid:r.candidate.sdpMid}};log$S.trace("create candidate",n),this.dispatchEvent(new CustomEvent("signal",{detail:n})),this.dispatchEvent(new CustomEvent("ice-candidate"))})}async handleRenegotiate(){if(this.status==="negotiating"){this.log("already negotiating, queueing");return}this.status="negotiating";const e=await this.peerConnection.createOffer(this.options.offerOptions);await this.peerConnection.setLocalDescription(e),await pEvent(this,"ice-candidate"),await delay$1(ICECOMPLETE_TIMEOUT),log$S.trace("renegotiate",this.peerConnection.localDescription),this.dispatchEvent(new CustomEvent("signal",{detail:this.peerConnection.localDescription??e}))}async handleAnswer(e){log$S.trace("handle answer",e),await this.peerConnection.setRemoteDescription(new this.wrtc.RTCSessionDescription(e)),this.status="idle"}}const log$R=logger$3("libp2p:webrtc-star:socket");function toMultiaddrConnection(t,e){const{sink:r,source:n}=t,o={remoteAddr:e.remoteAddr,async sink(a){e.signal!=null&&(a=abortableSource$5(a,e.signal));try{await r(a)}catch(c){c.type!=="aborted"&&log$R.error(c)}},source:e.signal!=null?abortableSource$5(n,e.signal):n,timeline:{open:Date.now()},async close(){if(t.closed)return;const a=Date.now(),c=setTimeout(()=>{if(o.remoteAddr!=null){const{host:u,port:l}=o.remoteAddr.toOptions();log$R("timeout closing socket to %s:%s after %dms, destroying it manually",u,l,Date.now()-a)}t.closed||t.close().catch(u=>{log$R.error("could not close socket",u)})},CLOSE_TIMEOUT$1);try{await t.close()}finally{clearTimeout(c)}}};return t.addEventListener("close",()=>{o.timeline.close==null&&(o.timeline.close=Date.now())},{once:!0}),o}function cleanUrlSIO(t){const e=t.toString().split("/"),r=t.protos()[1].name,n=t.protos()[2].name,o=t.stringTuples()[1][1];if(r!=="tcp"||n!=="ws"&&n!=="wss")throw new Error(`invalid multiaddr: ${t.toString()}`);if(!isName(t))return`http://${e[2]}:${e[4]}`;if(n==="ws")return`http://${e[2]}${o==null||o==="80"?"":`:${o}`}`;if(n==="wss")return`https://${e[2]}${o==null||o==="443"?"":`:${o}`}`;throw new Error("invalid multiaddr: "+t.toString())}function cleanMultiaddr(t){const e="/libp2p-webrtc-star";if(t.startsWith(e)){t=t.substring(e.length,t.length);let r=multiaddr$5(t);const n=r.stringTuples().filter(o=>o[0]===421)[0];if(n[1]==null)throw new Error("invalid multiaddr: "+t);r=r.decapsulate("p2p"),r=r.encapsulate("/p2p-webrtc-star"),r=r.encapsulate(`/p2p/${n[1]}`),t=r.toString()}return t}const log$Q=logger$3("libp2p:webrtc-star:listener"),sioOptions={transports:["websocket"],path:"/socket.io-next/"};class SigServer extends EventEmitter$1{constructor(e,r,n,o,a){super(),this.signallingAddr=r,this.socket=lookup(e,sioOptions),this.connections=[],this.channels=new Map,this.pendingSignals=new Map,this.upgrader=n,this.handler=o,this.channelOptions=a,this.handleWsHandshake=this.handleWsHandshake.bind(this);let c=!1;this.socket.on("connect_error",u=>{c&&u.type==="TransportError"||this.dispatchEvent(new CustomEvent("error",{detail:u}))}),this.socket.on("error",u=>{this.dispatchEvent(new CustomEvent("error",{detail:u}))}),this.socket.on("ws-handshake",this.handleWsHandshake),this.socket.on("ws-peer",u=>{this.dispatchEvent(new CustomEvent("peer",{detail:u}))}),this.socket.on("connect",()=>{this.socket.emit("ss-join",this.signallingAddr.toString()),c&&this.dispatchEvent(new CustomEvent("reconnect"))}),this.socket.once("connect",()=>{c=!0,this.dispatchEvent(new CustomEvent("listening"))}),this.socket.on("disconnect",()=>{this.dispatchEvent(new CustomEvent("disconnect"))})}_createChannel(e,r,n){const o={...this.channelOptions},a=new WebRTCReceiver(o),c=u=>{const l=u.detail;log$Q.error("incoming connection errored",l)};return a.addEventListener("error",c),a.addEventListener("close",()=>{a.removeEventListener("error",c)},{once:!0}),a.addEventListener("signal",u=>{const l=u.detail;this.socket.emit("ss-handshake",{intentId:e,srcMultiaddr:r,dstMultiaddr:n,answer:!0,signal:l})}),a.addEventListener("ready",()=>{const u=toMultiaddrConnection(a,{remoteAddr:this.signallingAddr});log$Q("new inbound connection %s",u.remoteAddr);try{this.upgrader.upgradeInbound(u).then(l=>{log$Q("inbound connection %s upgraded",u.remoteAddr),this.connections.push(u);const f=()=>{this.connections=this.connections.filter(p=>p!==u),this.channels.delete(e),this.pendingSignals.delete(e)};a.addEventListener("close",f,{once:!0}),this.dispatchEvent(new CustomEvent("connection",{detail:l})),this.handler(l)}).catch(l=>{log$Q.error("inbound connection failed to upgrade",l),u.close().catch(f=>{log$Q.error("inbound connection failed to close after failing to upgrade",f)})})}catch(l){log$Q.error("inbound connection failed to upgrade",l),u.close().catch(f=>{log$Q.error("inbound connection failed to close after failing to upgrade",f)})}},{once:!0}),a}handleWsHandshake(e){if(log$Q('incoming handshake. signal type "%s" is answer %s',e.signal.type,e.answer),e.answer===!0||e.err!=null||e.intentId==null)return;const r=e.intentId;let n=this.pendingSignals.get(r);n==null&&(n=[],this.pendingSignals.set(r,n)),n.push(e);let o=this.channels.get(r);if(o==null){if(e.signal.type!=="offer"){log$Q("handshake is not an offer and channel does not exist, buffering until we receive an offer");return}log$Q("creating new channel to handle offer handshake"),o=this._createChannel(e.intentId,e.srcMultiaddr,e.dstMultiaddr),this.channels.set(r,o)}else log$Q("channel already exists, using it to handle handshake");for(;n.length>0;){const a=n.shift();a?.signal!=null&&o.handleSignal(a.signal)}}async close(){this.socket.emit("ss-leave",this.signallingAddr.toString()),this.socket.removeAllListeners(),this.socket.close(),await Promise.all([...this.connections.map(async e=>await e.close()),...Array.from(this.channels.values()).map(async e=>await e.close())]),this.dispatchEvent(new CustomEvent("close"))}}class WebRTCListener extends EventEmitter$1{constructor(e,r,n,o,a){super(),this.upgrader=e,this.handler=r,this.peerId=n,this.transport=o,this.options=a}async listen(e){if(this.listeningAddr!=null)throw errcode(new Error("listener already in use"),"ERR_ALREADY_LISTENING");const r=pDefer$1();this.listeningAddr=e;let n;e.protoCodes().includes(CODE_P2P$1)?n=e:n=e.encapsulate(`/p2p/${this.peerId.toString()}`);const o=this.signallingUrl=cleanUrlSIO(e);log$Q("connecting to signalling server on: %s",this.signallingUrl);const a=new SigServer(this.signallingUrl,n,this.upgrader,this.handler,this.options.channelOptions);return a.addEventListener("error",c=>{const u=c.detail;log$Q("error connecting to signalling server %o",u),a.close().catch(l=>{log$Q.error("error closing server after error",l)}),r.reject(u)}),a.addEventListener("listening",()=>{log$Q("connected to signalling server"),this.dispatchEvent(new CustomEvent("listening")),r.resolve()}),a.addEventListener("peer",c=>{this.transport.peerDiscovered(c.detail)}),a.addEventListener("connection",c=>{const u=c.detail;if(u.remoteAddr==null)try{u.remoteAddr=e.decapsulateCode(CODE_P2P$1).encapsulate(`/p2p/${u.remotePeer.toString()}`)}catch(l){log$Q.error("could not determine remote address",l)}this.dispatchEvent(new CustomEvent("connection",{detail:u}))}),a.addEventListener("disconnect",()=>{this.transport.sigServers.delete(o)}),a.addEventListener("reconnect",()=>{this.transport.sigServers.set(o,a)}),this.transport.sigServers.set(this.signallingUrl,a),await r.promise}async close(){if(this.signallingUrl!=null){const e=this.transport.sigServers.get(this.signallingUrl);e!=null&&(await e.close(),this.transport.sigServers.delete(this.signallingUrl))}this.dispatchEvent(new CustomEvent("close")),this.listeningAddr=void 0}getAddrs(){return this.listeningAddr!=null?[this.listeningAddr]:[]}}function createListener$2(t,e,r,n,o){return new WebRTCListener(t,e,r,n,o)}function xor(t,e){if(t.length!==e.length)throw new Error("Inputs should have the same length");const r=allocUnsafe$g(t.length);for(let n=0;n<t.length;n++)r[n]=t[n]^e[n];return asUint8Array$9(r)}symbol$7=Symbol.for("@libp2p/transport");var FaultTolerance$2;(function(t){t[t.FATAL_ALL=0]="FATAL_ALL",t[t.NO_FATAL=1]="NO_FATAL"})(FaultTolerance$2||(FaultTolerance$2={}));let webrtcSupport,log$P,noop$1;symbol$6=Symbol.for("@libp2p/peer-discovery"),webrtcSupport="RTCPeerConnection"in globalThis,log$P=logger$3("libp2p:webrtc-star"),noop$1=()=>{};class WebRTCStarDiscovery extends EventEmitter$1{constructor(){super(...arguments),this.started=!1}get[symbol$6](){return!0}get[Symbol.toStringTag](){return"@libp2p/webrtc-star-discovery"}isStarted(){return this.started}async start(){this.started=!0}async stop(){this.started=!1}dispatchEvent(e){return this.isStarted()?super.dispatchEvent(e):!1}}let WebRTCStar$1=class{constructor(t){t?.wrtc!=null&&(this.wrtc=t.wrtc),this.sigServers=new Map,this._discovery=new WebRTCStarDiscovery,this.discovery=()=>this._discovery,this.peerDiscovered=this.peerDiscovered.bind(this)}get[symbol$7](){return!0}get[Symbol.toStringTag](){return"@libp2p/webrtc-star"}async dial(t,e){const r=await this._connect(t,e),n=toMultiaddrConnection(r,{remoteAddr:t,signal:e.signal});log$P("new outbound connection %s",n.remoteAddr);const o=await e.upgrader.upgradeOutbound(n);return log$P("outbound connection %s upgraded",n.remoteAddr),o}async _connect(t,e){if(e.signal?.aborted===!0)throw new AbortError$6;const r={...e.channelOptions??{}};this.wrtc!=null&&(r.wrtc=this.wrtc);const n=t.toOptions(),o=toString$D(randomBytes$2(36),"hex");return await new Promise((a,c)=>{const u=this.sigServers.get(cleanUrlSIO(t));if(u?.socket==null)return c(errcode(new Error("unknown signal server to use"),"ERR_UNKNOWN_SIGNAL_SERVER"));let l=!1;log$P("dialing %s:%s",n.host,n.port);const f=new WebRTCInitiator(r),p=b=>{const D=b.detail;if(!l){const v=`connection error ${n.host}:${n.port}: ${D.message}`;log$P.error(v),_(D)}},g=()=>{l=!0,log$P("connection opened %s:%s",n.host,n.port),_()},$=()=>{log$P.error("connection aborted %s:%s",n.host,n.port),f.close().finally(()=>{_(new AbortError$6)})},_=b=>{f.removeEventListener("ready",g),e.signal?.removeEventListener("abort",$),b==null?a(f):c(b)};f.addEventListener("ready",g,{once:!0}),f.addEventListener("close",()=>{f.removeEventListener("error",p)}),e.signal?.addEventListener("abort",$),f.addEventListener("signal",b=>{const D=b.detail;u.socket.emit("ss-handshake",{intentId:o,srcMultiaddr:u.signallingAddr.toString(),dstMultiaddr:t.toString(),signal:D})}),u.socket.on("ws-handshake",b=>{b.intentId===o&&b.err!=null&&f.close().finally(()=>{c(errcode(new Error(b.err),"ERR_SIGNALLING_FAILED"))}),!(b.intentId!==o||b.answer==null||f.closed)&&f.handleSignal(b.signal)})})}createListener(t){if(!webrtcSupport&&this.wrtc==null)throw errcode(new Error("no WebRTC support"),"ERR_NO_WEBRTC_SUPPORT");if(t.channelOptions=t.channelOptions??{},this.wrtc!=null&&(t.channelOptions.wrtc=this.wrtc),this.peerId==null)throw errcode(new Error("PeerId not set"),"ERR_MISSING_PEER_ID");return createListener$2(t.upgrader,t.handler??noop$1,this.peerId,this,t)}filter(t){return t=Array.isArray(t)?t:[t],t.filter(e=>e.protoCodes().includes(CODE_CIRCUIT$1)?!1:WebRTCStar$2.matches(e))}peerDiscovered(t){log$P("peer discovered: %s",t),t=cleanMultiaddr(t);const e=multiaddr$5(t),r=e.getPeerId();if(r==null)return;const n=peerIdFromString$1(r);this._discovery.dispatchEvent(new CustomEvent("peer",{detail:{id:n,multiaddrs:[e],protocols:[]}}))}};function webRTCStar(t={}){const e=new WebRTCStar$1(t);return{transport:r=>(e.peerId=r.peerId,e),discovery:e.discovery}}function libp2pConfig(){const t=webRTCStar();return{transports:[t.transport],peerDiscovery:[t.discovery],connectionManager:{maxParallelDials:150,maxDialsPerPeer:4,dialTimeout:1e4,autoDial:!0},nat:{enabled:!1}}}function isStartable(t){return t!=null&&typeof t.start=="function"&&typeof t.stop=="function"}const isV4$3=isIPv4,isV6$3=isIPv6,toBytes$3=function(t){let e=0;if(t=t.toString().trim(),isV4$3(t)){const r=new Uint8Array(e+4);return t.split(/\./g).forEach(n=>{r[e++]=parseInt(n,10)&255}),r}if(isV6$3(t)){const r=t.split(":",8);let n;for(n=0;n<r.length;n++){const a=isV4$3(r[n]);let c;a&&(c=toBytes$3(r[n]),r[n]=toString$D(c.slice(0,2),"base16")),c!=null&&++n<8&&r.splice(n,0,toString$D(c.slice(2,4),"base16"))}if(r[0]==="")for(;r.length<8;)r.unshift("0");else if(r[r.length-1]==="")for(;r.length<8;)r.push("0");else if(r.length<8){for(n=0;n<r.length&&r[n]!=="";n++);const a=[n,1];for(n=9-r.length;n>0;n--)a.push("0");r.splice.apply(r,a)}const o=new Uint8Array(e+16);for(n=0;n<r.length;n++){const a=parseInt(r[n],16);o[e++]=a>>8&255,o[e++]=a&255}return o}throw new Error("invalid ip address")},toString$8=function(t,e=0,r){e=~~e,r=r??t.length-e;const n=new DataView(t.buffer);if(r===4){const o=[];for(let a=0;a<r;a++)o.push(t[e+a]);return o.join(".")}if(r===16){const o=[];for(let a=0;a<r;a+=2)o.push(n.getUint16(e+a).toString(16));return o.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""},V$3=-1,names$3={},codes$5={},table$3=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,V$3,"ip6zone"],[43,8,"ipcidr"],[53,V$3,"dns",!0],[54,V$3,"dns4",!0],[55,V$3,"dns6",!0],[56,V$3,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc"],[281,0,"webrtc-w3c"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,V$3,"unix",!1,!0],[421,V$3,"ipfs"],[421,V$3,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,V$3,"garlic64"],[448,0,"tls"],[449,V$3,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,V$3,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[777,V$3,"memory"]];table$3.forEach(t=>{const e=createProtocol$3(...t);codes$5[e.code]=e,names$3[e.name]=e});function createProtocol$3(t,e,r,n,o){return{code:t,size:e,name:r,resolvable:!!n,path:!!o}}function getProtocol$3(t){if(typeof t=="number"){if(codes$5[t]!=null)return codes$5[t];throw new Error(`no protocol with code: ${t}`)}else if(typeof t=="string"){if(names$3[t]!=null)return names$3[t];throw new Error(`no protocol with name: ${t}`)}throw new Error(`invalid protocol id type: ${typeof t}`)}var encode_1$6=encode$o,MSB$a=128,REST$a=127,MSBALL$6=~REST$a,INT$6=Math.pow(2,31);function encode$o(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$6;)e[r++]=t&255|MSB$a,t/=128;for(;t&MSBALL$6;)e[r++]=t&255|MSB$a,t>>>=7;return e[r]=t|0,encode$o.bytes=r-n+1,e}var decode$x=read$7,MSB$1$6=128,REST$1$6=127;function read$7(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$7.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$6)<<o:(c&REST$1$6)*Math.pow(2,o),o+=7}while(c>=MSB$1$6);return read$7.bytes=a-n,r}var N1$8=Math.pow(2,7),N2$8=Math.pow(2,14),N3$8=Math.pow(2,21),N4$8=Math.pow(2,28),N5$8=Math.pow(2,35),N6$8=Math.pow(2,42),N7$8=Math.pow(2,49),N8$6=Math.pow(2,56),N9$6=Math.pow(2,63),length$6=function(t){return t<N1$8?1:t<N2$8?2:t<N3$8?3:t<N4$8?4:t<N5$8?5:t<N6$8?6:t<N7$8?7:t<N8$6?8:t<N9$6?9:10},varint$7={encode:encode_1$6,decode:decode$x,encodingLength:length$6},_brrp_varint$5=varint$7;const decode$w=(t,e=0)=>[_brrp_varint$5.decode(t,e),_brrp_varint$5.decode.bytes],encodeTo$5=(t,e,r=0)=>(_brrp_varint$5.encode(t,e,r),e),encodingLength$7=t=>_brrp_varint$5.encodingLength(t),equals$a=(t,e)=>{if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0},coerce$5=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")},fromString$7=t=>new TextEncoder().encode(t),toString$7=t=>new TextDecoder().decode(t),create$7=(t,e)=>{const r=e.byteLength,n=encodingLength$7(t),o=n+encodingLength$7(r),a=new Uint8Array(o+r);return encodeTo$5(t,a,0),encodeTo$5(r,a,n),a.set(e,o),new Digest$5(t,r,e,a)},decode$v=t=>{const e=coerce$5(t),[r,n]=decode$w(e),[o,a]=decode$w(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$5(r,o,c,e)},equals$9=(t,e)=>{if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$a(t.bytes,r.bytes)}};let Digest$5=class{constructor(t,e,r,n){this.code=t,this.size=e,this.digest=r,this.bytes=n}};function base$7(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$7=base$7,_brrp__multiformats_scope_baseX$5=src$7;let Encoder$6=class{constructor(t,e,r){this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$6=class{constructor(t,e,r){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$7(this,t)}},ComposedDecoder$5=class{constructor(t){this.decoders=t}or(t){return or$7(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$7=(t,e)=>new ComposedDecoder$5({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});let Codec$5=class{constructor(t,e,r,n){this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$6(t,e,r),this.decoder=new Decoder$6(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};const from$9=({name:t,prefix:e,encode:r,decode:n})=>new Codec$5(t,e,r,n),baseX$5=({prefix:t,name:e,alphabet:r})=>{const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$5(r,e);return from$9({prefix:t,name:e,encode:n,decode:a=>coerce$5(o(a))})},decode$u=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode$n=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648$5=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from$9({prefix:e,name:t,encode(o){return encode$n(o,n,r)},decode(o){return decode$u(o,n,r,t)}}),base58btc$4=baseX$5({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),base58flickr$3=baseX$5({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),base58$3=Object.freeze(Object.defineProperty({__proto__:null,base58btc:base58btc$4,base58flickr:base58flickr$3},Symbol.toStringTag,{value:"Module"})),base32$7=rfc4648$5({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),base32upper$3=rfc4648$5({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),base32pad$3=rfc4648$5({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),base32padupper$3=rfc4648$5({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),base32hex$3=rfc4648$5({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),base32hexupper$3=rfc4648$5({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),base32hexpad$3=rfc4648$5({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),base32hexpadupper$3=rfc4648$5({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),base32z$3=rfc4648$5({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),base32$8=Object.freeze(Object.defineProperty({__proto__:null,base32:base32$7,base32hex:base32hex$3,base32hexpad:base32hexpad$3,base32hexpadupper:base32hexpadupper$3,base32hexupper:base32hexupper$3,base32pad:base32pad$3,base32padupper:base32padupper$3,base32upper:base32upper$3,base32z:base32z$3},Symbol.toStringTag,{value:"Module"})),format$4=(t,e)=>{const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$4(r,baseCache$4(t),e||base58btc$4.encoder);default:return toStringV1$4(r,baseCache$4(t),e||base32$7.encoder)}},cache$5=new WeakMap,baseCache$4=t=>{const e=cache$5.get(t);if(e==null){const r=new Map;return cache$5.set(t,r),r}return e};let CID$4=class Xe{constructor(e,r,n,o){this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$4)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$4)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return Xe.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$7(e,r);return Xe.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return Xe.equals(this,e)}static equals(e,r){const n=r;return n&&e.code===n.code&&e.version===n.version&&equals$9(e.multihash,n.multihash)}toString(e){return format$4(this,e)}toJSON(){return{"/":format$4(this)}}link(){return this}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof Xe)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new Xe(n,o,a,c||encodeCID$4(n,o,a.bytes))}else if(r[cidSymbol$4]===!0){const{version:n,multihash:o,code:a}=r,c=decode$v(o);return Xe.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$4)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$4}) block encoding`);return new Xe(e,r,n,n.bytes)}case 1:{const o=encodeCID$4(e,r,n.bytes);return new Xe(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return Xe.create(0,DAG_PB_CODE$4,e)}static createV1(e,r){return Xe.create(1,e,r)}static decode(e){const[r,n]=Xe.decodeFirst(e);if(n.length)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=Xe.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$5(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$5(r.multihashCode,r.digestSize,a,o);return[r.version===0?Xe.createV0(c):Xe.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$w(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$4;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$4(e,r),a=Xe.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$4(a).set(n,e),a}};const parseCIDtoBytes$4=(t,e)=>{switch(t[0]){case"Q":{const r=e||base58btc$4;return[base58btc$4.prefix,r.decode(`${base58btc$4.prefix}${t}`)]}case base58btc$4.prefix:{const r=e||base58btc$4;return[base58btc$4.prefix,r.decode(t)]}case base32$7.prefix:{const r=e||base32$7;return[base32$7.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}},toStringV0$4=(t,e,r)=>{const{prefix:n}=r;if(n!==base58btc$4.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o},toStringV1$4=(t,e,r)=>{const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o},DAG_PB_CODE$4=112,SHA_256_CODE$4=18,encodeCID$4=(t,e,r)=>{const n=encodingLength$7(t),o=n+encodingLength$7(e),a=new Uint8Array(o+r.byteLength);return encodeTo$5(t,a,0),encodeTo$5(e,a,n),a.set(r,o),a},cidSymbol$4=Symbol.for("@ipld/js-cid/CID"),identity$3=from$9({prefix:"\0",name:"identity",encode:t=>toString$7(t),decode:t=>fromString$7(t)}),identityBase$3=Object.freeze(Object.defineProperty({__proto__:null,identity:identity$3},Symbol.toStringTag,{value:"Module"})),base2$6=rfc4648$5({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),base2$7=Object.freeze(Object.defineProperty({__proto__:null,base2:base2$6},Symbol.toStringTag,{value:"Module"})),base8$6=rfc4648$5({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),base8$7=Object.freeze(Object.defineProperty({__proto__:null,base8:base8$6},Symbol.toStringTag,{value:"Module"})),base10$6=baseX$5({prefix:"9",name:"base10",alphabet:"0123456789"}),base10$7=Object.freeze(Object.defineProperty({__proto__:null,base10:base10$6},Symbol.toStringTag,{value:"Module"})),base16$6=rfc4648$5({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),base16upper$3=rfc4648$5({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),base16$7=Object.freeze(Object.defineProperty({__proto__:null,base16:base16$6,base16upper:base16upper$3},Symbol.toStringTag,{value:"Module"})),base36$6=baseX$5({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),base36upper$3=baseX$5({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),base36$7=Object.freeze(Object.defineProperty({__proto__:null,base36:base36$6,base36upper:base36upper$3},Symbol.toStringTag,{value:"Module"})),base64$6=rfc4648$5({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),base64pad$3=rfc4648$5({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),base64url$3=rfc4648$5({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),base64urlpad$3=rfc4648$5({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),base64$7=Object.freeze(Object.defineProperty({__proto__:null,base64:base64$6,base64pad:base64pad$3,base64url:base64url$3,base64urlpad:base64urlpad$3},Symbol.toStringTag,{value:"Module"})),alphabet$3=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),alphabetBytesToChars$3=alphabet$3.reduce((t,e,r)=>(t[r]=e,t),[]),alphabetCharsToBytes$3=alphabet$3.reduce((t,e,r)=>(t[e.codePointAt(0)]=r,t),[]);function encode$m(t){return t.reduce((e,r)=>(e+=alphabetBytesToChars$3[r],e),"")}function decode$t(t){const e=[];for(const r of t){const n=alphabetCharsToBytes$3[r.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${r}`);e.push(n)}return new Uint8Array(e)}const base256emoji$6=from$9({prefix:"\u{1F680}",name:"base256emoji",encode:encode$m,decode:decode$t}),base256emoji$7=Object.freeze(Object.defineProperty({__proto__:null,base256emoji:base256emoji$6},Symbol.toStringTag,{value:"Module"})),from$8=({name:t,code:e,encode:r})=>new Hasher$3(t,e,r);let Hasher$3=class{constructor(t,e,r){this.name=t,this.code=e,this.encode=r}digest(t){if(t instanceof Uint8Array){const e=this.encode(t);return e instanceof Uint8Array?create$7(this.code,e):e.then(r=>create$7(this.code,r))}else throw Error("Unknown type, must be binary type")}};const sha$3=t=>async e=>new Uint8Array(await crypto.subtle.digest(t,e)),sha256$4=from$8({name:"sha2-256",code:18,encode:sha$3("SHA-256")});new TextEncoder,new TextDecoder;const bases$3={...identityBase$3,...base2$7,...base8$7,...base10$7,...base16$7,...base32$8,...base36$7,...base58$3,...base64$7,...base256emoji$7};function convertToString$3(t,e){switch(getProtocol$3(t).code){case 4:case 41:return bytes2ip$3(e);case 42:return bytes2str$3(e);case 6:case 273:case 33:case 132:return bytes2port$3(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return bytes2str$3(e);case 421:return bytes2mh$3(e);case 444:return bytes2onion$3(e);case 445:return bytes2onion$3(e);case 466:return bytes2mb$3(e);default:return toString$D(e,"base16")}}function convertToBytes$3(t,e){switch(getProtocol$3(t).code){case 4:return ip2bytes$3(e);case 41:return ip2bytes$3(e);case 42:return str2bytes$3(e);case 6:case 273:case 33:case 132:return port2bytes$3(parseInt(e,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return str2bytes$3(e);case 421:return mh2bytes$3(e);case 444:return onion2bytes$3(e);case 445:return onion32bytes$3(e);case 466:return mb2bytes$3(e);default:return fromString$y(e,"base16")}}const decoders$3=Object.values(bases$3).map(t=>t.decoder),anybaseDecoder$3=function(){let t=decoders$3[0].or(decoders$3[1]);return decoders$3.slice(2).forEach(e=>t=t.or(e)),t}();function ip2bytes$3(t){if(!isIP(t))throw new Error("invalid ip address");return toBytes$3(t)}function bytes2ip$3(t){const e=toString$8(t,0,t.length);if(e==null)throw new Error("ipBuff is required");if(!isIP(e))throw new Error("invalid ip address");return e}function port2bytes$3(t){const e=new ArrayBuffer(2);return new DataView(e).setUint16(0,t),new Uint8Array(e)}function bytes2port$3(t){return new DataView(t.buffer).getUint16(t.byteOffset)}function str2bytes$3(t){const e=fromString$y(t),r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function bytes2str$3(t){const e=varint$w.decode(t);if(t=t.slice(varint$w.decode.bytes),t.length!==e)throw new Error("inconsistent lengths");return toString$D(t)}function mh2bytes$3(t){let e;t[0]==="Q"||t[0]==="1"?e=decode$v(base58btc$4.decode(`z${t}`)).bytes:e=CID$4.parse(t).multihash.bytes;const r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function mb2bytes$3(t){const e=anybaseDecoder$3.decode(t),r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function bytes2mb$3(t){const e=varint$w.decode(t),r=t.slice(varint$w.decode.bytes);if(r.length!==e)throw new Error("inconsistent lengths");return"u"+toString$D(r,"base64url")}function bytes2mh$3(t){const e=varint$w.decode(t),r=t.slice(varint$w.decode.bytes);if(r.length!==e)throw new Error("inconsistent lengths");return toString$D(r,"base58btc")}function onion2bytes$3(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==16)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion address.`);const r=base32$7.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes$3(n);return concat$8([r,o],r.length+o.length)}function onion32bytes$3(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==56)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion3 address.`);const r=base32$7.decode(`b${e[0]}`),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes$3(n);return concat$8([r,o],r.length+o.length)}function bytes2onion$3(t){const e=t.slice(0,t.length-2),r=t.slice(t.length-2),n=toString$D(e,"base32"),o=bytes2port$3(r);return`${n}:${o}`}function stringToStringTuples$2(t){const e=[],r=t.split("/").slice(1);if(r.length===1&&r[0]==="")return[];for(let n=0;n<r.length;n++){const o=r[n],a=getProtocol$3(o);if(a.size===0){e.push([o]);continue}if(n++,n>=r.length)throw ParseError$3("invalid address: "+t);if(a.path===!0){e.push([o,cleanPath$3(r.slice(n).join("/"))]);break}e.push([o,r[n]])}return e}function stringTuplesToString$3(t){const e=[];return t.map(r=>{const n=protoFromTuple$2(r);return e.push(n.name),r.length>1&&r[1]!=null&&e.push(r[1]),null}),cleanPath$3(e.join("/"))}function stringTuplesToTuples$2(t){return t.map(e=>{Array.isArray(e)||(e=[e]);const r=protoFromTuple$2(e);return e.length>1?[r.code,convertToBytes$3(r.code,e[1])]:[r.code]})}function tuplesToStringTuples$2(t){return t.map(e=>{const r=protoFromTuple$2(e);return e[1]!=null?[r.code,convertToString$3(r.code,e[1])]:[r.code]})}function tuplesToBytes$3(t){return fromBytes$2(concat$8(t.map(e=>{const r=protoFromTuple$2(e);let n=Uint8Array.from(varint$w.encode(r.code));return e.length>1&&e[1]!=null&&(n=concat$8([n,e[1]])),n})))}function sizeForAddr$3(t,e){return t.size>0?t.size/8:t.size===0?0:varint$w.decode(e)+(varint$w.decode.bytes??0)}function bytesToTuples$2(t){const e=[];let r=0;for(;r<t.length;){const n=varint$w.decode(t,r),o=varint$w.decode.bytes??0,a=getProtocol$3(n),c=sizeForAddr$3(a,t.slice(r+o));if(c===0){e.push([n]),r+=o;continue}const u=t.slice(r+o,r+o+c);if(r+=c+o,r>t.length)throw ParseError$3("Invalid address Uint8Array: "+toString$D(t,"base16"));e.push([n,u])}return e}function bytesToString$2(t){const e=bytesToTuples$2(t),r=tuplesToStringTuples$2(e);return stringTuplesToString$3(r)}function stringToBytes$2(t){t=cleanPath$3(t);const e=stringToStringTuples$2(t),r=stringTuplesToTuples$2(e);return tuplesToBytes$3(r)}function fromString$6(t){return stringToBytes$2(t)}function fromBytes$2(t){const e=validateBytes$2(t);if(e!=null)throw e;return Uint8Array.from(t)}function validateBytes$2(t){try{bytesToTuples$2(t)}catch(e){return e}}function cleanPath$3(t){return"/"+t.trim().split("/").filter(e=>e).join("/")}function ParseError$3(t){return new Error("Error parsing address: "+t)}function protoFromTuple$2(t){return getProtocol$3(t[0])}var __classPrivateFieldGet$2=function(t,e,r,n){if(r==="a"&&!n)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?t!==e||!n:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return r==="m"?n:r==="a"?n.call(t):n?n.value:e.get(t)},__classPrivateFieldSet$2=function(t,e,r,n,o){if(n==="m")throw new TypeError("Private method is not writable");if(n==="a"&&!o)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?t!==e||!o:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return n==="a"?o.call(t,r):o?o.value=r:e.set(t,r),r},_DefaultMultiaddr_string$2,_DefaultMultiaddr_tuples$2,_DefaultMultiaddr_stringTuples$2,_a$2;const inspect$3=Symbol.for("nodejs.util.inspect.custom"),DNS_CODES$3=[getProtocol$3("dns").code,getProtocol$3("dns4").code,getProtocol$3("dns6").code,getProtocol$3("dnsaddr").code],resolvers$3=new Map,symbol$5=Symbol.for("@multiformats/js-multiaddr/multiaddr");function fromNodeAddress(t,e){if(t==null)throw new Error("requires node address object");if(e==null)throw new Error("requires transport protocol");let r,n=t.address;switch(t.family){case 4:r="ip4";break;case 6:if(r="ip6",n.includes("%")){const o=n.split("%");if(o.length!==2)throw Error("Multiple ip6 zones in multiaddr");n=o[0],r=`/ip6zone/${o[1]}/ip6`}break;default:throw Error("Invalid addr family, should be 4 or 6.")}return new DefaultMultiaddr$2("/"+[r,n,e,t.port].join("/"))}function isMultiaddr$3(t){return!!t?.[symbol$5]}let DefaultMultiaddr$2=class jt{constructor(e){if(_DefaultMultiaddr_string$2.set(this,void 0),_DefaultMultiaddr_tuples$2.set(this,void 0),_DefaultMultiaddr_stringTuples$2.set(this,void 0),this[_a$2]=!0,e==null&&(e=""),e instanceof Uint8Array)this.bytes=fromBytes$2(e);else if(typeof e=="string"){if(e.length>0&&e.charAt(0)!=="/")throw new Error(`multiaddr "${e}" must start with a "/"`);this.bytes=fromString$6(e)}else if(isMultiaddr$3(e))this.bytes=fromBytes$2(e.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr")}toString(){return __classPrivateFieldGet$2(this,_DefaultMultiaddr_string$2,"f")==null&&__classPrivateFieldSet$2(this,_DefaultMultiaddr_string$2,bytesToString$2(this.bytes),"f"),__classPrivateFieldGet$2(this,_DefaultMultiaddr_string$2,"f")}toJSON(){return this.toString()}toOptions(){let e,r,n,o,a="";const c=getProtocol$3("tcp"),u=getProtocol$3("udp"),l=getProtocol$3("ip4"),f=getProtocol$3("ip6"),p=getProtocol$3("dns6"),g=getProtocol$3("ip6zone");for(const[$,_]of this.stringTuples())$===g.code&&(a=`%${_??""}`),DNS_CODES$3.includes($)&&(r=c.name,o=443,n=`${_??""}${a}`,e=$===p.code?6:4),($===c.code||$===u.code)&&(r=getProtocol$3($).name,o=parseInt(_??"")),($===l.code||$===f.code)&&(r=getProtocol$3($).name,n=`${_??""}${a}`,e=$===f.code?6:4);if(e==null||r==null||n==null||o==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:e,host:n,transport:r,port:o}}protos(){return this.protoCodes().map(e=>Object.assign({},getProtocol$3(e)))}protoCodes(){const e=[],r=this.bytes;let n=0;for(;n<r.length;){const o=varint$w.decode(r,n),a=varint$w.decode.bytes??0,c=getProtocol$3(o),u=sizeForAddr$3(c,r.slice(n+a));n+=u+a,e.push(o)}return e}protoNames(){return this.protos().map(e=>e.name)}tuples(){return __classPrivateFieldGet$2(this,_DefaultMultiaddr_tuples$2,"f")==null&&__classPrivateFieldSet$2(this,_DefaultMultiaddr_tuples$2,bytesToTuples$2(this.bytes),"f"),__classPrivateFieldGet$2(this,_DefaultMultiaddr_tuples$2,"f")}stringTuples(){return __classPrivateFieldGet$2(this,_DefaultMultiaddr_stringTuples$2,"f")==null&&__classPrivateFieldSet$2(this,_DefaultMultiaddr_stringTuples$2,tuplesToStringTuples$2(this.tuples()),"f"),__classPrivateFieldGet$2(this,_DefaultMultiaddr_stringTuples$2,"f")}encapsulate(e){return e=new jt(e),new jt(this.toString()+e.toString())}decapsulate(e){const r=e.toString(),n=this.toString(),o=n.lastIndexOf(r);if(o<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${e.toString()}`);return new jt(n.slice(0,o))}decapsulateCode(e){const r=this.tuples();for(let n=r.length-1;n>=0;n--)if(r[n][0]===e)return new jt(tuplesToBytes$3(r.slice(0,n)));return this}getPeerId(){try{const e=this.stringTuples().filter(r=>r[0]===names$3.ipfs.code).pop();if(e?.[1]!=null){const r=e[1];return r[0]==="Q"||r[0]==="1"?toString$D(base58btc$4.decode(`z${r}`),"base58btc"):toString$D(CID$4.parse(r).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){let e=null;try{e=this.stringTuples().filter(r=>getProtocol$3(r[0]).path===!0)[0][1],e==null&&(e=null)}catch{e=null}return e}equals(e){return equals$R(this.bytes,e.bytes)}async resolve(e){const r=this.protos().find(o=>o.resolvable);if(r==null)return[this];const n=resolvers$3.get(r.name);if(n==null)throw errcode(new Error(`no available resolver for ${r.name}`),"ERR_NO_AVAILABLE_RESOLVER");return(await n(this,e)).map(o=>new jt(o))}nodeAddress(){const e=this.toOptions();if(e.transport!=="tcp"&&e.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${e.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:e.family,address:e.host,port:e.port}}isThinWaistAddress(e){const r=(e??this).protos();return!(r.length!==2||r[0].code!==4&&r[0].code!==41||r[1].code!==6&&r[1].code!==273)}[(_DefaultMultiaddr_string$2=new WeakMap,_DefaultMultiaddr_tuples$2=new WeakMap,_DefaultMultiaddr_stringTuples$2=new WeakMap,_a$2=symbol$5,inspect$3)](){return`Multiaddr(${bytesToString$2(this.bytes)})`}};function multiaddr$3(t){return new DefaultMultiaddr$2(t)}var messages;(function(t){t.NOT_STARTED_YET="The libp2p node is not started yet",t.DHT_DISABLED="DHT is not available",t.PUBSUB_DISABLED="PubSub is not available",t.CONN_ENCRYPTION_REQUIRED="At least one connection encryption module is required",t.ERR_TRANSPORTS_REQUIRED="At least one transport module is required",t.ERR_PROTECTOR_REQUIRED="Private network is enforced, but no protector was provided",t.NOT_FOUND="Not found"})(messages||(messages={}));var codes$4;(function(t){t.DHT_DISABLED="ERR_DHT_DISABLED",t.ERR_PUBSUB_DISABLED="ERR_PUBSUB_DISABLED",t.PUBSUB_NOT_STARTED="ERR_PUBSUB_NOT_STARTED",t.DHT_NOT_STARTED="ERR_DHT_NOT_STARTED",t.CONN_ENCRYPTION_REQUIRED="ERR_CONN_ENCRYPTION_REQUIRED",t.ERR_TRANSPORTS_REQUIRED="ERR_TRANSPORTS_REQUIRED",t.ERR_PROTECTOR_REQUIRED="ERR_PROTECTOR_REQUIRED",t.ERR_PEER_DIAL_INTERCEPTED="ERR_PEER_DIAL_INTERCEPTED",t.ERR_CONNECTION_INTERCEPTED="ERR_CONNECTION_INTERCEPTED",t.ERR_INVALID_PROTOCOLS_FOR_STREAM="ERR_INVALID_PROTOCOLS_FOR_STREAM",t.ERR_CONNECTION_ENDED="ERR_CONNECTION_ENDED",t.ERR_CONNECTION_FAILED="ERR_CONNECTION_FAILED",t.ERR_NODE_NOT_STARTED="ERR_NODE_NOT_STARTED",t.ERR_ALREADY_ABORTED="ERR_ALREADY_ABORTED",t.ERR_TOO_MANY_ADDRESSES="ERR_TOO_MANY_ADDRESSES",t.ERR_NO_VALID_ADDRESSES="ERR_NO_VALID_ADDRESSES",t.ERR_RELAYED_DIAL="ERR_RELAYED_DIAL",t.ERR_DIALED_SELF="ERR_DIALED_SELF",t.ERR_DISCOVERED_SELF="ERR_DISCOVERED_SELF",t.ERR_DUPLICATE_TRANSPORT="ERR_DUPLICATE_TRANSPORT",t.ERR_ENCRYPTION_FAILED="ERR_ENCRYPTION_FAILED",t.ERR_HOP_REQUEST_FAILED="ERR_HOP_REQUEST_FAILED",t.ERR_INVALID_KEY="ERR_INVALID_KEY",t.ERR_INVALID_MESSAGE="ERR_INVALID_MESSAGE",t.ERR_INVALID_PARAMETERS="ERR_INVALID_PARAMETERS",t.ERR_INVALID_PEER="ERR_INVALID_PEER",t.ERR_MUXER_UNAVAILABLE="ERR_MUXER_UNAVAILABLE",t.ERR_NOT_FOUND="ERR_NOT_FOUND",t.ERR_TIMEOUT="ERR_TIMEOUT",t.ERR_TRANSPORT_UNAVAILABLE="ERR_TRANSPORT_UNAVAILABLE",t.ERR_TRANSPORT_DIAL_FAILED="ERR_TRANSPORT_DIAL_FAILED",t.ERR_UNSUPPORTED_PROTOCOL="ERR_UNSUPPORTED_PROTOCOL",t.ERR_PROTOCOL_HANDLER_ALREADY_REGISTERED="ERR_PROTOCOL_HANDLER_ALREADY_REGISTERED",t.ERR_INVALID_MULTIADDR="ERR_INVALID_MULTIADDR",t.ERR_SIGNATURE_NOT_VALID="ERR_SIGNATURE_NOT_VALID",t.ERR_FIND_SELF="ERR_FIND_SELF",t.ERR_NO_ROUTERS_AVAILABLE="ERR_NO_ROUTERS_AVAILABLE",t.ERR_CONNECTION_NOT_MULTIPLEXED="ERR_CONNECTION_NOT_MULTIPLEXED",t.ERR_NO_DIAL_TOKENS="ERR_NO_DIAL_TOKENS",t.ERR_KEYCHAIN_REQUIRED="ERR_KEYCHAIN_REQUIRED",t.ERR_INVALID_CMS="ERR_INVALID_CMS",t.ERR_MISSING_KEYS="ERR_MISSING_KEYS",t.ERR_NO_KEY="ERR_NO_KEY",t.ERR_INVALID_KEY_NAME="ERR_INVALID_KEY_NAME",t.ERR_INVALID_KEY_TYPE="ERR_INVALID_KEY_TYPE",t.ERR_KEY_ALREADY_EXISTS="ERR_KEY_ALREADY_EXISTS",t.ERR_INVALID_KEY_SIZE="ERR_INVALID_KEY_SIZE",t.ERR_KEY_NOT_FOUND="ERR_KEY_NOT_FOUND",t.ERR_OLD_KEY_NAME_INVALID="ERR_OLD_KEY_NAME_INVALID",t.ERR_NEW_KEY_NAME_INVALID="ERR_NEW_KEY_NAME_INVALID",t.ERR_PASSWORD_REQUIRED="ERR_PASSWORD_REQUIRED",t.ERR_PEM_REQUIRED="ERR_PEM_REQUIRED",t.ERR_CANNOT_READ_KEY="ERR_CANNOT_READ_KEY",t.ERR_MISSING_PRIVATE_KEY="ERR_MISSING_PRIVATE_KEY",t.ERR_MISSING_PUBLIC_KEY="ERR_MISSING_PUBLIC_KEY",t.ERR_INVALID_OLD_PASS_TYPE="ERR_INVALID_OLD_PASS_TYPE",t.ERR_INVALID_NEW_PASS_TYPE="ERR_INVALID_NEW_PASS_TYPE",t.ERR_INVALID_PASS_LENGTH="ERR_INVALID_PASS_LENGTH",t.ERR_NOT_IMPLEMENTED="ERR_NOT_IMPLEMENTED",t.ERR_WRONG_PING_ACK="ERR_WRONG_PING_ACK",t.ERR_INVALID_RECORD="ERR_INVALID_RECORD",t.ERR_ALREADY_SUCCEEDED="ERR_ALREADY_SUCCEEDED",t.ERR_NO_HANDLER_FOR_PROTOCOL="ERR_NO_HANDLER_FOR_PROTOCOL",t.ERR_TOO_MANY_OUTBOUND_PROTOCOL_STREAMS="ERR_TOO_MANY_OUTBOUND_PROTOCOL_STREAMS",t.ERR_TOO_MANY_INBOUND_PROTOCOL_STREAMS="ERR_TOO_MANY_INBOUND_PROTOCOL_STREAMS",t.ERR_CONNECTION_DENIED="ERR_CONNECTION_DENIED"})(codes$4||(codes$4={}));async function*storeAddresses(t,e){yield*map$3(t,async r=>(await e.addressBook.add(r.id,r.multiaddrs),r))}function uniquePeers(t){const e=new Set;return filter$1(t,r=>e.has(r.id.toString())?!1:(e.add(r.id.toString()),!0))}async function*requirePeers(t,e=1){let r=0;for await(const n of t)r++,yield n;if(r<e)throw errcode(new Error("not found"),"NOT_FOUND")}const intervals=new Map,_generateId=()=>`${Date.now()}:${Math.floor(Math.random()*1e6)}`;async function _runPeriodically(t,e,r){for(;intervals.get(r);){try{await t()}catch(n){setTimeout(()=>{throw n},1);break}if(!intervals.get(r))break;await new Promise(n=>{const o=setTimeout(n,e);intervals.set(r,o)})}}function setDelayedInterval(t,e,r){r=r||e;const n=_generateId(),o=setTimeout(()=>{_runPeriodically(t,e,n)},r);return intervals.set(n,o),n}function clearDelayedInterval(t){const e=intervals.get(t);e&&(clearTimeout(e),intervals.delete(t))}var src$6={setDelayedInterval,clearDelayedInterval};const log$O=logger$3("libp2p:peer-routing");class DefaultPeerRouting{constructor(e,r){this.components=e,this.routers=r.routers??[],this.refreshManagerInit=r.refreshManager??{},this.started=!1,this._findClosestPeersTask=this._findClosestPeersTask.bind(this)}isStarted(){return this.started}async start(){this.started||this.routers.length===0||this.timeoutId!=null||this.refreshManagerInit.enabled===!1||(this.timeoutId=src$6.setDelayedInterval(this._findClosestPeersTask,this.refreshManagerInit.interval,this.refreshManagerInit.bootDelay),this.started=!0)}async _findClosestPeersTask(){if(this.abortController==null)try{this.abortController=new timeoutAbortController.TimeoutController(this.refreshManagerInit.timeout??1e4);try{eventsExports.setMaxListeners?.(1/0,this.abortController.signal)}catch{}await drain$1(this.getClosestPeers(this.components.peerId.toBytes(),{signal:this.abortController.signal}))}catch(e){log$O.error(e)}finally{this.abortController?.clear(),this.abortController=void 0}}async stop(){src$6.clearDelayedInterval(this.timeoutId),this.abortController?.abort(),this.started=!1}async findPeer(e,r){if(this.routers.length===0)throw errcode(new Error("No peer routers available"),codes$4.ERR_NO_ROUTERS_AVAILABLE);if(e.toString()===this.components.peerId.toString())throw errcode(new Error("Should not try to find self"),codes$4.ERR_FIND_SELF);const n=await pipe$1(merge$2(...this.routers.map(o=>async function*(){try{yield await o.findPeer(e,r)}catch(a){log$O.error(a)}}())),o=>filter$1(o,Boolean),o=>storeAddresses(o,this.components.peerStore),async o=>await first$1(o));if(n!=null)return n;throw errcode(new Error(messages.NOT_FOUND),codes$4.ERR_NOT_FOUND)}async*getClosestPeers(e,r){if(this.routers.length===0)throw errcode(new Error("No peer routers available"),codes$4.ERR_NO_ROUTERS_AVAILABLE);yield*pipe$1(merge$2(...this.routers.map(n=>n.getClosestPeers(e,r))),n=>storeAddresses(n,this.components.peerStore),n=>uniquePeers(n),n=>requirePeers(n))}}class CompoundContentRouting{constructor(e,r){this.routers=r.routers??[],this.started=!1,this.components=e}isStarted(){return this.started}async start(){this.started=!0}async stop(){this.started=!1}async*findProviders(e,r={}){if(this.routers.length===0)throw errcode(new Error("No content this.routers available"),codes$4.ERR_NO_ROUTERS_AVAILABLE);yield*pipe$1(merge$2(...this.routers.map(n=>n.findProviders(e,r))),n=>storeAddresses(n,this.components.peerStore),n=>uniquePeers(n),n=>requirePeers(n))}async provide(e,r={}){if(this.routers.length===0)throw errcode(new Error("No content routers available"),codes$4.ERR_NO_ROUTERS_AVAILABLE);await Promise.all(this.routers.map(async n=>await n.provide(e,r)))}async put(e,r,n){if(!this.isStarted())throw errcode(new Error(messages.NOT_STARTED_YET),codes$4.DHT_NOT_STARTED);const o=this.components.dht;o!=null&&await drain$1(o.put(e,r,n))}async get(e,r){if(!this.isStarted())throw errcode(new Error(messages.NOT_STARTED_YET),codes$4.DHT_NOT_STARTED);const n=this.components.dht;if(n!=null){for await(const o of n.get(e,r))if(o.name==="VALUE")return o.value}throw errcode(new Error(messages.NOT_FOUND),codes$4.ERR_NOT_FOUND)}async*getMany(e,r,n){if(!this.isStarted())throw errcode(new Error(messages.NOT_STARTED_YET),codes$4.DHT_NOT_STARTED);if(r==null||r===0)return;let o=0;const a=this.components.dht;if(a!=null){for await(const c of a.get(e,n))if(c.name==="VALUE"&&(yield{from:c.from,val:c.value},o++,o===r))break}if(o===0)throw errcode(new Error(messages.NOT_FOUND),codes$4.ERR_NOT_FOUND)}}const defaultAddressFilter=t=>t;class DefaultAddressManager extends EventEmitter$1{constructor(e,r){super();const{listen:n=[],announce:o=[]}=r;this.components=e,this.listen=n.map(a=>a.toString()),this.announce=new Set(o.map(a=>a.toString())),this.observed=new Set,this.announceFilter=r.announceFilter??defaultAddressFilter}getListenAddrs(){return Array.from(this.listen).map(e=>multiaddr$3(e))}getAnnounceAddrs(){return Array.from(this.announce).map(e=>multiaddr$3(e))}getObservedAddrs(){return Array.from(this.observed).map(e=>multiaddr$3(e))}confirmObservedAddr(e){}removeObservedAddr(e){}addObservedAddr(e){let r=multiaddr$3(e);const n=r.getPeerId();n!=null&&peerIdFromString$1(n).equals(this.components.peerId)&&(r=r.decapsulate(multiaddr$3(`/p2p/${this.components.peerId.toString()}`)));const o=r.toString();this.observed.has(o)||(this.observed.add(o),this.dispatchEvent(new CustomEvent("change:addresses")))}getAddresses(){let e=this.getAnnounceAddrs().map(n=>n.toString());e.length===0&&(e=this.components.transportManager.getAddrs().map(n=>n.toString())),e=e.concat(this.getObservedAddrs().map(n=>n.toString()));const r=new Set(e);return this.announceFilter(Array.from(r).map(n=>multiaddr$3(n))).map(n=>n.protos().pop()?.path===!0||n.getPeerId()===this.components.peerId.toString()?n:n.encapsulate(`/p2p/${this.components.peerId.toString()}`))}}const log$N=logger$3("libp2p:connection-manager:latency-monitor:visibility-change-emitter");class VisibilityChangeEmitter extends EventEmitter$1{constructor(){super(),this.hidden="hidden",this.visibilityChange="visibilityChange",globalThis.document!=null&&(this._initializeVisibilityVarNames(),this._addVisibilityChangeListener())}_initializeVisibilityVarNames(){let e="hidden",r="visibilitychange";typeof globalThis.document.hidden<"u"?(e="hidden",r="visibilitychange"):typeof globalThis.document.mozHidden<"u"?(e="mozHidden",r="mozvisibilitychange"):typeof globalThis.document.msHidden<"u"?(e="msHidden",r="msvisibilitychange"):typeof globalThis.document.webkitHidden<"u"&&(e="webkitHidden",r="webkitvisibilitychange"),this.hidden=e,this.visibilityChange=r}_addVisibilityChangeListener(){typeof globalThis.document.addEventListener>"u"||typeof document[this.hidden]>"u"?log$N("Checking page visibility requires a browser that supports the Page Visibility API."):globalThis.document.addEventListener(this.visibilityChange,this._handleVisibilityChange.bind(this),!1)}isVisible(){if(!(this.hidden===void 0||document[this.hidden]===void 0))return document[this.hidden]==null}_handleVisibilityChange(){const e=globalThis.document[this.hidden]===!1;log$N(e?"Page Visible":"Page Hidden"),this.dispatchEvent(new CustomEvent("visibilityChange",{detail:e}))}}const log$M=logger$3("libp2p:connection-manager:latency-monitor");class LatencyMonitor extends EventEmitter$1{constructor(e={}){super();const{latencyCheckIntervalMs:r,dataEmitIntervalMs:n,asyncTestFn:o,latencyRandomPercentage:a}=e;this.latencyCheckIntervalMs=r??500,this.latencyRandomPercentage=a??10,this.latencyCheckMultiply=2*(this.latencyRandomPercentage/100)*this.latencyCheckIntervalMs,this.latencyCheckSubtract=this.latencyCheckMultiply/2,this.dataEmitIntervalMs=n===null||n===0?void 0:n??5*1e3,log$M("latencyCheckIntervalMs: %s dataEmitIntervalMs: %s",this.latencyCheckIntervalMs,this.dataEmitIntervalMs),this.dataEmitIntervalMs!=null?log$M("Expecting ~%s events per summary",this.latencyCheckIntervalMs/this.dataEmitIntervalMs):log$M("Not emitting summaries"),this.asyncTestFn=o,globalThis.process?.hrtime!=null?(log$M("Using process.hrtime for timing"),this.now=globalThis.process.hrtime,this.getDeltaMS=c=>{const u=this.now(c);return u[0]*1e3+u[1]/1e6}):typeof window<"u"&&window.performance?.now!=null?(log$M("Using performance.now for timing"),this.now=window.performance.now.bind(window.performance),this.getDeltaMS=c=>Math.round(this.now()-c)):(log$M("Using Date.now for timing"),this.now=Date.now,this.getDeltaMS=c=>this.now()-c),this.latencyData=this.initLatencyData()}start(){isBrowser()&&(this.visibilityChangeEmitter=new VisibilityChangeEmitter,this.visibilityChangeEmitter.addEventListener("visibilityChange",e=>{const{detail:r}=e;r?this._startTimers():(this._emitSummary(),this._stopTimers())})),this.visibilityChangeEmitter?.isVisible()===!0&&this._startTimers()}stop(){this._stopTimers()}_startTimers(){this.checkLatencyID==null&&(this.checkLatency(),this.dataEmitIntervalMs!=null&&(this.emitIntervalID=setInterval(()=>this._emitSummary(),this.dataEmitIntervalMs),typeof this.emitIntervalID.unref=="function"&&this.emitIntervalID.unref()))}_stopTimers(){this.checkLatencyID!=null&&(clearTimeout(this.checkLatencyID),this.checkLatencyID=void 0),this.emitIntervalID!=null&&(clearInterval(this.emitIntervalID),this.emitIntervalID=void 0)}_emitSummary(){const e=this.getSummary();e.events>0&&this.dispatchEvent(new CustomEvent("data",{detail:e}))}getSummary(){const e={events:this.latencyData.events,minMs:this.latencyData.minMs,maxMs:this.latencyData.maxMs,avgMs:this.latencyData.events>0?this.latencyData.totalMs/this.latencyData.events:Number.POSITIVE_INFINITY,lengthMs:this.getDeltaMS(this.latencyData.startTime)};return this.latencyData=this.initLatencyData(),log$M.trace("Summary: %O",e),e}checkLatency(){const e=Math.random()*this.latencyCheckMultiply-this.latencyCheckSubtract,r={deltaOffset:Math.ceil(this.latencyCheckIntervalMs+e),startTime:this.now()},n=()=>{if(this.checkLatencyID==null)return;const o=this.getDeltaMS(r.startTime)-r.deltaOffset;this.checkLatency(),this.latencyData.events++,this.latencyData.minMs=Math.min(this.latencyData.minMs,o),this.latencyData.maxMs=Math.max(this.latencyData.maxMs,o),this.latencyData.totalMs+=o,log$M.trace("MS: %s Data: %O",o,this.latencyData)};log$M.trace("localData: %O",r),this.checkLatencyID=setTimeout(()=>{this.asyncTestFn!=null?(r.deltaOffset=0,r.startTime=this.now(),this.asyncTestFn(n)):(r.deltaOffset-=1,n())},r.deltaOffset),typeof this.checkLatencyID.unref=="function"&&this.checkLatencyID.unref()}initLatencyData(){return{startTime:this.now(),minMs:Number.POSITIVE_INFINITY,maxMs:Number.NEGATIVE_INFINITY,events:0,totalMs:0}}}function isBrowser(){return typeof globalThis.window<"u"}const OPEN="OPEN",CLOSING="CLOSING",CLOSED="CLOSED";function mapIterable(t,e){const r={[Symbol.iterator]:()=>r,next:()=>{const n=t.next(),o=n.value;return n.done===!0||o==null?{done:!0,value:void 0}:{done:!1,value:e(o)}}};return r}class PeerMap{constructor(e){N(this,"map");if(this.map=new Map,e!=null)for(const[r,n]of e.entries())this.map.set(r.toString(),n)}[Symbol.iterator](){return this.entries()}clear(){this.map.clear()}delete(e){this.map.delete(e.toString())}entries(){return mapIterable(this.map.entries(),e=>[peerIdFromString$1(e[0]),e[1]])}forEach(e){this.map.forEach((r,n)=>{e(r,peerIdFromString$1(n),this)})}get(e){return this.map.get(e.toString())}has(e){return this.map.has(e.toString())}set(e,r){this.map.set(e.toString(),r)}keys(){return mapIterable(this.map.keys(),e=>peerIdFromString$1(e))}values(){return this.map.values()}get size(){return this.map.size}}class PeerSet{constructor(e){N(this,"set");if(this.set=new Set,e!=null)for(const r of e)this.set.add(r.toString())}get size(){return this.set.size}[Symbol.iterator](){return this.values()}add(e){this.set.add(e.toString())}clear(){this.set.clear()}delete(e){this.set.delete(e.toString())}entries(){return mapIterable(this.set.entries(),e=>{const r=peerIdFromString$1(e[0]);return[r,r]})}forEach(e){this.set.forEach(r=>{const n=peerIdFromString$1(r);e(n,n,this)})}has(e){return this.set.has(e.toString())}values(){return mapIterable(this.set.values(),e=>peerIdFromString$1(e))}intersection(e){const r=new PeerSet;for(const n of e)this.has(n)&&r.add(n);return r}difference(e){const r=new PeerSet;for(const n of this)e.has(n)||r.add(n);return r}union(e){const r=new PeerSet;for(const n of e)r.add(n);for(const n of this)r.add(n);return r}}const KEEP_ALIVE="keep-alive";function getPeerAddress(t){if(isPeerId(t))return{peerId:t};if(isMultiaddr$3(t)){const e=t.getPeerId();return{multiaddr:t,peerId:e==null?void 0:peerIdFromString$1(e)}}throw errcode(new Error(`${t} is not a PeerId or a Multiaddr`),codes$4.ERR_INVALID_MULTIADDR)}const log$L=logger$3("libp2p:connection-manager"),defaultOptions$4={maxConnections:1/0,minConnections:0,maxEventLoopDelay:1/0,pollInterval:2e3,autoDialInterval:1e4,inboundConnectionThreshold:5,maxIncomingPendingConnections:10},STARTUP_RECONNECT_TIMEOUT=6e4;class DefaultConnectionManager extends EventEmitter$1{constructor(e,r){if(super(),this.opts=mergeOptions$h.call({ignoreUndefined:!0},defaultOptions$4,r),this.opts.maxConnections<this.opts.minConnections)throw errcode(new Error("Connection Manager maxConnections must be greater than minConnections"),codes$4.ERR_INVALID_PARAMETERS);log$L("options: %o",this.opts),this.components=e,this.connections=new Map,this.started=!1,r.maxEventLoopDelay!=null&&r.maxEventLoopDelay>0&&r.maxEventLoopDelay!==1/0&&(this.latencyMonitor=new LatencyMonitor({latencyCheckIntervalMs:r.pollInterval,dataEmitIntervalMs:r.pollInterval}));try{eventsExports.setMaxListeners?.(1/0,this)}catch{}this.onConnect=this.onConnect.bind(this),this.onDisconnect=this.onDisconnect.bind(this),this.startupReconnectTimeout=r.startupReconnectTimeout??STARTUP_RECONNECT_TIMEOUT,this.dialTimeout=r.dialTimeout??3e4,this.allow=(r.allow??[]).map(n=>multiaddr$3(n)),this.deny=(r.deny??[]).map(n=>multiaddr$3(n)),this.inboundConnectionRateLimiter=new rateLimiterFlexible.RateLimiterMemory({points:this.opts.inboundConnectionThreshold,duration:1}),this.incomingPendingConnections=0}isStarted(){return this.started}async start(){this.components.metrics?.registerMetricGroup("libp2p_connection_manager_connections",{calculate:()=>{const e={inbound:0,outbound:0};for(const r of this.connections.values())for(const n of r)n.stat.direction==="inbound"?e.inbound++:e.outbound++;return e}}),this.components.metrics?.registerMetricGroup("libp2p_protocol_streams_total",{label:"protocol",calculate:()=>{const e={};for(const r of this.connections.values())for(const n of r)for(const o of n.streams){const a=`${o.stat.direction} ${o.stat.protocol??"unnegotiated"}`;e[a]=(e[a]??0)+1}return e}}),this.components.metrics?.registerMetricGroup("libp2p_connection_manager_protocol_streams_per_connection_90th_percentile",{label:"protocol",calculate:()=>{const e={};for(const n of this.connections.values())for(const o of n){const a={};for(const c of o.streams){const u=`${c.stat.direction} ${c.stat.protocol??"unnegotiated"}`;a[u]=(a[u]??0)+1}for(const[c,u]of Object.entries(a))e[c]=e[c]??[],e[c].push(u)}const r={};for(let[n,o]of Object.entries(e)){o=o.sort((c,u)=>c-u);const a=Math.floor(o.length*.9);r[n]=o[a]}return r}}),this.latencyMonitor?.start(),this._onLatencyMeasure=this._onLatencyMeasure.bind(this),this.latencyMonitor?.addEventListener("data",this._onLatencyMeasure),this.started=!0,log$L("started")}async afterStart(){this.components.upgrader.addEventListener("connection",this.onConnect),this.components.upgrader.addEventListener("connectionEnd",this.onDisconnect),Promise.resolve().then(async()=>{const e=[];for(const r of await this.components.peerStore.all())(await this.components.peerStore.getTags(r.id)).filter(n=>n.name===KEEP_ALIVE).length>0&&e.push(r.id);this.connectOnStartupController?.clear(),this.connectOnStartupController=new timeoutAbortController.TimeoutController(this.startupReconnectTimeout);try{eventsExports.setMaxListeners?.(1/0,this.connectOnStartupController.signal)}catch{}await Promise.all(e.map(async r=>{await this.openConnection(r,{signal:this.connectOnStartupController?.signal}).catch(n=>{log$L.error(n)})}))}).catch(e=>{log$L.error(e)}).finally(()=>{this.connectOnStartupController?.clear()})}async beforeStop(){this.connectOnStartupController?.abort(),this.components.upgrader.removeEventListener("connection",this.onConnect),this.components.upgrader.removeEventListener("connectionEnd",this.onDisconnect)}async stop(){this.latencyMonitor?.removeEventListener("data",this._onLatencyMeasure),this.latencyMonitor?.stop(),this.started=!1,await this._close(),log$L("stopped")}async _close(){const e=[];for(const r of this.connections.values())for(const n of r)e.push((async()=>{try{await n.close()}catch(o){log$L.error(o)}})());log$L("closing %d connections",e.length),await Promise.all(e),this.connections.clear()}onConnect(e){this._onConnect(e).catch(r=>{log$L.error(r)})}async _onConnect(e){const{detail:r}=e;if(!this.started){await r.close();return}const n=r.remotePeer,o=n.toString(),a=this.connections.get(o);a!=null?a.push(r):this.connections.set(o,[r]),n.publicKey!=null&&await this.components.peerStore.keyBook.set(n,n.publicKey);const c=this.getConnections().length,u=c-this.opts.maxConnections;await this._checkMaxLimit("maxConnections",c,u),this.dispatchEvent(new CustomEvent("peer:connect",{detail:r}))}onDisconnect(e){const{detail:r}=e;if(!this.started)return;const n=r.remotePeer.toString();let o=this.connections.get(n);o!=null&&o.length>1?(o=o.filter(a=>a.id!==r.id),this.connections.set(n,o)):o!=null&&(this.connections.delete(n),this.dispatchEvent(new CustomEvent("peer:disconnect",{detail:r})))}getConnections(e){if(e!=null)return this.connections.get(e.toString())??[];let r=[];for(const n of this.connections.values())r=r.concat(n);return r}async openConnection(e,r={}){const{peerId:n,multiaddr:o}=getPeerAddress(e);if(n==null&&o==null)throw errcode(new TypeError("Can only open connections to PeerIds or Multiaddrs"),codes$4.ERR_INVALID_PARAMETERS);if(n!=null){log$L("dial to",n);const c=this.getConnections(n);if(c.length>0)return log$L("had an existing connection to %p",n),c[0]}let a;if(r?.signal==null){a=new timeoutAbortController.TimeoutController(this.dialTimeout),r.signal=a.signal;try{eventsExports.setMaxListeners?.(1/0,a.signal)}catch{}}try{const c=await this.components.dialer.dial(e,r);let u=this.connections.get(c.remotePeer.toString());u==null&&(u=[],this.connections.set(c.remotePeer.toString(),u));let l=!1;for(const f of u)f.id===c.id&&(l=!0);return l||u.push(c),c}finally{a?.clear()}}async closeConnections(e){const r=this.connections.get(e.toString())??[];await Promise.all(r.map(async n=>await n.close()))}getAll(e){if(!isPeerId(e))throw errcode(new Error("peerId must be an instance of peer-id"),codes$4.ERR_INVALID_PARAMETERS);const r=e.toString(),n=this.connections.get(r);return n!=null?n.filter(o=>o.stat.status===OPEN):[]}_onLatencyMeasure(e){const{detail:r}=e;this._checkMaxLimit("maxEventLoopDelay",r.avgMs,1).catch(n=>{log$L.error(n)})}async _checkMaxLimit(e,r,n=1){const o=this.opts[e];if(o==null){log$L.trace("limit %s was not set so it cannot be applied",e);return}log$L.trace("checking limit of %s. current value: %d of %d",e,r,o),r>o&&(log$L("%s: limit exceeded: %p, %d/%d, pruning %d connection(s)",this.components.peerId,e,r,o,n),await this._pruneConnections(n))}async _pruneConnections(e){const r=this.getConnections(),n=new PeerMap;for(const c of r){const u=c.remotePeer;if(n.has(u))continue;const l=await this.components.peerStore.getTags(u);n.set(u,l.reduce((f,p)=>f+p.value,0))}const o=r.sort((c,u)=>{const l=n.get(c.remotePeer)??0,f=n.get(u.remotePeer)??0;if(l>f)return 1;if(l<f)return-1;const p=c.stat.timeline.open,g=u.stat.timeline.open;return p<g?1:p>g?-1:0}),a=[];for(const c of o)if(log$L("too many connections open - closing a connection to %p",c.remotePeer),a.push(c),a.length===e)break;await Promise.all(a.map(async c=>{try{await c.close()}catch(u){log$L.error(u)}this.onDisconnect(new CustomEvent("connectionEnd",{detail:c}))}))}async acceptIncomingConnection(e){if(this.deny.some(r=>e.remoteAddr.toString().startsWith(r.toString())))return log$L("connection from %s refused - connection remote address was in deny list",e.remoteAddr),!1;if(this.allow.some(r=>e.remoteAddr.toString().startsWith(r.toString())))return this.incomingPendingConnections++,!0;if(this.incomingPendingConnections===this.opts.maxIncomingPendingConnections)return log$L("connection from %s refused - incomingPendingConnections exceeded by peer %s",e.remoteAddr),!1;if(e.remoteAddr.isThinWaistAddress()){const r=e.remoteAddr.nodeAddress().address;try{await this.inboundConnectionRateLimiter.consume(r,1)}catch{return log$L("connection from %s refused - inboundConnectionThreshold exceeded by host %s",r,e.remoteAddr),!1}}return this.getConnections().length<this.opts.maxConnections?(this.incomingPendingConnections++,!0):(log$L("connection from %s refused - maxConnections exceeded",e.remoteAddr),!1)}afterUpgradeInbound(){this.incomingPendingConnections--}}const log$K=logger$3("libp2p:connection-manager:auto-dialler"),defaultOptions$3={enabled:!0,minConnections:0,autoDialInterval:1e4};class AutoDialler{constructor(e,r){this.components=e,this.options=mergeOptions$h.call({ignoreUndefined:!0},defaultOptions$3,r),this.running=!1,this._autoDial=this._autoDial.bind(this),log$K("options: %j",this.options)}isStarted(){return this.running}async start(){if(!this.options.enabled){log$K("not enabled");return}this.running=!0,this._autoDial().catch(e=>{log$K.error("could start autodial",e)}),log$K("started")}async stop(){if(!this.options.enabled){log$K("not enabled");return}this.running=!1,this.autoDialTimeout!=null&&this.autoDialTimeout.clear(),log$K("stopped")}async _autoDial(){this.autoDialTimeout!=null&&this.autoDialTimeout.clear();const e=this.options.minConnections;if(this.components.connectionManager.getConnections().length>=e){this.autoDialTimeout=retimer(this._autoDial,this.options.autoDialInterval);return}const r=await this.components.peerStore.all(),n=await pipe$1(r.sort(()=>Math.random()>.5?1:-1),o=>filter$1(o,a=>!a.id.equals(this.components.peerId)),o=>sort(o,(a,c)=>c.protocols.length>a.protocols.length||c.id.publicKey!=null&&a.id.publicKey==null?1:-1),async o=>await all$1(o));for(let o=0;this.running&&o<n.length&&this.components.connectionManager.getConnections().length<e;o++){if(!this.running)return;const a=n[o];if(this.components.connectionManager.getConnections(a.id).length===0){log$K("connecting to a peerStore stored peer %p",a.id);try{await this.components.connectionManager.openConnection(a.id)}catch(c){log$K.error("could not connect to peerStore stored peer",c)}}}this.running&&(this.autoDialTimeout=retimer(this._autoDial,this.options.autoDialInterval))}}var TopicValidatorResult;(function(t){t.Accept="accept",t.Ignore="ignore",t.Reject="reject"})(TopicValidatorResult||(TopicValidatorResult={}));var FaultTolerance$1;(function(t){t[t.FATAL_ALL=0]="FATAL_ALL",t[t.NO_FATAL=1]="NO_FATAL"})(FaultTolerance$1||(FaultTolerance$1={}));class CodeError extends Error{constructor(r,n,o){super(r);N(this,"code");N(this,"props");this.code=n,this.name=o?.name??"CodeError",this.props=o??{}}}class AggregateCodeError extends AggregateError{constructor(r,n,o,a){super(r,n);N(this,"code");N(this,"props");this.code=o,this.name=a?.name??"AggregateCodeError",this.props=a??{}}}function equals$8(t,e){if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0}function coerce$4(t){if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")}function fromString$5(t){return new TextEncoder().encode(t)}function toString$6(t){return new TextDecoder().decode(t)}function base$6(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$5=base$6,_brrp__multiformats_scope_baseX$4=src$5;let Encoder$5=class{constructor(t,e,r){N(this,"name");N(this,"prefix");N(this,"baseEncode");this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$5=class{constructor(t,e,r){N(this,"name");N(this,"prefix");N(this,"baseDecode");N(this,"prefixCodePoint");if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$6(this,t)}},ComposedDecoder$4=class{constructor(t){N(this,"decoders");this.decoders=t}or(t){return or$6(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r!=null)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};function or$6(t,e){return new ComposedDecoder$4({...t.decoders??{[t.prefix]:t},...e.decoders??{[e.prefix]:e}})}let Codec$4=class{constructor(t,e,r,n){N(this,"name");N(this,"prefix");N(this,"baseEncode");N(this,"baseDecode");N(this,"encoder");N(this,"decoder");this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$5(t,e,r),this.decoder=new Decoder$5(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};function from$7({name:t,prefix:e,encode:r,decode:n}){return new Codec$4(t,e,r,n)}function baseX$4({name:t,prefix:e,alphabet:r}){const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$4(r,t);return from$7({prefix:e,name:t,encode:n,decode:a=>coerce$4(o(a))})}function decode$s(t,e,r,n){const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c}function encode$l(t,e,r){const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c!==0&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a}function rfc4648$4({name:t,prefix:e,bitsPerChar:r,alphabet:n}){return from$7({prefix:e,name:t,encode(o){return encode$l(o,n,r)},decode(o){return decode$s(o,n,r,t)}})}const base58btc$3=baseX$4({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),base58flickr$2=baseX$4({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),base58$2=Object.freeze(Object.defineProperty({__proto__:null,base58btc:base58btc$3,base58flickr:base58flickr$2},Symbol.toStringTag,{value:"Module"})),base32$5=rfc4648$4({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),base32upper$2=rfc4648$4({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),base32pad$2=rfc4648$4({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),base32padupper$2=rfc4648$4({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),base32hex$2=rfc4648$4({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),base32hexupper$2=rfc4648$4({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),base32hexpad$2=rfc4648$4({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),base32hexpadupper$2=rfc4648$4({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),base32z$2=rfc4648$4({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),base32$6=Object.freeze(Object.defineProperty({__proto__:null,base32:base32$5,base32hex:base32hex$2,base32hexpad:base32hexpad$2,base32hexpadupper:base32hexpadupper$2,base32hexupper:base32hexupper$2,base32pad:base32pad$2,base32padupper:base32padupper$2,base32upper:base32upper$2,base32z:base32z$2},Symbol.toStringTag,{value:"Module"}));var encode_1$5=encode$k,MSB$9=128,REST$9=127,MSBALL$5=~REST$9,INT$5=Math.pow(2,31);function encode$k(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$5;)e[r++]=t&255|MSB$9,t/=128;for(;t&MSBALL$5;)e[r++]=t&255|MSB$9,t>>>=7;return e[r]=t|0,encode$k.bytes=r-n+1,e}var decode$r=read$6,MSB$1$5=128,REST$1$5=127;function read$6(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$6.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$5)<<o:(c&REST$1$5)*Math.pow(2,o),o+=7}while(c>=MSB$1$5);return read$6.bytes=a-n,r}var N1$7=Math.pow(2,7),N2$7=Math.pow(2,14),N3$7=Math.pow(2,21),N4$7=Math.pow(2,28),N5$7=Math.pow(2,35),N6$7=Math.pow(2,42),N7$7=Math.pow(2,49),N8$5=Math.pow(2,56),N9$5=Math.pow(2,63),length$5=function(t){return t<N1$7?1:t<N2$7?2:t<N3$7?3:t<N4$7?4:t<N5$7?5:t<N6$7?6:t<N7$7?7:t<N8$5?8:t<N9$5?9:10},varint$6={encode:encode_1$5,decode:decode$r,encodingLength:length$5},_brrp_varint$4=varint$6;function decode$q(t,e=0){return[_brrp_varint$4.decode(t,e),_brrp_varint$4.decode.bytes]}function encodeTo$4(t,e,r=0){return _brrp_varint$4.encode(t,e,r),e}function encodingLength$6(t){return _brrp_varint$4.encodingLength(t)}function create$6(t,e){const r=e.byteLength,n=encodingLength$6(t),o=n+encodingLength$6(r),a=new Uint8Array(o+r);return encodeTo$4(t,a,0),encodeTo$4(r,a,n),a.set(e,o),new Digest$4(t,r,e,a)}function decode$p(t){const e=coerce$4(t),[r,n]=decode$q(e),[o,a]=decode$q(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$4(r,o,c,e)}function equals$7(t,e){if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$8(t.bytes,r.bytes)}}let Digest$4=class{constructor(t,e,r,n){N(this,"code");N(this,"size");N(this,"digest");N(this,"bytes");this.code=t,this.size=e,this.digest=r,this.bytes=n}};function format$3(t,e){const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$3(r,baseCache$3(t),e??base58btc$3.encoder);default:return toStringV1$3(r,baseCache$3(t),e??base32$5.encoder)}}const cache$4=new WeakMap;function baseCache$3(t){const e=cache$4.get(t);if(e==null){const r=new Map;return cache$4.set(t,r),r}return e}let CID$3=class Ye{constructor(e,r,n,o){N(this,"code");N(this,"version");N(this,"multihash");N(this,"bytes");N(this,"/");N(this,Kr,"CID");this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$3)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$3)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return Ye.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$6(e,r);return Ye.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return Ye.equals(this,e)}static equals(e,r){const n=r;return n!=null&&e.code===n.code&&e.version===n.version&&equals$7(e.multihash,n.multihash)}toString(e){return format$3(this,e)}toJSON(){return{"/":format$3(this)}}link(){return this}[(Kr=Symbol.toStringTag,Symbol.for("nodejs.util.inspect.custom"))](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof Ye)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new Ye(n,o,a,c??encodeCID$3(n,o,a.bytes))}else if(r[cidSymbol$3]===!0){const{version:n,multihash:o,code:a}=r,c=decode$p(o);return Ye.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$3)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$3}) block encoding`);return new Ye(e,r,n,n.bytes)}case 1:{const o=encodeCID$3(e,r,n.bytes);return new Ye(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return Ye.create(0,DAG_PB_CODE$3,e)}static createV1(e,r){return Ye.create(1,e,r)}static decode(e){const[r,n]=Ye.decodeFirst(e);if(n.length!==0)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=Ye.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$4(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$4(r.multihashCode,r.digestSize,a,o);return[r.version===0?Ye.createV0(c):Ye.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$q(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$3;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$3(e,r),a=Ye.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$3(a).set(n,e),a}};function parseCIDtoBytes$3(t,e){switch(t[0]){case"Q":{const r=e??base58btc$3;return[base58btc$3.prefix,r.decode(`${base58btc$3.prefix}${t}`)]}case base58btc$3.prefix:{const r=e??base58btc$3;return[base58btc$3.prefix,r.decode(t)]}case base32$5.prefix:{const r=e??base32$5;return[base32$5.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}}function toStringV0$3(t,e,r){const{prefix:n}=r;if(n!==base58btc$3.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o}function toStringV1$3(t,e,r){const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o}const DAG_PB_CODE$3=112,SHA_256_CODE$3=18;function encodeCID$3(t,e,r){const n=encodingLength$6(t),o=n+encodingLength$6(e),a=new Uint8Array(o+r.byteLength);return encodeTo$4(t,a,0),encodeTo$4(e,a,n),a.set(r,o),a}const cidSymbol$3=Symbol.for("@ipld/js-cid/CID");function equals$6(t,e){if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0}const base10$4=baseX$4({prefix:"9",name:"base10",alphabet:"0123456789"}),base10$5=Object.freeze(Object.defineProperty({__proto__:null,base10:base10$4},Symbol.toStringTag,{value:"Module"})),base16$4=rfc4648$4({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),base16upper$2=rfc4648$4({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),base16$5=Object.freeze(Object.defineProperty({__proto__:null,base16:base16$4,base16upper:base16upper$2},Symbol.toStringTag,{value:"Module"})),base2$4=rfc4648$4({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),base2$5=Object.freeze(Object.defineProperty({__proto__:null,base2:base2$4},Symbol.toStringTag,{value:"Module"})),alphabet$2=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),alphabetBytesToChars$2=alphabet$2.reduce((t,e,r)=>(t[r]=e,t),[]),alphabetCharsToBytes$2=alphabet$2.reduce((t,e,r)=>(t[e.codePointAt(0)]=r,t),[]);function encode$j(t){return t.reduce((e,r)=>(e+=alphabetBytesToChars$2[r],e),"")}function decode$o(t){const e=[];for(const r of t){const n=alphabetCharsToBytes$2[r.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${r}`);e.push(n)}return new Uint8Array(e)}const base256emoji$4=from$7({prefix:"\u{1F680}",name:"base256emoji",encode:encode$j,decode:decode$o}),base256emoji$5=Object.freeze(Object.defineProperty({__proto__:null,base256emoji:base256emoji$4},Symbol.toStringTag,{value:"Module"})),base36$4=baseX$4({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),base36upper$2=baseX$4({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),base36$5=Object.freeze(Object.defineProperty({__proto__:null,base36:base36$4,base36upper:base36upper$2},Symbol.toStringTag,{value:"Module"})),base64$4=rfc4648$4({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),base64pad$2=rfc4648$4({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),base64url$2=rfc4648$4({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),base64urlpad$2=rfc4648$4({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),base64$5=Object.freeze(Object.defineProperty({__proto__:null,base64:base64$4,base64pad:base64pad$2,base64url:base64url$2,base64urlpad:base64urlpad$2},Symbol.toStringTag,{value:"Module"})),base8$4=rfc4648$4({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),base8$5=Object.freeze(Object.defineProperty({__proto__:null,base8:base8$4},Symbol.toStringTag,{value:"Module"})),identity$2=from$7({prefix:"\0",name:"identity",encode:t=>toString$6(t),decode:t=>fromString$5(t)}),identityBase$2=Object.freeze(Object.defineProperty({__proto__:null,identity:identity$2},Symbol.toStringTag,{value:"Module"}));new TextEncoder,new TextDecoder;const bases$2={...identityBase$2,...base2$5,...base8$5,...base10$5,...base16$5,...base32$6,...base36$5,...base58$2,...base64$5,...base256emoji$5};function asUint8Array$1(t){return globalThis.Buffer!=null?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):t}function allocUnsafe$6(t=0){return globalThis.Buffer?.allocUnsafe!=null?asUint8Array$1(globalThis.Buffer.allocUnsafe(t)):new Uint8Array(t)}function createCodec$1(t,e,r,n){return{name:t,prefix:e,encoder:{name:t,prefix:e,encode:r},decoder:{decode:n}}}const string=createCodec$1("utf8","u",t=>"u"+new TextDecoder("utf8").decode(t),t=>new TextEncoder().encode(t.substring(1))),ascii=createCodec$1("ascii","a",t=>{let e="a";for(let r=0;r<t.length;r++)e+=String.fromCharCode(t[r]);return e},t=>{t=t.substring(1);const e=allocUnsafe$6(t.length);for(let r=0;r<t.length;r++)e[r]=t.charCodeAt(r);return e}),BASES={utf8:string,"utf-8":string,hex:bases$2.base16,latin1:ascii,ascii,binary:ascii,...bases$2};function toString$5(t,e="utf8"){const r=BASES[e];if(r==null)throw new Error(`Unsupported encoding "${e}"`);return(e==="utf8"||e==="utf-8")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?globalThis.Buffer.from(t.buffer,t.byteOffset,t.byteLength).toString("utf8"):r.encoder.encode(t).substring(1)}const N1$6=Math.pow(2,7),N2$6=Math.pow(2,14),N3$6=Math.pow(2,21),N4$6=Math.pow(2,28),N5$6=Math.pow(2,35),N6$6=Math.pow(2,42),N7$6=Math.pow(2,49),MSB$8=128,REST$8=127;function encodingLength$5(t){if(t<N1$6)return 1;if(t<N2$6)return 2;if(t<N3$6)return 3;if(t<N4$6)return 4;if(t<N5$6)return 5;if(t<N6$6)return 6;if(t<N7$6)return 7;if(Number.MAX_SAFE_INTEGER!=null&&t>Number.MAX_SAFE_INTEGER)throw new RangeError("Could not encode varint");return 8}function encodeUint8Array$1(t,e,r=0){switch(encodingLength$5(t)){case 8:e[r++]=t&255|MSB$8,t/=128;case 7:e[r++]=t&255|MSB$8,t/=128;case 6:e[r++]=t&255|MSB$8,t/=128;case 5:e[r++]=t&255|MSB$8,t/=128;case 4:e[r++]=t&255|MSB$8,t>>>=7;case 3:e[r++]=t&255|MSB$8,t>>>=7;case 2:e[r++]=t&255|MSB$8,t>>>=7;case 1:{e[r++]=t&255,t>>>=7;break}default:throw new Error("unreachable")}return e}function encodeUint8ArrayList$1(t,e,r=0){switch(encodingLength$5(t)){case 8:e.set(r++,t&255|MSB$8),t/=128;case 7:e.set(r++,t&255|MSB$8),t/=128;case 6:e.set(r++,t&255|MSB$8),t/=128;case 5:e.set(r++,t&255|MSB$8),t/=128;case 4:e.set(r++,t&255|MSB$8),t>>>=7;case 3:e.set(r++,t&255|MSB$8),t>>>=7;case 2:e.set(r++,t&255|MSB$8),t>>>=7;case 1:{e.set(r++,t&255),t>>>=7;break}default:throw new Error("unreachable")}return e}function decodeUint8Array$1(t,e){let r=t[e],n=0;if(n+=r&REST$8,r<MSB$8||(r=t[e+1],n+=(r&REST$8)<<7,r<MSB$8)||(r=t[e+2],n+=(r&REST$8)<<14,r<MSB$8)||(r=t[e+3],n+=(r&REST$8)<<21,r<MSB$8)||(r=t[e+4],n+=(r&REST$8)*N4$6,r<MSB$8)||(r=t[e+5],n+=(r&REST$8)*N5$6,r<MSB$8)||(r=t[e+6],n+=(r&REST$8)*N6$6,r<MSB$8)||(r=t[e+7],n+=(r&REST$8)*N7$6,r<MSB$8))return n;throw new RangeError("Could not decode varint")}function decodeUint8ArrayList$1(t,e){let r=t.get(e),n=0;if(n+=r&REST$8,r<MSB$8||(r=t.get(e+1),n+=(r&REST$8)<<7,r<MSB$8)||(r=t.get(e+2),n+=(r&REST$8)<<14,r<MSB$8)||(r=t.get(e+3),n+=(r&REST$8)<<21,r<MSB$8)||(r=t.get(e+4),n+=(r&REST$8)*N4$6,r<MSB$8)||(r=t.get(e+5),n+=(r&REST$8)*N5$6,r<MSB$8)||(r=t.get(e+6),n+=(r&REST$8)*N6$6,r<MSB$8)||(r=t.get(e+7),n+=(r&REST$8)*N7$6,r<MSB$8))return n;throw new RangeError("Could not decode varint")}function encode$i(t,e,r=0){return e==null&&(e=allocUnsafe$6(encodingLength$5(t))),e instanceof Uint8Array?encodeUint8Array$1(t,e,r):encodeUint8ArrayList$1(t,e,r)}function decode$n(t,e=0){return t instanceof Uint8Array?decodeUint8Array$1(t,e):decodeUint8ArrayList$1(t,e)}function concat(t,e){if(globalThis.Buffer!=null)return asUint8Array$1(globalThis.Buffer.concat(t,e));e==null&&(e=t.reduce((o,a)=>o+a.length,0));const r=allocUnsafe$6(e);let n=0;for(const o of t)r.set(o,n),n+=o.length;return asUint8Array$1(r)}function fromString$4(t,e="utf8"){const r=BASES[e];if(r==null)throw new Error(`Unsupported encoding "${e}"`);return(e==="utf8"||e==="utf-8")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?asUint8Array$1(globalThis.Buffer.from(t,"utf-8")):r.decoder.decode(`${r.prefix}${t}`)}const isV4$2=isIPv4,isV6$2=isIPv6,toBytes$2=function(t){let e=0;if(t=t.toString().trim(),isV4$2(t)){const r=new Uint8Array(e+4);return t.split(/\./g).forEach(n=>{r[e++]=parseInt(n,10)&255}),r}if(isV6$2(t)){const r=t.split(":",8);let n;for(n=0;n<r.length;n++){const a=isV4$2(r[n]);let c;a&&(c=toBytes$2(r[n]),r[n]=toString$5(c.slice(0,2),"base16")),c!=null&&++n<8&&r.splice(n,0,toString$5(c.slice(2,4),"base16"))}if(r[0]==="")for(;r.length<8;)r.unshift("0");else if(r[r.length-1]==="")for(;r.length<8;)r.push("0");else if(r.length<8){for(n=0;n<r.length&&r[n]!=="";n++);const a=[n,1];for(n=9-r.length;n>0;n--)a.push("0");r.splice.apply(r,a)}const o=new Uint8Array(e+16);for(n=0;n<r.length;n++){const a=parseInt(r[n],16);o[e++]=a>>8&255,o[e++]=a&255}return o}throw new Error("invalid ip address")},toString$4=function(t,e=0,r){e=~~e,r=r??t.length-e;const n=new DataView(t.buffer);if(r===4){const o=[];for(let a=0;a<r;a++)o.push(t[e+a]);return o.join(".")}if(r===16){const o=[];for(let a=0;a<r;a+=2)o.push(n.getUint16(e+a).toString(16));return o.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""},V$2=-1,names$2={},codes$3={},table$2=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,V$2,"ip6zone"],[43,8,"ipcidr"],[53,V$2,"dns",!0],[54,V$2,"dns4",!0],[55,V$2,"dns6",!0],[56,V$2,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc-direct"],[281,0,"webrtc"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,V$2,"unix",!1,!0],[421,V$2,"ipfs"],[421,V$2,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,V$2,"garlic64"],[448,0,"tls"],[449,V$2,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,V$2,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[777,V$2,"memory"]];table$2.forEach(t=>{const e=createProtocol$2(...t);codes$3[e.code]=e,names$2[e.name]=e});function createProtocol$2(t,e,r,n,o){return{code:t,size:e,name:r,resolvable:!!n,path:!!o}}function getProtocol$2(t){if(typeof t=="number"){if(codes$3[t]!=null)return codes$3[t];throw new Error(`no protocol with code: ${t}`)}else if(typeof t=="string"){if(names$2[t]!=null)return names$2[t];throw new Error(`no protocol with name: ${t}`)}throw new Error(`invalid protocol id type: ${typeof t}`)}getProtocol$2("ip4"),getProtocol$2("ip6"),getProtocol$2("ipcidr");function convertToString$2(t,e){switch(getProtocol$2(t).code){case 4:case 41:return bytes2ip$2(e);case 42:return bytes2str$2(e);case 6:case 273:case 33:case 132:return bytes2port$2(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return bytes2str$2(e);case 421:return bytes2mh$2(e);case 444:return bytes2onion$2(e);case 445:return bytes2onion$2(e);case 466:return bytes2mb$2(e);default:return toString$5(e,"base16")}}function convertToBytes$2(t,e){switch(getProtocol$2(t).code){case 4:return ip2bytes$2(e);case 41:return ip2bytes$2(e);case 42:return str2bytes$2(e);case 6:case 273:case 33:case 132:return port2bytes$2(parseInt(e,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return str2bytes$2(e);case 421:return mh2bytes$2(e);case 444:return onion2bytes$2(e);case 445:return onion32bytes$2(e);case 466:return mb2bytes$2(e);default:return fromString$4(e,"base16")}}const decoders$2=Object.values(bases$2).map(t=>t.decoder),anybaseDecoder$2=function(){let t=decoders$2[0].or(decoders$2[1]);return decoders$2.slice(2).forEach(e=>t=t.or(e)),t}();function ip2bytes$2(t){if(!isIP(t))throw new Error("invalid ip address");return toBytes$2(t)}function bytes2ip$2(t){const e=toString$4(t,0,t.length);if(e==null)throw new Error("ipBuff is required");if(!isIP(e))throw new Error("invalid ip address");return e}function port2bytes$2(t){const e=new ArrayBuffer(2);return new DataView(e).setUint16(0,t),new Uint8Array(e)}function bytes2port$2(t){return new DataView(t.buffer).getUint16(t.byteOffset)}function str2bytes$2(t){const e=fromString$4(t),r=Uint8Array.from(encode$i(e.length));return concat([r,e],r.length+e.length)}function bytes2str$2(t){const e=decode$n(t);if(t=t.slice(encodingLength$5(e)),t.length!==e)throw new Error("inconsistent lengths");return toString$5(t)}function mh2bytes$2(t){let e;t[0]==="Q"||t[0]==="1"?e=decode$p(base58btc$3.decode(`z${t}`)).bytes:e=CID$3.parse(t).multihash.bytes;const r=Uint8Array.from(encode$i(e.length));return concat([r,e],r.length+e.length)}function mb2bytes$2(t){const e=anybaseDecoder$2.decode(t),r=Uint8Array.from(encode$i(e.length));return concat([r,e],r.length+e.length)}function bytes2mb$2(t){const e=decode$n(t),r=t.slice(encodingLength$5(e));if(r.length!==e)throw new Error("inconsistent lengths");return"u"+toString$5(r,"base64url")}function bytes2mh$2(t){const e=decode$n(t),r=t.slice(encodingLength$5(e));if(r.length!==e)throw new Error("inconsistent lengths");return toString$5(r,"base58btc")}function onion2bytes$2(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==16)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion address.`);const r=base32$5.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes$2(n);return concat([r,o],r.length+o.length)}function onion32bytes$2(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==56)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion3 address.`);const r=base32$5.decode(`b${e[0]}`),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes$2(n);return concat([r,o],r.length+o.length)}function bytes2onion$2(t){const e=t.slice(0,t.length-2),r=t.slice(t.length-2),n=toString$5(e,"base32"),o=bytes2port$2(r);return`${n}:${o}`}function stringToMultiaddrParts(t){t=cleanPath$2(t);const e=[],r=[];let n=null;const o=t.split("/").slice(1);if(o.length===1&&o[0]==="")return{bytes:new Uint8Array,string:"/",tuples:[],stringTuples:[],path:null};for(let a=0;a<o.length;a++){const c=o[a],u=getProtocol$2(c);if(u.size===0){e.push([u.code]),r.push([u.code]);continue}if(a++,a>=o.length)throw ParseError$2("invalid address: "+t);if(u.path===!0){n=cleanPath$2(o.slice(a).join("/")),e.push([u.code,convertToBytes$2(u.code,n)]),r.push([u.code,n]);break}const l=convertToBytes$2(u.code,o[a]);e.push([u.code,l]),r.push([u.code,convertToString$2(u.code,l)])}return{string:stringTuplesToString$2(r),bytes:tuplesToBytes$2(e),tuples:e,stringTuples:r,path:n}}function bytesToMultiaddrParts(t){const e=[],r=[];let n=null,o=0;for(;o<t.length;){const a=decode$n(t,o),c=encodingLength$5(a),u=getProtocol$2(a),l=sizeForAddr$2(u,t.slice(o+c));if(l===0){e.push([a]),r.push([a]),o+=c;continue}const f=t.slice(o+c,o+c+l);if(o+=l+c,o>t.length)throw ParseError$2("Invalid address Uint8Array: "+toString$5(t,"base16"));e.push([a,f]);const p=convertToString$2(a,f);if(r.push([a,p]),u.path===!0){n=p;break}}return{bytes:Uint8Array.from(t),string:stringTuplesToString$2(r),tuples:e,stringTuples:r,path:n}}function stringTuplesToString$2(t){const e=[];return t.map(r=>{const n=getProtocol$2(r[0]);return e.push(n.name),r.length>1&&r[1]!=null&&e.push(r[1]),null}),cleanPath$2(e.join("/"))}function tuplesToBytes$2(t){return concat(t.map(e=>{const r=getProtocol$2(e[0]);let n=Uint8Array.from(encode$i(r.code));return e.length>1&&e[1]!=null&&(n=concat([n,e[1]])),n}))}function sizeForAddr$2(t,e){if(t.size>0)return t.size/8;if(t.size===0)return 0;{const r=decode$n(e instanceof Uint8Array?e:Uint8Array.from(e));return r+encodingLength$5(r)}}function cleanPath$2(t){return"/"+t.trim().split("/").filter(e=>e).join("/")}function ParseError$2(t){return new Error("Error parsing address: "+t)}const inspect$2=Symbol.for("nodejs.util.inspect.custom"),symbol$4=Symbol.for("@multiformats/js-multiaddr/multiaddr"),DNS_CODES$2=[getProtocol$2("dns").code,getProtocol$2("dns4").code,getProtocol$2("dns6").code,getProtocol$2("dnsaddr").code],bt=class bt{constructor(e){N(this,"bytes");G(this,kt,void 0);G(this,gt,void 0);G(this,tr,void 0);G(this,rr,void 0);N(this,qr,!0);e==null&&(e="");let r;if(e instanceof Uint8Array)r=bytesToMultiaddrParts(e);else if(typeof e=="string"){if(e.length>0&&e.charAt(0)!=="/")throw new Error(`multiaddr "${e}" must start with a "/"`);r=stringToMultiaddrParts(e)}else if(isMultiaddr$2(e))r=bytesToMultiaddrParts(e.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr");this.bytes=r.bytes,W(this,kt,r.string),W(this,gt,r.tuples),W(this,tr,r.stringTuples),W(this,rr,r.path)}toString(){return B(this,kt)}toJSON(){return this.toString()}toOptions(){let e,r,n,o,a="";const c=getProtocol$2("tcp"),u=getProtocol$2("udp"),l=getProtocol$2("ip4"),f=getProtocol$2("ip6"),p=getProtocol$2("dns6"),g=getProtocol$2("ip6zone");for(const[$,_]of this.stringTuples())$===g.code&&(a=`%${_??""}`),DNS_CODES$2.includes($)&&(r=c.name,o=443,n=`${_??""}${a}`,e=$===p.code?6:4),($===c.code||$===u.code)&&(r=getProtocol$2($).name,o=parseInt(_??"")),($===l.code||$===f.code)&&(r=getProtocol$2($).name,n=`${_??""}${a}`,e=$===f.code?6:4);if(e==null||r==null||n==null||o==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:e,host:n,transport:r,port:o}}protos(){return B(this,gt).map(([e])=>Object.assign({},getProtocol$2(e)))}protoCodes(){return B(this,gt).map(([e])=>e)}protoNames(){return B(this,gt).map(([e])=>getProtocol$2(e).name)}tuples(){return B(this,gt)}stringTuples(){return B(this,tr)}encapsulate(e){return e=new bt(e),new bt(this.toString()+e.toString())}decapsulate(e){const r=e.toString(),n=this.toString(),o=n.lastIndexOf(r);if(o<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${e.toString()}`);return new bt(n.slice(0,o))}decapsulateCode(e){const r=this.tuples();for(let n=r.length-1;n>=0;n--)if(r[n][0]===e)return new bt(tuplesToBytes$2(r.slice(0,n)));return this}getPeerId(){try{let e=[];this.stringTuples().forEach(([n,o])=>{n===names$2.p2p.code&&e.push([n,o]),n===names$2["p2p-circuit"].code&&(e=[])});const r=e.pop();if(r?.[1]!=null){const n=r[1];return n[0]==="Q"||n[0]==="1"?toString$5(base58btc$3.decode(`z${n}`),"base58btc"):toString$5(CID$3.parse(n).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){return B(this,rr)}equals(e){return equals$6(this.bytes,e.bytes)}async resolve(e){const r=this.protos().find(o=>o.resolvable);if(r==null)return[this];const n=resolvers$2.get(r.name);if(n==null)throw new CodeError(`no available resolver for ${r.name}`,"ERR_NO_AVAILABLE_RESOLVER");return(await n(this,e)).map(o=>new bt(o))}nodeAddress(){const e=this.toOptions();if(e.transport!=="tcp"&&e.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${e.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:e.family,address:e.host,port:e.port}}isThinWaistAddress(e){const r=(e??this).protos();return!(r.length!==2||r[0].code!==4&&r[0].code!==41||r[1].code!==6&&r[1].code!==273)}[(qr=symbol$4,inspect$2)](){return`Multiaddr(${B(this,kt)})`}};kt=new WeakMap,gt=new WeakMap,tr=new WeakMap,rr=new WeakMap;let Multiaddr=bt;const resolvers$2=new Map;function isMultiaddr$2(t){return!!t?.[symbol$4]}function multiaddr$2(t){return new Multiaddr(t)}const DNS4$1=base$5("dns4"),DNS6$1=base$5("dns6"),DNSADDR$1=base$5("dnsaddr"),DNS$1=or$5(base$5("dns"),DNSADDR$1,DNS4$1,DNS6$1),IP$1=or$5(base$5("ip4"),base$5("ip6")),TCP$1=or$5(and$1(IP$1,base$5("tcp")),and$1(DNS$1,base$5("tcp"))),UDP$1=and$1(IP$1,base$5("udp")),UTP$1=and$1(UDP$1,base$5("utp")),QUIC$1=and$1(UDP$1,base$5("quic")),WebSockets$2=or$5(and$1(TCP$1,base$5("ws")),and$1(DNS$1,base$5("ws"))),WebSocketsSecure$1=or$5(and$1(TCP$1,base$5("wss")),and$1(DNS$1,base$5("wss")),and$1(TCP$1,base$5("tls"),base$5("ws")),and$1(DNS$1,base$5("tls"),base$5("ws"))),HTTP$1=or$5(and$1(TCP$1,base$5("http")),and$1(IP$1,base$5("http")),and$1(DNS$1,base$5("http"))),HTTPS$1=or$5(and$1(TCP$1,base$5("https")),and$1(IP$1,base$5("https")),and$1(DNS$1,base$5("https"))),_WebRTC=and$1(UDP$1,base$5("webrtc"),base$5("certhash")),WebRTC=or$5(and$1(_WebRTC,base$5("p2p")),_WebRTC),WebRTCStar=or$5(and$1(WebSockets$2,base$5("p2p-webrtc-star"),base$5("p2p")),and$1(WebSocketsSecure$1,base$5("p2p-webrtc-star"),base$5("p2p")),and$1(WebSockets$2,base$5("p2p-webrtc-star")),and$1(WebSocketsSecure$1,base$5("p2p-webrtc-star"))),WebRTCDirect$1=or$5(and$1(HTTP$1,base$5("p2p-webrtc-direct"),base$5("p2p")),and$1(HTTPS$1,base$5("p2p-webrtc-direct"),base$5("p2p")),and$1(HTTP$1,base$5("p2p-webrtc-direct")),and$1(HTTPS$1,base$5("p2p-webrtc-direct"))),Reliable$1=or$5(WebSockets$2,WebSocketsSecure$1,HTTP$1,HTTPS$1,WebRTCStar,WebRTCDirect$1,TCP$1,UTP$1,QUIC$1,DNS$1,WebRTC),_P2P$1=or$5(and$1(Reliable$1,base$5("p2p")),WebRTCStar,WebRTCDirect$1,WebRTC,base$5("p2p")),_Circuit$1=or$5(and$1(_P2P$1,base$5("p2p-circuit"),_P2P$1),and$1(_P2P$1,base$5("p2p-circuit")),and$1(base$5("p2p-circuit"),_P2P$1),and$1(Reliable$1,base$5("p2p-circuit")),and$1(base$5("p2p-circuit"),Reliable$1),base$5("p2p-circuit")),CircuitRecursive$1=()=>or$5(and$1(_Circuit$1,CircuitRecursive$1),_Circuit$1),Circuit$2=CircuitRecursive$1();function makeMatchesFunction$1(t){function e(r){let n;try{n=multiaddr$2(r)}catch{return!1}const o=t(n.protoNames());return o===null?!1:o===!0||o===!1?o:o.length===0}return e}function and$1(...t){function e(r){if(r.length<t.length)return null;let n=r;return t.some(o=>(n=typeof o=="function"?o().partialMatch(r):o.partialMatch(r),Array.isArray(n)&&(r=n),n===null)),n}return{toString:function(){return"{ "+t.join(" ")+" }"},input:t,matches:makeMatchesFunction$1(e),partialMatch:e}}function or$5(...t){function e(r){let n=null;return t.some(o=>{const a=typeof o=="function"?o().partialMatch(r):o.partialMatch(r);return a!=null?(n=a,!0):!1}),n}return{toString:function(){return"{ "+t.join(" ")+" }"},input:t,matches:makeMatchesFunction$1(e),partialMatch:e}}function base$5(t){const e=t;function r(o){let a;try{a=multiaddr$2(o)}catch{return!1}const c=a.protoNames();return c.length===1&&c[0]===e}function n(o){return o.length===0?null:o[0]===e?o.slice(1):null}return{toString:function(){return e},matches:r,partialMatch:n}}function configure(){util._configure(),ReaderClass._configure(ReaderBufferClass),WriterClass._configure(WriterBufferClass)}configure();const methods=["uint64","int64","sint64","fixed64","sfixed64"];function patchReader(t){for(const e of methods){if(t[e]==null)continue;const r=t[e];t[e]=function(){return BigInt(r.call(this).toString())}}return t}function reader(t){return patchReader(new ReaderClass(t))}function patchWriter(t){for(const e of methods){if(t[e]==null)continue;const r=t[e];t[e]=function(n){return r.call(this,n.toString())}}return t}function writer(){return patchWriter(WriterClass.create())}function decodeMessage(t,e){const r=reader(t instanceof Uint8Array?t:t.subarray());return e.decode(r)}function encodeMessage(t,e){const r=writer();return e.encode(t,r,{lengthDelimited:!1}),r.finish()}var CODEC_TYPES;(function(t){t[t.VARINT=0]="VARINT",t[t.BIT64=1]="BIT64",t[t.LENGTH_DELIMITED=2]="LENGTH_DELIMITED",t[t.START_GROUP=3]="START_GROUP",t[t.END_GROUP=4]="END_GROUP",t[t.BIT32=5]="BIT32"})(CODEC_TYPES||(CODEC_TYPES={}));function createCodec(t,e,r,n){return{name:t,type:e,encode:r,decode:n}}function enumeration(t){function e(o){if(t[o.toString()]==null)throw new Error("Invalid enum value");return t[o]}const r=function(o,a){const c=e(o);a.int32(c)},n=function(o){const a=o.int32();return e(a)};return createCodec("enum",CODEC_TYPES.VARINT,r,n)}function message(t,e){return createCodec("message",CODEC_TYPES.LENGTH_DELIMITED,t,e)}var CircuitRelay;(function(t){(function(o){o.SUCCESS="SUCCESS",o.HOP_SRC_ADDR_TOO_LONG="HOP_SRC_ADDR_TOO_LONG",o.HOP_DST_ADDR_TOO_LONG="HOP_DST_ADDR_TOO_LONG",o.HOP_SRC_MULTIADDR_INVALID="HOP_SRC_MULTIADDR_INVALID",o.HOP_DST_MULTIADDR_INVALID="HOP_DST_MULTIADDR_INVALID",o.HOP_NO_CONN_TO_DST="HOP_NO_CONN_TO_DST",o.HOP_CANT_DIAL_DST="HOP_CANT_DIAL_DST",o.HOP_CANT_OPEN_DST_STREAM="HOP_CANT_OPEN_DST_STREAM",o.HOP_CANT_SPEAK_RELAY="HOP_CANT_SPEAK_RELAY",o.HOP_CANT_RELAY_TO_SELF="HOP_CANT_RELAY_TO_SELF",o.STOP_SRC_ADDR_TOO_LONG="STOP_SRC_ADDR_TOO_LONG",o.STOP_DST_ADDR_TOO_LONG="STOP_DST_ADDR_TOO_LONG",o.STOP_SRC_MULTIADDR_INVALID="STOP_SRC_MULTIADDR_INVALID",o.STOP_DST_MULTIADDR_INVALID="STOP_DST_MULTIADDR_INVALID",o.STOP_RELAY_REFUSED="STOP_RELAY_REFUSED",o.MALFORMED_MESSAGE="MALFORMED_MESSAGE"})(t.Status||(t.Status={}));let e;(function(o){o[o.SUCCESS=100]="SUCCESS",o[o.HOP_SRC_ADDR_TOO_LONG=220]="HOP_SRC_ADDR_TOO_LONG",o[o.HOP_DST_ADDR_TOO_LONG=221]="HOP_DST_ADDR_TOO_LONG",o[o.HOP_SRC_MULTIADDR_INVALID=250]="HOP_SRC_MULTIADDR_INVALID",o[o.HOP_DST_MULTIADDR_INVALID=251]="HOP_DST_MULTIADDR_INVALID",o[o.HOP_NO_CONN_TO_DST=260]="HOP_NO_CONN_TO_DST",o[o.HOP_CANT_DIAL_DST=261]="HOP_CANT_DIAL_DST",o[o.HOP_CANT_OPEN_DST_STREAM=262]="HOP_CANT_OPEN_DST_STREAM",o[o.HOP_CANT_SPEAK_RELAY=270]="HOP_CANT_SPEAK_RELAY",o[o.HOP_CANT_RELAY_TO_SELF=280]="HOP_CANT_RELAY_TO_SELF",o[o.STOP_SRC_ADDR_TOO_LONG=320]="STOP_SRC_ADDR_TOO_LONG",o[o.STOP_DST_ADDR_TOO_LONG=321]="STOP_DST_ADDR_TOO_LONG",o[o.STOP_SRC_MULTIADDR_INVALID=350]="STOP_SRC_MULTIADDR_INVALID",o[o.STOP_DST_MULTIADDR_INVALID=351]="STOP_DST_MULTIADDR_INVALID",o[o.STOP_RELAY_REFUSED=390]="STOP_RELAY_REFUSED",o[o.MALFORMED_MESSAGE=400]="MALFORMED_MESSAGE"})(e||(e={})),function(o){o.codec=()=>enumeration(e)}(t.Status||(t.Status={})),function(o){o.HOP="HOP",o.STOP="STOP",o.STATUS="STATUS",o.CAN_HOP="CAN_HOP"}(t.Type||(t.Type={}));let r;(function(o){o[o.HOP=1]="HOP",o[o.STOP=2]="STOP",o[o.STATUS=3]="STATUS",o[o.CAN_HOP=4]="CAN_HOP"})(r||(r={})),function(o){o.codec=()=>enumeration(r)}(t.Type||(t.Type={})),function(o){let a;o.codec=()=>(a==null&&(a=message((c,u,l={})=>{if(l.lengthDelimited!==!1&&u.fork(),(l.writeDefaults===!0||c.id!=null&&c.id.byteLength>0)&&(u.uint32(10),u.bytes(c.id)),c.addrs!=null)for(const f of c.addrs)u.uint32(18),u.bytes(f);l.lengthDelimited!==!1&&u.ldelim()},(c,u)=>{const l={id:new Uint8Array(0),addrs:[]},f=u==null?c.len:c.pos+u;for(;c.pos<f;){const p=c.uint32();switch(p>>>3){case 1:l.id=c.bytes();break;case 2:l.addrs.push(c.bytes());break;default:c.skipType(p&7);break}}return l})),a),o.encode=c=>encodeMessage(c,o.codec()),o.decode=c=>decodeMessage(c,o.codec())}(t.Peer||(t.Peer={}));let n;t.codec=()=>(n==null&&(n=message((o,a,c={})=>{c.lengthDelimited!==!1&&a.fork(),o.type!=null&&(a.uint32(8),t.Type.codec().encode(o.type,a)),o.srcPeer!=null&&(a.uint32(18),t.Peer.codec().encode(o.srcPeer,a,{writeDefaults:!1})),o.dstPeer!=null&&(a.uint32(26),t.Peer.codec().encode(o.dstPeer,a,{writeDefaults:!1})),o.code!=null&&(a.uint32(32),t.Status.codec().encode(o.code,a)),c.lengthDelimited!==!1&&a.ldelim()},(o,a)=>{const c={},u=a==null?o.len:o.pos+a;for(;o.pos<u;){const l=o.uint32();switch(l>>>3){case 1:c.type=t.Type.codec().decode(o);break;case 2:c.srcPeer=t.Peer.codec().decode(o,o.uint32());break;case 3:c.dstPeer=t.Peer.codec().decode(o,o.uint32());break;case 4:c.code=t.Status.codec().decode(o);break;default:o.skipType(l&7);break}}return c})),n),t.encode=o=>encodeMessage(o,t.codec()),t.decode=o=>decodeMessage(o,t.codec())})(CircuitRelay||(CircuitRelay={}));const log$J=logger$3("libp2p:stream:converter");function streamToMaConnection(t,e={}){const{stream:r,remoteAddr:n}=t,{sink:o,source:a}=r,c=async function*(){for await(const f of a)f instanceof Uint8Array?yield f:yield*f}(),u={async sink(f){e.signal!=null&&(f=abortableSource$7(f,e.signal));try{await o(f),await l()}catch(p){p.type!=="aborted"&&log$J(p)}},source:e.signal!=null?abortableSource$7(c,e.signal):c,remoteAddr:n,timeline:{open:Date.now(),close:void 0},async close(){await o(async function*(){yield new Uint8Array(0)}()),await l()}};async function l(){u.timeline.close==null&&(u.timeline.close=Date.now()),await Promise.resolve()}return u}const RELAY_CODEC="/libp2p/circuit/relay/0.1.0";function createListener$1(t){const e=new Map;async function r(a){const c=a.toString().split("/p2p-circuit").find($=>$!==""),u=multiaddr$3(c),l=u.getPeerId();if(l==null)throw new Error("Could not determine relay peer from multiaddr");const f=peerIdFromString$1(l);await t.peerStore.addressBook.add(f,[u]);const p=await t.connectionManager.openConnection(f),g=p.remoteAddr.encapsulate("/p2p-circuit");e.set(p.remotePeer.toString(),g),o.dispatchEvent(new CustomEvent("listening"))}function n(){const a=[];for(const c of e.values())a.push(c);return a}const o=Object.assign(new EventEmitter$1,{close:async()=>await Promise.resolve(),listen:r,getAddrs:n});return t.connectionManager.addEventListener("peer:disconnect",a=>{const{detail:c}=a;e.delete(c.remotePeer.toString())&&o.dispatchEvent(new CustomEvent("close"))}),o}function writeResponse(t,e){t.write({type:CircuitRelay.Type.STATUS,code:e})}function validateAddrs(t,e){try{t.dstPeer?.addrs!=null&&t.dstPeer.addrs.forEach(r=>multiaddr$3(r))}catch(r){throw writeResponse(e,t.type===CircuitRelay.Type.HOP?CircuitRelay.Status.HOP_DST_MULTIADDR_INVALID:CircuitRelay.Status.STOP_DST_MULTIADDR_INVALID),r}try{t.srcPeer?.addrs!=null&&t.srcPeer.addrs.forEach(r=>multiaddr$3(r))}catch(r){throw writeResponse(e,t.type===CircuitRelay.Type.HOP?CircuitRelay.Status.HOP_SRC_MULTIADDR_INVALID:CircuitRelay.Status.STOP_SRC_MULTIADDR_INVALID),r}}function allocUnsafe$5(t){return globalThis?.Buffer?.allocUnsafe!=null?globalThis.Buffer.allocUnsafe(t):new Uint8Array(t)}const defaultEncoder$3=t=>{const e=unsigned.encodingLength(t),r=allocUnsafe$5(e);return unsigned.encode(t,r),defaultEncoder$3.bytes=e,r};defaultEncoder$3.bytes=0;function encode$h(t){t=t??{};const e=t.lengthEncoder??defaultEncoder$3;return async function*(r){for await(const n of r){const o=e(n.byteLength);o instanceof Uint8Array?yield o:yield*o,n instanceof Uint8Array?yield n:yield*n}}}encode$h.single=(t,e)=>{e=e??{};const r=e.lengthEncoder??defaultEncoder$3;return new Uint8ArrayList(r(t.byteLength),t)};const MAX_LENGTH_LENGTH$4=8,MAX_DATA_LENGTH$4=1024*1024*4;var ReadMode$4;(function(t){t[t.LENGTH=0]="LENGTH",t[t.DATA=1]="DATA"})(ReadMode$4||(ReadMode$4={}));const defaultDecoder$4=t=>{const e=unsigned.decode(t);return defaultDecoder$4.bytes=unsigned.encodingLength(e),e};defaultDecoder$4.bytes=0;function decode$m(t){return async function*(e){const r=new Uint8ArrayList;let n=ReadMode$4.LENGTH,o=-1;const a=t?.lengthDecoder??defaultDecoder$4,c=t?.maxLengthLength??MAX_LENGTH_LENGTH$4,u=t?.maxDataLength??MAX_DATA_LENGTH$4;for await(const l of e)for(r.append(l);r.byteLength>0;){if(n===ReadMode$4.LENGTH)try{if(o=a(r),o<0)throw errcode(new Error("invalid message length"),"ERR_INVALID_MSG_LENGTH");if(o>u)throw errcode(new Error("message length too long"),"ERR_MSG_DATA_TOO_LONG");const f=a.bytes;r.consume(f),t?.onLength!=null&&t.onLength(o),n=ReadMode$4.DATA}catch(f){if(f instanceof RangeError){if(r.byteLength>c)throw errcode(new Error("message length length too long"),"ERR_MSG_LENGTH_TOO_LONG");break}throw f}if(n===ReadMode$4.DATA){if(r.byteLength<o)break;const f=r.sublist(0,o);r.consume(o),t?.onData!=null&&t.onData(f),yield f,n=ReadMode$4.LENGTH}}if(r.byteLength>0)throw errcode(new Error("unexpected end of input"),"ERR_UNEXPECTED_EOF")}}decode$m.fromReader=(t,e)=>{let r=1;const n=async function*(){for(;;)try{const{done:o,value:a}=await t.next(r);if(o===!0)return;a!=null&&(yield a)}catch(o){if(o.code==="ERR_UNDER_READ")return{done:!0,value:null};throw o}finally{r=1}}();return decode$m({...e??{},onLength:o=>{r=o}})(n)};function handshake(t){const e=pushable(),r=reader$2(t.source),n=pDefer$1();let o;const a=t.sink(async function*(){yield*e,yield*await n.promise}());return a.catch(c=>{o=c}),{reader:r,writer:e,stream:{sink:async c=>{if(o!=null){await Promise.reject(o);return}n.resolve(c),await a},source:r},rest:()=>e.end(),write:e.push,read:async()=>{const c=await r.next();if(c.value!=null)return c.value}}}const log$I=logger$3("libp2p:circuit:stream-handler");class StreamHandler{constructor(e){const{stream:r,maxLength:n=4096}=e;this.stream=r,this.shake=handshake(this.stream),this.decoder=decode$m.fromReader(this.shake.reader,{maxDataLength:n})}async read(){const e=await this.decoder.next();if(e.value!=null){const r=CircuitRelay.decode(e.value);return log$I("read message type",r.type),r}log$I("read received no value, closing stream"),this.close()}write(e){log$I("write message type %s",e.type),this.shake.write(encode$h.single(CircuitRelay.encode(e)))}rest(){return this.shake.rest(),this.shake.stream}end(e){this.write(e),this.close()}close(){log$I("closing the stream"),this.rest().sink([]).catch(e=>{log$I.error(e)})}}const log$H=logger$3("libp2p:circuit:stop");function handleStop(t){const{connection:e,request:r,streamHandler:n}=t;try{validateAddrs(r,n)}catch(o){log$H.error("invalid stop request via peer %p %o",e.remotePeer,o);return}return log$H("stop request is valid"),n.write({type:CircuitRelay.Type.STATUS,code:CircuitRelay.Status.SUCCESS}),n.rest()}async function stop(t){const{connection:e,request:r,signal:n}=t,o=await e.newStream(RELAY_CODEC,{signal:n});log$H("starting stop request to %p",e.remotePeer);const a=new StreamHandler({stream:o});a.write(r);const c=await a.read();if(c==null){a.close();return}if(c.code===CircuitRelay.Status.SUCCESS)return log$H("stop request to %p was successful",e.remotePeer),a.rest();log$H("stop request failed with code %d",c.code),a.close()}const log$G=logger$3("libp2p:circuit:hop");async function handleHop(t){const{connection:e,request:r,streamHandler:n,circuit:o,connectionManager:a}=t;if(!o.hopEnabled())return log$G("HOP request received but we are not acting as a relay"),n.end({type:CircuitRelay.Type.STATUS,code:CircuitRelay.Status.HOP_CANT_SPEAK_RELAY});try{validateAddrs(r,n)}catch(g){log$G.error("invalid hop request via peer %p %o",e.remotePeer,g);return}if(r.dstPeer==null){log$G("HOP request received but we do not receive a dstPeer");return}const c=peerIdFromBytes$1(r.dstPeer.id),u=a.getConnections(c);if(u.length===0&&!o.hopActive())return log$G("HOP request received but we are not connected to the destination peer"),n.end({type:CircuitRelay.Type.STATUS,code:CircuitRelay.Status.HOP_NO_CONN_TO_DST});if(u.length===0)return log$G("did not have connection to remote peer"),n.end({type:CircuitRelay.Type.STATUS,code:CircuitRelay.Status.HOP_NO_CONN_TO_DST});const l={type:CircuitRelay.Type.STOP,dstPeer:r.dstPeer,srcPeer:r.srcPeer};let f;try{log$G("performing STOP request");const g=await stop({connection:u[0],request:l});if(g==null)throw new Error("Could not stop");f=g}catch(g){log$G.error(g);return}log$G("hop request from %p is valid",e.remotePeer),n.write({type:CircuitRelay.Type.STATUS,code:CircuitRelay.Status.SUCCESS});const p=n.rest();return log$G("creating related connections"),await pipe$1(p,f,p)}async function hop(t){const{connection:e,request:r,signal:n}=t,o=await e.newStream(RELAY_CODEC,{signal:n}),a=new StreamHandler({stream:o});a.write(r);const c=await a.read();if(c==null)throw errcode(new Error("HOP request had no response"),codes$4.ERR_HOP_REQUEST_FAILED);if(c.code===CircuitRelay.Status.SUCCESS)return log$G("hop request was successful"),a.rest();throw log$G("hop request failed with code %d, closing stream",c.code),a.close(),errcode(new Error(`HOP request failed with code "${c.code??"unknown"}"`),codes$4.ERR_HOP_REQUEST_FAILED)}async function canHop(t){const{connection:e,signal:r}=t,n=await e.newStream(RELAY_CODEC,{signal:r}),o=new StreamHandler({stream:n});o.write({type:CircuitRelay.Type.CAN_HOP});const a=await o.read();return await o.close(),!(a==null||a.code!==CircuitRelay.Status.SUCCESS)}function handleCanHop(t){const{connection:e,streamHandler:r,circuit:n}=t,o=n.hopEnabled();log$G("can hop (%s) request from %p",o,e.remotePeer),r.end({type:CircuitRelay.Type.STATUS,code:o?CircuitRelay.Status.SUCCESS:CircuitRelay.Status.HOP_CANT_SPEAK_RELAY})}let AbortError$4=class extends Error{constructor(t,e){super(t??"The operation was aborted"),this.type="aborted",this.code=e??"ABORT_ERR"}};function abortableSource$4(t,e,r){const n=r??{},o=getIterator(t);async function*a(){let c;const u=()=>{c?.()};for(e.addEventListener("abort",u);;){let l;try{if(e.aborted){const{abortMessage:p,abortCode:g}=n;throw new AbortError$4(p,g)}const f=new Promise((p,g)=>{c=()=>{const{abortMessage:$,abortCode:_}=n;g(new AbortError$4($,_))}});l=await Promise.race([f,o.next()]),c=null}catch(f){e.removeEventListener("abort",u);const p=f.type==="aborted"&&e.aborted;if(p&&n.onAbort!=null&&await n.onAbort(t),typeof o.return=="function")try{const g=o.return();g instanceof Promise&&g.catch($=>{n.onReturnError!=null&&n.onReturnError($)})}catch(g){n.onReturnError!=null&&n.onReturnError(g)}if(p&&n.returnOnAbort===!0)return;throw f}if(l.done===!0)break;yield l.value}e.removeEventListener("abort",u)}return a()}function abortableSink$1(t,e,r){return n=>t(abortableSource$4(n,e,r))}function abortableDuplex$1(t,e,r){return{sink:abortableSink$1(t.sink,e,{...r,onAbort:void 0}),source:abortableSource$4(t.source,e,r)}}const log$F=logger$3("libp2p:circuit");let Circuit$1=class{constructor(t,e){this._init=e,this.components=t,this._started=!1}isStarted(){return this._started}async start(){this._started||(this._started=!0,await this.components.registrar.handle(RELAY_CODEC,t=>{this._onProtocol(t).catch(e=>{log$F.error(e)})},{...this._init}).catch(t=>{log$F.error(t)}))}async stop(){await this.components.registrar.unhandle(RELAY_CODEC)}hopEnabled(){return!0}hopActive(){return!0}get[symbol$7](){return!0}get[Symbol.toStringTag](){return"libp2p/circuit-relay-v1"}async _onProtocol(t){const{connection:e,stream:r}=t,n=new timeoutAbortController.TimeoutController(this._init.hop.timeout);try{eventsExports.setMaxListeners?.(1/0,n.signal)}catch{}try{const o=abortableDuplex$1(r,n.signal),a=new StreamHandler({stream:{...r,...o}}),c=await a.read();if(c==null){log$F("request was invalid, could not read from stream"),a.write({type:CircuitRelay.Type.STATUS,code:CircuitRelay.Status.MALFORMED_MESSAGE}),a.close();return}let u;switch(c.type){case CircuitRelay.Type.CAN_HOP:{log$F("received CAN_HOP request from %p",e.remotePeer),await handleCanHop({circuit:this,connection:e,streamHandler:a});break}case CircuitRelay.Type.HOP:{log$F("received HOP request from %p",e.remotePeer),await handleHop({connection:e,request:c,streamHandler:a,circuit:this,connectionManager:this.components.connectionManager});break}case CircuitRelay.Type.STOP:{log$F("received STOP request from %p",e.remotePeer),u=await handleStop({connection:e,request:c,streamHandler:a});break}default:{log$F("Request of type %s not supported",c.type),a.write({type:CircuitRelay.Type.STATUS,code:CircuitRelay.Status.MALFORMED_MESSAGE}),a.close();return}}if(u!=null){const l=e.remoteAddr.encapsulate("/p2p-circuit").encapsulate(multiaddr$3(c.dstPeer?.addrs[0])),f=multiaddr$3(c.srcPeer?.addrs[0]),p=streamToMaConnection({stream:u,remoteAddr:l,localAddr:f}),g=c.type===CircuitRelay.Type.HOP?"relay":"inbound";log$F("new %s connection %s",g,p.remoteAddr);const $=await this.components.upgrader.upgradeInbound(p);log$F("%s connection %s upgraded",g,p.remoteAddr),this.handler!=null&&this.handler($)}}finally{n.clear()}}async dial(t,e={}){const r=t.toString().split("/p2p-circuit"),n=multiaddr$3(r[0]),o=multiaddr$3(r[r.length-1]),a=n.getPeerId(),c=o.getPeerId();if(a==null||c==null){const g="Circuit relay dial failed as addresses did not have peer id";throw log$F.error(g),errcode(new Error(g),codes$4.ERR_RELAYED_DIAL)}const u=peerIdFromString$1(a),l=peerIdFromString$1(c);let f=!1,p=this.components.connectionManager.getConnections(u)[0];p==null&&(await this.components.peerStore.addressBook.add(u,[n]),p=await this.components.connectionManager.openConnection(u,e),f=!0);try{const g=await hop({...e,connection:p,request:{type:CircuitRelay.Type.HOP,srcPeer:{id:this.components.peerId.toBytes(),addrs:this.components.addressManager.getAddresses().map(b=>b.bytes)},dstPeer:{id:l.toBytes(),addrs:[multiaddr$3(o).bytes]}}}),$=n.encapsulate(`/p2p-circuit/p2p/${this.components.peerId.toString()}`),_=streamToMaConnection({stream:g,remoteAddr:t,localAddr:$});return log$F("new outbound connection %s",_.remoteAddr),await this.components.upgrader.upgradeOutbound(_)}catch(g){throw log$F.error("Circuit relay dial failed",g),f&&await p.close(),g}}createListener(t){return this.handler=t.handler,createListener$1({connectionManager:this.components.connectionManager,peerStore:this.components.peerStore})}filter(t){return t=Array.isArray(t)?t:[t],t.filter(e=>Circuit$2.matches(e))}};async function namespaceToCid(t){const e=new TextEncoder().encode(t),r=await sha256$4.digest(e);return CID$4.createV0(r)}const minute$1=60*1e3,ADVERTISE_BOOT_DELAY=15*minute$1,ADVERTISE_TTL=30*minute$1,CIRCUIT_PROTO_CODE=290,HOP_METADATA_KEY="hop_relay",HOP_METADATA_VALUE="true",RELAY_RENDEZVOUS_NS="/libp2p/relay";var Netmask_1;(function(){var t,e,r,n,o,a,c,u;u=function(l){var f,p,g,$;return f=(l&255<<24)>>>24,p=(l&255<<16)>>>16,g=(l&65280)>>>8,$=l&255,[f,p,g,$].join(".")},c=function(l){var f,p,g,$,_,b;for(f=[],g=$=0;$<=3&&l.length!==0;g=++$){if(g>0){if(l[0]!==".")throw new Error("Invalid IP");l=l.substring(1)}b=e(l),_=b[0],p=b[1],l=l.substring(p),f.push(_)}if(l.length!==0)throw new Error("Invalid IP");switch(f.length){case 1:if(f[0]>4294967295)throw new Error("Invalid IP");return f[0]>>>0;case 2:if(f[0]>255||f[1]>16777215)throw new Error("Invalid IP");return(f[0]<<24|f[1])>>>0;case 3:if(f[0]>255||f[1]>255||f[2]>65535)throw new Error("Invalid IP");return(f[0]<<24|f[1]<<16|f[2])>>>0;case 4:if(f[0]>255||f[1]>255||f[2]>255||f[3]>255)throw new Error("Invalid IP");return(f[0]<<24|f[1]<<16|f[2]<<8|f[3])>>>0;default:throw new Error("Invalid IP")}},r=function(l){return l.charCodeAt(0)},n=r("0"),a=r("a"),o=r("A"),e=function(l){var f,p,g,$,_;for($=0,f=10,p="9",g=0,l.length>1&&l[g]==="0"&&(l[g+1]==="x"||l[g+1]==="X"?(g+=2,f=16):"0"<=l[g+1]&&l[g+1]<="9"&&(g++,f=8,p="7")),_=g;g<l.length;){if("0"<=l[g]&&l[g]<=p)$=$*f+(r(l[g])-n)>>>0;else if(f===16)if("a"<=l[g]&&l[g]<="f")$=$*f+(10+r(l[g])-a)>>>0;else if("A"<=l[g]&&l[g]<="F")$=$*f+(10+r(l[g])-o)>>>0;else break;else break;if($>4294967295)throw new Error("too large");g++}if(g===_)throw new Error("empty octet");return[$,g]},t=function(){function l(f,p){var g,$,_;if(typeof f!="string")throw new Error("Missing `net' parameter");if(p||(_=f.split("/",2),f=_[0],p=_[1]),p||(p=32),typeof p=="string"&&p.indexOf(".")>-1){try{this.maskLong=c(p)}catch{throw new Error("Invalid mask: "+p)}for(g=$=32;$>=0;g=--$)if(this.maskLong===4294967295<<32-g>>>0){this.bitmask=g;break}}else if(p||p===0)this.bitmask=parseInt(p,10),this.maskLong=0,this.bitmask>0&&(this.maskLong=4294967295<<32-this.bitmask>>>0);else throw new Error("Invalid mask: empty");try{this.netLong=(c(f)&this.maskLong)>>>0}catch{throw new Error("Invalid net address: "+f)}if(!(this.bitmask<=32))throw new Error("Invalid mask for ip4: "+p);this.size=Math.pow(2,32-this.bitmask),this.base=u(this.netLong),this.mask=u(this.maskLong),this.hostmask=u(~this.maskLong),this.first=this.bitmask<=30?u(this.netLong+1):this.base,this.last=this.bitmask<=30?u(this.netLong+this.size-2):u(this.netLong+this.size-1),this.broadcast=this.bitmask<=30?u(this.netLong+this.size-1):void 0}return l.prototype.contains=function(f){return typeof f=="string"&&(f.indexOf("/")>0||f.split(".").length!==4)&&(f=new l(f)),f instanceof l?this.contains(f.base)&&this.contains(f.broadcast||f.last):(c(f)&this.maskLong)>>>0===(this.netLong&this.maskLong)>>>0},l.prototype.next=function(f){return f==null&&(f=1),new l(u(this.netLong+this.size*f),this.mask)},l.prototype.forEach=function(f){var p,g,$;for($=c(this.first),g=c(this.last),p=0;$<=g;)f(u($),$,p),p++,$++},l.prototype.toString=function(){return this.base+"/"+this.bitmask},l}(),Netmask_1=t}).call(commonjsGlobal);const word="[a-fA-F\\d:]",boundry=t=>t&&t.includeBoundaries?`(?:(?<=\\s|^)(?=${word})|(?<=${word})(?=\\s|$))`:"",v4="(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}",v6segment="[a-fA-F\\d]{1,4}",v6=`
(?:
(?:${v6segment}:){7}(?:${v6segment}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8
(?:${v6segment}:){6}(?:${v4}|:${v6segment}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4
(?:${v6segment}:){5}(?::${v4}|(?::${v6segment}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4
(?:${v6segment}:){4}(?:(?::${v6segment}){0,1}:${v4}|(?::${v6segment}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4
(?:${v6segment}:){3}(?:(?::${v6segment}){0,2}:${v4}|(?::${v6segment}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4
(?:${v6segment}:){2}(?:(?::${v6segment}){0,3}:${v4}|(?::${v6segment}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4
(?:${v6segment}:){1}(?:(?::${v6segment}){0,4}:${v4}|(?::${v6segment}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4
(?::(?:(?::${v6segment}){0,5}:${v4}|(?::${v6segment}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4
)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1
`.replace(/\s*\/\/.*$/gm,"").replace(/\n/g,"").trim(),v46Exact=new RegExp(`(?:^${v4}$)|(?:^${v6}$)`),v4exact=new RegExp(`^${v4}$`),v6exact=new RegExp(`^${v6}$`),ipRegex=t=>t&&t.exact?v46Exact:new RegExp(`(?:${boundry(t)}${v4}${boundry(t)})|(?:${boundry(t)}${v6}${boundry(t)})`,"g");ipRegex.v4=t=>t&&t.exact?v4exact:new RegExp(`${boundry(t)}${v4}${boundry(t)}`,"g"),ipRegex.v6=t=>t&&t.exact?v6exact:new RegExp(`${boundry(t)}${v6}${boundry(t)}`,"g");var ipaddr$1={exports:{}};(function(t){(function(e){const r="(0?\\d+|0x[a-f0-9]+)",n={fourOctet:new RegExp(`^${r}\\.${r}\\.${r}\\.${r}$`,"i"),threeOctet:new RegExp(`^${r}\\.${r}\\.${r}$`,"i"),twoOctet:new RegExp(`^${r}\\.${r}$`,"i"),longValue:new RegExp(`^${r}$`,"i")},o=new RegExp("^0[0-7]+$","i"),a=new RegExp("^0x[a-f0-9]+$","i"),c="%[0-9a-z]{1,}",u="(?:[0-9a-f]+::?)+",l={zoneIndex:new RegExp(c,"i"),native:new RegExp(`^(::)?(${u})?([0-9a-f]+)?(::)?(${c})?$`,"i"),deprecatedTransitional:new RegExp(`^(?:::)(${r}\\.${r}\\.${r}\\.${r}(${c})?)$`,"i"),transitional:new RegExp(`^((?:${u})|(?:::)(?:${u})?)${r}\\.${r}\\.${r}\\.${r}(${c})?$`,"i")};function f(b,D){if(b.indexOf("::")!==b.lastIndexOf("::"))return null;let v=0,S=-1,I=(b.match(l.zoneIndex)||[])[0],R,C;for(I&&(I=I.substring(1),b=b.replace(/%.+$/,""));(S=b.indexOf(":",S+1))>=0;)v++;if(b.substr(0,2)==="::"&&v--,b.substr(-2,2)==="::"&&v--,v>D)return null;for(C=D-v,R=":";C--;)R+="0:";return b=b.replace("::",R),b[0]===":"&&(b=b.slice(1)),b[b.length-1]===":"&&(b=b.slice(0,-1)),D=function(){const T=b.split(":"),P=[];for(let E=0;E<T.length;E++)P.push(parseInt(T[E],16));return P}(),{parts:D,zoneId:I}}function p(b,D,v,S){if(b.length!==D.length)throw new Error("ipaddr: cannot match CIDR for objects with different lengths");let I=0,R;for(;S>0;){if(R=v-S,R<0&&(R=0),b[I]>>R!==D[I]>>R)return!1;S-=v,I+=1}return!0}function g(b){if(a.test(b))return parseInt(b,16);if(b[0]==="0"&&!isNaN(parseInt(b[1],10))){if(o.test(b))return parseInt(b,8);throw new Error(`ipaddr: cannot parse ${b} as octal`)}return parseInt(b,10)}function $(b,D){for(;b.length<D;)b=`0${b}`;return b}const _={};_.IPv4=function(){function b(D){if(D.length!==4)throw new Error("ipaddr: ipv4 octet count should be 4");let v,S;for(v=0;v<D.length;v++)if(S=D[v],!(0<=S&&S<=255))throw new Error("ipaddr: ipv4 octet should fit in 8 bits");this.octets=D}return b.prototype.SpecialRanges={unspecified:[[new b([0,0,0,0]),8]],broadcast:[[new b([255,255,255,255]),32]],multicast:[[new b([224,0,0,0]),4]],linkLocal:[[new b([169,254,0,0]),16]],loopback:[[new b([127,0,0,0]),8]],carrierGradeNat:[[new b([100,64,0,0]),10]],private:[[new b([10,0,0,0]),8],[new b([172,16,0,0]),12],[new b([192,168,0,0]),16]],reserved:[[new b([192,0,0,0]),24],[new b([192,0,2,0]),24],[new b([192,88,99,0]),24],[new b([198,18,0,0]),15],[new b([198,51,100,0]),24],[new b([203,0,113,0]),24],[new b([240,0,0,0]),4]]},b.prototype.kind=function(){return"ipv4"},b.prototype.match=function(D,v){let S;if(v===void 0&&(S=D,D=S[0],v=S[1]),D.kind()!=="ipv4")throw new Error("ipaddr: cannot match ipv4 address with non-ipv4 one");return p(this.octets,D.octets,8,v)},b.prototype.prefixLengthFromSubnetMask=function(){let D=0,v=!1;const S={0:8,128:7,192:6,224:5,240:4,248:3,252:2,254:1,255:0};let I,R,C;for(I=3;I>=0;I-=1)if(R=this.octets[I],R in S){if(C=S[R],v&&C!==0)return null;C!==8&&(v=!0),D+=C}else return null;return 32-D},b.prototype.range=function(){return _.subnetMatch(this,this.SpecialRanges)},b.prototype.toByteArray=function(){return this.octets.slice(0)},b.prototype.toIPv4MappedAddress=function(){return _.IPv6.parse(`::ffff:${this.toString()}`)},b.prototype.toNormalizedString=function(){return this.toString()},b.prototype.toString=function(){return this.octets.join(".")},b}(),_.IPv4.broadcastAddressFromCIDR=function(b){try{const D=this.parseCIDR(b),v=D[0].toByteArray(),S=this.subnetMaskFromPrefixLength(D[1]).toByteArray(),I=[];let R=0;for(;R<4;)I.push(parseInt(v[R],10)|parseInt(S[R],10)^255),R++;return new this(I)}catch{throw new Error("ipaddr: the address does not have IPv4 CIDR format")}},_.IPv4.isIPv4=function(b){return this.parser(b)!==null},_.IPv4.isValid=function(b){try{return new this(this.parser(b)),!0}catch{return!1}},_.IPv4.isValidFourPartDecimal=function(b){return!!(_.IPv4.isValid(b)&&b.match(/^(0|[1-9]\d*)(\.(0|[1-9]\d*)){3}$/))},_.IPv4.networkAddressFromCIDR=function(b){let D,v,S,I,R;try{for(D=this.parseCIDR(b),S=D[0].toByteArray(),R=this.subnetMaskFromPrefixLength(D[1]).toByteArray(),I=[],v=0;v<4;)I.push(parseInt(S[v],10)&parseInt(R[v],10)),v++;return new this(I)}catch{throw new Error("ipaddr: the address does not have IPv4 CIDR format")}},_.IPv4.parse=function(b){const D=this.parser(b);if(D===null)throw new Error("ipaddr: string is not formatted like an IPv4 Address");return new this(D)},_.IPv4.parseCIDR=function(b){let D;if(D=b.match(/^(.+)\/(\d+)$/)){const v=parseInt(D[2]);if(v>=0&&v<=32){const S=[this.parse(D[1]),v];return Object.defineProperty(S,"toString",{value:function(){return this.join("/")}}),S}}throw new Error("ipaddr: string is not formatted like an IPv4 CIDR range")},_.IPv4.parser=function(b){let D,v,S;if(D=b.match(n.fourOctet))return function(){const I=D.slice(1,6),R=[];for(let C=0;C<I.length;C++)v=I[C],R.push(g(v));return R}();if(D=b.match(n.longValue)){if(S=g(D[1]),S>4294967295||S<0)throw new Error("ipaddr: address outside defined range");return function(){const I=[];let R;for(R=0;R<=24;R+=8)I.push(S>>R&255);return I}().reverse()}else return(D=b.match(n.twoOctet))?function(){const I=D.slice(1,4),R=[];if(S=g(I[1]),S>16777215||S<0)throw new Error("ipaddr: address outside defined range");return R.push(g(I[0])),R.push(S>>16&255),R.push(S>>8&255),R.push(S&255),R}():(D=b.match(n.threeOctet))?function(){const I=D.slice(1,5),R=[];if(S=g(I[2]),S>65535||S<0)throw new Error("ipaddr: address outside defined range");return R.push(g(I[0])),R.push(g(I[1])),R.push(S>>8&255),R.push(S&255),R}():null},_.IPv4.subnetMaskFromPrefixLength=function(b){if(b=parseInt(b),b<0||b>32)throw new Error("ipaddr: invalid IPv4 prefix length");const D=[0,0,0,0];let v=0;const S=Math.floor(b/8);for(;v<S;)D[v]=255,v++;return S<4&&(D[S]=Math.pow(2,b%8)-1<<8-b%8),new this(D)},_.IPv6=function(){function b(D,v){let S,I;if(D.length===16)for(this.parts=[],S=0;S<=14;S+=2)this.parts.push(D[S]<<8|D[S+1]);else if(D.length===8)this.parts=D;else throw new Error("ipaddr: ipv6 part count should be 8 or 16");for(S=0;S<this.parts.length;S++)if(I=this.parts[S],!(0<=I&&I<=65535))throw new Error("ipaddr: ipv6 part should fit in 16 bits");v&&(this.zoneId=v)}return b.prototype.SpecialRanges={unspecified:[new b([0,0,0,0,0,0,0,0]),128],linkLocal:[new b([65152,0,0,0,0,0,0,0]),10],multicast:[new b([65280,0,0,0,0,0,0,0]),8],loopback:[new b([0,0,0,0,0,0,0,1]),128],uniqueLocal:[new b([64512,0,0,0,0,0,0,0]),7],ipv4Mapped:[new b([0,0,0,0,0,65535,0,0]),96],rfc6145:[new b([0,0,0,0,65535,0,0,0]),96],rfc6052:[new b([100,65435,0,0,0,0,0,0]),96],"6to4":[new b([8194,0,0,0,0,0,0,0]),16],teredo:[new b([8193,0,0,0,0,0,0,0]),32],reserved:[[new b([8193,3512,0,0,0,0,0,0]),32]],benchmarking:[new b([8193,2,0,0,0,0,0,0]),48],amt:[new b([8193,3,0,0,0,0,0,0]),32],as112v6:[new b([8193,4,274,0,0,0,0,0]),48],deprecated:[new b([8193,16,0,0,0,0,0,0]),28],orchid2:[new b([8193,32,0,0,0,0,0,0]),28]},b.prototype.isIPv4MappedAddress=function(){return this.range()==="ipv4Mapped"},b.prototype.kind=function(){return"ipv6"},b.prototype.match=function(D,v){let S;if(v===void 0&&(S=D,D=S[0],v=S[1]),D.kind()!=="ipv6")throw new Error("ipaddr: cannot match ipv6 address with non-ipv6 one");return p(this.parts,D.parts,16,v)},b.prototype.prefixLengthFromSubnetMask=function(){let D=0,v=!1;const S={0:16,32768:15,49152:14,57344:13,61440:12,63488:11,64512:10,65024:9,65280:8,65408:7,65472:6,65504:5,65520:4,65528:3,65532:2,65534:1,65535:0};let I,R;for(let C=7;C>=0;C-=1)if(I=this.parts[C],I in S){if(R=S[I],v&&R!==0)return null;R!==16&&(v=!0),D+=R}else return null;return 128-D},b.prototype.range=function(){return _.subnetMatch(this,this.SpecialRanges)},b.prototype.toByteArray=function(){let D;const v=[],S=this.parts;for(let I=0;I<S.length;I++)D=S[I],v.push(D>>8),v.push(D&255);return v},b.prototype.toFixedLengthString=function(){const D=function(){const S=[];for(let I=0;I<this.parts.length;I++)S.push($(this.parts[I].toString(16),4));return S}.call(this).join(":");let v="";return this.zoneId&&(v=`%${this.zoneId}`),D+v},b.prototype.toIPv4Address=function(){if(!this.isIPv4MappedAddress())throw new Error("ipaddr: trying to convert a generic ipv6 address to ipv4");const D=this.parts.slice(-2),v=D[0],S=D[1];return new _.IPv4([v>>8,v&255,S>>8,S&255])},b.prototype.toNormalizedString=function(){const D=function(){const S=[];for(let I=0;I<this.parts.length;I++)S.push(this.parts[I].toString(16));return S}.call(this).join(":");let v="";return this.zoneId&&(v=`%${this.zoneId}`),D+v},b.prototype.toRFC5952String=function(){const D=/((^|:)(0(:|$)){2,})/g,v=this.toNormalizedString();let S=0,I=-1,R;for(;R=D.exec(v);)R[0].length>I&&(S=R.index,I=R[0].length);return I<0?v:`${v.substring(0,S)}::${v.substring(S+I)}`},b.prototype.toString=function(){return this.toRFC5952String()},b}(),_.IPv6.broadcastAddressFromCIDR=function(b){try{const D=this.parseCIDR(b),v=D[0].toByteArray(),S=this.subnetMaskFromPrefixLength(D[1]).toByteArray(),I=[];let R=0;for(;R<16;)I.push(parseInt(v[R],10)|parseInt(S[R],10)^255),R++;return new this(I)}catch(D){throw new Error(`ipaddr: the address does not have IPv6 CIDR format (${D})`)}},_.IPv6.isIPv6=function(b){return this.parser(b)!==null},_.IPv6.isValid=function(b){if(typeof b=="string"&&b.indexOf(":")===-1)return!1;try{const D=this.parser(b);return new this(D.parts,D.zoneId),!0}catch{return!1}},_.IPv6.networkAddressFromCIDR=function(b){let D,v,S,I,R;try{for(D=this.parseCIDR(b),S=D[0].toByteArray(),R=this.subnetMaskFromPrefixLength(D[1]).toByteArray(),I=[],v=0;v<16;)I.push(parseInt(S[v],10)&parseInt(R[v],10)),v++;return new this(I)}catch(C){throw new Error(`ipaddr: the address does not have IPv6 CIDR format (${C})`)}},_.IPv6.parse=function(b){const D=this.parser(b);if(D.parts===null)throw new Error("ipaddr: string is not formatted like an IPv6 Address");return new this(D.parts,D.zoneId)},_.IPv6.parseCIDR=function(b){let D,v,S;if((v=b.match(/^(.+)\/(\d+)$/))&&(D=parseInt(v[2]),D>=0&&D<=128))return S=[this.parse(v[1]),D],Object.defineProperty(S,"toString",{value:function(){return this.join("/")}}),S;throw new Error("ipaddr: string is not formatted like an IPv6 CIDR range")},_.IPv6.parser=function(b){let D,v,S,I,R,C;if(S=b.match(l.deprecatedTransitional))return this.parser(`::ffff:${S[1]}`);if(l.native.test(b))return f(b,8);if((S=b.match(l.transitional))&&(C=S[6]||"",D=f(S[1].slice(0,-1)+C,6),D.parts)){for(R=[parseInt(S[2]),parseInt(S[3]),parseInt(S[4]),parseInt(S[5])],v=0;v<R.length;v++)if(I=R[v],!(0<=I&&I<=255))return null;return D.parts.push(R[0]<<8|R[1]),D.parts.push(R[2]<<8|R[3]),{parts:D.parts,zoneId:D.zoneId}}return null},_.IPv6.subnetMaskFromPrefixLength=function(b){if(b=parseInt(b),b<0||b>128)throw new Error("ipaddr: invalid IPv6 prefix length");const D=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];let v=0;const S=Math.floor(b/8);for(;v<S;)D[v]=255,v++;return S<16&&(D[S]=Math.pow(2,b%8)-1<<8-b%8),new this(D)},_.fromByteArray=function(b){const D=b.length;if(D===4)return new _.IPv4(b);if(D===16)return new _.IPv6(b);throw new Error("ipaddr: the binary input is neither an IPv6 nor IPv4 address")},_.isValid=function(b){return _.IPv6.isValid(b)||_.IPv4.isValid(b)},_.parse=function(b){if(_.IPv6.isValid(b))return _.IPv6.parse(b);if(_.IPv4.isValid(b))return _.IPv4.parse(b);throw new Error("ipaddr: the address has neither IPv6 nor IPv4 format")},_.parseCIDR=function(b){try{return _.IPv6.parseCIDR(b)}catch{try{return _.IPv4.parseCIDR(b)}catch{throw new Error("ipaddr: the address has neither IPv6 nor IPv4 CIDR format")}}},_.process=function(b){const D=this.parse(b);return D.kind()==="ipv6"&&D.isIPv4MappedAddress()?D.toIPv4Address():D},_.subnetMatch=function(b,D,v){let S,I,R,C;v==null&&(v="unicast");for(I in D)if(Object.prototype.hasOwnProperty.call(D,I)){for(R=D[I],R[0]&&!(R[0]instanceof Array)&&(R=[R]),S=0;S<R.length;S++)if(C=R[S],b.kind()===C[0].kind()&&b.match.apply(b,C))return I}return v},t.exports?t.exports=_:e.ipaddr=_})(commonjsGlobal)})(ipaddr$1);var ipaddrExports=ipaddr$1.exports;const ipaddr=getDefaultExportFromCjs(ipaddrExports),{isValid:is_valid,parse:parse$1}=ipaddr,PRIVATE_IP_RANGES=["0.0.0.0/8","10.0.0.0/8","100.64.0.0/10","127.0.0.0/8","169.254.0.0/16","172.16.0.0/12","192.0.0.0/24","192.0.0.0/29","192.0.0.8/32","192.0.0.9/32","192.0.0.10/32","192.0.0.170/32","192.0.0.171/32","192.0.2.0/24","192.31.196.0/24","192.52.193.0/24","192.88.99.0/24","192.168.0.0/16","192.175.48.0/24","198.18.0.0/15","198.51.100.0/24","203.0.113.0/24","240.0.0.0/4","255.255.255.255/32"],NETMASK_RANGES=PRIVATE_IP_RANGES.map(t=>new Netmask_1(t));function ipv4_check(t){for(let e of NETMASK_RANGES)if(e.contains(t))return!0;return!1}function ipv6_check(t){return/^::$/.test(t)||/^::1$/.test(t)||/^::f{4}:([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/.test(t)||/^::f{4}:0.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/.test(t)||/^64:ff9b::([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/.test(t)||/^100::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(t)||/^2001::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(t)||/^2001:2[0-9a-fA-F]:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(t)||/^2001:db8:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(t)||/^2002:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(t)||/^f[c-d]([0-9a-fA-F]{2,2}):/i.test(t)||/^fe[8-9a-bA-B][0-9a-fA-F]:/i.test(t)||/^ff([0-9a-fA-F]{2,2}):/i.test(t)}const is_ip_private=t=>{if(is_valid(t)){const e=parse$1(t);if(e.kind()==="ipv4")return ipv4_check(e.toNormalizedString());if(e.kind()==="ipv6")return ipv6_check(t)}else if(isIP(t)&&ipRegex.v6().test(t))return ipv6_check(t)};function isPrivate(t){try{const{address:e}=t.nodeAddress();return!!is_ip_private(e)}catch{return!0}}function publicAddressesFirst(t,e){const r=isPrivate(t.multiaddr),n=isPrivate(e.multiaddr);return r&&!n?1:!r&&n||t.isCertified&&!e.isCertified?-1:!t.isCertified&&e.isCertified?1:0}const log$E=logger$3("libp2p:auto-relay"),noop=()=>{};class AutoRelay{constructor(e,r){this.components=e,this.addressSorter=r.addressSorter??publicAddressesFirst,this.maxListeners=r.maxListeners??1,this.listenRelays=new Set,this.onError=r.onError??noop,this._onProtocolChange=this._onProtocolChange.bind(this),this._onPeerDisconnected=this._onPeerDisconnected.bind(this),this.components.peerStore.addEventListener("change:protocols",n=>{this._onProtocolChange(n).catch(o=>{log$E.error(o)})}),this.components.connectionManager.addEventListener("peer:disconnect",this._onPeerDisconnected)}async _onProtocolChange(e){const{peerId:r,protocols:n}=e.detail,o=r.toString();if(n.find(a=>a===RELAY_CODEC)==null){this.listenRelays.has(o)&&await this._removeListenRelay(o);return}if(!this.listenRelays.has(o))try{const a=this.components.connectionManager.getConnections(r);if(a.length===0)return;const c=a[0];if(c.remoteAddr.protoCodes().includes(CIRCUIT_PROTO_CODE)){log$E(`relayed connection to ${o} will not be used to hop on`);return}await canHop({connection:c})&&(await this.components.peerStore.metadataBook.setValue(r,HOP_METADATA_KEY,fromString$y(HOP_METADATA_VALUE)),await this._addListenRelay(c,o))}catch(a){this.onError(a)}}_onPeerDisconnected(e){const r=e.detail.remotePeer.toString();this.listenRelays.has(r)&&this._removeListenRelay(r).catch(n=>{log$E.error(n)})}async _addListenRelay(e,r){try{if(this.listenRelays.size>=this.maxListeners)return;const n=await pipe$1(await this.components.peerStore.addressBook.get(e.remotePeer),o=>sort(o,this.addressSorter),async o=>await all$1(o));(await Promise.all(n.map(async o=>{try{let a=o.multiaddr;return a.getPeerId()==null&&(a=a.encapsulate(`/p2p/${e.remotePeer.toString()}`)),a=a.encapsulate("/p2p-circuit"),await this.components.transportManager.listen([a]),!0}catch(a){log$E.error("error listening on circuit address",a),this.onError(a)}return!1}))).includes(!0)&&this.listenRelays.add(r)}catch(n){this.onError(n),this.listenRelays.delete(r)}}async _removeListenRelay(e){this.listenRelays.delete(e)&&await this._listenOnAvailableHopRelays([e])}async _listenOnAvailableHopRelays(e=[]){if(this.listenRelays.size>=this.maxListeners)return;const r=[],n=await this.components.peerStore.all();for(const{id:o,metadata:a}of n){const c=o.toString();if(this.listenRelays.has(c)||e.includes(c))continue;const u=a.get(HOP_METADATA_KEY);if(u==null||toString$D(u)!==HOP_METADATA_VALUE)continue;const l=this.components.connectionManager.getConnections(o);if(l.length===0){r.push(o);continue}if(await this._addListenRelay(l[0],c),this.listenRelays.size>=this.maxListeners)return}for(const o of r)if(await this._tryToListenOnRelay(o),this.listenRelays.size>=this.maxListeners)return;try{const o=await namespaceToCid(RELAY_RENDEZVOUS_NS);for await(const a of this.components.contentRouting.findProviders(o)){if(a.multiaddrs.length===0)continue;const c=a.id;if(!c.equals(this.components.peerId)&&(await this.components.peerStore.addressBook.add(c,a.multiaddrs),await this._tryToListenOnRelay(c),this.listenRelays.size>=this.maxListeners))return}}catch(o){this.onError(o)}}async _tryToListenOnRelay(e){try{const r=await this.components.connectionManager.openConnection(e);await this._addListenRelay(r,e.toString())}catch(r){log$E.error("Could not use %p as relay",e,r),this.onError(r,`could not connect and listen on known hop relay ${e.toString()}`)}}}const log$D=logger$3("libp2p:relay");class Relay{constructor(e,r){this.components=e,this.autoRelay=r.autoRelay?.enabled!==!1?new AutoRelay(e,{addressSorter:r.addressSorter,...r.autoRelay}):void 0,this.started=!1,this.init=r,this._advertiseService=this._advertiseService.bind(this)}isStarted(){return this.started}async start(){this.init.hop.enabled!==!1&&this.init.advertise.enabled!==!1&&(this.timeout=src$6.setDelayedInterval(this._advertiseService,this.init.advertise.ttl,this.init.advertise.bootDelay)),this.started=!0}async stop(){this.timeout!=null&&src$6.clearDelayedInterval(this.timeout),this.started=!1}async _advertiseService(){try{const e=await namespaceToCid(RELAY_RENDEZVOUS_NS);await this.components.contentRouting.provide(e)}catch(e){e.code===codes$4.ERR_NO_ROUTERS_AVAILABLE?(log$D.error("a content router, such as a DHT, must be provided in order to advertise the relay service",e),await this.stop()):log$D.error(e)}}}function isHighSurrogate$1(t){return t>=55296&&t<=56319}function isLowSurrogate$1(t){return t>=56320&&t<=57343}var truncate$2=function t(e,r,n){if(typeof r!="string")throw new Error("Input must be string");for(var o=r.length,a=0,c,u,l=0;l<o;l+=1){if(c=r.charCodeAt(l),u=r[l],isHighSurrogate$1(c)&&isLowSurrogate$1(r.charCodeAt(l+1))&&(l+=1,u+=r[l]),a+=e(u),a===n)return r.slice(0,l+1);if(a>n)return r.slice(0,l-u.length+1)}return r};function isHighSurrogate(t){return t>=55296&&t<=56319}function isLowSurrogate(t){return t>=56320&&t<=57343}var browser$3=function t(e){if(typeof e!="string")throw new Error("Input must be string");for(var r=e.length,n=0,o=null,a=null,c=0;c<r;c++)o=e.charCodeAt(c),isLowSurrogate(o)?a!=null&&isHighSurrogate(a)?n+=1:n+=3:o<=127?n+=1:o>=128&&o<=2047?n+=2:o>=2048&&o<=65535&&(n+=3),a=o;return n},truncate$1=truncate$2,getLength=browser$3,browser$2=truncate$1.bind(null,getLength),truncate=browser$2,illegalRe=/[\/\?<>\\:\*\|"]/g,controlRe=/[\x00-\x1f\x80-\x9f]/g,reservedRe=/^\.+$/,windowsReservedRe=/^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\..*)?$/i,windowsTrailingRe=/[\. ]+$/;function sanitize(t,e){if(typeof t!="string")throw new Error("Input must be string");var r=t.replace(illegalRe,e).replace(controlRe,e).replace(reservedRe,e).replace(windowsReservedRe,e).replace(windowsTrailingRe,e);return truncate(r,255)}var sanitizeFilename=function(t,e){var r=e&&e.replacement||"",n=sanitize(t,r);return r===""?n:sanitize(n,"")};const sanitize$1=getDefaultExportFromCjs(sanitizeFilename);var forge$5=forge$7,asn1$2=forge$5.asn1,p7v=forge$5.pkcs7asn1=forge$5.pkcs7asn1||{};forge$5.pkcs7=forge$5.pkcs7||{},forge$5.pkcs7.asn1=p7v;var contentInfoValidator={name:"ContentInfo",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.SEQUENCE,constructed:!0,value:[{name:"ContentInfo.ContentType",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.OID,constructed:!1,capture:"contentType"},{name:"ContentInfo.content",tagClass:asn1$2.Class.CONTEXT_SPECIFIC,type:0,constructed:!0,optional:!0,captureAsn1:"content"}]};p7v.contentInfoValidator=contentInfoValidator;var encryptedContentInfoValidator={name:"EncryptedContentInfo",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.SEQUENCE,constructed:!0,value:[{name:"EncryptedContentInfo.contentType",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.OID,constructed:!1,capture:"contentType"},{name:"EncryptedContentInfo.contentEncryptionAlgorithm",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.SEQUENCE,constructed:!0,value:[{name:"EncryptedContentInfo.contentEncryptionAlgorithm.algorithm",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.OID,constructed:!1,capture:"encAlgorithm"},{name:"EncryptedContentInfo.contentEncryptionAlgorithm.parameter",tagClass:asn1$2.Class.UNIVERSAL,captureAsn1:"encParameter"}]},{name:"EncryptedContentInfo.encryptedContent",tagClass:asn1$2.Class.CONTEXT_SPECIFIC,type:0,capture:"encryptedContent",captureAsn1:"encryptedContentAsn1"}]};p7v.envelopedDataValidator={name:"EnvelopedData",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.SEQUENCE,constructed:!0,value:[{name:"EnvelopedData.Version",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.INTEGER,constructed:!1,capture:"version"},{name:"EnvelopedData.RecipientInfos",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.SET,constructed:!0,captureAsn1:"recipientInfos"}].concat(encryptedContentInfoValidator)},p7v.encryptedDataValidator={name:"EncryptedData",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.SEQUENCE,constructed:!0,value:[{name:"EncryptedData.Version",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.INTEGER,constructed:!1,capture:"version"}].concat(encryptedContentInfoValidator)};var signerValidator={name:"SignerInfo",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.SEQUENCE,constructed:!0,value:[{name:"SignerInfo.version",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.INTEGER,constructed:!1},{name:"SignerInfo.issuerAndSerialNumber",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.SEQUENCE,constructed:!0,value:[{name:"SignerInfo.issuerAndSerialNumber.issuer",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.SEQUENCE,constructed:!0,captureAsn1:"issuer"},{name:"SignerInfo.issuerAndSerialNumber.serialNumber",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.INTEGER,constructed:!1,capture:"serial"}]},{name:"SignerInfo.digestAlgorithm",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.SEQUENCE,constructed:!0,value:[{name:"SignerInfo.digestAlgorithm.algorithm",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.OID,constructed:!1,capture:"digestAlgorithm"},{name:"SignerInfo.digestAlgorithm.parameter",tagClass:asn1$2.Class.UNIVERSAL,constructed:!1,captureAsn1:"digestParameter",optional:!0}]},{name:"SignerInfo.authenticatedAttributes",tagClass:asn1$2.Class.CONTEXT_SPECIFIC,type:0,constructed:!0,optional:!0,capture:"authenticatedAttributes"},{name:"SignerInfo.digestEncryptionAlgorithm",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.SEQUENCE,constructed:!0,capture:"signatureAlgorithm"},{name:"SignerInfo.encryptedDigest",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.OCTETSTRING,constructed:!1,capture:"signature"},{name:"SignerInfo.unauthenticatedAttributes",tagClass:asn1$2.Class.CONTEXT_SPECIFIC,type:1,constructed:!0,optional:!0,capture:"unauthenticatedAttributes"}]};p7v.signedDataValidator={name:"SignedData",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.SEQUENCE,constructed:!0,value:[{name:"SignedData.Version",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.INTEGER,constructed:!1,capture:"version"},{name:"SignedData.DigestAlgorithms",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.SET,constructed:!0,captureAsn1:"digestAlgorithms"},contentInfoValidator,{name:"SignedData.Certificates",tagClass:asn1$2.Class.CONTEXT_SPECIFIC,type:0,optional:!0,captureAsn1:"certificates"},{name:"SignedData.CertificateRevocationLists",tagClass:asn1$2.Class.CONTEXT_SPECIFIC,type:1,optional:!0,captureAsn1:"crls"},{name:"SignedData.SignerInfos",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.SET,capture:"signerInfos",optional:!0,value:[signerValidator]}]},p7v.recipientInfoValidator={name:"RecipientInfo",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.SEQUENCE,constructed:!0,value:[{name:"RecipientInfo.version",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.INTEGER,constructed:!1,capture:"version"},{name:"RecipientInfo.issuerAndSerial",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.SEQUENCE,constructed:!0,value:[{name:"RecipientInfo.issuerAndSerial.issuer",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.SEQUENCE,constructed:!0,captureAsn1:"issuer"},{name:"RecipientInfo.issuerAndSerial.serialNumber",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.INTEGER,constructed:!1,capture:"serial"}]},{name:"RecipientInfo.keyEncryptionAlgorithm",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.SEQUENCE,constructed:!0,value:[{name:"RecipientInfo.keyEncryptionAlgorithm.algorithm",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.OID,constructed:!1,capture:"encAlgorithm"},{name:"RecipientInfo.keyEncryptionAlgorithm.parameter",tagClass:asn1$2.Class.UNIVERSAL,constructed:!1,captureAsn1:"encParameter",optional:!0}]},{name:"RecipientInfo.encryptedKey",tagClass:asn1$2.Class.UNIVERSAL,type:asn1$2.Type.OCTETSTRING,constructed:!1,capture:"encKey"}]};var forge$4=forge$7;forge$4.mgf=forge$4.mgf||{};var mgf1=forge$4.mgf.mgf1=forge$4.mgf1=forge$4.mgf1||{};mgf1.create=function(t){var e={generate:function(r,n){for(var o=new forge$4.util.ByteBuffer,a=Math.ceil(n/t.digestLength),c=0;c<a;c++){var u=new forge$4.util.ByteBuffer;u.putInt32(c),t.start(),t.update(r+u.getBytes()),o.putBuffer(t.digest())}return o.truncate(o.length()-n),o.getBytes()}};return e};var forge$3=forge$7;forge$3.mgf=forge$3.mgf||{},forge$3.mgf.mgf1=forge$3.mgf1;var forge$2=forge$7,pss=forge$2.pss=forge$2.pss||{};pss.create=function(t){arguments.length===3&&(t={md:arguments[0],mgf:arguments[1],saltLength:arguments[2]});var e=t.md,r=t.mgf,n=e.digestLength,o=t.salt||null;typeof o=="string"&&(o=forge$2.util.createBuffer(o));var a;if("saltLength"in t)a=t.saltLength;else if(o!==null)a=o.length();else throw new Error("Salt length not specified or specific salt not given.");if(o!==null&&o.length()!==a)throw new Error("Given salt length does not match length of given salt.");var c=t.prng||forge$2.random,u={};return u.encode=function(l,f){var p,g=f-1,$=Math.ceil(g/8),_=l.digest().getBytes();if($<n+a+2)throw new Error("Message is too long to encrypt.");var b;o===null?b=c.getBytesSync(a):b=o.bytes();var D=new forge$2.util.ByteBuffer;D.fillWithByte(0,8),D.putBytes(_),D.putBytes(b),e.start(),e.update(D.getBytes());var v=e.digest().getBytes(),S=new forge$2.util.ByteBuffer;S.fillWithByte(0,$-a-n-2),S.putByte(1),S.putBytes(b);var I=S.getBytes(),R=$-n-1,C=r.generate(v,R),T="";for(p=0;p<R;p++)T+=String.fromCharCode(I.charCodeAt(p)^C.charCodeAt(p));var P=65280>>8*$-g&255;return T=String.fromCharCode(T.charCodeAt(0)&~P)+T.substr(1),T+v+"\xBC"},u.verify=function(l,f,p){var g,$=p-1,_=Math.ceil($/8);if(f=f.substr(-_),_<n+a+2)throw new Error("Inconsistent parameters to PSS signature verification.");if(f.charCodeAt(_-1)!==188)throw new Error("Encoded message does not end in 0xBC.");var b=_-n-1,D=f.substr(0,b),v=f.substr(b,n),S=65280>>8*_-$&255;if(D.charCodeAt(0)&S)throw new Error("Bits beyond keysize not zero as expected.");var I=r.generate(v,b),R="";for(g=0;g<b;g++)R+=String.fromCharCode(D.charCodeAt(g)^I.charCodeAt(g));R=String.fromCharCode(R.charCodeAt(0)&~S)+R.substr(1);var C=_-n-a-2;for(g=0;g<C;g++)if(R.charCodeAt(g)!==0)throw new Error("Leftmost octets not zero as expected");if(R.charCodeAt(C)!==1)throw new Error("Inconsistent PSS signature, 0x01 marker not found");var T=R.substr(-a),P=new forge$2.util.ByteBuffer;P.fillWithByte(0,8),P.putBytes(l),P.putBytes(T),e.start(),e.update(P.getBytes());var E=e.digest().getBytes();return v===E},u};var forge$1=forge$7,asn1$1=forge$1.asn1,pki$1=forge$1.pki=forge$1.pki||{},oids=pki$1.oids,_shortNames={};_shortNames.CN=oids.commonName,_shortNames.commonName="CN",_shortNames.C=oids.countryName,_shortNames.countryName="C",_shortNames.L=oids.localityName,_shortNames.localityName="L",_shortNames.ST=oids.stateOrProvinceName,_shortNames.stateOrProvinceName="ST",_shortNames.O=oids.organizationName,_shortNames.organizationName="O",_shortNames.OU=oids.organizationalUnitName,_shortNames.organizationalUnitName="OU",_shortNames.E=oids.emailAddress,_shortNames.emailAddress="E";var publicKeyValidator=forge$1.pki.rsa.publicKeyValidator,x509CertificateValidator={name:"Certificate",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,value:[{name:"Certificate.TBSCertificate",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,captureAsn1:"tbsCertificate",value:[{name:"Certificate.TBSCertificate.version",tagClass:asn1$1.Class.CONTEXT_SPECIFIC,type:0,constructed:!0,optional:!0,value:[{name:"Certificate.TBSCertificate.version.integer",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.INTEGER,constructed:!1,capture:"certVersion"}]},{name:"Certificate.TBSCertificate.serialNumber",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.INTEGER,constructed:!1,capture:"certSerialNumber"},{name:"Certificate.TBSCertificate.signature",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,value:[{name:"Certificate.TBSCertificate.signature.algorithm",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.OID,constructed:!1,capture:"certinfoSignatureOid"},{name:"Certificate.TBSCertificate.signature.parameters",tagClass:asn1$1.Class.UNIVERSAL,optional:!0,captureAsn1:"certinfoSignatureParams"}]},{name:"Certificate.TBSCertificate.issuer",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,captureAsn1:"certIssuer"},{name:"Certificate.TBSCertificate.validity",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,value:[{name:"Certificate.TBSCertificate.validity.notBefore (utc)",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.UTCTIME,constructed:!1,optional:!0,capture:"certValidity1UTCTime"},{name:"Certificate.TBSCertificate.validity.notBefore (generalized)",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.GENERALIZEDTIME,constructed:!1,optional:!0,capture:"certValidity2GeneralizedTime"},{name:"Certificate.TBSCertificate.validity.notAfter (utc)",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.UTCTIME,constructed:!1,optional:!0,capture:"certValidity3UTCTime"},{name:"Certificate.TBSCertificate.validity.notAfter (generalized)",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.GENERALIZEDTIME,constructed:!1,optional:!0,capture:"certValidity4GeneralizedTime"}]},{name:"Certificate.TBSCertificate.subject",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,captureAsn1:"certSubject"},publicKeyValidator,{name:"Certificate.TBSCertificate.issuerUniqueID",tagClass:asn1$1.Class.CONTEXT_SPECIFIC,type:1,constructed:!0,optional:!0,value:[{name:"Certificate.TBSCertificate.issuerUniqueID.id",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.BITSTRING,constructed:!1,captureBitStringValue:"certIssuerUniqueId"}]},{name:"Certificate.TBSCertificate.subjectUniqueID",tagClass:asn1$1.Class.CONTEXT_SPECIFIC,type:2,constructed:!0,optional:!0,value:[{name:"Certificate.TBSCertificate.subjectUniqueID.id",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.BITSTRING,constructed:!1,captureBitStringValue:"certSubjectUniqueId"}]},{name:"Certificate.TBSCertificate.extensions",tagClass:asn1$1.Class.CONTEXT_SPECIFIC,type:3,constructed:!0,captureAsn1:"certExtensions",optional:!0}]},{name:"Certificate.signatureAlgorithm",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,value:[{name:"Certificate.signatureAlgorithm.algorithm",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.OID,constructed:!1,capture:"certSignatureOid"},{name:"Certificate.TBSCertificate.signature.parameters",tagClass:asn1$1.Class.UNIVERSAL,optional:!0,captureAsn1:"certSignatureParams"}]},{name:"Certificate.signatureValue",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.BITSTRING,constructed:!1,captureBitStringValue:"certSignature"}]},rsassaPssParameterValidator={name:"rsapss",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,value:[{name:"rsapss.hashAlgorithm",tagClass:asn1$1.Class.CONTEXT_SPECIFIC,type:0,constructed:!0,value:[{name:"rsapss.hashAlgorithm.AlgorithmIdentifier",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Class.SEQUENCE,constructed:!0,optional:!0,value:[{name:"rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.OID,constructed:!1,capture:"hashOid"}]}]},{name:"rsapss.maskGenAlgorithm",tagClass:asn1$1.Class.CONTEXT_SPECIFIC,type:1,constructed:!0,value:[{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Class.SEQUENCE,constructed:!0,optional:!0,value:[{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.OID,constructed:!1,capture:"maskGenOid"},{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier.params",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,value:[{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.OID,constructed:!1,capture:"maskGenHashOid"}]}]}]},{name:"rsapss.saltLength",tagClass:asn1$1.Class.CONTEXT_SPECIFIC,type:2,optional:!0,value:[{name:"rsapss.saltLength.saltLength",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Class.INTEGER,constructed:!1,capture:"saltLength"}]},{name:"rsapss.trailerField",tagClass:asn1$1.Class.CONTEXT_SPECIFIC,type:3,optional:!0,value:[{name:"rsapss.trailer.trailer",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Class.INTEGER,constructed:!1,capture:"trailer"}]}]},certificationRequestInfoValidator={name:"CertificationRequestInfo",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,captureAsn1:"certificationRequestInfo",value:[{name:"CertificationRequestInfo.integer",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.INTEGER,constructed:!1,capture:"certificationRequestInfoVersion"},{name:"CertificationRequestInfo.subject",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,captureAsn1:"certificationRequestInfoSubject"},publicKeyValidator,{name:"CertificationRequestInfo.attributes",tagClass:asn1$1.Class.CONTEXT_SPECIFIC,type:0,constructed:!0,optional:!0,capture:"certificationRequestInfoAttributes",value:[{name:"CertificationRequestInfo.attributes",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,value:[{name:"CertificationRequestInfo.attributes.type",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.OID,constructed:!1},{name:"CertificationRequestInfo.attributes.value",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SET,constructed:!0}]}]}]},certificationRequestValidator={name:"CertificationRequest",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,captureAsn1:"csr",value:[certificationRequestInfoValidator,{name:"CertificationRequest.signatureAlgorithm",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,value:[{name:"CertificationRequest.signatureAlgorithm.algorithm",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.OID,constructed:!1,capture:"csrSignatureOid"},{name:"CertificationRequest.signatureAlgorithm.parameters",tagClass:asn1$1.Class.UNIVERSAL,optional:!0,captureAsn1:"csrSignatureParams"}]},{name:"CertificationRequest.signature",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.BITSTRING,constructed:!1,captureBitStringValue:"csrSignature"}]};pki$1.RDNAttributesAsArray=function(t,e){for(var r=[],n,o,a,c=0;c<t.value.length;++c){n=t.value[c];for(var u=0;u<n.value.length;++u)a={},o=n.value[u],a.type=asn1$1.derToOid(o.value[0].value),a.value=o.value[1].value,a.valueTagClass=o.value[1].type,a.type in oids&&(a.name=oids[a.type],a.name in _shortNames&&(a.shortName=_shortNames[a.name])),e&&(e.update(a.type),e.update(a.value)),r.push(a)}return r},pki$1.CRIAttributesAsArray=function(t){for(var e=[],r=0;r<t.length;++r)for(var n=t[r],o=asn1$1.derToOid(n.value[0].value),a=n.value[1].value,c=0;c<a.length;++c){var u={};if(u.type=o,u.value=a[c].value,u.valueTagClass=a[c].type,u.type in oids&&(u.name=oids[u.type],u.name in _shortNames&&(u.shortName=_shortNames[u.name])),u.type===oids.extensionRequest){u.extensions=[];for(var l=0;l<u.value.length;++l)u.extensions.push(pki$1.certificateExtensionFromAsn1(u.value[l]))}e.push(u)}return e};function _getAttribute(t,e){typeof e=="string"&&(e={shortName:e});for(var r=null,n,o=0;r===null&&o<t.attributes.length;++o)n=t.attributes[o],(e.type&&e.type===n.type||e.name&&e.name===n.name||e.shortName&&e.shortName===n.shortName)&&(r=n);return r}var _readSignatureParameters=function(t,e,r){var n={};if(t!==oids["RSASSA-PSS"])return n;r&&(n={hash:{algorithmOid:oids.sha1},mgf:{algorithmOid:oids.mgf1,hash:{algorithmOid:oids.sha1}},saltLength:20});var o={},a=[];if(!asn1$1.validate(e,rsassaPssParameterValidator,o,a)){var c=new Error("Cannot read RSASSA-PSS parameter block.");throw c.errors=a,c}return o.hashOid!==void 0&&(n.hash=n.hash||{},n.hash.algorithmOid=asn1$1.derToOid(o.hashOid)),o.maskGenOid!==void 0&&(n.mgf=n.mgf||{},n.mgf.algorithmOid=asn1$1.derToOid(o.maskGenOid),n.mgf.hash=n.mgf.hash||{},n.mgf.hash.algorithmOid=asn1$1.derToOid(o.maskGenHashOid)),o.saltLength!==void 0&&(n.saltLength=o.saltLength.charCodeAt(0)),n},_createSignatureDigest=function(t){switch(oids[t.signatureOid]){case"sha1WithRSAEncryption":case"sha1WithRSASignature":return forge$1.md.sha1.create();case"md5WithRSAEncryption":return forge$1.md.md5.create();case"sha256WithRSAEncryption":return forge$1.md.sha256.create();case"sha384WithRSAEncryption":return forge$1.md.sha384.create();case"sha512WithRSAEncryption":return forge$1.md.sha512.create();case"RSASSA-PSS":return forge$1.md.sha256.create();default:var e=new Error("Could not compute "+t.type+" digest. Unknown signature OID.");throw e.signatureOid=t.signatureOid,e}},_verifySignature=function(t){var e=t.certificate,r;switch(e.signatureOid){case oids.sha1WithRSAEncryption:case oids.sha1WithRSASignature:break;case oids["RSASSA-PSS"]:var n,o;if(n=oids[e.signatureParameters.mgf.hash.algorithmOid],n===void 0||forge$1.md[n]===void 0){var a=new Error("Unsupported MGF hash function.");throw a.oid=e.signatureParameters.mgf.hash.algorithmOid,a.name=n,a}if(o=oids[e.signatureParameters.mgf.algorithmOid],o===void 0||forge$1.mgf[o]===void 0){var a=new Error("Unsupported MGF function.");throw a.oid=e.signatureParameters.mgf.algorithmOid,a.name=o,a}if(o=forge$1.mgf[o].create(forge$1.md[n].create()),n=oids[e.signatureParameters.hash.algorithmOid],n===void 0||forge$1.md[n]===void 0){var a=new Error("Unsupported RSASSA-PSS hash function.");throw a.oid=e.signatureParameters.hash.algorithmOid,a.name=n,a}r=forge$1.pss.create(forge$1.md[n].create(),o,e.signatureParameters.saltLength);break}return e.publicKey.verify(t.md.digest().getBytes(),t.signature,r)};pki$1.certificateFromPem=function(t,e,r){var n=forge$1.pem.decode(t)[0];if(n.type!=="CERTIFICATE"&&n.type!=="X509 CERTIFICATE"&&n.type!=="TRUSTED CERTIFICATE"){var o=new Error('Could not convert certificate from PEM; PEM header type is not "CERTIFICATE", "X509 CERTIFICATE", or "TRUSTED CERTIFICATE".');throw o.headerType=n.type,o}if(n.procType&&n.procType.type==="ENCRYPTED")throw new Error("Could not convert certificate from PEM; PEM is encrypted.");var a=asn1$1.fromDer(n.body,r);return pki$1.certificateFromAsn1(a,e)},pki$1.certificateToPem=function(t,e){var r={type:"CERTIFICATE",body:asn1$1.toDer(pki$1.certificateToAsn1(t)).getBytes()};return forge$1.pem.encode(r,{maxline:e})},pki$1.publicKeyFromPem=function(t){var e=forge$1.pem.decode(t)[0];if(e.type!=="PUBLIC KEY"&&e.type!=="RSA PUBLIC KEY"){var r=new Error('Could not convert public key from PEM; PEM header type is not "PUBLIC KEY" or "RSA PUBLIC KEY".');throw r.headerType=e.type,r}if(e.procType&&e.procType.type==="ENCRYPTED")throw new Error("Could not convert public key from PEM; PEM is encrypted.");var n=asn1$1.fromDer(e.body);return pki$1.publicKeyFromAsn1(n)},pki$1.publicKeyToPem=function(t,e){var r={type:"PUBLIC KEY",body:asn1$1.toDer(pki$1.publicKeyToAsn1(t)).getBytes()};return forge$1.pem.encode(r,{maxline:e})},pki$1.publicKeyToRSAPublicKeyPem=function(t,e){var r={type:"RSA PUBLIC KEY",body:asn1$1.toDer(pki$1.publicKeyToRSAPublicKey(t)).getBytes()};return forge$1.pem.encode(r,{maxline:e})},pki$1.getPublicKeyFingerprint=function(t,e){e=e||{};var r=e.md||forge$1.md.sha1.create(),n=e.type||"RSAPublicKey",o;switch(n){case"RSAPublicKey":o=asn1$1.toDer(pki$1.publicKeyToRSAPublicKey(t)).getBytes();break;case"SubjectPublicKeyInfo":o=asn1$1.toDer(pki$1.publicKeyToAsn1(t)).getBytes();break;default:throw new Error('Unknown fingerprint type "'+e.type+'".')}r.start(),r.update(o);var a=r.digest();if(e.encoding==="hex"){var c=a.toHex();return e.delimiter?c.match(/.{2}/g).join(e.delimiter):c}else{if(e.encoding==="binary")return a.getBytes();if(e.encoding)throw new Error('Unknown encoding "'+e.encoding+'".')}return a},pki$1.certificationRequestFromPem=function(t,e,r){var n=forge$1.pem.decode(t)[0];if(n.type!=="CERTIFICATE REQUEST"){var o=new Error('Could not convert certification request from PEM; PEM header type is not "CERTIFICATE REQUEST".');throw o.headerType=n.type,o}if(n.procType&&n.procType.type==="ENCRYPTED")throw new Error("Could not convert certification request from PEM; PEM is encrypted.");var a=asn1$1.fromDer(n.body,r);return pki$1.certificationRequestFromAsn1(a,e)},pki$1.certificationRequestToPem=function(t,e){var r={type:"CERTIFICATE REQUEST",body:asn1$1.toDer(pki$1.certificationRequestToAsn1(t)).getBytes()};return forge$1.pem.encode(r,{maxline:e})},pki$1.createCertificate=function(){var t={};return t.version=2,t.serialNumber="00",t.signatureOid=null,t.signature=null,t.siginfo={},t.siginfo.algorithmOid=null,t.validity={},t.validity.notBefore=new Date,t.validity.notAfter=new Date,t.issuer={},t.issuer.getField=function(e){return _getAttribute(t.issuer,e)},t.issuer.addField=function(e){_fillMissingFields([e]),t.issuer.attributes.push(e)},t.issuer.attributes=[],t.issuer.hash=null,t.subject={},t.subject.getField=function(e){return _getAttribute(t.subject,e)},t.subject.addField=function(e){_fillMissingFields([e]),t.subject.attributes.push(e)},t.subject.attributes=[],t.subject.hash=null,t.extensions=[],t.publicKey=null,t.md=null,t.setSubject=function(e,r){_fillMissingFields(e),t.subject.attributes=e,delete t.subject.uniqueId,r&&(t.subject.uniqueId=r),t.subject.hash=null},t.setIssuer=function(e,r){_fillMissingFields(e),t.issuer.attributes=e,delete t.issuer.uniqueId,r&&(t.issuer.uniqueId=r),t.issuer.hash=null},t.setExtensions=function(e){for(var r=0;r<e.length;++r)_fillMissingExtensionFields(e[r],{cert:t});t.extensions=e},t.getExtension=function(e){typeof e=="string"&&(e={name:e});for(var r=null,n,o=0;r===null&&o<t.extensions.length;++o)n=t.extensions[o],(e.id&&n.id===e.id||e.name&&n.name===e.name)&&(r=n);return r},t.sign=function(e,r){t.md=r||forge$1.md.sha1.create();var n=oids[t.md.algorithm+"WithRSAEncryption"];if(!n){var o=new Error("Could not compute certificate digest. Unknown message digest algorithm OID.");throw o.algorithm=t.md.algorithm,o}t.signatureOid=t.siginfo.algorithmOid=n,t.tbsCertificate=pki$1.getTBSCertificate(t);var a=asn1$1.toDer(t.tbsCertificate);t.md.update(a.getBytes()),t.signature=e.sign(t.md)},t.verify=function(e){var r=!1;if(!t.issued(e)){var n=e.issuer,o=t.subject,a=new Error("The parent certificate did not issue the given child certificate; the child certificate's issuer does not match the parent's subject.");throw a.expectedIssuer=o.attributes,a.actualIssuer=n.attributes,a}var c=e.md;if(c===null){c=_createSignatureDigest({signatureOid:e.signatureOid,type:"certificate"});var u=e.tbsCertificate||pki$1.getTBSCertificate(e),l=asn1$1.toDer(u);c.update(l.getBytes())}return c!==null&&(r=_verifySignature({certificate:t,md:c,signature:e.signature})),r},t.isIssuer=function(e){var r=!1,n=t.issuer,o=e.subject;if(n.hash&&o.hash)r=n.hash===o.hash;else if(n.attributes.length===o.attributes.length){r=!0;for(var a,c,u=0;r&&u<n.attributes.length;++u)a=n.attributes[u],c=o.attributes[u],(a.type!==c.type||a.value!==c.value)&&(r=!1)}return r},t.issued=function(e){return e.isIssuer(t)},t.generateSubjectKeyIdentifier=function(){return pki$1.getPublicKeyFingerprint(t.publicKey,{type:"RSAPublicKey"})},t.verifySubjectKeyIdentifier=function(){for(var e=oids.subjectKeyIdentifier,r=0;r<t.extensions.length;++r){var n=t.extensions[r];if(n.id===e){var o=t.generateSubjectKeyIdentifier().getBytes();return forge$1.util.hexToBytes(n.subjectKeyIdentifier)===o}}return!1},t},pki$1.certificateFromAsn1=function(t,e){var r={},n=[];if(!asn1$1.validate(t,x509CertificateValidator,r,n)){var o=new Error("Cannot read X.509 certificate. ASN.1 object is not an X509v3 Certificate.");throw o.errors=n,o}var a=asn1$1.derToOid(r.publicKeyOid);if(a!==pki$1.oids.rsaEncryption)throw new Error("Cannot read public key. OID is not RSA.");var c=pki$1.createCertificate();c.version=r.certVersion?r.certVersion.charCodeAt(0):0;var u=forge$1.util.createBuffer(r.certSerialNumber);c.serialNumber=u.toHex(),c.signatureOid=forge$1.asn1.derToOid(r.certSignatureOid),c.signatureParameters=_readSignatureParameters(c.signatureOid,r.certSignatureParams,!0),c.siginfo.algorithmOid=forge$1.asn1.derToOid(r.certinfoSignatureOid),c.siginfo.parameters=_readSignatureParameters(c.siginfo.algorithmOid,r.certinfoSignatureParams,!1),c.signature=r.certSignature;var l=[];if(r.certValidity1UTCTime!==void 0&&l.push(asn1$1.utcTimeToDate(r.certValidity1UTCTime)),r.certValidity2GeneralizedTime!==void 0&&l.push(asn1$1.generalizedTimeToDate(r.certValidity2GeneralizedTime)),r.certValidity3UTCTime!==void 0&&l.push(asn1$1.utcTimeToDate(r.certValidity3UTCTime)),r.certValidity4GeneralizedTime!==void 0&&l.push(asn1$1.generalizedTimeToDate(r.certValidity4GeneralizedTime)),l.length>2)throw new Error("Cannot read notBefore/notAfter validity times; more than two times were provided in the certificate.");if(l.length<2)throw new Error("Cannot read notBefore/notAfter validity times; they were not provided as either UTCTime or GeneralizedTime.");if(c.validity.notBefore=l[0],c.validity.notAfter=l[1],c.tbsCertificate=r.tbsCertificate,e){c.md=_createSignatureDigest({signatureOid:c.signatureOid,type:"certificate"});var f=asn1$1.toDer(c.tbsCertificate);c.md.update(f.getBytes())}var p=forge$1.md.sha1.create(),g=asn1$1.toDer(r.certIssuer);p.update(g.getBytes()),c.issuer.getField=function(b){return _getAttribute(c.issuer,b)},c.issuer.addField=function(b){_fillMissingFields([b]),c.issuer.attributes.push(b)},c.issuer.attributes=pki$1.RDNAttributesAsArray(r.certIssuer),r.certIssuerUniqueId&&(c.issuer.uniqueId=r.certIssuerUniqueId),c.issuer.hash=p.digest().toHex();var $=forge$1.md.sha1.create(),_=asn1$1.toDer(r.certSubject);return $.update(_.getBytes()),c.subject.getField=function(b){return _getAttribute(c.subject,b)},c.subject.addField=function(b){_fillMissingFields([b]),c.subject.attributes.push(b)},c.subject.attributes=pki$1.RDNAttributesAsArray(r.certSubject),r.certSubjectUniqueId&&(c.subject.uniqueId=r.certSubjectUniqueId),c.subject.hash=$.digest().toHex(),r.certExtensions?c.extensions=pki$1.certificateExtensionsFromAsn1(r.certExtensions):c.extensions=[],c.publicKey=pki$1.publicKeyFromAsn1(r.subjectPublicKeyInfo),c},pki$1.certificateExtensionsFromAsn1=function(t){for(var e=[],r=0;r<t.value.length;++r)for(var n=t.value[r],o=0;o<n.value.length;++o)e.push(pki$1.certificateExtensionFromAsn1(n.value[o]));return e},pki$1.certificateExtensionFromAsn1=function(t){var e={};if(e.id=asn1$1.derToOid(t.value[0].value),e.critical=!1,t.value[1].type===asn1$1.Type.BOOLEAN?(e.critical=t.value[1].value.charCodeAt(0)!==0,e.value=t.value[2].value):e.value=t.value[1].value,e.id in oids){if(e.name=oids[e.id],e.name==="keyUsage"){var r=asn1$1.fromDer(e.value),n=0,o=0;r.value.length>1&&(n=r.value.charCodeAt(1),o=r.value.length>2?r.value.charCodeAt(2):0),e.digitalSignature=(n&128)===128,e.nonRepudiation=(n&64)===64,e.keyEncipherment=(n&32)===32,e.dataEncipherment=(n&16)===16,e.keyAgreement=(n&8)===8,e.keyCertSign=(n&4)===4,e.cRLSign=(n&2)===2,e.encipherOnly=(n&1)===1,e.decipherOnly=(o&128)===128}else if(e.name==="basicConstraints"){var r=asn1$1.fromDer(e.value);r.value.length>0&&r.value[0].type===asn1$1.Type.BOOLEAN?e.cA=r.value[0].value.charCodeAt(0)!==0:e.cA=!1;var a=null;r.value.length>0&&r.value[0].type===asn1$1.Type.INTEGER?a=r.value[0].value:r.value.length>1&&(a=r.value[1].value),a!==null&&(e.pathLenConstraint=asn1$1.derToInteger(a))}else if(e.name==="extKeyUsage")for(var r=asn1$1.fromDer(e.value),c=0;c<r.value.length;++c){var u=asn1$1.derToOid(r.value[c].value);u in oids?e[oids[u]]=!0:e[u]=!0}else if(e.name==="nsCertType"){var r=asn1$1.fromDer(e.value),n=0;r.value.length>1&&(n=r.value.charCodeAt(1)),e.client=(n&128)===128,e.server=(n&64)===64,e.email=(n&32)===32,e.objsign=(n&16)===16,e.reserved=(n&8)===8,e.sslCA=(n&4)===4,e.emailCA=(n&2)===2,e.objCA=(n&1)===1}else if(e.name==="subjectAltName"||e.name==="issuerAltName"){e.altNames=[];for(var l,r=asn1$1.fromDer(e.value),f=0;f<r.value.length;++f){l=r.value[f];var p={type:l.type,value:l.value};switch(e.altNames.push(p),l.type){case 1:case 2:case 6:break;case 7:p.ip=forge$1.util.bytesToIP(l.value);break;case 8:p.oid=asn1$1.derToOid(l.value);break}}}else if(e.name==="subjectKeyIdentifier"){var r=asn1$1.fromDer(e.value);e.subjectKeyIdentifier=forge$1.util.bytesToHex(r.value)}}return e},pki$1.certificationRequestFromAsn1=function(t,e){var r={},n=[];if(!asn1$1.validate(t,certificationRequestValidator,r,n)){var o=new Error("Cannot read PKCS#10 certificate request. ASN.1 object is not a PKCS#10 CertificationRequest.");throw o.errors=n,o}var a=asn1$1.derToOid(r.publicKeyOid);if(a!==pki$1.oids.rsaEncryption)throw new Error("Cannot read public key. OID is not RSA.");var c=pki$1.createCertificationRequest();if(c.version=r.csrVersion?r.csrVersion.charCodeAt(0):0,c.signatureOid=forge$1.asn1.derToOid(r.csrSignatureOid),c.signatureParameters=_readSignatureParameters(c.signatureOid,r.csrSignatureParams,!0),c.siginfo.algorithmOid=forge$1.asn1.derToOid(r.csrSignatureOid),c.siginfo.parameters=_readSignatureParameters(c.siginfo.algorithmOid,r.csrSignatureParams,!1),c.signature=r.csrSignature,c.certificationRequestInfo=r.certificationRequestInfo,e){c.md=_createSignatureDigest({signatureOid:c.signatureOid,type:"certification request"});var u=asn1$1.toDer(c.certificationRequestInfo);c.md.update(u.getBytes())}var l=forge$1.md.sha1.create();return c.subject.getField=function(f){return _getAttribute(c.subject,f)},c.subject.addField=function(f){_fillMissingFields([f]),c.subject.attributes.push(f)},c.subject.attributes=pki$1.RDNAttributesAsArray(r.certificationRequestInfoSubject,l),c.subject.hash=l.digest().toHex(),c.publicKey=pki$1.publicKeyFromAsn1(r.subjectPublicKeyInfo),c.getAttribute=function(f){return _getAttribute(c,f)},c.addAttribute=function(f){_fillMissingFields([f]),c.attributes.push(f)},c.attributes=pki$1.CRIAttributesAsArray(r.certificationRequestInfoAttributes||[]),c},pki$1.createCertificationRequest=function(){var t={};return t.version=0,t.signatureOid=null,t.signature=null,t.siginfo={},t.siginfo.algorithmOid=null,t.subject={},t.subject.getField=function(e){return _getAttribute(t.subject,e)},t.subject.addField=function(e){_fillMissingFields([e]),t.subject.attributes.push(e)},t.subject.attributes=[],t.subject.hash=null,t.publicKey=null,t.attributes=[],t.getAttribute=function(e){return _getAttribute(t,e)},t.addAttribute=function(e){_fillMissingFields([e]),t.attributes.push(e)},t.md=null,t.setSubject=function(e){_fillMissingFields(e),t.subject.attributes=e,t.subject.hash=null},t.setAttributes=function(e){_fillMissingFields(e),t.attributes=e},t.sign=function(e,r){t.md=r||forge$1.md.sha1.create();var n=oids[t.md.algorithm+"WithRSAEncryption"];if(!n){var o=new Error("Could not compute certification request digest. Unknown message digest algorithm OID.");throw o.algorithm=t.md.algorithm,o}t.signatureOid=t.siginfo.algorithmOid=n,t.certificationRequestInfo=pki$1.getCertificationRequestInfo(t);var a=asn1$1.toDer(t.certificationRequestInfo);t.md.update(a.getBytes()),t.signature=e.sign(t.md)},t.verify=function(){var e=!1,r=t.md;if(r===null){r=_createSignatureDigest({signatureOid:t.signatureOid,type:"certification request"});var n=t.certificationRequestInfo||pki$1.getCertificationRequestInfo(t),o=asn1$1.toDer(n);r.update(o.getBytes())}return r!==null&&(e=_verifySignature({certificate:t,md:r,signature:t.signature})),e},t};function _dnToAsn1(t){for(var e=asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[]),r,n,o=t.attributes,a=0;a<o.length;++a){r=o[a];var c=r.value,u=asn1$1.Type.PRINTABLESTRING;"valueTagClass"in r&&(u=r.valueTagClass,u===asn1$1.Type.UTF8&&(c=forge$1.util.encodeUtf8(c))),n=asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SET,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.OID,!1,asn1$1.oidToDer(r.type).getBytes()),asn1$1.create(asn1$1.Class.UNIVERSAL,u,!1,c)])]),e.value.push(n)}return e}function _fillMissingFields(t){for(var e,r=0;r<t.length;++r){if(e=t[r],typeof e.name>"u"&&(e.type&&e.type in pki$1.oids?e.name=pki$1.oids[e.type]:e.shortName&&e.shortName in _shortNames&&(e.name=pki$1.oids[_shortNames[e.shortName]])),typeof e.type>"u")if(e.name&&e.name in pki$1.oids)e.type=pki$1.oids[e.name];else{var n=new Error("Attribute type not specified.");throw n.attribute=e,n}if(typeof e.shortName>"u"&&e.name&&e.name in _shortNames&&(e.shortName=_shortNames[e.name]),e.type===oids.extensionRequest&&(e.valueConstructed=!0,e.valueTagClass=asn1$1.Type.SEQUENCE,!e.value&&e.extensions)){e.value=[];for(var o=0;o<e.extensions.length;++o)e.value.push(pki$1.certificateExtensionToAsn1(_fillMissingExtensionFields(e.extensions[o])))}if(typeof e.value>"u"){var n=new Error("Attribute value not specified.");throw n.attribute=e,n}}}function _fillMissingExtensionFields(t,e){if(e=e||{},typeof t.name>"u"&&t.id&&t.id in pki$1.oids&&(t.name=pki$1.oids[t.id]),typeof t.id>"u")if(t.name&&t.name in pki$1.oids)t.id=pki$1.oids[t.name];else{var r=new Error("Extension ID not specified.");throw r.extension=t,r}if(typeof t.value<"u")return t;if(t.name==="keyUsage"){var n=0,o=0,a=0;t.digitalSignature&&(o|=128,n=7),t.nonRepudiation&&(o|=64,n=6),t.keyEncipherment&&(o|=32,n=5),t.dataEncipherment&&(o|=16,n=4),t.keyAgreement&&(o|=8,n=3),t.keyCertSign&&(o|=4,n=2),t.cRLSign&&(o|=2,n=1),t.encipherOnly&&(o|=1,n=0),t.decipherOnly&&(a|=128,n=7);var c=String.fromCharCode(n);a!==0?c+=String.fromCharCode(o)+String.fromCharCode(a):o!==0&&(c+=String.fromCharCode(o)),t.value=asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.BITSTRING,!1,c)}else if(t.name==="basicConstraints")t.value=asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[]),t.cA&&t.value.value.push(asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.BOOLEAN,!1,"\xFF")),"pathLenConstraint"in t&&t.value.value.push(asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.INTEGER,!1,asn1$1.integerToDer(t.pathLenConstraint).getBytes()));else if(t.name==="extKeyUsage"){t.value=asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[]);var u=t.value.value;for(var l in t)t[l]===!0&&(l in oids?u.push(asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.OID,!1,asn1$1.oidToDer(oids[l]).getBytes())):l.indexOf(".")!==-1&&u.push(asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.OID,!1,asn1$1.oidToDer(l).getBytes())))}else if(t.name==="nsCertType"){var n=0,o=0;t.client&&(o|=128,n=7),t.server&&(o|=64,n=6),t.email&&(o|=32,n=5),t.objsign&&(o|=16,n=4),t.reserved&&(o|=8,n=3),t.sslCA&&(o|=4,n=2),t.emailCA&&(o|=2,n=1),t.objCA&&(o|=1,n=0);var c=String.fromCharCode(n);o!==0&&(c+=String.fromCharCode(o)),t.value=asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.BITSTRING,!1,c)}else if(t.name==="subjectAltName"||t.name==="issuerAltName"){t.value=asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[]);for(var f,p=0;p<t.altNames.length;++p){f=t.altNames[p];var c=f.value;if(f.type===7&&f.ip){if(c=forge$1.util.bytesFromIP(f.ip),c===null){var r=new Error('Extension "ip" value is not a valid IPv4 or IPv6 address.');throw r.extension=t,r}}else f.type===8&&(f.oid?c=asn1$1.oidToDer(asn1$1.oidToDer(f.oid)):c=asn1$1.oidToDer(c));t.value.value.push(asn1$1.create(asn1$1.Class.CONTEXT_SPECIFIC,f.type,!1,c))}}else if(t.name==="nsComment"&&e.cert){if(!/^[\x00-\x7F]*$/.test(t.comment)||t.comment.length<1||t.comment.length>128)throw new Error('Invalid "nsComment" content.');t.value=asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.IA5STRING,!1,t.comment)}else if(t.name==="subjectKeyIdentifier"&&e.cert){var g=e.cert.generateSubjectKeyIdentifier();t.subjectKeyIdentifier=g.toHex(),t.value=asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.OCTETSTRING,!1,g.getBytes())}else if(t.name==="authorityKeyIdentifier"&&e.cert){t.value=asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[]);var u=t.value.value;if(t.keyIdentifier){var $=t.keyIdentifier===!0?e.cert.generateSubjectKeyIdentifier().getBytes():t.keyIdentifier;u.push(asn1$1.create(asn1$1.Class.CONTEXT_SPECIFIC,0,!1,$))}if(t.authorityCertIssuer){var _=[asn1$1.create(asn1$1.Class.CONTEXT_SPECIFIC,4,!0,[_dnToAsn1(t.authorityCertIssuer===!0?e.cert.issuer:t.authorityCertIssuer)])];u.push(asn1$1.create(asn1$1.Class.CONTEXT_SPECIFIC,1,!0,_))}if(t.serialNumber){var b=forge$1.util.hexToBytes(t.serialNumber===!0?e.cert.serialNumber:t.serialNumber);u.push(asn1$1.create(asn1$1.Class.CONTEXT_SPECIFIC,2,!1,b))}}else if(t.name==="cRLDistributionPoints"){t.value=asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[]);for(var u=t.value.value,D=asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[]),v=asn1$1.create(asn1$1.Class.CONTEXT_SPECIFIC,0,!0,[]),f,p=0;p<t.altNames.length;++p){f=t.altNames[p];var c=f.value;if(f.type===7&&f.ip){if(c=forge$1.util.bytesFromIP(f.ip),c===null){var r=new Error('Extension "ip" value is not a valid IPv4 or IPv6 address.');throw r.extension=t,r}}else f.type===8&&(f.oid?c=asn1$1.oidToDer(asn1$1.oidToDer(f.oid)):c=asn1$1.oidToDer(c));v.value.push(asn1$1.create(asn1$1.Class.CONTEXT_SPECIFIC,f.type,!1,c))}D.value.push(asn1$1.create(asn1$1.Class.CONTEXT_SPECIFIC,0,!0,[v])),u.push(D)}if(typeof t.value>"u"){var r=new Error("Extension value not specified.");throw r.extension=t,r}return t}function _signatureParametersToAsn1(t,e){switch(t){case oids["RSASSA-PSS"]:var r=[];return e.hash.algorithmOid!==void 0&&r.push(asn1$1.create(asn1$1.Class.CONTEXT_SPECIFIC,0,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.OID,!1,asn1$1.oidToDer(e.hash.algorithmOid).getBytes()),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.NULL,!1,"")])])),e.mgf.algorithmOid!==void 0&&r.push(asn1$1.create(asn1$1.Class.CONTEXT_SPECIFIC,1,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.OID,!1,asn1$1.oidToDer(e.mgf.algorithmOid).getBytes()),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.OID,!1,asn1$1.oidToDer(e.mgf.hash.algorithmOid).getBytes()),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.NULL,!1,"")])])])),e.saltLength!==void 0&&r.push(asn1$1.create(asn1$1.Class.CONTEXT_SPECIFIC,2,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.INTEGER,!1,asn1$1.integerToDer(e.saltLength).getBytes())])),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,r);default:return asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.NULL,!1,"")}}function _CRIAttributesToAsn1(t){var e=asn1$1.create(asn1$1.Class.CONTEXT_SPECIFIC,0,!0,[]);if(t.attributes.length===0)return e;for(var r=t.attributes,n=0;n<r.length;++n){var o=r[n],a=o.value,c=asn1$1.Type.UTF8;"valueTagClass"in o&&(c=o.valueTagClass),c===asn1$1.Type.UTF8&&(a=forge$1.util.encodeUtf8(a));var u=!1;"valueConstructed"in o&&(u=o.valueConstructed);var l=asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.OID,!1,asn1$1.oidToDer(o.type).getBytes()),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SET,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,c,u,a)])]);e.value.push(l)}return e}var jan_1_1950=new Date("1950-01-01T00:00:00Z"),jan_1_2050=new Date("2050-01-01T00:00:00Z");function _dateToAsn1(t){return t>=jan_1_1950&&t<jan_1_2050?asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.UTCTIME,!1,asn1$1.dateToUtcTime(t)):asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.GENERALIZEDTIME,!1,asn1$1.dateToGeneralizedTime(t))}pki$1.getTBSCertificate=function(t){var e=_dateToAsn1(t.validity.notBefore),r=_dateToAsn1(t.validity.notAfter),n=asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[asn1$1.create(asn1$1.Class.CONTEXT_SPECIFIC,0,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.INTEGER,!1,asn1$1.integerToDer(t.version).getBytes())]),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.INTEGER,!1,forge$1.util.hexToBytes(t.serialNumber)),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.OID,!1,asn1$1.oidToDer(t.siginfo.algorithmOid).getBytes()),_signatureParametersToAsn1(t.siginfo.algorithmOid,t.siginfo.parameters)]),_dnToAsn1(t.issuer),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[e,r]),_dnToAsn1(t.subject),pki$1.publicKeyToAsn1(t.publicKey)]);return t.issuer.uniqueId&&n.value.push(asn1$1.create(asn1$1.Class.CONTEXT_SPECIFIC,1,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.BITSTRING,!1,"\0"+t.issuer.uniqueId)])),t.subject.uniqueId&&n.value.push(asn1$1.create(asn1$1.Class.CONTEXT_SPECIFIC,2,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.BITSTRING,!1,"\0"+t.subject.uniqueId)])),t.extensions.length>0&&n.value.push(pki$1.certificateExtensionsToAsn1(t.extensions)),n},pki$1.getCertificationRequestInfo=function(t){var e=asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.INTEGER,!1,asn1$1.integerToDer(t.version).getBytes()),_dnToAsn1(t.subject),pki$1.publicKeyToAsn1(t.publicKey),_CRIAttributesToAsn1(t)]);return e},pki$1.distinguishedNameToAsn1=function(t){return _dnToAsn1(t)},pki$1.certificateToAsn1=function(t){var e=t.tbsCertificate||pki$1.getTBSCertificate(t);return asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[e,asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.OID,!1,asn1$1.oidToDer(t.signatureOid).getBytes()),_signatureParametersToAsn1(t.signatureOid,t.signatureParameters)]),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.BITSTRING,!1,"\0"+t.signature)])},pki$1.certificateExtensionsToAsn1=function(t){var e=asn1$1.create(asn1$1.Class.CONTEXT_SPECIFIC,3,!0,[]),r=asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[]);e.value.push(r);for(var n=0;n<t.length;++n)r.value.push(pki$1.certificateExtensionToAsn1(t[n]));return e},pki$1.certificateExtensionToAsn1=function(t){var e=asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[]);e.value.push(asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.OID,!1,asn1$1.oidToDer(t.id).getBytes())),t.critical&&e.value.push(asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.BOOLEAN,!1,"\xFF"));var r=t.value;return typeof t.value!="string"&&(r=asn1$1.toDer(r).getBytes()),e.value.push(asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.OCTETSTRING,!1,r)),e},pki$1.certificationRequestToAsn1=function(t){var e=t.certificationRequestInfo||pki$1.getCertificationRequestInfo(t);return asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[e,asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.OID,!1,asn1$1.oidToDer(t.signatureOid).getBytes()),_signatureParametersToAsn1(t.signatureOid,t.signatureParameters)]),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.BITSTRING,!1,"\0"+t.signature)])},pki$1.createCaStore=function(t){var e={certs:{}};e.getIssuer=function(c){var u=r(c.issuer);return u},e.addCertificate=function(c){if(typeof c=="string"&&(c=forge$1.pki.certificateFromPem(c)),n(c.subject),!e.hasCertificate(c))if(c.subject.hash in e.certs){var u=e.certs[c.subject.hash];forge$1.util.isArray(u)||(u=[u]),u.push(c),e.certs[c.subject.hash]=u}else e.certs[c.subject.hash]=c},e.hasCertificate=function(c){typeof c=="string"&&(c=forge$1.pki.certificateFromPem(c));var u=r(c.subject);if(!u)return!1;forge$1.util.isArray(u)||(u=[u]);for(var l=asn1$1.toDer(pki$1.certificateToAsn1(c)).getBytes(),f=0;f<u.length;++f){var p=asn1$1.toDer(pki$1.certificateToAsn1(u[f])).getBytes();if(l===p)return!0}return!1},e.listAllCertificates=function(){var c=[];for(var u in e.certs)if(e.certs.hasOwnProperty(u)){var l=e.certs[u];if(!forge$1.util.isArray(l))c.push(l);else for(var f=0;f<l.length;++f)c.push(l[f])}return c},e.removeCertificate=function(c){var u;if(typeof c=="string"&&(c=forge$1.pki.certificateFromPem(c)),n(c.subject),!e.hasCertificate(c))return null;var l=r(c.subject);if(!forge$1.util.isArray(l))return u=e.certs[c.subject.hash],delete e.certs[c.subject.hash],u;for(var f=asn1$1.toDer(pki$1.certificateToAsn1(c)).getBytes(),p=0;p<l.length;++p){var g=asn1$1.toDer(pki$1.certificateToAsn1(l[p])).getBytes();f===g&&(u=l[p],l.splice(p,1))}return l.length===0&&delete e.certs[c.subject.hash],u};function r(c){return n(c),e.certs[c.hash]||null}function n(c){if(!c.hash){var u=forge$1.md.sha1.create();c.attributes=pki$1.RDNAttributesAsArray(_dnToAsn1(c),u),c.hash=u.digest().toHex()}}if(t)for(var o=0;o<t.length;++o){var a=t[o];e.addCertificate(a)}return e},pki$1.certificateError={bad_certificate:"forge.pki.BadCertificate",unsupported_certificate:"forge.pki.UnsupportedCertificate",certificate_revoked:"forge.pki.CertificateRevoked",certificate_expired:"forge.pki.CertificateExpired",certificate_unknown:"forge.pki.CertificateUnknown",unknown_ca:"forge.pki.UnknownCertificateAuthority"},pki$1.verifyCertificateChain=function(t,e,r){typeof r=="function"&&(r={verify:r}),r=r||{},e=e.slice(0);var n=e.slice(0),o=r.validityCheckDate;typeof o>"u"&&(o=new Date);var a=!0,c=null,u=0;do{var l=e.shift(),f=null,p=!1;if(o&&(o<l.validity.notBefore||o>l.validity.notAfter)&&(c={message:"Certificate is not valid yet or has expired.",error:pki$1.certificateError.certificate_expired,notBefore:l.validity.notBefore,notAfter:l.validity.notAfter,now:o}),c===null){if(f=e[0]||t.getIssuer(l),f===null&&l.isIssuer(l)&&(p=!0,f=l),f){var g=f;forge$1.util.isArray(g)||(g=[g]);for(var $=!1;!$&&g.length>0;){f=g.shift();try{$=f.verify(l)}catch{}}$||(c={message:"Certificate signature is invalid.",error:pki$1.certificateError.bad_certificate})}c===null&&(!f||p)&&!t.hasCertificate(l)&&(c={message:"Certificate is not trusted.",error:pki$1.certificateError.unknown_ca})}if(c===null&&f&&!l.isIssuer(f)&&(c={message:"Certificate issuer is invalid.",error:pki$1.certificateError.bad_certificate}),c===null)for(var _={keyUsage:!0,basicConstraints:!0},b=0;c===null&&b<l.extensions.length;++b){var D=l.extensions[b];D.critical&&!(D.name in _)&&(c={message:"Certificate has an unsupported critical extension.",error:pki$1.certificateError.unsupported_certificate})}if(c===null&&(!a||e.length===0&&(!f||p))){var v=l.getExtension("basicConstraints"),S=l.getExtension("keyUsage");if(S!==null&&(!S.keyCertSign||v===null)&&(c={message:"Certificate keyUsage or basicConstraints conflict or indicate that the certificate is not a CA. If the certificate is the only one in the chain or isn't the first then the certificate must be a valid CA.",error:pki$1.certificateError.bad_certificate}),c===null&&v!==null&&!v.cA&&(c={message:"Certificate basicConstraints indicates the certificate is not a CA.",error:pki$1.certificateError.bad_certificate}),c===null&&S!==null&&"pathLenConstraint"in v){var I=u-1;I>v.pathLenConstraint&&(c={message:"Certificate basicConstraints pathLenConstraint violated.",error:pki$1.certificateError.bad_certificate})}}var R=c===null?!0:c.error,C=r.verify?r.verify(R,u,n):R;if(C===!0)c=null;else throw R===!0&&(c={message:"The application rejected the certificate.",error:pki$1.certificateError.bad_certificate}),(C||C===0)&&(typeof C=="object"&&!forge$1.util.isArray(C)?(C.message&&(c.message=C.message),C.error&&(c.error=C.error)):typeof C=="string"&&(c.error=C)),c;a=!1,++u}while(e.length>0);return!0};var forge=forge$7,asn1=forge.asn1,p7=forge.pkcs7=forge.pkcs7||{};p7.messageFromPem=function(t){var e=forge.pem.decode(t)[0];if(e.type!=="PKCS7"){var r=new Error('Could not convert PKCS#7 message from PEM; PEM header type is not "PKCS#7".');throw r.headerType=e.type,r}if(e.procType&&e.procType.type==="ENCRYPTED")throw new Error("Could not convert PKCS#7 message from PEM; PEM is encrypted.");var n=asn1.fromDer(e.body);return p7.messageFromAsn1(n)},p7.messageToPem=function(t,e){var r={type:"PKCS7",body:asn1.toDer(t.toAsn1()).getBytes()};return forge.pem.encode(r,{maxline:e})},p7.messageFromAsn1=function(t){var e={},r=[];if(!asn1.validate(t,p7.asn1.contentInfoValidator,e,r)){var n=new Error("Cannot read PKCS#7 message. ASN.1 object is not an PKCS#7 ContentInfo.");throw n.errors=r,n}var o=asn1.derToOid(e.contentType),a;switch(o){case forge.pki.oids.envelopedData:a=p7.createEnvelopedData();break;case forge.pki.oids.encryptedData:a=p7.createEncryptedData();break;case forge.pki.oids.signedData:a=p7.createSignedData();break;default:throw new Error("Cannot read PKCS#7 message. ContentType with OID "+o+" is not (yet) supported.")}return a.fromAsn1(e.content.value[0]),a},p7.createSignedData=function(){var t=null;return t={type:forge.pki.oids.signedData,version:1,certificates:[],crls:[],signers:[],digestAlgorithmIdentifiers:[],contentInfo:null,signerInfos:[],fromAsn1:function(n){if(_fromAsn1(t,n,p7.asn1.signedDataValidator),t.certificates=[],t.crls=[],t.digestAlgorithmIdentifiers=[],t.contentInfo=null,t.signerInfos=[],t.rawCapture.certificates)for(var o=t.rawCapture.certificates.value,a=0;a<o.length;++a)t.certificates.push(forge.pki.certificateFromAsn1(o[a]))},toAsn1:function(){t.contentInfo||t.sign();for(var n=[],o=0;o<t.certificates.length;++o)n.push(forge.pki.certificateToAsn1(t.certificates[o]));var a=[],c=asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,!1,asn1.integerToDer(t.version).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,!0,t.digestAlgorithmIdentifiers),t.contentInfo])]);return n.length>0&&c.value[0].value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,!0,n)),a.length>0&&c.value[0].value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,1,!0,a)),c.value[0].value.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,!0,t.signerInfos)),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,!1,asn1.oidToDer(t.type).getBytes()),c])},addSigner:function(n){var o=n.issuer,a=n.serialNumber;if(n.certificate){var c=n.certificate;typeof c=="string"&&(c=forge.pki.certificateFromPem(c)),o=c.issuer.attributes,a=c.serialNumber}var u=n.key;if(!u)throw new Error("Could not add PKCS#7 signer; no private key specified.");typeof u=="string"&&(u=forge.pki.privateKeyFromPem(u));var l=n.digestAlgorithm||forge.pki.oids.sha1;switch(l){case forge.pki.oids.sha1:case forge.pki.oids.sha256:case forge.pki.oids.sha384:case forge.pki.oids.sha512:case forge.pki.oids.md5:break;default:throw new Error("Could not add PKCS#7 signer; unknown message digest algorithm: "+l)}var f=n.authenticatedAttributes||[];if(f.length>0){for(var p=!1,g=!1,$=0;$<f.length;++$){var _=f[$];if(!p&&_.type===forge.pki.oids.contentType){if(p=!0,g)break;continue}if(!g&&_.type===forge.pki.oids.messageDigest){if(g=!0,p)break;continue}}if(!p||!g)throw new Error("Invalid signer.authenticatedAttributes. If signer.authenticatedAttributes is specified, then it must contain at least two attributes, PKCS #9 content-type and PKCS #9 message-digest.")}t.signers.push({key:u,version:1,issuer:o,serialNumber:a,digestAlgorithm:l,signatureAlgorithm:forge.pki.oids.rsaEncryption,signature:null,authenticatedAttributes:f,unauthenticatedAttributes:[]})},sign:function(n){if(n=n||{},(typeof t.content!="object"||t.contentInfo===null)&&(t.contentInfo=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,!1,asn1.oidToDer(forge.pki.oids.data).getBytes())]),"content"in t)){var o;t.content instanceof forge.util.ByteBuffer?o=t.content.bytes():typeof t.content=="string"&&(o=forge.util.encodeUtf8(t.content)),n.detached?t.detachedContent=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,!1,o):t.contentInfo.value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,!1,o)]))}if(t.signers.length!==0){var a=e();r(a)}},verify:function(){throw new Error("PKCS#7 signature verification not yet implemented.")},addCertificate:function(n){typeof n=="string"&&(n=forge.pki.certificateFromPem(n)),t.certificates.push(n)},addCertificateRevokationList:function(n){throw new Error("PKCS#7 CRL support not yet implemented.")}},t;function e(){for(var n={},o=0;o<t.signers.length;++o){var a=t.signers[o],c=a.digestAlgorithm;c in n||(n[c]=forge.md[forge.pki.oids[c]].create()),a.authenticatedAttributes.length===0?a.md=n[c]:a.md=forge.md[forge.pki.oids[c]].create()}t.digestAlgorithmIdentifiers=[];for(var c in n)t.digestAlgorithmIdentifiers.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,!1,asn1.oidToDer(c).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,!1,"")]));return n}function r(n){var o;if(t.detachedContent?o=t.detachedContent:(o=t.contentInfo.value[1],o=o.value[0]),!o)throw new Error("Could not sign PKCS#7 message; there is no content to sign.");var a=asn1.derToOid(t.contentInfo.value[0].value),c=asn1.toDer(o);c.getByte(),asn1.getBerValueLength(c),c=c.getBytes();for(var u in n)n[u].start().update(c);for(var l=new Date,f=0;f<t.signers.length;++f){var p=t.signers[f];if(p.authenticatedAttributes.length===0){if(a!==forge.pki.oids.data)throw new Error("Invalid signer; authenticatedAttributes must be present when the ContentInfo content type is not PKCS#7 Data.")}else{p.authenticatedAttributesAsn1=asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,!0,[]);for(var g=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,!0,[]),$=0;$<p.authenticatedAttributes.length;++$){var _=p.authenticatedAttributes[$];_.type===forge.pki.oids.messageDigest?_.value=n[p.digestAlgorithm].digest():_.type===forge.pki.oids.signingTime&&(_.value||(_.value=l)),g.value.push(_attributeToAsn1(_)),p.authenticatedAttributesAsn1.value.push(_attributeToAsn1(_))}c=asn1.toDer(g).getBytes(),p.md.start().update(c)}p.signature=p.key.sign(p.md,"RSASSA-PKCS1-V1_5")}t.signerInfos=_signersToAsn1(t.signers)}},p7.createEncryptedData=function(){var t=null;return t={type:forge.pki.oids.encryptedData,version:0,encryptedContent:{algorithm:forge.pki.oids["aes256-CBC"]},fromAsn1:function(e){_fromAsn1(t,e,p7.asn1.encryptedDataValidator)},decrypt:function(e){e!==void 0&&(t.encryptedContent.key=e),_decryptContent(t)}},t},p7.createEnvelopedData=function(){var t=null;return t={type:forge.pki.oids.envelopedData,version:0,recipients:[],encryptedContent:{algorithm:forge.pki.oids["aes256-CBC"]},fromAsn1:function(e){var r=_fromAsn1(t,e,p7.asn1.envelopedDataValidator);t.recipients=_recipientsFromAsn1(r.recipientInfos.value)},toAsn1:function(){return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,!1,asn1.oidToDer(t.type).getBytes()),asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,!1,asn1.integerToDer(t.version).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,!0,_recipientsToAsn1(t.recipients)),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,_encryptedContentToAsn1(t.encryptedContent))])])])},findRecipient:function(e){for(var r=e.issuer.attributes,n=0;n<t.recipients.length;++n){var o=t.recipients[n],a=o.issuer;if(o.serialNumber===e.serialNumber&&a.length===r.length){for(var c=!0,u=0;u<r.length;++u)if(a[u].type!==r[u].type||a[u].value!==r[u].value){c=!1;break}if(c)return o}}return null},decrypt:function(e,r){if(t.encryptedContent.key===void 0&&e!==void 0&&r!==void 0)switch(e.encryptedContent.algorithm){case forge.pki.oids.rsaEncryption:case forge.pki.oids.desCBC:var n=r.decrypt(e.encryptedContent.content);t.encryptedContent.key=forge.util.createBuffer(n);break;default:throw new Error("Unsupported asymmetric cipher, OID "+e.encryptedContent.algorithm)}_decryptContent(t)},addRecipient:function(e){t.recipients.push({version:0,issuer:e.issuer.attributes,serialNumber:e.serialNumber,encryptedContent:{algorithm:forge.pki.oids.rsaEncryption,key:e.publicKey}})},encrypt:function(e,r){if(t.encryptedContent.content===void 0){r=r||t.encryptedContent.algorithm,e=e||t.encryptedContent.key;var n,o,a;switch(r){case forge.pki.oids["aes128-CBC"]:n=16,o=16,a=forge.aes.createEncryptionCipher;break;case forge.pki.oids["aes192-CBC"]:n=24,o=16,a=forge.aes.createEncryptionCipher;break;case forge.pki.oids["aes256-CBC"]:n=32,o=16,a=forge.aes.createEncryptionCipher;break;case forge.pki.oids["des-EDE3-CBC"]:n=24,o=8,a=forge.des.createEncryptionCipher;break;default:throw new Error("Unsupported symmetric cipher, OID "+r)}if(e===void 0)e=forge.util.createBuffer(forge.random.getBytes(n));else if(e.length()!=n)throw new Error("Symmetric key has wrong length; got "+e.length()+" bytes, expected "+n+".");t.encryptedContent.algorithm=r,t.encryptedContent.key=e,t.encryptedContent.parameter=forge.util.createBuffer(forge.random.getBytes(o));var c=a(e);if(c.start(t.encryptedContent.parameter.copy()),c.update(t.content),!c.finish())throw new Error("Symmetric encryption failed.");t.encryptedContent.content=c.output}for(var u=0;u<t.recipients.length;++u){var l=t.recipients[u];if(l.encryptedContent.content===void 0)switch(l.encryptedContent.algorithm){case forge.pki.oids.rsaEncryption:l.encryptedContent.content=l.encryptedContent.key.encrypt(t.encryptedContent.key.data);break;default:throw new Error("Unsupported asymmetric cipher, OID "+l.encryptedContent.algorithm)}}}},t};function _recipientFromAsn1(t){var e={},r=[];if(!asn1.validate(t,p7.asn1.recipientInfoValidator,e,r)){var n=new Error("Cannot read PKCS#7 RecipientInfo. ASN.1 object is not an PKCS#7 RecipientInfo.");throw n.errors=r,n}return{version:e.version.charCodeAt(0),issuer:forge.pki.RDNAttributesAsArray(e.issuer),serialNumber:forge.util.createBuffer(e.serial).toHex(),encryptedContent:{algorithm:asn1.derToOid(e.encAlgorithm),parameter:e.encParameter?e.encParameter.value:void 0,content:e.encKey}}}function _recipientToAsn1(t){return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,!1,asn1.integerToDer(t.version).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[forge.pki.distinguishedNameToAsn1({attributes:t.issuer}),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,!1,forge.util.hexToBytes(t.serialNumber))]),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,!1,asn1.oidToDer(t.encryptedContent.algorithm).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,!1,"")]),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,!1,t.encryptedContent.content)])}function _recipientsFromAsn1(t){for(var e=[],r=0;r<t.length;++r)e.push(_recipientFromAsn1(t[r]));return e}function _recipientsToAsn1(t){for(var e=[],r=0;r<t.length;++r)e.push(_recipientToAsn1(t[r]));return e}function _signerToAsn1(t){var e=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,!1,asn1.integerToDer(t.version).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[forge.pki.distinguishedNameToAsn1({attributes:t.issuer}),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,!1,forge.util.hexToBytes(t.serialNumber))]),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,!1,asn1.oidToDer(t.digestAlgorithm).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,!1,"")])]);if(t.authenticatedAttributesAsn1&&e.value.push(t.authenticatedAttributesAsn1),e.value.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,!1,asn1.oidToDer(t.signatureAlgorithm).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,!1,"")])),e.value.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,!1,t.signature)),t.unauthenticatedAttributes.length>0){for(var r=asn1.create(asn1.Class.CONTEXT_SPECIFIC,1,!0,[]),n=0;n<t.unauthenticatedAttributes.length;++n){var o=t.unauthenticatedAttributes[n];r.values.push(_attributeToAsn1(o))}e.value.push(r)}return e}function _signersToAsn1(t){for(var e=[],r=0;r<t.length;++r)e.push(_signerToAsn1(t[r]));return e}function _attributeToAsn1(t){var e;if(t.type===forge.pki.oids.contentType)e=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,!1,asn1.oidToDer(t.value).getBytes());else if(t.type===forge.pki.oids.messageDigest)e=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,!1,t.value.bytes());else if(t.type===forge.pki.oids.signingTime){var r=new Date("1950-01-01T00:00:00Z"),n=new Date("2050-01-01T00:00:00Z"),o=t.value;if(typeof o=="string"){var a=Date.parse(o);isNaN(a)?o.length===13?o=asn1.utcTimeToDate(o):o=asn1.generalizedTimeToDate(o):o=new Date(a)}o>=r&&o<n?e=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.UTCTIME,!1,asn1.dateToUtcTime(o)):e=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.GENERALIZEDTIME,!1,asn1.dateToGeneralizedTime(o))}return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,!1,asn1.oidToDer(t.type).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,!0,[e])])}function _encryptedContentToAsn1(t){return[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,!1,asn1.oidToDer(forge.pki.oids.data).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,!1,asn1.oidToDer(t.algorithm).getBytes()),t.parameter?asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,!1,t.parameter.getBytes()):void 0]),asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,!1,t.content.getBytes())])]}function _fromAsn1(t,e,r){var n={},o=[];if(!asn1.validate(e,r,n,o)){var a=new Error("Cannot read PKCS#7 message. ASN.1 object is not a supported PKCS#7 message.");throw a.errors=a,a}var c=asn1.derToOid(n.contentType);if(c!==forge.pki.oids.data)throw new Error("Unsupported PKCS#7 message. Only wrapped ContentType Data supported.");if(n.encryptedContent){var u="";if(forge.util.isArray(n.encryptedContent))for(var l=0;l<n.encryptedContent.length;++l){if(n.encryptedContent[l].type!==asn1.Type.OCTETSTRING)throw new Error("Malformed PKCS#7 message, expecting encrypted content constructed of only OCTET STRING objects.");u+=n.encryptedContent[l].value}else u=n.encryptedContent;t.encryptedContent={algorithm:asn1.derToOid(n.encAlgorithm),parameter:forge.util.createBuffer(n.encParameter.value),content:forge.util.createBuffer(u)}}if(n.content){var u="";if(forge.util.isArray(n.content))for(var l=0;l<n.content.length;++l){if(n.content[l].type!==asn1.Type.OCTETSTRING)throw new Error("Malformed PKCS#7 message, expecting content constructed of only OCTET STRING objects.");u+=n.content[l].value}else u=n.content;t.content=forge.util.createBuffer(u)}return t.version=n.version.charCodeAt(0),t.rawCapture=n,n}function _decryptContent(t){if(t.encryptedContent.key===void 0)throw new Error("Symmetric key not available.");if(t.content===void 0){var e;switch(t.encryptedContent.algorithm){case forge.pki.oids["aes128-CBC"]:case forge.pki.oids["aes192-CBC"]:case forge.pki.oids["aes256-CBC"]:e=forge.aes.createDecryptionCipher(t.encryptedContent.key);break;case forge.pki.oids.desCBC:case forge.pki.oids["des-EDE3-CBC"]:e=forge.des.createDecryptionCipher(t.encryptedContent.key);break;default:throw new Error("Unsupported symmetric cipher, OID "+t.encryptedContent.algorithm)}if(e.start(t.encryptedContent.parameter),e.update(t.encryptedContent.content),!e.finish())throw new Error("Symmetric decryption failed.");t.content=e.output}}const pki=forge$6.pki,certificateForKey=(t,e)=>{const r=pki.rsa.setPublicKey(e.n,e.e),n=pki.createCertificate();n.publicKey=r,n.serialNumber="01",n.validity.notBefore=new Date,n.validity.notAfter=new Date,n.validity.notAfter.setFullYear(n.validity.notBefore.getFullYear()+10);const o=[{name:"organizationName",value:"ipfs"},{shortName:"OU",value:"keystore"},{name:"commonName",value:t.id}];return n.setSubject(o),n.setIssuer(o),n.setExtensions([{name:"basicConstraints",cA:!0},{name:"keyUsage",keyCertSign:!0,digitalSignature:!0,nonRepudiation:!0,keyEncipherment:!0,dataEncipherment:!0},{name:"extKeyUsage",serverAuth:!0,clientAuth:!0,codeSigning:!0,emailProtection:!0,timeStamping:!0},{name:"nsCertType",client:!0,server:!0,email:!0,objsign:!0,sslCA:!0,emailCA:!0,objCA:!0}]),n.sign(e),n};async function findAsync(t,e){const r=t.map(e),n=(await Promise.all(r)).findIndex(o=>o);return t[n]}const log$C=logger$3("libp2p:keychain:cms"),privates$1=new WeakMap;class CMS{constructor(e,r){if(e==null)throw errcode(new Error("keychain is required"),codes$4.ERR_KEYCHAIN_REQUIRED);this.keychain=e,privates$1.set(this,{dek:r})}async encrypt(e,r){if(!(r instanceof Uint8Array))throw errcode(new Error("Plain data must be a Uint8Array"),codes$4.ERR_INVALID_PARAMETERS);const n=await this.keychain.findKeyByName(e),o=await this.keychain.getPrivateKey(e),a=privates$1.get(this);if(a==null)throw errcode(new Error("dek missing"),codes$4.ERR_INVALID_PARAMETERS);const c=a.dek,u=forge$6.pki.decryptRsaPrivateKey(o,c),l=await certificateForKey(n,u),f=forge$6.pkcs7.createEnvelopedData();f.addRecipient(l),f.content=forge$6.util.createBuffer(r),f.encrypt();const p=forge$6.asn1.toDer(f.toAsn1()).getBytes();return fromString$y(p,"ascii")}async decrypt(e){if(!(e instanceof Uint8Array))throw errcode(new Error("CMS data is required"),codes$4.ERR_INVALID_PARAMETERS);let r;try{const p=forge$6.util.createBuffer(toString$D(e,"ascii")),g=forge$6.asn1.fromDer(p);r=forge$6.pkcs7.messageFromAsn1(g)}catch(p){throw log$C.error(p),errcode(new Error("Invalid CMS"),codes$4.ERR_INVALID_CMS)}const n=r.recipients.filter(p=>p.issuer.find(g=>g.shortName==="O"&&g.value==="ipfs")).filter(p=>p.issuer.find(g=>g.shortName==="CN")).map(p=>({recipient:p,keyId:p.issuer.find(g=>g.shortName==="CN").value})),o=await findAsync(n,async p=>{try{if(await this.keychain.findKeyById(p.keyId)!=null)return!0}catch{return!1}return!1});if(o==null){const p=n.map(g=>g.keyId);throw errcode(new Error(`Decryption needs one of the key(s): ${p.join(", ")}`),codes$4.ERR_MISSING_KEYS,{missingKeys:p})}const a=await this.keychain.findKeyById(o.keyId);if(a==null)throw errcode(new Error("No key available to decrypto"),codes$4.ERR_NO_KEY);const c=await this.keychain.getPrivateKey(a.name),u=privates$1.get(this);if(u==null)throw errcode(new Error("dek missing"),codes$4.ERR_INVALID_PARAMETERS);const l=u.dek,f=forge$6.pki.decryptRsaPrivateKey(c,l);return r.decrypt(o.recipient,f),fromString$y(r.content.getBytes(),"ascii")}}const log$B=logger$3("libp2p:keychain"),keyPrefix="/pkcs8/",infoPrefix="/info/",privates=new WeakMap,NIST={minKeyLength:112/8,minSaltLength:128/8,minIterationCount:1e3},defaultOptions$2={dek:{keyLength:512/8,iterationCount:1e4,salt:"you should override this value with a crypto secure random number",hash:"sha2-512"}};function validateKeyName(t){return t==null||typeof t!="string"?!1:t===sanitize$1(t.trim())&&t.length>0}async function randomDelay(){const t=Math.random()*800+200;await new Promise(e=>setTimeout(e,t))}function DsName(t){return new Key(keyPrefix+t)}function DsInfoName(t){return new Key(infoPrefix+t)}class KeyChain{constructor(e,r){if(this.components=e,this.init=mergeOptions$h(defaultOptions$2,r),this.init.pass!=null&&this.init.pass?.length<20)throw new Error("pass must be least 20 characters");if(this.init.dek?.keyLength!=null&&this.init.dek.keyLength<NIST.minKeyLength)throw new Error(`dek.keyLength must be least ${NIST.minKeyLength} bytes`);if(this.init.dek?.salt?.length!=null&&this.init.dek.salt.length<NIST.minSaltLength)throw new Error(`dek.saltLength must be least ${NIST.minSaltLength} bytes`);if(this.init.dek?.iterationCount!=null&&this.init.dek.iterationCount<NIST.minIterationCount)throw new Error(`dek.iterationCount must be least ${NIST.minIterationCount}`);const n=this.init.pass!=null&&this.init.dek?.salt!=null?pbkdf2(this.init.pass,this.init.dek?.salt,this.init.dek?.iterationCount,this.init.dek?.keyLength,this.init.dek?.hash):"";privates.set(this,{dek:n}),this.started=!1}isStarted(){return this.started}async start(){const e=DsInfoName("self");await this.components.datastore.has(e)||await this.importPeer("self",this.components.peerId),this.started=!0}stop(){this.started=!1}get cms(){const e=privates.get(this);if(e==null)throw errcode(new Error("dek missing"),codes$4.ERR_INVALID_PARAMETERS);const r=e.dek;return new CMS(this,r)}static generateOptions(){const e=Object.assign({},defaultOptions$2),r=Math.ceil(NIST.minSaltLength/3)*3;return e.dek.salt=toString$D(randomBytes$3(r),"base64"),e}static get options(){return defaultOptions$2}async createKey(e,r,n=2048){if(!validateKeyName(e)||e==="self")throw await randomDelay(),errcode(new Error("Invalid key name"),codes$4.ERR_INVALID_KEY_NAME);if(typeof r!="string")throw await randomDelay(),errcode(new Error("Invalid key type"),codes$4.ERR_INVALID_KEY_TYPE);const o=DsName(e);if(await this.components.datastore.has(o))throw await randomDelay(),errcode(new Error("Key name already exists"),codes$4.ERR_KEY_ALREADY_EXISTS);switch(r.toLowerCase()){case"rsa":if(!Number.isSafeInteger(n)||n<2048)throw await randomDelay(),errcode(new Error("Invalid RSA key size"),codes$4.ERR_INVALID_KEY_SIZE);break}let a;try{const c=await generateKeyPair(r,n),u=await c.id(),l=privates.get(this);if(l==null)throw errcode(new Error("dek missing"),codes$4.ERR_INVALID_PARAMETERS);const f=l.dek,p=await c.export(f);a={name:e,id:u};const g=this.components.datastore.batch();g.put(o,fromString$y(p)),g.put(DsInfoName(e),fromString$y(JSON.stringify(a))),await g.commit()}catch(c){throw await randomDelay(),c}return a}async listKeys(){const e={prefix:infoPrefix},r=[];for await(const n of this.components.datastore.query(e))r.push(JSON.parse(toString$D(n.value)));return r}async findKeyById(e){try{return(await this.listKeys()).find(r=>r.id===e)}catch(r){throw await randomDelay(),r}}async findKeyByName(e){if(!validateKeyName(e))throw await randomDelay(),errcode(new Error(`Invalid key name '${e}'`),codes$4.ERR_INVALID_KEY_NAME);const r=DsInfoName(e);try{const n=await this.components.datastore.get(r);return JSON.parse(toString$D(n))}catch(n){throw await randomDelay(),log$B.error(n),errcode(new Error(`Key '${e}' does not exist.`),codes$4.ERR_KEY_NOT_FOUND)}}async removeKey(e){if(!validateKeyName(e)||e==="self")throw await randomDelay(),errcode(new Error(`Invalid key name '${e}'`),codes$4.ERR_INVALID_KEY_NAME);const r=DsName(e),n=await this.findKeyByName(e),o=this.components.datastore.batch();return o.delete(r),o.delete(DsInfoName(e)),await o.commit(),n}async renameKey(e,r){if(!validateKeyName(e)||e==="self")throw await randomDelay(),errcode(new Error(`Invalid old key name '${e}'`),codes$4.ERR_OLD_KEY_NAME_INVALID);if(!validateKeyName(r)||r==="self")throw await randomDelay(),errcode(new Error(`Invalid new key name '${r}'`),codes$4.ERR_NEW_KEY_NAME_INVALID);const n=DsName(e),o=DsName(r),a=DsInfoName(e),c=DsInfoName(r);if(await this.components.datastore.has(o))throw await randomDelay(),errcode(new Error(`Key '${r}' already exists`),codes$4.ERR_KEY_ALREADY_EXISTS);try{const u=await this.components.datastore.get(n),l=await this.components.datastore.get(a),f=JSON.parse(toString$D(l));f.name=r;const p=this.components.datastore.batch();return p.put(o,u),p.put(c,fromString$y(JSON.stringify(f))),p.delete(n),p.delete(a),await p.commit(),f}catch(u){throw await randomDelay(),u}}async exportKey(e,r){if(!validateKeyName(e))throw await randomDelay(),errcode(new Error(`Invalid key name '${e}'`),codes$4.ERR_INVALID_KEY_NAME);if(r==null)throw await randomDelay(),errcode(new Error("Password is required"),codes$4.ERR_PASSWORD_REQUIRED);const n=DsName(e);try{const o=await this.components.datastore.get(n),a=toString$D(o),c=privates.get(this);if(c==null)throw errcode(new Error("dek missing"),codes$4.ERR_INVALID_PARAMETERS);const u=c.dek;return await(await importKey(a,u)).export(r)}catch(o){throw await randomDelay(),o}}async exportPeerId(e){const r="temporary-password",n=await this.exportKey(e,r),o=await importKey(n,r);return await peerIdFromKeys(o.public.bytes,o.bytes)}async importKey(e,r,n){if(!validateKeyName(e)||e==="self")throw await randomDelay(),errcode(new Error(`Invalid key name '${e}'`),codes$4.ERR_INVALID_KEY_NAME);if(r==null)throw await randomDelay(),errcode(new Error("PEM encoded key is required"),codes$4.ERR_PEM_REQUIRED);const o=DsName(e);if(await this.components.datastore.has(o))throw await randomDelay(),errcode(new Error(`Key '${e}' already exists`),codes$4.ERR_KEY_ALREADY_EXISTS);let a;try{a=await importKey(r,n)}catch{throw await randomDelay(),errcode(new Error("Cannot read the key, most likely the password is wrong"),codes$4.ERR_CANNOT_READ_KEY)}let c;try{c=await a.id();const f=privates.get(this);if(f==null)throw errcode(new Error("dek missing"),codes$4.ERR_INVALID_PARAMETERS);const p=f.dek;r=await a.export(p)}catch(f){throw await randomDelay(),f}const u={name:e,id:c},l=this.components.datastore.batch();return l.put(o,fromString$y(r)),l.put(DsInfoName(e),fromString$y(JSON.stringify(u))),await l.commit(),u}async importPeer(e,r){try{if(!validateKeyName(e))throw errcode(new Error(`Invalid key name '${e}'`),codes$4.ERR_INVALID_KEY_NAME);if(r==null)throw errcode(new Error("PeerId is required"),codes$4.ERR_MISSING_PRIVATE_KEY);if(r.privateKey==null)throw errcode(new Error("PeerId.privKey is required"),codes$4.ERR_MISSING_PRIVATE_KEY);const n=await unmarshalPrivateKey(r.privateKey),o=DsName(e);if(await this.components.datastore.has(o))throw await randomDelay(),errcode(new Error(`Key '${e}' already exists`),codes$4.ERR_KEY_ALREADY_EXISTS);const a=privates.get(this);if(a==null)throw errcode(new Error("dek missing"),codes$4.ERR_INVALID_PARAMETERS);const c=a.dek,u=await n.export(c),l={name:e,id:r.toString()},f=this.components.datastore.batch();return f.put(o,fromString$y(u)),f.put(DsInfoName(e),fromString$y(JSON.stringify(l))),await f.commit(),l}catch(n){throw await randomDelay(),n}}async getPrivateKey(e){if(!validateKeyName(e))throw await randomDelay(),errcode(new Error(`Invalid key name '${e}'`),codes$4.ERR_INVALID_KEY_NAME);try{const r=DsName(e),n=await this.components.datastore.get(r);return toString$D(n)}catch(r){throw await randomDelay(),log$B.error(r),errcode(new Error(`Key '${e}' does not exist.`),codes$4.ERR_KEY_NOT_FOUND)}}async rotateKeychainPass(e,r){if(typeof e!="string")throw await randomDelay(),errcode(new Error(`Invalid old pass type '${typeof e}'`),codes$4.ERR_INVALID_OLD_PASS_TYPE);if(typeof r!="string")throw await randomDelay(),errcode(new Error(`Invalid new pass type '${typeof r}'`),codes$4.ERR_INVALID_NEW_PASS_TYPE);if(r.length<20)throw await randomDelay(),errcode(new Error(`Invalid pass length ${r.length}`),codes$4.ERR_INVALID_PASS_LENGTH);log$B("recreating keychain");const n=privates.get(this);if(n==null)throw errcode(new Error("dek missing"),codes$4.ERR_INVALID_PARAMETERS);const o=n.dek;this.init.pass=r;const a=r!=null&&this.init.dek?.salt!=null?pbkdf2(r,this.init.dek.salt,this.init.dek?.iterationCount,this.init.dek?.keyLength,this.init.dek?.hash):"";privates.set(this,{dek:a});const c=await this.listKeys();for(const u of c){const l=await this.components.datastore.get(DsName(u.name)),f=toString$D(l),p=await importKey(f,o),g=a.toString(),$=await p.export(g),_=this.components.datastore.batch(),b={name:u.name,id:u.id};_.put(DsName(u.name),fromString$y($)),_.put(DsInfoName(u.name),fromString$y(JSON.stringify(b))),await _.commit()}log$B("keychain reconstructed")}}async function pReflect(t){try{return{status:"fulfilled",value:await t,isFulfilled:!0,isRejected:!1}}catch(e){return{status:"rejected",reason:e,isFulfilled:!1,isRejected:!0}}}class Node{constructor(e){N(this,"value");N(this,"next");this.value=e}}class Queue{constructor(){G(this,ot,void 0);G(this,yt,void 0);G(this,$t,void 0);this.clear()}enqueue(e){const r=new Node(e);B(this,ot)?(B(this,yt).next=r,W(this,yt,r)):(W(this,ot,r),W(this,yt,r)),Ot(this,$t)._++}dequeue(){const e=B(this,ot);if(e)return W(this,ot,B(this,ot).next),Ot(this,$t)._--,e.value}clear(){W(this,ot,void 0),W(this,yt,void 0),W(this,$t,0)}get size(){return B(this,$t)}*[Symbol.iterator](){let e=B(this,ot);for(;e;)yield e.value,e=e.next}}ot=new WeakMap,yt=new WeakMap,$t=new WeakMap;function pLimit(t){if(!((Number.isInteger(t)||t===Number.POSITIVE_INFINITY)&&t>0))throw new TypeError("Expected `concurrency` to be a number from 1 and up");const e=new Queue;let r=0;const n=()=>{r--,e.size>0&&e.dequeue()()},o=async(u,l,f)=>{r++;const p=(async()=>u(...f))();l(p);try{await p}catch{}n()},a=(u,l,f)=>{e.enqueue(o.bind(void 0,u,l,f)),(async()=>(await Promise.resolve(),r<t&&e.size>0&&e.dequeue()()))()},c=(u,...l)=>new Promise(f=>{a(u,f,l)});return Object.defineProperties(c,{activeCount:{get:()=>r},pendingCount:{get:()=>e.size},clearQueue:{value:()=>{e.clear()}}}),c}async function pSettle(t,e={}){const{concurrency:r=Number.POSITIVE_INFINITY}=e,n=pLimit(r);return Promise.all(t.map(o=>o&&typeof o.then=="function"?pReflect(o):pReflect(typeof o=="function"?n(()=>o()):Promise.resolve(o))))}class TrackedMap extends Map{constructor(r){super();N(this,"metric");const{name:n,metrics:o}=r;this.metric=o.registerMetric(n),this.updateComponentMetric()}set(r,n){return super.set(r,n),this.updateComponentMetric(),this}delete(r){const n=super.delete(r);return this.updateComponentMetric(),n}clear(){super.clear(),this.updateComponentMetric()}updateComponentMetric(){this.metric.update(this.size)}}function trackedMap(t){const{name:e,metrics:r}=t;let n;return r!=null?n=new TrackedMap({name:e,metrics:r}):n=new Map,n}const log$A=logger$3("libp2p:transports");class DefaultTransportManager extends EventEmitter$1{constructor(e,r={}){super(),this.components=e,this.started=!1,this.transports=new Map,this.listeners=trackedMap({name:"libp2p_transport_manager_listeners",metrics:this.components.metrics}),this.faultTolerance=r.faultTolerance??FaultTolerance$2.FATAL_ALL}add(e){const r=e[Symbol.toStringTag];if(r==null)throw errcode(new Error("Transport must have a valid tag"),codes$4.ERR_INVALID_KEY);if(this.transports.has(r))throw errcode(new Error("There is already a transport with this tag"),codes$4.ERR_DUPLICATE_TRANSPORT);log$A("adding transport %s",r),this.transports.set(r,e),this.listeners.has(r)||this.listeners.set(r,[])}isStarted(){return this.started}async start(){const e=this.components.addressManager.getListenAddrs();await this.listen(e),this.started=!0}async stop(){const e=[];for(const[r,n]of this.listeners)for(log$A("closing listeners for %s",r);n.length>0;){const o=n.pop();o!=null&&e.push(o.close())}await Promise.all(e),log$A("all listeners closed");for(const r of this.listeners.keys())this.listeners.set(r,[]);this.started=!1}async dial(e,r){const n=this.transportForMultiaddr(e);if(n==null)throw errcode(new Error(`No transport available for address ${String(e)}`),codes$4.ERR_TRANSPORT_UNAVAILABLE);try{return await n.dial(e,{...r,upgrader:this.components.upgrader})}catch(o){throw o.code==null&&(o.code=codes$4.ERR_TRANSPORT_DIAL_FAILED),o}}getAddrs(){let e=[];for(const r of this.listeners.values())for(const n of r)e=[...e,...n.getAddrs()];return e}getTransports(){return Array.of(...this.transports.values())}transportForMultiaddr(e){for(const r of this.transports.values())if(r.filter([e]).length>0)return r}async listen(e){if(e==null||e.length===0){log$A("no addresses were provided for listening, this node is dial only");return}const r=[];for(const[n,o]of this.transports.entries()){const a=o.filter(e),c=[];for(const u of a){log$A("creating listener for %s on %s",n,u);const l=o.createListener({upgrader:this.components.upgrader});let f=this.listeners.get(n);f==null&&(f=[],this.listeners.set(n,f)),f.push(l),l.addEventListener("listening",()=>{this.dispatchEvent(new CustomEvent("listener:listening",{detail:l}))}),l.addEventListener("close",()=>{this.dispatchEvent(new CustomEvent("listener:close",{detail:l}))}),c.push(l.listen(u))}if(c.length===0){r.push(n);continue}if((await pSettle(c)).find(u=>u.isFulfilled)==null&&this.faultTolerance!==FaultTolerance$2.NO_FATAL)throw errcode(new Error(`Transport (${n}) could not listen on any available address`),codes$4.ERR_NO_VALID_ADDRESSES)}if(r.length===this.transports.size){const n=`no valid addresses were provided for transports [${r.join(", ")}]`;if(this.faultTolerance===FaultTolerance$2.FATAL_ALL)throw errcode(new Error(n),codes$4.ERR_NO_VALID_ADDRESSES);log$A(`libp2p in dial mode only: ${n}`)}}async remove(e){log$A("removing %s",e);for(const r of this.listeners.get(e)??[])await r.close();this.transports.delete(e),this.listeners.delete(e)}async removeAll(){const e=[];for(const r of this.transports.keys())e.push(this.remove(r));await Promise.all(e)}}const PROTOCOL_ID="/multistream/1.0.0",MAX_PROTOCOL_LENGTH=1024;function isAsyncIterable$3(t){return t[Symbol.asyncIterator]!=null}function merge(...t){const e=[];for(const r of t)isAsyncIterable$3(r)||e.push(r);return e.length===t.length?function*(){for(const r of e)yield*r}():async function*(){const r=pushable({objectMode:!0});Promise.resolve().then(async()=>{try{await Promise.all(t.map(async n=>{for await(const o of n)r.push(o)})),r.end()}catch(n){r.end(n)}}),yield*r}()}function isAsyncIterable$2(t){return t[Symbol.asyncIterator]!=null}function first(t){if(isAsyncIterable$2(t))return(async()=>{for await(const e of t)return e})();for(const e of t)return e}function asUint8Array(t){return globalThis.Buffer!=null?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):t}function allocUnsafe$4(t=0){return globalThis.Buffer?.allocUnsafe!=null?asUint8Array(globalThis.Buffer.allocUnsafe(t)):new Uint8Array(t)}const N1$5=Math.pow(2,7),N2$5=Math.pow(2,14),N3$5=Math.pow(2,21),N4$5=Math.pow(2,28),N5$5=Math.pow(2,35),N6$5=Math.pow(2,42),N7$5=Math.pow(2,49),MSB$7=128,REST$7=127;function encodingLength$4(t){if(t<N1$5)return 1;if(t<N2$5)return 2;if(t<N3$5)return 3;if(t<N4$5)return 4;if(t<N5$5)return 5;if(t<N6$5)return 6;if(t<N7$5)return 7;if(Number.MAX_SAFE_INTEGER!=null&&t>Number.MAX_SAFE_INTEGER)throw new RangeError("Could not encode varint");return 8}function encodeUint8Array(t,e,r=0){switch(encodingLength$4(t)){case 8:e[r++]=t&255|MSB$7,t/=128;case 7:e[r++]=t&255|MSB$7,t/=128;case 6:e[r++]=t&255|MSB$7,t/=128;case 5:e[r++]=t&255|MSB$7,t/=128;case 4:e[r++]=t&255|MSB$7,t>>>=7;case 3:e[r++]=t&255|MSB$7,t>>>=7;case 2:e[r++]=t&255|MSB$7,t>>>=7;case 1:{e[r++]=t&255,t>>>=7;break}default:throw new Error("unreachable")}return e}function encodeUint8ArrayList(t,e,r=0){switch(encodingLength$4(t)){case 8:e.set(r++,t&255|MSB$7),t/=128;case 7:e.set(r++,t&255|MSB$7),t/=128;case 6:e.set(r++,t&255|MSB$7),t/=128;case 5:e.set(r++,t&255|MSB$7),t/=128;case 4:e.set(r++,t&255|MSB$7),t>>>=7;case 3:e.set(r++,t&255|MSB$7),t>>>=7;case 2:e.set(r++,t&255|MSB$7),t>>>=7;case 1:{e.set(r++,t&255),t>>>=7;break}default:throw new Error("unreachable")}return e}function decodeUint8Array(t,e){let r=t[e],n=0;if(n+=r&REST$7,r<MSB$7||(r=t[e+1],n+=(r&REST$7)<<7,r<MSB$7)||(r=t[e+2],n+=(r&REST$7)<<14,r<MSB$7)||(r=t[e+3],n+=(r&REST$7)<<21,r<MSB$7)||(r=t[e+4],n+=(r&REST$7)*N4$5,r<MSB$7)||(r=t[e+5],n+=(r&REST$7)*N5$5,r<MSB$7)||(r=t[e+6],n+=(r&REST$7)*N6$5,r<MSB$7)||(r=t[e+7],n+=(r&REST$7)*N7$5,r<MSB$7))return n;throw new RangeError("Could not decode varint")}function decodeUint8ArrayList(t,e){let r=t.get(e),n=0;if(n+=r&REST$7,r<MSB$7||(r=t.get(e+1),n+=(r&REST$7)<<7,r<MSB$7)||(r=t.get(e+2),n+=(r&REST$7)<<14,r<MSB$7)||(r=t.get(e+3),n+=(r&REST$7)<<21,r<MSB$7)||(r=t.get(e+4),n+=(r&REST$7)*N4$5,r<MSB$7)||(r=t.get(e+5),n+=(r&REST$7)*N5$5,r<MSB$7)||(r=t.get(e+6),n+=(r&REST$7)*N6$5,r<MSB$7)||(r=t.get(e+7),n+=(r&REST$7)*N7$5,r<MSB$7))return n;throw new RangeError("Could not decode varint")}function encode$g(t,e,r=0){return e==null&&(e=allocUnsafe$4(encodingLength$4(t))),e instanceof Uint8Array?encodeUint8Array(t,e,r):encodeUint8ArrayList(t,e,r)}function decode$l(t,e=0){return t instanceof Uint8Array?decodeUint8Array(t,e):decodeUint8ArrayList(t,e)}function isAsyncIterable$1(t){return t[Symbol.asyncIterator]!=null}const defaultEncoder$2=t=>{const e=encodingLength$4(t),r=allocUnsafe$4(e);return encode$g(t,r),defaultEncoder$2.bytes=e,r};defaultEncoder$2.bytes=0;function encode$f(t,e){e=e??{};const r=e.lengthEncoder??defaultEncoder$2;function*n(o){const a=r(o.byteLength);a instanceof Uint8Array?yield a:yield*a,o instanceof Uint8Array?yield o:yield*o}return isAsyncIterable$1(t)?async function*(){for await(const o of t)yield*n(o)}():function*(){for(const o of t)yield*n(o)}()}encode$f.single=(t,e)=>{e=e??{};const r=e.lengthEncoder??defaultEncoder$2;return new Uint8ArrayList(r(t.byteLength),t)};const MAX_LENGTH_LENGTH$3=8,MAX_DATA_LENGTH$3=1024*1024*4;var ReadMode$3;(function(t){t[t.LENGTH=0]="LENGTH",t[t.DATA=1]="DATA"})(ReadMode$3||(ReadMode$3={}));const defaultDecoder$3=t=>{const e=decode$l(t);return defaultDecoder$3.bytes=encodingLength$4(e),e};defaultDecoder$3.bytes=0;function decode$k(t,e){const r=new Uint8ArrayList;let n=ReadMode$3.LENGTH,o=-1;const a=e?.lengthDecoder??defaultDecoder$3,c=e?.maxLengthLength??MAX_LENGTH_LENGTH$3,u=e?.maxDataLength??MAX_DATA_LENGTH$3;function*l(){for(;r.byteLength>0;){if(n===ReadMode$3.LENGTH)try{if(o=a(r),o<0)throw errcode(new Error("invalid message length"),"ERR_INVALID_MSG_LENGTH");if(o>u)throw errcode(new Error("message length too long"),"ERR_MSG_DATA_TOO_LONG");const f=a.bytes;r.consume(f),e?.onLength!=null&&e.onLength(o),n=ReadMode$3.DATA}catch(f){if(f instanceof RangeError){if(r.byteLength>c)throw errcode(new Error("message length length too long"),"ERR_MSG_LENGTH_TOO_LONG");break}throw f}if(n===ReadMode$3.DATA){if(r.byteLength<o)break;const f=r.sublist(0,o);r.consume(o),e?.onData!=null&&e.onData(f),yield f,n=ReadMode$3.LENGTH}}}return isAsyncIterable$1(t)?async function*(){for await(const f of t)r.append(f),yield*l();if(r.byteLength>0)throw errcode(new Error("unexpected end of input"),"ERR_UNEXPECTED_EOF")}():function*(){for(const f of t)r.append(f),yield*l();if(r.byteLength>0)throw errcode(new Error("unexpected end of input"),"ERR_UNEXPECTED_EOF")}()}decode$k.fromReader=(t,e)=>{let r=1;const n=async function*(){for(;;)try{const{done:o,value:a}=await t.next(r);if(o===!0)return;a!=null&&(yield a)}catch(o){if(o.code==="ERR_UNDER_READ")return{done:!0,value:null};throw o}finally{r=1}}();return decode$k(n,{...e??{},onLength:o=>{r=o}})};function pipe(t,...e){if(t==null)throw new Error("Empty pipeline");if(isDuplex(t)){const n=t;t=()=>n.source}else if(isIterable(t)||isAsyncIterable(t)){const n=t;t=()=>n}const r=[t,...e];if(r.length>1&&isDuplex(r[r.length-1])&&(r[r.length-1]=r[r.length-1].sink),r.length>2)for(let n=1;n<r.length-1;n++)isDuplex(r[n])&&(r[n]=duplexPipelineFn(r[n]));return rawPipe(...r)}const rawPipe=(...t)=>{let e;for(;t.length>0;)e=t.shift()(e);return e},isAsyncIterable=t=>t?.[Symbol.asyncIterator]!=null,isIterable=t=>t?.[Symbol.iterator]!=null,isDuplex=t=>t==null?!1:t.sink!=null&&t.source!=null,duplexPipelineFn=t=>e=>{const r=t.sink(e);if(r?.then!=null){const n=pushable({objectMode:!0});r.then(()=>{n.end()},c=>{n.end(c)});let o;const a=t.source;if(isAsyncIterable(a))o=async function*(){yield*a,n.end()};else if(isIterable(a))o=function*(){yield*a,n.end()};else throw new Error("Unknown duplex source type - must be Iterable or AsyncIterable");return merge(n,o())}return t.source},log$z=logger$3("libp2p:mss"),NewLine=fromString$y(`
`);function encode$e(t){const e=new Uint8ArrayList(t,NewLine);return encode$f.single(e)}function write(t,e,r={}){const n=encode$e(e);r.writeBytes===!0?t.push(n.subarray()):t.push(n)}function writeAll(t,e,r={}){const n=new Uint8ArrayList;for(const o of e)n.append(encode$e(o));r.writeBytes===!0?t.push(n.subarray()):t.push(n)}async function read$5(t,e){let r=1;const n={[Symbol.asyncIterator]:()=>n,next:async()=>t.next(r)};let o=n;e?.signal!=null&&(o=abortableSource$7(n,e.signal));const a=u=>{r=u},c=await pipe(o,u=>decode$k(u,{onLength:a,maxDataLength:MAX_PROTOCOL_LENGTH}),async u=>first(u));if(c==null||c.length===0)throw new CodeError$4("no buffer returned","ERR_INVALID_MULTISTREAM_SELECT_MESSAGE");if(c.get(c.byteLength-1)!==NewLine[0])throw log$z.error("Invalid mss message - missing newline - %s",c.subarray()),new CodeError$4("missing newline","ERR_INVALID_MULTISTREAM_SELECT_MESSAGE");return c.sublist(0,-1)}async function readString(t,e){const r=await read$5(t,e);return toString$D(r.subarray())}const log$y=logger$3("libp2p:mss:select");async function select$1(t,e,r={}){e=Array.isArray(e)?[...e]:[e];const{reader:n,writer:o,rest:a,stream:c}=handshake(t),u=e.shift();if(u==null)throw new Error("At least one protocol must be specified");log$y.trace('select: write ["%s", "%s"]',PROTOCOL_ID,u);const l=fromString$y(PROTOCOL_ID),f=fromString$y(u);writeAll(o,[l,f],r);let p=await readString(n,r);if(log$y.trace('select: read "%s"',p),p===PROTOCOL_ID&&(p=await readString(n,r),log$y.trace('select: read "%s"',p)),p===u)return a(),{stream:c,protocol:u};for(const g of e){log$y.trace('select: write "%s"',g),write(o,fromString$y(g),r);const $=await readString(n,r);if(log$y.trace('select: read "%s" for "%s"',$,g),$===g)return a(),{stream:c,protocol:g}}throw a(),new CodeError$4("protocol selection failed","ERR_UNSUPPORTED_PROTOCOL")}const log$x=logger$3("libp2p:mss:handle");async function handle(t,e,r){e=Array.isArray(e)?e:[e];const{writer:n,reader:o,rest:a,stream:c}=handshake(t);for(;;){const u=await readString(o,r);if(log$x.trace('read "%s"',u),u===PROTOCOL_ID){log$x.trace('respond with "%s" for "%s"',PROTOCOL_ID,u),write(n,fromString$y(PROTOCOL_ID),r);continue}if(e.includes(u))return write(n,fromString$y(u),r),log$x.trace('respond with "%s" for "%s"',u,u),a(),{stream:c,protocol:u};if(u==="ls"){write(n,new Uint8ArrayList(...e.map(l=>encode$e(fromString$y(l)))),r),log$x.trace('respond with "%s" for %s',e,u);continue}write(n,fromString$y("na"),r),log$x('respond with "na" for "%s"',u)}}const symbol$3=Symbol.for("@libp2p/connection"),log$w=logger$3("libp2p:connection");class ConnectionImpl{constructor(e){const{remoteAddr:r,remotePeer:n,newStream:o,close:a,getStreams:c,stat:u}=e;this.id=`${parseInt(String(Math.random()*1e9)).toString(36)}${Date.now()}`,this.remoteAddr=r,this.remotePeer=n,this.stat={...u,status:OPEN},this._newStream=o,this._close=a,this._getStreams=c,this.tags=[],this._closing=!1}get[Symbol.toStringTag](){return"Connection"}get[symbol$3](){return!0}get streams(){return this._getStreams()}async newStream(e,r){if(this.stat.status===CLOSING)throw errcode(new Error("the connection is being closed"),"ERR_CONNECTION_BEING_CLOSED");if(this.stat.status===CLOSED)throw errcode(new Error("the connection is closed"),"ERR_CONNECTION_CLOSED");Array.isArray(e)||(e=[e]);const n=await this._newStream(e,r);return n.stat.direction="outbound",n}addStream(e){e.stat.direction="inbound"}removeStream(e){}async close(){if(!(this.stat.status===CLOSED||this._closing)){this.stat.status=CLOSING;try{this.streams.forEach(e=>e.close())}catch(e){log$w.error(e)}this._closing=!0,await this._close(),this._closing=!1,this.stat.timeline.close=Date.now(),this.stat.status=CLOSED}}}function createConnection(t){return new ConnectionImpl(t)}const log$v=logger$3("libp2p:registrar"),DEFAULT_MAX_INBOUND_STREAMS$2=32,DEFAULT_MAX_OUTBOUND_STREAMS$2=64;class DefaultRegistrar{constructor(e){this.topologies=new Map,this.handlers=new Map,this.components=e,this._onDisconnect=this._onDisconnect.bind(this),this._onProtocolChange=this._onProtocolChange.bind(this),this._onConnect=this._onConnect.bind(this),this.components.connectionManager.addEventListener("peer:disconnect",this._onDisconnect),this.components.connectionManager.addEventListener("peer:connect",this._onConnect),this.components.peerStore.addEventListener("change:protocols",this._onProtocolChange)}getProtocols(){return Array.from(new Set([...this.topologies.keys(),...this.handlers.keys()])).sort()}getHandler(e){const r=this.handlers.get(e);if(r==null)throw errcode(new Error(`No handler registered for protocol ${e}`),codes$4.ERR_NO_HANDLER_FOR_PROTOCOL);return r}getTopologies(e){const r=this.topologies.get(e);return r==null?[]:[...r.values()]}async handle(e,r,n){if(this.handlers.has(e))throw errcode(new Error(`Handler already registered for protocol ${e}`),codes$4.ERR_PROTOCOL_HANDLER_ALREADY_REGISTERED);const o=mergeOptions$h.bind({ignoreUndefined:!0})({maxInboundStreams:DEFAULT_MAX_INBOUND_STREAMS$2,maxOutboundStreams:DEFAULT_MAX_OUTBOUND_STREAMS$2},n);this.handlers.set(e,{handler:r,options:o}),await this.components.peerStore.protoBook.add(this.components.peerId,[e])}async unhandle(e){const r=Array.isArray(e)?e:[e];r.forEach(n=>{this.handlers.delete(n)}),await this.components.peerStore.protoBook.remove(this.components.peerId,r)}async register(e,r){if(!isTopology(r))throw log$v.error("topology must be an instance of interfaces/topology"),errcode(new Error("topology must be an instance of interfaces/topology"),codes$4.ERR_INVALID_PARAMETERS);const n=`${(Math.random()*1e9).toString(36)}${Date.now()}`;let o=this.topologies.get(e);return o==null&&(o=new Map,this.topologies.set(e,o)),o.set(n,r),await r.setRegistrar(this),n}unregister(e){for(const[r,n]of this.topologies.entries())n.has(e)&&(n.delete(e),n.size===0&&this.topologies.delete(r))}_onDisconnect(e){const r=e.detail;this.components.peerStore.protoBook.get(r.remotePeer).then(n=>{for(const o of n){const a=this.topologies.get(o);if(a!=null)for(const c of a.values())c.onDisconnect(r.remotePeer)}}).catch(n=>{log$v.error(n)})}_onConnect(e){const r=e.detail;this.components.peerStore.protoBook.get(r.remotePeer).then(n=>{for(const o of n){const a=this.topologies.get(o);if(a!=null)for(const c of a.values())c.onConnect(r.remotePeer,r)}}).catch(n=>{log$v.error(n)})}_onProtocolChange(e){const{peerId:r,protocols:n,oldProtocols:o}=e.detail,a=o.filter(u=>!n.includes(u)),c=n.filter(u=>!o.includes(u));for(const u of a){const l=this.topologies.get(u);if(l!=null)for(const f of l.values())f.onDisconnect(r)}for(const u of c){const l=this.topologies.get(u);if(l!=null)for(const f of l.values()){const p=this.components.connectionManager.getConnections(r)[0];p!=null&&f.onConnect(r,p)}}}}const log$u=logger$3("libp2p:upgrader");function findIncomingStreamLimit(t,e){try{const{options:r}=e.getHandler(t);return r.maxInboundStreams}catch(r){if(r.code!==codes$4.ERR_NO_HANDLER_FOR_PROTOCOL)throw r}return DEFAULT_MAX_INBOUND_STREAMS$2}function findOutgoingStreamLimit(t,e){try{const{options:r}=e.getHandler(t);return r.maxOutboundStreams}catch(r){if(r.code!==codes$4.ERR_NO_HANDLER_FOR_PROTOCOL)throw r}return DEFAULT_MAX_OUTBOUND_STREAMS$2}function countStreams(t,e,r){let n=0;return r.streams.forEach(o=>{o.stat.direction===e&&o.stat.protocol===t&&n++}),n}class DefaultUpgrader extends EventEmitter$1{constructor(e,r){super(),this.components=e,this.connectionEncryption=new Map,r.connectionEncryption.forEach(n=>{this.connectionEncryption.set(n.protocol,n)}),this.muxers=new Map,r.muxers.forEach(n=>{this.muxers.set(n.protocol,n)}),this.inboundUpgradeTimeout=r.inboundUpgradeTimeout}async upgradeInbound(e,r){if(!await this.components.connectionManager.acceptIncomingConnection(e))throw errcode(new Error("connection denied"),codes$4.ERR_CONNECTION_DENIED);let n,o,a,c,u;const l=new timeoutAbortController.TimeoutController(this.inboundUpgradeTimeout);try{eventsExports.setMaxListeners?.(1/0,l.signal)}catch{}try{const f=abortableDuplex$1(e,l.signal);if(e.source=f.source,e.sink=f.sink,await this.components.connectionGater.denyInboundConnection(e))throw errcode(new Error("The multiaddr connection is blocked by gater.acceptConnection"),codes$4.ERR_CONNECTION_INTERCEPTED);this.components.metrics?.trackMultiaddrConnection(e),log$u("starting the inbound connection upgrade");let p=e;if(r?.skipProtection!==!0){const g=this.components.connectionProtector;g!=null&&(log$u("protecting the inbound connection"),p=await g.protect(e))}try{if(n=p,r?.skipEncryption!==!0){if({conn:n,remotePeer:o,protocol:u}=await this._encryptInbound(p),await this.components.connectionGater.denyInboundEncryptedConnection(o,{...p,...n}))throw errcode(new Error("The multiaddr connection is blocked by gater.acceptEncryptedConnection"),codes$4.ERR_CONNECTION_INTERCEPTED)}else{const g=e.remoteAddr.getPeerId();if(g==null)throw errcode(new Error("inbound connection that skipped encryption must have a peer id"),codes$4.ERR_INVALID_MULTIADDR);const $=peerIdFromString$1(g);u="native",o=$}if(a=n,r?.muxerFactory!=null)c=r.muxerFactory;else if(this.muxers.size>0){const g=await this._multiplexInbound({...p,...n},this.muxers);c=g.muxerFactory,a=g.stream}}catch(g){throw log$u.error("Failed to upgrade inbound connection",g),g}if(await this.components.connectionGater.denyInboundUpgradedConnection(o,{...p,...n}))throw errcode(new Error("The multiaddr connection is blocked by gater.acceptEncryptedConnection"),codes$4.ERR_CONNECTION_INTERCEPTED);return log$u("Successfully upgraded inbound connection"),this._createConnection({cryptoProtocol:u,direction:"inbound",maConn:e,upgradedConn:a,muxerFactory:c,remotePeer:o})}finally{this.components.connectionManager.afterUpgradeInbound(),l.clear()}}async upgradeOutbound(e,r){const n=e.remoteAddr.getPeerId();let o;if(n!=null&&(o=peerIdFromString$1(n),await this.components.connectionGater.denyOutboundConnection(o,e)))throw errcode(new Error("The multiaddr connection is blocked by connectionGater.denyOutboundConnection"),codes$4.ERR_CONNECTION_INTERCEPTED);let a,c,u,l,f;this.components.metrics?.trackMultiaddrConnection(e),log$u("Starting the outbound connection upgrade");let p=e;if(r?.skipProtection!==!0){const g=this.components.connectionProtector;g!=null&&(p=await g.protect(e))}try{if(a=p,r?.skipEncryption!==!0){if({conn:a,remotePeer:c,protocol:l}=await this._encryptOutbound(p,o),await this.components.connectionGater.denyOutboundEncryptedConnection(c,{...p,...a}))throw errcode(new Error("The multiaddr connection is blocked by gater.acceptEncryptedConnection"),codes$4.ERR_CONNECTION_INTERCEPTED)}else{if(o==null)throw errcode(new Error("Encryption was skipped but no peer id was passed"),codes$4.ERR_INVALID_PEER);l="native",c=o}if(u=a,r?.muxerFactory!=null)f=r.muxerFactory;else if(this.muxers.size>0){const g=await this._multiplexOutbound({...p,...a},this.muxers);f=g.muxerFactory,u=g.stream}}catch(g){throw log$u.error("Failed to upgrade outbound connection",g),await e.close(g),g}if(await this.components.connectionGater.denyOutboundUpgradedConnection(c,{...p,...a}))throw errcode(new Error("The multiaddr connection is blocked by gater.acceptEncryptedConnection"),codes$4.ERR_CONNECTION_INTERCEPTED);return log$u("Successfully upgraded outbound connection"),this._createConnection({cryptoProtocol:l,direction:"outbound",maConn:e,upgradedConn:u,muxerFactory:f,remotePeer:c})}_createConnection(e){const{cryptoProtocol:r,direction:n,maConn:o,upgradedConn:a,remotePeer:c,muxerFactory:u}=e;let l,f,p;u!=null&&(l=u.createStreamMuxer({direction:n,onIncomingStream:_=>{p!=null&&Promise.resolve().then(async()=>{const b=this.components.registrar.getProtocols(),{stream:D,protocol:v}=await handle(_,b);if(log$u("%s: incoming stream opened on %s",n,v),p==null)return;const S=findIncomingStreamLimit(v,this.components.registrar);if(countStreams(v,"inbound",p)===S){_.abort(errcode(new Error(`Too many inbound protocol streams for protocol "${v}" - limit ${S}`),codes$4.ERR_TOO_MANY_INBOUND_PROTOCOL_STREAMS));return}_.source=D.source,_.sink=D.sink,_.stat.protocol=v,this.components.peerStore.protoBook.add(c,[v]).catch(I=>log$u.error(I)),p.addStream(_),this.components.metrics?.trackProtocolStream(_,p),this._onStream({connection:p,stream:_,protocol:v})}).catch(b=>{log$u.error(b),_.stat.timeline.close==null&&_.close()})},onStreamEnd:_=>{p?.removeStream(_.id)}}),f=async(_,b={})=>{if(l==null)throw errcode(new Error("Stream is not multiplexed"),codes$4.ERR_MUXER_UNAVAILABLE);log$u("%s: starting new stream on %s",n,_);const D=await l.newStream();let v;try{if(b.signal==null){log$u("No abort signal was passed while trying to negotiate protocols %s falling back to default timeout",_),v=new timeoutAbortController.TimeoutController(3e4),b.signal=v.signal;try{eventsExports.setMaxListeners?.(1/0,v.signal)}catch{}}const{stream:S,protocol:I}=await select$1(D,_,b),R=findOutgoingStreamLimit(I,this.components.registrar);if(countStreams(I,"outbound",p)===R){const C=errcode(new Error(`Too many outbound protocol streams for protocol "${I}" - limit ${R}`),codes$4.ERR_TOO_MANY_OUTBOUND_PROTOCOL_STREAMS);throw D.abort(C),C}return this.components.peerStore.protoBook.add(c,[I]).catch(C=>log$u.error(C)),D.source=S.source,D.sink=S.sink,D.stat.protocol=I,this.components.metrics?.trackProtocolStream(D,p),D}catch(S){throw log$u.error("could not create new stream",S),D.stat.timeline.close==null&&D.close(),S.code!=null?S:errcode(S,codes$4.ERR_UNSUPPORTED_PROTOCOL)}finally{v?.clear()}},Promise.all([l.sink(a.source),a.sink(l.source)]).catch(_=>{log$u.error(_)}));const g=o.timeline;o.timeline=new Proxy(g,{set:(..._)=>(p!=null&&_[1]==="close"&&_[2]!=null&&g.close==null&&(async()=>{try{p.stat.status==="OPEN"&&await p.close()}catch(b){log$u.error(b)}finally{this.dispatchEvent(new CustomEvent("connectionEnd",{detail:p}))}})().catch(b=>{log$u.error(b)}),Reflect.set(..._))}),o.timeline.upgraded=Date.now();const $=()=>{throw errcode(new Error("connection is not multiplexed"),codes$4.ERR_CONNECTION_NOT_MULTIPLEXED)};return p=createConnection({remoteAddr:o.remoteAddr,remotePeer:c,stat:{status:"OPEN",direction:n,timeline:o.timeline,multiplexer:l?.protocol,encryption:r},newStream:f??$,getStreams:()=>l!=null?l.streams:$(),close:async()=>{await o.close(),l?.close()}}),this.dispatchEvent(new CustomEvent("connection",{detail:p})),p}_onStream(e){const{connection:r,stream:n,protocol:o}=e,{handler:a}=this.components.registrar.getHandler(o);a({connection:r,stream:n})}async _encryptInbound(e){const r=Array.from(this.connectionEncryption.keys());log$u("handling inbound crypto protocol selection",r);try{const{stream:n,protocol:o}=await handle(e,r,{writeBytes:!0}),a=this.connectionEncryption.get(o);if(a==null)throw new Error(`no crypto module found for ${o}`);return log$u("encrypting inbound connection..."),{...await a.secureInbound(this.components.peerId,n),protocol:o}}catch(n){throw errcode(n,codes$4.ERR_ENCRYPTION_FAILED)}}async _encryptOutbound(e,r){const n=Array.from(this.connectionEncryption.keys());log$u("selecting outbound crypto protocol",n);try{const{stream:o,protocol:a}=await select$1(e,n,{writeBytes:!0}),c=this.connectionEncryption.get(a);if(c==null)throw new Error(`no crypto module found for ${a}`);return log$u("encrypting outbound connection to %p",r),{...await c.secureOutbound(this.components.peerId,o,r),protocol:a}}catch(o){throw errcode(o,codes$4.ERR_ENCRYPTION_FAILED)}}async _multiplexOutbound(e,r){const n=Array.from(r.keys());log$u("outbound selecting muxer %s",n);try{const{stream:o,protocol:a}=await select$1(e,n,{writeBytes:!0});log$u("%s selected as muxer protocol",a);const c=r.get(a);return{stream:o,muxerFactory:c}}catch(o){throw log$u.error("error multiplexing outbound stream",o),errcode(o,codes$4.ERR_MUXER_UNAVAILABLE)}}async _multiplexInbound(e,r){const n=Array.from(r.keys());log$u("inbound handling muxers %s",n);try{const{stream:o,protocol:a}=await handle(e,n,{writeBytes:!0}),c=r.get(a);return{stream:o,muxerFactory:c}}catch(o){throw log$u.error("error multiplexing inbound stream",o),errcode(o,codes$4.ERR_MUXER_UNAVAILABLE)}}}var Identify;(function(t){let e;t.codec=()=>(e==null&&(e=message((r,n,o={})=>{if(o.lengthDelimited!==!1&&n.fork(),r.protocolVersion!=null&&(n.uint32(42),n.string(r.protocolVersion)),r.agentVersion!=null&&(n.uint32(50),n.string(r.agentVersion)),r.publicKey!=null&&(n.uint32(10),n.bytes(r.publicKey)),r.listenAddrs!=null)for(const a of r.listenAddrs)n.uint32(18),n.bytes(a);if(r.observedAddr!=null&&(n.uint32(34),n.bytes(r.observedAddr)),r.protocols!=null)for(const a of r.protocols)n.uint32(26),n.string(a);r.signedPeerRecord!=null&&(n.uint32(66),n.bytes(r.signedPeerRecord)),o.lengthDelimited!==!1&&n.ldelim()},(r,n)=>{const o={listenAddrs:[],protocols:[]},a=n==null?r.len:r.pos+n;for(;r.pos<a;){const c=r.uint32();switch(c>>>3){case 5:o.protocolVersion=r.string();break;case 6:o.agentVersion=r.string();break;case 1:o.publicKey=r.bytes();break;case 2:o.listenAddrs.push(r.bytes());break;case 4:o.observedAddr=r.bytes();break;case 3:o.protocols.push(r.string());break;case 8:o.signedPeerRecord=r.bytes();break;default:r.skipType(c&7);break}}return o})),e),t.encode=r=>encodeMessage(r,t.codec()),t.decode=r=>decodeMessage(r,t.codec())})(Identify||(Identify={}));const version="0.0.0",name="libp2p",AGENT_VERSION=`js-libp2p/${version}`,IDENTIFY_PROTOCOL_VERSION="0.1.0",MULTICODEC_IDENTIFY_PROTOCOL_NAME="id",MULTICODEC_IDENTIFY_PUSH_PROTOCOL_NAME="id/push",MULTICODEC_IDENTIFY_PROTOCOL_VERSION="1.0.0",MULTICODEC_IDENTIFY_PUSH_PROTOCOL_VERSION="1.0.0",log$t=logger$3("libp2p:identify"),MAX_IDENTIFY_MESSAGE_SIZE=1024*8;class IdentifyService{constructor(e,r){this.components=e,this.started=!1,this.init=r,this.identifyProtocolStr=`/${r.protocolPrefix}/${MULTICODEC_IDENTIFY_PROTOCOL_NAME}/${MULTICODEC_IDENTIFY_PROTOCOL_VERSION}`,this.identifyPushProtocolStr=`/${r.protocolPrefix}/${MULTICODEC_IDENTIFY_PUSH_PROTOCOL_NAME}/${MULTICODEC_IDENTIFY_PUSH_PROTOCOL_VERSION}`,this.host={protocolVersion:`${r.protocolPrefix}/${IDENTIFY_PROTOCOL_VERSION}`,...r.host},this.components.connectionManager.addEventListener("peer:connect",n=>{const o=n.detail;this.identify(o).catch(log$t.error)}),this.components.peerStore.addEventListener("change:multiaddrs",n=>{const{peerId:o}=n.detail;this.components.peerId.equals(o)&&this.pushToPeerStore().catch(a=>log$t.error(a))}),this.components.peerStore.addEventListener("change:protocols",n=>{const{peerId:o}=n.detail;this.components.peerId.equals(o)&&this.pushToPeerStore().catch(a=>log$t.error(a))})}isStarted(){return this.started}async start(){this.started||(await this.components.peerStore.metadataBook.setValue(this.components.peerId,"AgentVersion",fromString$y(this.host.agentVersion)),await this.components.peerStore.metadataBook.setValue(this.components.peerId,"ProtocolVersion",fromString$y(this.host.protocolVersion)),await this.components.registrar.handle(this.identifyProtocolStr,e=>{this._handleIdentify(e).catch(r=>{log$t.error(r)})},{maxInboundStreams:this.init.maxInboundStreams,maxOutboundStreams:this.init.maxOutboundStreams}),await this.components.registrar.handle(this.identifyPushProtocolStr,e=>{this._handlePush(e).catch(r=>{log$t.error(r)})},{maxInboundStreams:this.init.maxPushIncomingStreams,maxOutboundStreams:this.init.maxPushOutgoingStreams}),this.started=!0)}async stop(){await this.components.registrar.unhandle(this.identifyProtocolStr),await this.components.registrar.unhandle(this.identifyPushProtocolStr),this.started=!1}async push(e){const r=await this.components.peerStore.addressBook.getRawEnvelope(this.components.peerId),n=this.components.addressManager.getAddresses().map(c=>c.bytes),o=await this.components.peerStore.protoBook.get(this.components.peerId),a=e.map(async c=>{let u;const l=new timeoutAbortController.TimeoutController(this.init.timeout);try{eventsExports.setMaxListeners?.(1/0,l.signal)}catch{}try{u=await c.newStream([this.identifyPushProtocolStr],{signal:l.signal}),await abortableDuplex$1(u,l.signal).sink(pipe$1([Identify.encode({listenAddrs:n,signedPeerRecord:r,protocols:o})],encode$h()))}catch(f){log$t.error("could not push identify update to peer",f)}finally{u?.close(),l.clear()}});await Promise.all(a)}async pushToPeerStore(){if(!this.isStarted())return;const e=[];for(const r of this.components.connectionManager.getConnections()){const n=r.remotePeer;(await this.components.peerStore.get(n)).protocols.includes(this.identifyPushProtocolStr)&&e.push(r)}await this.push(e)}async _identify(e,r={}){let n,o=r.signal,a;if(o==null){n=new timeoutAbortController.TimeoutController(this.init.timeout),o=n.signal;try{eventsExports.setMaxListeners?.(1/0,n.signal)}catch{}}try{a=await e.newStream([this.identifyProtocolStr],{signal:o});const c=abortableDuplex$1(a,o),u=await pipe$1([],c,decode$m({maxDataLength:this.init.maxIdentifyMessageSize??MAX_IDENTIFY_MESSAGE_SIZE}),async l=>await first$1(l));if(u==null)throw errcode(new Error("No data could be retrieved"),codes$4.ERR_CONNECTION_ENDED);try{return Identify.decode(u)}catch(l){throw errcode(l,codes$4.ERR_INVALID_MESSAGE)}}finally{n?.clear(),a?.close()}}async identify(e,r={}){const n=await this._identify(e,r),{publicKey:o,listenAddrs:a,protocols:c,observedAddr:u,signedPeerRecord:l,agentVersion:f,protocolVersion:p}=n;if(o==null)throw errcode(new Error("public key was missing from identify message"),codes$4.ERR_MISSING_PUBLIC_KEY);const g=await peerIdFromKeys(o);if(!e.remotePeer.equals(g))throw errcode(new Error("identified peer does not match the expected peer"),codes$4.ERR_INVALID_PEER);if(this.components.peerId.equals(g))throw errcode(new Error("identified peer is our own peer id?"),codes$4.ERR_INVALID_PEER);const $=IdentifyService.getCleanMultiaddr(u);if(l!=null){log$t("received signed peer record from %p",g);try{const _=await RecordEnvelope.openAndCertify(l,PeerRecord.DOMAIN);if(!_.peerId.equals(g))throw errcode(new Error("identified peer does not match the expected peer"),codes$4.ERR_INVALID_PEER);if(await this.components.peerStore.addressBook.consumePeerRecord(_)){await this.components.peerStore.protoBook.set(g,c),f!=null&&await this.components.peerStore.metadataBook.setValue(g,"AgentVersion",fromString$y(f)),p!=null&&await this.components.peerStore.metadataBook.setValue(g,"ProtocolVersion",fromString$y(p)),log$t("identify completed for peer %p and protocols %o",g,c);return}}catch(_){log$t("received invalid envelope, discard it and fallback to listenAddrs is available",_)}}else log$t("no signed peer record received from %p",g);log$t("falling back to legacy addresses from %p",g);try{await this.components.peerStore.addressBook.set(g,a.map(_=>multiaddr$3(_)))}catch(_){log$t.error("received invalid addrs",_)}await this.components.peerStore.protoBook.set(g,c),f!=null&&await this.components.peerStore.metadataBook.setValue(g,"AgentVersion",fromString$y(f)),p!=null&&await this.components.peerStore.metadataBook.setValue(g,"ProtocolVersion",fromString$y(p)),log$t("identify completed for peer %p and protocols %o",g,c),log$t("received observed address of %s",$?.toString())}async _handleIdentify(e){const{connection:r,stream:n}=e,o=new timeoutAbortController.TimeoutController(this.init.timeout);try{eventsExports.setMaxListeners?.(1/0,o.signal)}catch{}try{const a=this.components.peerId.publicKey??new Uint8Array(0),c=await this.components.peerStore.get(this.components.peerId),u=this.components.addressManager.getAddresses().map($=>$.decapsulateCode(getProtocol$3("p2p").code));let l=c.peerRecordEnvelope;if(u.length>0&&l==null){const $=new PeerRecord({peerId:this.components.peerId,multiaddrs:u}),_=await RecordEnvelope.seal($,this.components.peerId);await this.components.peerStore.addressBook.consumePeerRecord(_),l=_.marshal().subarray()}const f=Identify.encode({protocolVersion:this.host.protocolVersion,agentVersion:this.host.agentVersion,publicKey:a,listenAddrs:u.map($=>$.bytes),signedPeerRecord:l,observedAddr:r.remoteAddr.bytes,protocols:c.protocols}),p=abortableDuplex$1(n,o.signal),g=pipe$1([f],encode$h());await p.sink(g)}catch(a){log$t.error("could not respond to identify request",a)}finally{n.close(),o.clear()}}async _handlePush(e){const{connection:r,stream:n}=e,o=new timeoutAbortController.TimeoutController(this.init.timeout);try{eventsExports.setMaxListeners?.(1/0,o.signal)}catch{}let a;try{const u=abortableDuplex$1(n,o.signal),l=await pipe$1([],u,decode$m({maxDataLength:this.init.maxIdentifyMessageSize??MAX_IDENTIFY_MESSAGE_SIZE}),async f=>await first$1(f));l!=null&&(a=Identify.decode(l))}catch(u){return log$t.error("received invalid message",u)}finally{n.close(),o.clear()}if(a==null)return log$t.error("received invalid message");const c=r.remotePeer;if(this.components.peerId.equals(c)){log$t("received push from ourselves?");return}if(log$t("received push from %p",c),a.signedPeerRecord!=null){log$t("received signedPeerRecord in push");try{const u=await RecordEnvelope.openAndCertify(a.signedPeerRecord,PeerRecord.DOMAIN);if(await this.components.peerStore.addressBook.consumePeerRecord(u)){log$t("consumed signedPeerRecord sent in push"),await this.components.peerStore.protoBook.set(c,a.protocols);return}else log$t("failed to consume signedPeerRecord sent in push")}catch(u){log$t("received invalid envelope, discard it and fallback to listenAddrs is available",u)}}else log$t("did not receive signedPeerRecord in push");try{await this.components.peerStore.addressBook.set(c,a.listenAddrs.map(u=>multiaddr$3(u)))}catch(u){log$t.error("received invalid addrs",u)}try{await this.components.peerStore.protoBook.set(c,a.protocols)}catch(u){log$t.error("received invalid protocols",u)}log$t("handled push from %p",c)}static getCleanMultiaddr(e){if(e!=null&&e.length>0)try{return multiaddr$3(e)}catch{}}}var FetchRequest;(function(t){let e;t.codec=()=>(e==null&&(e=message((r,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),(o.writeDefaults===!0||r.identifier!=="")&&(n.uint32(10),n.string(r.identifier)),o.lengthDelimited!==!1&&n.ldelim()},(r,n)=>{const o={identifier:""},a=n==null?r.len:r.pos+n;for(;r.pos<a;){const c=r.uint32();switch(c>>>3){case 1:o.identifier=r.string();break;default:r.skipType(c&7);break}}return o})),e),t.encode=r=>encodeMessage(r,t.codec()),t.decode=r=>decodeMessage(r,t.codec())})(FetchRequest||(FetchRequest={}));var FetchResponse;(function(t){let e;(function(o){o.OK="OK",o.NOT_FOUND="NOT_FOUND",o.ERROR="ERROR"})(e=t.StatusCode||(t.StatusCode={}));let r;(function(o){o[o.OK=0]="OK",o[o.NOT_FOUND=1]="NOT_FOUND",o[o.ERROR=2]="ERROR"})(r||(r={})),function(o){o.codec=()=>enumeration(r)}(e=t.StatusCode||(t.StatusCode={}));let n;t.codec=()=>(n==null&&(n=message((o,a,c={})=>{c.lengthDelimited!==!1&&a.fork(),(c.writeDefaults===!0||o.status!=null&&r[o.status]!==0)&&(a.uint32(8),t.StatusCode.codec().encode(o.status,a)),(c.writeDefaults===!0||o.data!=null&&o.data.byteLength>0)&&(a.uint32(18),a.bytes(o.data)),c.lengthDelimited!==!1&&a.ldelim()},(o,a)=>{const c={status:e.OK,data:new Uint8Array(0)},u=a==null?o.len:o.pos+a;for(;o.pos<u;){const l=o.uint32();switch(l>>>3){case 1:c.status=t.StatusCode.codec().decode(o);break;case 2:c.data=o.bytes();break;default:o.skipType(l&7);break}}return c})),n),t.encode=o=>encodeMessage(o,t.codec()),t.decode=o=>decodeMessage(o,t.codec())})(FetchResponse||(FetchResponse={}));const PROTOCOL_VERSION$1="0.0.1",PROTOCOL_NAME$1="fetch",log$s=logger$3("libp2p:fetch");class FetchService{constructor(e,r){this.started=!1,this.components=e,this.protocol=`/${r.protocolPrefix??"libp2p"}/${PROTOCOL_NAME$1}/${PROTOCOL_VERSION$1}`,this.lookupFunctions=new Map,this.handleMessage=this.handleMessage.bind(this),this.init=r}async start(){await this.components.registrar.handle(this.protocol,e=>{this.handleMessage(e).catch(r=>{log$s.error(r)}).finally(()=>{e.stream.close()})},{maxInboundStreams:this.init.maxInboundStreams,maxOutboundStreams:this.init.maxOutboundStreams}),this.started=!0}async stop(){await this.components.registrar.unhandle(this.protocol),this.started=!1}isStarted(){return this.started}async fetch(e,r,n={}){log$s("dialing %s to %p",this.protocol,e);const o=await this.components.connectionManager.openConnection(e,n);let a,c=n.signal,u;if(c==null){log$s("using default timeout of %d ms",this.init.timeout),a=new timeoutAbortController.TimeoutController(this.init.timeout),c=a.signal;try{eventsExports.setMaxListeners?.(1/0,a.signal)}catch{}}try{u=await o.newStream(this.protocol,{signal:c});const l=abortableDuplex$1(u,c);return log$s("fetch %s",r),await pipe$1([FetchRequest.encode({identifier:r})],encode$h(),l,decode$m(),async function(f){const p=await first$1(f);if(p==null)throw errcode(new Error("No data received"),codes$4.ERR_INVALID_MESSAGE);const g=FetchResponse.decode(p);switch(g.status){case FetchResponse.StatusCode.OK:return log$s("received status for %s ok",r),g.data;case FetchResponse.StatusCode.NOT_FOUND:return log$s("received status for %s not found",r),null;case FetchResponse.StatusCode.ERROR:{log$s("received status for %s error",r);const $=toString$D(g.data);throw errcode(new Error("Error in fetch protocol response: "+$),codes$4.ERR_INVALID_PARAMETERS)}default:throw log$s("received status for %s unknown",r),errcode(new Error("Unknown response status"),codes$4.ERR_INVALID_MESSAGE)}})??null}finally{a?.clear(),u?.close()}}async handleMessage(e){const{stream:r}=e,n=this;await pipe$1(r,decode$m(),async function*(o){const a=await first$1(o);if(a==null)throw errcode(new Error("No data received"),codes$4.ERR_INVALID_MESSAGE);const c=FetchRequest.decode(a);let u;const l=n._getLookupFunction(c.identifier);if(l!=null){log$s("look up data with identifier %s",c.identifier);const f=await l(c.identifier);f!=null?(log$s("sending status for %s ok",c.identifier),u={status:FetchResponse.StatusCode.OK,data:f}):(log$s("sending status for %s not found",c.identifier),u={status:FetchResponse.StatusCode.NOT_FOUND,data:new Uint8Array(0)})}else{log$s("sending status for %s error",c.identifier);const f=fromString$y(`No lookup function registered for key: ${c.identifier}`);u={status:FetchResponse.StatusCode.ERROR,data:f}}yield FetchResponse.encode(u)},encode$h(),r)}_getLookupFunction(e){for(const r of this.lookupFunctions.keys())if(e.startsWith(r))return this.lookupFunctions.get(r)}registerLookupFunction(e,r){if(this.lookupFunctions.has(e))throw errcode(new Error("Fetch protocol handler for key prefix '"+e+"' already registered"),codes$4.ERR_KEY_ALREADY_EXISTS);this.lookupFunctions.set(e,r)}unregisterLookupFunction(e,r){r!=null&&this.lookupFunctions.get(e)!==r||this.lookupFunctions.delete(e)}}const PING_LENGTH=32,PROTOCOL_VERSION="1.0.0",PROTOCOL_NAME="ping",log$r=logger$3("libp2p:ping");class PingService{constructor(e,r){this.components=e,this.started=!1,this.protocol=`/${r.protocolPrefix}/${PROTOCOL_NAME}/${PROTOCOL_VERSION}`,this.init=r}async start(){await this.components.registrar.handle(this.protocol,this.handleMessage,{maxInboundStreams:this.init.maxInboundStreams,maxOutboundStreams:this.init.maxOutboundStreams}),this.started=!0}async stop(){await this.components.registrar.unhandle(this.protocol),this.started=!1}isStarted(){return this.started}handleMessage(e){const{stream:r}=e;pipe$1(r,r).catch(n=>{log$r.error(n)})}async ping(e,r={}){log$r("dialing %s to %p",this.protocol,e);const n=Date.now(),o=randomBytes$3(PING_LENGTH),a=await this.components.connectionManager.openConnection(e,r);let c,u=r.signal,l;if(u==null){c=new timeoutAbortController.TimeoutController(this.init.timeout),u=c.signal;try{eventsExports.setMaxListeners?.(1/0,c.signal)}catch{}}try{l=await a.newStream([this.protocol],{signal:u});const f=abortableDuplex$1(l,u),p=await pipe$1([o],f,async $=>await first$1($)),g=Date.now();if(p==null||!equals$R(o,p.subarray()))throw errcode(new Error("Received wrong ping ack"),codes$4.ERR_WRONG_PING_ACK);return g-n}finally{c?.clear(),l?.close()}}}async function upnpNat(){throw new Error("Not supported in browsers")}function isLoopbackAddr(t){return/^127\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(t)||/^::1$/.test(t)}function isLoopback(t){const{address:e}=t.nodeAddress();return isLoopbackAddr(e)}const log$q=logger$3("libp2p:nat"),DEFAULT_TTL=7200;function highPort(t=1024,e=65535){return Math.floor(Math.random()*(e-t+1)+t)}class NatManager{constructor(e,r){if(this.components=e,this.started=!1,this.enabled=r.enabled,this.externalAddress=r.externalAddress,this.localAddress=r.localAddress,this.description=r.description??`${name}@${version} ${this.components.peerId.toString()}`,this.ttl=r.ttl??DEFAULT_TTL,this.keepAlive=r.keepAlive??!0,this.gateway=r.gateway,this.ttl<DEFAULT_TTL)throw errcode(new Error(`NatManager ttl should be at least ${DEFAULT_TTL} seconds`),codes$4.ERR_INVALID_PARAMETERS)}isStarted(){return this.started}start(){}afterStart(){isBrowser$2||!this.enabled||this.started||(this.started=!0,this._start().catch(e=>{log$q.error(e)}))}async _start(){const e=this.components.transportManager.getAddrs();for(const r of e){const{family:n,host:o,port:a,transport:c}=r.toOptions();if(!r.isThinWaistAddress()||c!=="tcp"||isLoopback(r)||n!==4)continue;const u=await this._getClient(),l=this.externalAddress??await u.externalIp(),f=is_ip_private(l);if(f===!0)throw new Error(`${l} is private - please set config.nat.externalIp to an externally routable IP or ensure you are not behind a double NAT`);if(f==null)throw new Error(`${l} is not an IP address`);const p=highPort();log$q(`opening uPnP connection from ${l}:${p} to ${o}:${a}`),await u.map({publicPort:p,localPort:a,localAddress:this.localAddress,protocol:c.toUpperCase()==="TCP"?"TCP":"UDP"}),this.components.addressManager.addObservedAddr(fromNodeAddress({family:4,address:l,port:p},c))}}async _getClient(){return this.client!=null?this.client:(this.client=await upnpNat({description:this.description,ttl:this.ttl,keepAlive:this.keepAlive,gateway:this.gateway}),this.client)}async stop(){if(!(isBrowser$2||this.client==null))try{await this.client.close(),this.client=void 0}catch(e){log$q.error(e)}}}const log$p=logger$3("libp2p:peer-record-updater");class PeerRecordUpdater{constructor(e){this.components=e,this.started=!1,this.update=this.update.bind(this)}isStarted(){return this.started}async start(){this.started=!0,this.components.transportManager.addEventListener("listener:listening",this.update),this.components.transportManager.addEventListener("listener:close",this.update),this.components.addressManager.addEventListener("change:addresses",this.update)}async stop(){this.started=!1,this.components.transportManager.removeEventListener("listener:listening",this.update),this.components.transportManager.removeEventListener("listener:close",this.update),this.components.addressManager.removeEventListener("change:addresses",this.update)}update(){Promise.resolve().then(async()=>{const e=new PeerRecord({peerId:this.components.peerId,multiaddrs:this.components.addressManager.getAddresses().map(n=>n.decapsulateCode(getProtocol$3("p2p").code))}),r=await RecordEnvelope.seal(e,this.components.peerId);await this.components.peerStore.addressBook.consumePeerRecord(r)}).catch(e=>{log$p.error("Could not update self peer record: %o",e)})}}class DHTPeerRouting{constructor(e){this.dht=e}async findPeer(e,r={}){for await(const n of this.dht.findPeer(e,r))if(n.name==="FINAL_PEER")return n.peer;throw errcode(new Error(messages.NOT_FOUND),codes$4.ERR_NOT_FOUND)}async*getClosestPeers(e,r={}){for await(const n of this.dht.getClosestPeers(e,r))n.name==="FINAL_PEER"&&(yield n.peer)}}const isV4$1=isIPv4,isV6$1=isIPv6,toBytes$1=function(t){let e=0;if(t=t.toString().trim(),isV4$1(t)){const r=new Uint8Array(e+4);return t.split(/\./g).forEach(n=>{r[e++]=parseInt(n,10)&255}),r}if(isV6$1(t)){const r=t.split(":",8);let n;for(n=0;n<r.length;n++){const a=isV4$1(r[n]);let c;a&&(c=toBytes$1(r[n]),r[n]=toString$D(c.slice(0,2),"base16")),c!=null&&++n<8&&r.splice(n,0,toString$D(c.slice(2,4),"base16"))}if(r[0]==="")for(;r.length<8;)r.unshift("0");else if(r[r.length-1]==="")for(;r.length<8;)r.push("0");else if(r.length<8){for(n=0;n<r.length&&r[n]!=="";n++);const a=[n,1];for(n=9-r.length;n>0;n--)a.push("0");r.splice.apply(r,a)}const o=new Uint8Array(e+16);for(n=0;n<r.length;n++){const a=parseInt(r[n],16);o[e++]=a>>8&255,o[e++]=a&255}return o}throw new Error("invalid ip address")},toString$3=function(t,e=0,r){e=~~e,r=r??t.length-e;const n=new DataView(t.buffer);if(r===4){const o=[];for(let a=0;a<r;a++)o.push(t[e+a]);return o.join(".")}if(r===16){const o=[];for(let a=0;a<r;a+=2)o.push(n.getUint16(e+a).toString(16));return o.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""},V$1=-1,names$1={},codes$2={},table$1=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,V$1,"ip6zone"],[43,8,"ipcidr"],[53,V$1,"dns",!0],[54,V$1,"dns4",!0],[55,V$1,"dns6",!0],[56,V$1,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc"],[281,0,"webrtc-w3c"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,V$1,"unix",!1,!0],[421,V$1,"ipfs"],[421,V$1,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,V$1,"garlic64"],[448,0,"tls"],[449,V$1,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,V$1,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[777,V$1,"memory"]];table$1.forEach(t=>{const e=createProtocol$1(...t);codes$2[e.code]=e,names$1[e.name]=e});function createProtocol$1(t,e,r,n,o){return{code:t,size:e,name:r,resolvable:!!n,path:!!o}}function getProtocol$1(t){if(typeof t=="number"){if(codes$2[t]!=null)return codes$2[t];throw new Error(`no protocol with code: ${t}`)}else if(typeof t=="string"){if(names$1[t]!=null)return names$1[t];throw new Error(`no protocol with name: ${t}`)}throw new Error(`invalid protocol id type: ${typeof t}`)}var encode_1$4=encode$d,MSB$6=128,REST$6=127,MSBALL$4=~REST$6,INT$4=Math.pow(2,31);function encode$d(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$4;)e[r++]=t&255|MSB$6,t/=128;for(;t&MSBALL$4;)e[r++]=t&255|MSB$6,t>>>=7;return e[r]=t|0,encode$d.bytes=r-n+1,e}var decode$j=read$4,MSB$1$4=128,REST$1$4=127;function read$4(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$4.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$4)<<o:(c&REST$1$4)*Math.pow(2,o),o+=7}while(c>=MSB$1$4);return read$4.bytes=a-n,r}var N1$4=Math.pow(2,7),N2$4=Math.pow(2,14),N3$4=Math.pow(2,21),N4$4=Math.pow(2,28),N5$4=Math.pow(2,35),N6$4=Math.pow(2,42),N7$4=Math.pow(2,49),N8$4=Math.pow(2,56),N9$4=Math.pow(2,63),length$4=function(t){return t<N1$4?1:t<N2$4?2:t<N3$4?3:t<N4$4?4:t<N5$4?5:t<N6$4?6:t<N7$4?7:t<N8$4?8:t<N9$4?9:10},varint$5={encode:encode_1$4,decode:decode$j,encodingLength:length$4},_brrp_varint$3=varint$5;const decode$i=(t,e=0)=>[_brrp_varint$3.decode(t,e),_brrp_varint$3.decode.bytes],encodeTo$3=(t,e,r=0)=>(_brrp_varint$3.encode(t,e,r),e),encodingLength$3=t=>_brrp_varint$3.encodingLength(t),equals$5=(t,e)=>{if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0},coerce$3=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")},fromString$3=t=>new TextEncoder().encode(t),toString$2=t=>new TextDecoder().decode(t),create$5=(t,e)=>{const r=e.byteLength,n=encodingLength$3(t),o=n+encodingLength$3(r),a=new Uint8Array(o+r);return encodeTo$3(t,a,0),encodeTo$3(r,a,n),a.set(e,o),new Digest$3(t,r,e,a)},decode$h=t=>{const e=coerce$3(t),[r,n]=decode$i(e),[o,a]=decode$i(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$3(r,o,c,e)},equals$4=(t,e)=>{if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$5(t.bytes,r.bytes)}};let Digest$3=class{constructor(t,e,r,n){this.code=t,this.size=e,this.digest=r,this.bytes=n}};function base$4(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$4=base$4,_brrp__multiformats_scope_baseX$3=src$4;let Encoder$4=class{constructor(t,e,r){this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$4=class{constructor(t,e,r){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$4(this,t)}},ComposedDecoder$3=class{constructor(t){this.decoders=t}or(t){return or$4(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$4=(t,e)=>new ComposedDecoder$3({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});let Codec$3=class{constructor(t,e,r,n){this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$4(t,e,r),this.decoder=new Decoder$4(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};const from$6=({name:t,prefix:e,encode:r,decode:n})=>new Codec$3(t,e,r,n),baseX$3=({prefix:t,name:e,alphabet:r})=>{const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$3(r,e);return from$6({prefix:t,name:e,encode:n,decode:a=>coerce$3(o(a))})},decode$g=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode$c=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648$3=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from$6({prefix:e,name:t,encode(o){return encode$c(o,n,r)},decode(o){return decode$g(o,n,r,t)}}),base58btc$2=baseX$3({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),base58flickr$1=baseX$3({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),base58$1=Object.freeze(Object.defineProperty({__proto__:null,base58btc:base58btc$2,base58flickr:base58flickr$1},Symbol.toStringTag,{value:"Module"})),base32$3=rfc4648$3({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),base32upper$1=rfc4648$3({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),base32pad$1=rfc4648$3({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),base32padupper$1=rfc4648$3({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),base32hex$1=rfc4648$3({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),base32hexupper$1=rfc4648$3({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),base32hexpad$1=rfc4648$3({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),base32hexpadupper$1=rfc4648$3({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),base32z$1=rfc4648$3({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),base32$4=Object.freeze(Object.defineProperty({__proto__:null,base32:base32$3,base32hex:base32hex$1,base32hexpad:base32hexpad$1,base32hexpadupper:base32hexpadupper$1,base32hexupper:base32hexupper$1,base32pad:base32pad$1,base32padupper:base32padupper$1,base32upper:base32upper$1,base32z:base32z$1},Symbol.toStringTag,{value:"Module"})),format$2=(t,e)=>{const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$2(r,baseCache$2(t),e||base58btc$2.encoder);default:return toStringV1$2(r,baseCache$2(t),e||base32$3.encoder)}},cache$3=new WeakMap,baseCache$2=t=>{const e=cache$3.get(t);if(e==null){const r=new Map;return cache$3.set(t,r),r}return e};let CID$2=class Qe{constructor(e,r,n,o){this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$2)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$2)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return Qe.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$5(e,r);return Qe.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return Qe.equals(this,e)}static equals(e,r){const n=r;return n&&e.code===n.code&&e.version===n.version&&equals$4(e.multihash,n.multihash)}toString(e){return format$2(this,e)}toJSON(){return{"/":format$2(this)}}link(){return this}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof Qe)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new Qe(n,o,a,c||encodeCID$2(n,o,a.bytes))}else if(r[cidSymbol$2]===!0){const{version:n,multihash:o,code:a}=r,c=decode$h(o);return Qe.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$2)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$2}) block encoding`);return new Qe(e,r,n,n.bytes)}case 1:{const o=encodeCID$2(e,r,n.bytes);return new Qe(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return Qe.create(0,DAG_PB_CODE$2,e)}static createV1(e,r){return Qe.create(1,e,r)}static decode(e){const[r,n]=Qe.decodeFirst(e);if(n.length)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=Qe.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$3(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$3(r.multihashCode,r.digestSize,a,o);return[r.version===0?Qe.createV0(c):Qe.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$i(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$2;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$2(e,r),a=Qe.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$2(a).set(n,e),a}};const parseCIDtoBytes$2=(t,e)=>{switch(t[0]){case"Q":{const r=e||base58btc$2;return[base58btc$2.prefix,r.decode(`${base58btc$2.prefix}${t}`)]}case base58btc$2.prefix:{const r=e||base58btc$2;return[base58btc$2.prefix,r.decode(t)]}case base32$3.prefix:{const r=e||base32$3;return[base32$3.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}},toStringV0$2=(t,e,r)=>{const{prefix:n}=r;if(n!==base58btc$2.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o},toStringV1$2=(t,e,r)=>{const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o},DAG_PB_CODE$2=112,SHA_256_CODE$2=18,encodeCID$2=(t,e,r)=>{const n=encodingLength$3(t),o=n+encodingLength$3(e),a=new Uint8Array(o+r.byteLength);return encodeTo$3(t,a,0),encodeTo$3(e,a,n),a.set(r,o),a},cidSymbol$2=Symbol.for("@ipld/js-cid/CID"),identity$1=from$6({prefix:"\0",name:"identity",encode:t=>toString$2(t),decode:t=>fromString$3(t)}),identityBase$1=Object.freeze(Object.defineProperty({__proto__:null,identity:identity$1},Symbol.toStringTag,{value:"Module"})),base2$2=rfc4648$3({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),base2$3=Object.freeze(Object.defineProperty({__proto__:null,base2:base2$2},Symbol.toStringTag,{value:"Module"})),base8$2=rfc4648$3({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),base8$3=Object.freeze(Object.defineProperty({__proto__:null,base8:base8$2},Symbol.toStringTag,{value:"Module"})),base10$2=baseX$3({prefix:"9",name:"base10",alphabet:"0123456789"}),base10$3=Object.freeze(Object.defineProperty({__proto__:null,base10:base10$2},Symbol.toStringTag,{value:"Module"})),base16$2=rfc4648$3({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),base16upper$1=rfc4648$3({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),base16$3=Object.freeze(Object.defineProperty({__proto__:null,base16:base16$2,base16upper:base16upper$1},Symbol.toStringTag,{value:"Module"})),base36$2=baseX$3({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),base36upper$1=baseX$3({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),base36$3=Object.freeze(Object.defineProperty({__proto__:null,base36:base36$2,base36upper:base36upper$1},Symbol.toStringTag,{value:"Module"})),base64$2=rfc4648$3({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),base64pad$1=rfc4648$3({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),base64url$1=rfc4648$3({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),base64urlpad$1=rfc4648$3({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),base64$3=Object.freeze(Object.defineProperty({__proto__:null,base64:base64$2,base64pad:base64pad$1,base64url:base64url$1,base64urlpad:base64urlpad$1},Symbol.toStringTag,{value:"Module"})),alphabet$1=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),alphabetBytesToChars$1=alphabet$1.reduce((t,e,r)=>(t[r]=e,t),[]),alphabetCharsToBytes$1=alphabet$1.reduce((t,e,r)=>(t[e.codePointAt(0)]=r,t),[]);function encode$b(t){return t.reduce((e,r)=>(e+=alphabetBytesToChars$1[r],e),"")}function decode$f(t){const e=[];for(const r of t){const n=alphabetCharsToBytes$1[r.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${r}`);e.push(n)}return new Uint8Array(e)}const base256emoji$2=from$6({prefix:"\u{1F680}",name:"base256emoji",encode:encode$b,decode:decode$f}),base256emoji$3=Object.freeze(Object.defineProperty({__proto__:null,base256emoji:base256emoji$2},Symbol.toStringTag,{value:"Module"}));new TextEncoder,new TextDecoder;const bases$1={...identityBase$1,...base2$3,...base8$3,...base10$3,...base16$3,...base32$4,...base36$3,...base58$1,...base64$3,...base256emoji$3};function convertToString$1(t,e){switch(getProtocol$1(t).code){case 4:case 41:return bytes2ip$1(e);case 42:return bytes2str$1(e);case 6:case 273:case 33:case 132:return bytes2port$1(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return bytes2str$1(e);case 421:return bytes2mh$1(e);case 444:return bytes2onion$1(e);case 445:return bytes2onion$1(e);case 466:return bytes2mb$1(e);default:return toString$D(e,"base16")}}function convertToBytes$1(t,e){switch(getProtocol$1(t).code){case 4:return ip2bytes$1(e);case 41:return ip2bytes$1(e);case 42:return str2bytes$1(e);case 6:case 273:case 33:case 132:return port2bytes$1(parseInt(e,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return str2bytes$1(e);case 421:return mh2bytes$1(e);case 444:return onion2bytes$1(e);case 445:return onion32bytes$1(e);case 466:return mb2bytes$1(e);default:return fromString$y(e,"base16")}}const decoders$1=Object.values(bases$1).map(t=>t.decoder),anybaseDecoder$1=function(){let t=decoders$1[0].or(decoders$1[1]);return decoders$1.slice(2).forEach(e=>t=t.or(e)),t}();function ip2bytes$1(t){if(!isIP(t))throw new Error("invalid ip address");return toBytes$1(t)}function bytes2ip$1(t){const e=toString$3(t,0,t.length);if(e==null)throw new Error("ipBuff is required");if(!isIP(e))throw new Error("invalid ip address");return e}function port2bytes$1(t){const e=new ArrayBuffer(2);return new DataView(e).setUint16(0,t),new Uint8Array(e)}function bytes2port$1(t){return new DataView(t.buffer).getUint16(t.byteOffset)}function str2bytes$1(t){const e=fromString$y(t),r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function bytes2str$1(t){const e=varint$w.decode(t);if(t=t.slice(varint$w.decode.bytes),t.length!==e)throw new Error("inconsistent lengths");return toString$D(t)}function mh2bytes$1(t){let e;t[0]==="Q"||t[0]==="1"?e=decode$h(base58btc$2.decode(`z${t}`)).bytes:e=CID$2.parse(t).multihash.bytes;const r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function mb2bytes$1(t){const e=anybaseDecoder$1.decode(t),r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function bytes2mb$1(t){const e=varint$w.decode(t),r=t.slice(varint$w.decode.bytes);if(r.length!==e)throw new Error("inconsistent lengths");return"u"+toString$D(r,"base64url")}function bytes2mh$1(t){const e=varint$w.decode(t),r=t.slice(varint$w.decode.bytes);if(r.length!==e)throw new Error("inconsistent lengths");return toString$D(r,"base58btc")}function onion2bytes$1(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==16)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion address.`);const r=base32$3.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes$1(n);return concat$8([r,o],r.length+o.length)}function onion32bytes$1(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==56)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion3 address.`);const r=base32$3.decode(`b${e[0]}`),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes$1(n);return concat$8([r,o],r.length+o.length)}function bytes2onion$1(t){const e=t.slice(0,t.length-2),r=t.slice(t.length-2),n=toString$D(e,"base32"),o=bytes2port$1(r);return`${n}:${o}`}function stringToStringTuples$1(t){const e=[],r=t.split("/").slice(1);if(r.length===1&&r[0]==="")return[];for(let n=0;n<r.length;n++){const o=r[n],a=getProtocol$1(o);if(a.size===0){e.push([o]);continue}if(n++,n>=r.length)throw ParseError$1("invalid address: "+t);if(a.path===!0){e.push([o,cleanPath$1(r.slice(n).join("/"))]);break}e.push([o,r[n]])}return e}function stringTuplesToString$1(t){const e=[];return t.map(r=>{const n=protoFromTuple$1(r);return e.push(n.name),r.length>1&&r[1]!=null&&e.push(r[1]),null}),cleanPath$1(e.join("/"))}function stringTuplesToTuples$1(t){return t.map(e=>{Array.isArray(e)||(e=[e]);const r=protoFromTuple$1(e);return e.length>1?[r.code,convertToBytes$1(r.code,e[1])]:[r.code]})}function tuplesToStringTuples$1(t){return t.map(e=>{const r=protoFromTuple$1(e);return e[1]!=null?[r.code,convertToString$1(r.code,e[1])]:[r.code]})}function tuplesToBytes$1(t){return fromBytes$1(concat$8(t.map(e=>{const r=protoFromTuple$1(e);let n=Uint8Array.from(varint$w.encode(r.code));return e.length>1&&e[1]!=null&&(n=concat$8([n,e[1]])),n})))}function sizeForAddr$1(t,e){return t.size>0?t.size/8:t.size===0?0:varint$w.decode(e)+(varint$w.decode.bytes??0)}function bytesToTuples$1(t){const e=[];let r=0;for(;r<t.length;){const n=varint$w.decode(t,r),o=varint$w.decode.bytes??0,a=getProtocol$1(n),c=sizeForAddr$1(a,t.slice(r+o));if(c===0){e.push([n]),r+=o;continue}const u=t.slice(r+o,r+o+c);if(r+=c+o,r>t.length)throw ParseError$1("Invalid address Uint8Array: "+toString$D(t,"base16"));e.push([n,u])}return e}function bytesToString$1(t){const e=bytesToTuples$1(t),r=tuplesToStringTuples$1(e);return stringTuplesToString$1(r)}function stringToBytes$1(t){t=cleanPath$1(t);const e=stringToStringTuples$1(t),r=stringTuplesToTuples$1(e);return tuplesToBytes$1(r)}function fromString$2(t){return stringToBytes$1(t)}function fromBytes$1(t){const e=validateBytes$1(t);if(e!=null)throw e;return Uint8Array.from(t)}function validateBytes$1(t){try{bytesToTuples$1(t)}catch(e){return e}}function cleanPath$1(t){return"/"+t.trim().split("/").filter(e=>e).join("/")}function ParseError$1(t){return new Error("Error parsing address: "+t)}function protoFromTuple$1(t){return getProtocol$1(t[0])}var __classPrivateFieldGet$1=function(t,e,r,n){if(r==="a"&&!n)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?t!==e||!n:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return r==="m"?n:r==="a"?n.call(t):n?n.value:e.get(t)},__classPrivateFieldSet$1=function(t,e,r,n,o){if(n==="m")throw new TypeError("Private method is not writable");if(n==="a"&&!o)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?t!==e||!o:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return n==="a"?o.call(t,r):o?o.value=r:e.set(t,r),r},_DefaultMultiaddr_string$1,_DefaultMultiaddr_tuples$1,_DefaultMultiaddr_stringTuples$1,_a$1;const inspect$1=Symbol.for("nodejs.util.inspect.custom"),DNS_CODES$1=[getProtocol$1("dns").code,getProtocol$1("dns4").code,getProtocol$1("dns6").code,getProtocol$1("dnsaddr").code],resolvers$1=new Map,symbol$2=Symbol.for("@multiformats/js-multiaddr/multiaddr");function isMultiaddr$1(t){return!!t?.[symbol$2]}let DefaultMultiaddr$1=class Vt{constructor(e){if(_DefaultMultiaddr_string$1.set(this,void 0),_DefaultMultiaddr_tuples$1.set(this,void 0),_DefaultMultiaddr_stringTuples$1.set(this,void 0),this[_a$1]=!0,e==null&&(e=""),e instanceof Uint8Array)this.bytes=fromBytes$1(e);else if(typeof e=="string"){if(e.length>0&&e.charAt(0)!=="/")throw new Error(`multiaddr "${e}" must start with a "/"`);this.bytes=fromString$2(e)}else if(isMultiaddr$1(e))this.bytes=fromBytes$1(e.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr")}toString(){return __classPrivateFieldGet$1(this,_DefaultMultiaddr_string$1,"f")==null&&__classPrivateFieldSet$1(this,_DefaultMultiaddr_string$1,bytesToString$1(this.bytes),"f"),__classPrivateFieldGet$1(this,_DefaultMultiaddr_string$1,"f")}toJSON(){return this.toString()}toOptions(){let e,r,n,o,a="";const c=getProtocol$1("tcp"),u=getProtocol$1("udp"),l=getProtocol$1("ip4"),f=getProtocol$1("ip6"),p=getProtocol$1("dns6"),g=getProtocol$1("ip6zone");for(const[$,_]of this.stringTuples())$===g.code&&(a=`%${_??""}`),DNS_CODES$1.includes($)&&(r=c.name,o=443,n=`${_??""}${a}`,e=$===p.code?6:4),($===c.code||$===u.code)&&(r=getProtocol$1($).name,o=parseInt(_??"")),($===l.code||$===f.code)&&(r=getProtocol$1($).name,n=`${_??""}${a}`,e=$===f.code?6:4);if(e==null||r==null||n==null||o==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:e,host:n,transport:r,port:o}}protos(){return this.protoCodes().map(e=>Object.assign({},getProtocol$1(e)))}protoCodes(){const e=[],r=this.bytes;let n=0;for(;n<r.length;){const o=varint$w.decode(r,n),a=varint$w.decode.bytes??0,c=getProtocol$1(o),u=sizeForAddr$1(c,r.slice(n+a));n+=u+a,e.push(o)}return e}protoNames(){return this.protos().map(e=>e.name)}tuples(){return __classPrivateFieldGet$1(this,_DefaultMultiaddr_tuples$1,"f")==null&&__classPrivateFieldSet$1(this,_DefaultMultiaddr_tuples$1,bytesToTuples$1(this.bytes),"f"),__classPrivateFieldGet$1(this,_DefaultMultiaddr_tuples$1,"f")}stringTuples(){return __classPrivateFieldGet$1(this,_DefaultMultiaddr_stringTuples$1,"f")==null&&__classPrivateFieldSet$1(this,_DefaultMultiaddr_stringTuples$1,tuplesToStringTuples$1(this.tuples()),"f"),__classPrivateFieldGet$1(this,_DefaultMultiaddr_stringTuples$1,"f")}encapsulate(e){return e=new Vt(e),new Vt(this.toString()+e.toString())}decapsulate(e){const r=e.toString(),n=this.toString(),o=n.lastIndexOf(r);if(o<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${e.toString()}`);return new Vt(n.slice(0,o))}decapsulateCode(e){const r=this.tuples();for(let n=r.length-1;n>=0;n--)if(r[n][0]===e)return new Vt(tuplesToBytes$1(r.slice(0,n)));return this}getPeerId(){try{const e=this.stringTuples().filter(r=>r[0]===names$1.ipfs.code).pop();if(e?.[1]!=null){const r=e[1];return r[0]==="Q"||r[0]==="1"?toString$D(base58btc$2.decode(`z${r}`),"base58btc"):toString$D(CID$2.parse(r).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){let e=null;try{e=this.stringTuples().filter(r=>getProtocol$1(r[0]).path===!0)[0][1],e==null&&(e=null)}catch{e=null}return e}equals(e){return equals$R(this.bytes,e.bytes)}async resolve(e){const r=this.protos().find(o=>o.resolvable);if(r==null)return[this];const n=resolvers$1.get(r.name);if(n==null)throw errcode(new Error(`no available resolver for ${r.name}`),"ERR_NO_AVAILABLE_RESOLVER");return(await n(this,e)).map(o=>new Vt(o))}nodeAddress(){const e=this.toOptions();if(e.transport!=="tcp"&&e.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${e.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:e.family,address:e.host,port:e.port}}isThinWaistAddress(e){const r=(e??this).protos();return!(r.length!==2||r[0].code!==4&&r[0].code!==41||r[1].code!==6&&r[1].code!==273)}[(_DefaultMultiaddr_string$1=new WeakMap,_DefaultMultiaddr_tuples$1=new WeakMap,_DefaultMultiaddr_stringTuples$1=new WeakMap,_a$1=symbol$2,inspect$1)](){return`Multiaddr(${bytesToString$1(this.bytes)})`}};function multiaddr$1(t){return new DefaultMultiaddr$1(t)}const codes$1={ERR_INVALID_PARAMETERS:"ERR_INVALID_PARAMETERS",ERR_NOT_FOUND:"ERR_NOT_FOUND"},log$o=logger$3("libp2p:peer-store:address-book"),EVENT_NAME$3="change:multiaddrs";async function allowAll(){return!0}class PeerStoreAddressBook{constructor(e,r,n){this.dispatchEvent=e,this.store=r,this.addressFilter=n??allowAll}async consumePeerRecord(e){log$o.trace("consumePeerRecord await write lock");const r=await this.store.lock.writeLock();log$o.trace("consumePeerRecord got write lock");let n,o,a;try{let c;try{c=PeerRecord.createFromProtobuf(e.payload)}catch{return log$o.error("invalid peer record received"),!1}n=c.peerId;const u=c.multiaddrs;if(!n.equals(e.peerId))return log$o("signing key does not match PeerId in the PeerRecord"),!1;if(u==null||u.length===0)return!1;if(await this.store.has(n)&&(o=await this.store.load(n),o.peerRecordEnvelope!=null)){const f=await RecordEnvelope.createFromProtobuf(o.peerRecordEnvelope),p=PeerRecord.createFromProtobuf(f.payload);if(p.seqNumber>=c.seqNumber)return log$o("sequence number was lower or equal to existing sequence number - stored: %d received: %d",p.seqNumber,c.seqNumber),!1}const l=await filterMultiaddrs(n,u,this.addressFilter,!0);a=await this.store.patchOrCreate(n,{addresses:l,peerRecordEnvelope:e.marshal().subarray()}),log$o("stored provided peer record for %p",c.peerId)}finally{log$o.trace("consumePeerRecord release write lock"),r()}return this.dispatchEvent(new CustomEvent(EVENT_NAME$3,{detail:{peerId:n,multiaddrs:a.addresses.map(({multiaddr:c})=>c),oldMultiaddrs:o==null?[]:o.addresses.map(({multiaddr:c})=>c)}})),!0}async getRawEnvelope(e){log$o.trace("getRawEnvelope await read lock");const r=await this.store.lock.readLock();log$o.trace("getRawEnvelope got read lock");try{return(await this.store.load(e)).peerRecordEnvelope}catch(n){if(n.code!==codes$1.ERR_NOT_FOUND)throw n}finally{log$o.trace("getRawEnvelope release read lock"),r()}}async getPeerRecord(e){const r=await this.getRawEnvelope(e);if(r!=null)return await RecordEnvelope.createFromProtobuf(r)}async get(e){e=peerIdFromPeerId(e),log$o.trace("get wait for read lock");const r=await this.store.lock.readLock();log$o.trace("get got read lock");try{return(await this.store.load(e)).addresses}catch(n){if(n.code!==codes$1.ERR_NOT_FOUND)throw n}finally{log$o.trace("get release read lock"),r()}return[]}async set(e,r){if(e=peerIdFromPeerId(e),!Array.isArray(r))throw log$o.error("multiaddrs must be an array of Multiaddrs"),new CodeError$4("multiaddrs must be an array of Multiaddrs",codes$1.ERR_INVALID_PARAMETERS);log$o.trace("set await write lock");const n=await this.store.lock.writeLock();log$o.trace("set got write lock");let o=!1,a,c;try{const u=await filterMultiaddrs(e,r,this.addressFilter);if(u.length===0)return;try{if(a=await this.store.load(e),o=!0,new Set([...u.map(({multiaddr:l})=>l.toString()),...a.addresses.map(({multiaddr:l})=>l.toString())]).size===a.addresses.length&&u.length===a.addresses.length)return}catch(l){if(l.code!==codes$1.ERR_NOT_FOUND)throw l}c=await this.store.patchOrCreate(e,{addresses:u}),log$o("set multiaddrs for %p",e)}finally{log$o.trace("set multiaddrs for %p",e),log$o("set release write lock"),n()}this.dispatchEvent(new CustomEvent(EVENT_NAME$3,{detail:{peerId:e,multiaddrs:c.addresses.map(u=>u.multiaddr),oldMultiaddrs:a==null?[]:a.addresses.map(({multiaddr:u})=>u)}})),o||this.dispatchEvent(new CustomEvent("peer",{detail:{id:e,multiaddrs:c.addresses.map(u=>u.multiaddr),protocols:c.protocols}}))}async add(e,r){if(e=peerIdFromPeerId(e),!Array.isArray(r))throw log$o.error("multiaddrs must be an array of Multiaddrs"),new CodeError$4("multiaddrs must be an array of Multiaddrs",codes$1.ERR_INVALID_PARAMETERS);log$o.trace("add await write lock");const n=await this.store.lock.writeLock();log$o.trace("add got write lock");let o,a,c;try{const u=await filterMultiaddrs(e,r,this.addressFilter);if(u.length===0)return;try{if(a=await this.store.load(e),o=!0,new Set([...u.map(({multiaddr:l})=>l.toString()),...a.addresses.map(({multiaddr:l})=>l.toString())]).size===a.addresses.length)return}catch(l){if(l.code!==codes$1.ERR_NOT_FOUND)throw l}c=await this.store.mergeOrCreate(e,{addresses:u}),log$o("added multiaddrs for %p",e)}finally{log$o.trace("set release write lock"),n()}this.dispatchEvent(new CustomEvent(EVENT_NAME$3,{detail:{peerId:e,multiaddrs:c.addresses.map(u=>u.multiaddr),oldMultiaddrs:a==null?[]:a.addresses.map(({multiaddr:u})=>u)}})),o===!0&&this.dispatchEvent(new CustomEvent("peer",{detail:{id:e,multiaddrs:c.addresses.map(u=>u.multiaddr),protocols:c.protocols}}))}async delete(e){e=peerIdFromPeerId(e),log$o.trace("delete await write lock");const r=await this.store.lock.writeLock();log$o.trace("delete got write lock");let n;try{try{n=await this.store.load(e)}catch(o){if(o.code!==codes$1.ERR_NOT_FOUND)throw o}await this.store.patchOrCreate(e,{addresses:[]})}finally{log$o.trace("delete release write lock"),r()}n!=null&&this.dispatchEvent(new CustomEvent(EVENT_NAME$3,{detail:{peerId:e,multiaddrs:[],oldMultiaddrs:n==null?[]:n.addresses.map(({multiaddr:o})=>o)}}))}}async function filterMultiaddrs(t,e,r,n=!1){const o=[];return await Promise.all(e.map(async a=>{if(!isMultiaddr$1(a))throw log$o.error("multiaddr must be an instance of Multiaddr"),new CodeError$4("multiaddr must be an instance of Multiaddr",codes$1.ERR_INVALID_PARAMETERS);await r(t,a)&&o.push({multiaddr:a,isCertified:n})})),o}const log$n=logger$3("libp2p:peer-store:key-book"),EVENT_NAME$2="change:pubkey";class PeerStoreKeyBook{constructor(e,r){this.dispatchEvent=e,this.store=r}async set(e,r){if(e=peerIdFromPeerId(e),!(r instanceof Uint8Array))throw log$n.error("publicKey must be an instance of Uint8Array to store data"),new CodeError$4("publicKey must be an instance of PublicKey",codes$1.ERR_INVALID_PARAMETERS);log$n.trace("set await write lock");const n=await this.store.lock.writeLock();log$n.trace("set got write lock");let o=!1,a;try{try{if(a=await this.store.load(e),a.pubKey!=null&&equals$R(a.pubKey,r))return}catch(c){if(c.code!==codes$1.ERR_NOT_FOUND)throw c}await this.store.patchOrCreate(e,{pubKey:r}),o=!0}finally{log$n.trace("set release write lock"),n()}o&&this.dispatchEvent(new CustomEvent(EVENT_NAME$2,{detail:{peerId:e,publicKey:r,oldPublicKey:a?.pubKey}}))}async get(e){e=peerIdFromPeerId(e),log$n.trace("get await write lock");const r=await this.store.lock.readLock();log$n.trace("get got write lock");try{return(await this.store.load(e)).pubKey}catch(n){if(n.code!==codes$1.ERR_NOT_FOUND)throw n}finally{log$n("get release write lock"),r()}}async delete(e){e=peerIdFromPeerId(e),log$n.trace("delete await write lock");const r=await this.store.lock.writeLock();log$n.trace("delete got write lock");let n;try{try{n=await this.store.load(e)}catch(o){if(o.code!==codes$1.ERR_NOT_FOUND)throw o}await this.store.patchOrCreate(e,{pubKey:void 0})}catch(o){if(o.code!==codes$1.ERR_NOT_FOUND)throw o}finally{log$n.trace("delete release write lock"),r()}this.dispatchEvent(new CustomEvent(EVENT_NAME$2,{detail:{peerId:e,publicKey:void 0,oldPublicKey:n?.pubKey}}))}}const log$m=logger$3("libp2p:peer-store:metadata-book"),EVENT_NAME$1="change:metadata";class PeerStoreMetadataBook{constructor(e,r){this.dispatchEvent=e,this.store=r}async get(e){e=peerIdFromPeerId(e),log$m.trace("get await read lock");const r=await this.store.lock.readLock();log$m.trace("get got read lock");try{return(await this.store.load(e)).metadata}catch(n){if(n.code!==codes$1.ERR_NOT_FOUND)throw n}finally{log$m.trace("get release read lock"),r()}return new Map}async getValue(e,r){e=peerIdFromPeerId(e),log$m.trace("getValue await read lock");const n=await this.store.lock.readLock();log$m.trace("getValue got read lock");try{return(await this.store.load(e)).metadata.get(r)}catch(o){if(o.code!==codes$1.ERR_NOT_FOUND)throw o}finally{log$m.trace("getValue release write lock"),n()}}async set(e,r){if(e=peerIdFromPeerId(e),!(r instanceof Map))throw log$m.error("valid metadata must be provided to store data"),new CodeError$4("valid metadata must be provided",codes$1.ERR_INVALID_PARAMETERS);log$m.trace("set await write lock");const n=await this.store.lock.writeLock();log$m.trace("set got write lock");let o;try{try{o=await this.store.load(e)}catch(a){if(a.code!==codes$1.ERR_NOT_FOUND)throw a}await this.store.mergeOrCreate(e,{metadata:r})}finally{log$m.trace("set release write lock"),n()}this.dispatchEvent(new CustomEvent(EVENT_NAME$1,{detail:{peerId:e,metadata:r,oldMetadata:o==null?new Map:o.metadata}}))}async setValue(e,r,n){if(e=peerIdFromPeerId(e),typeof r!="string"||!(n instanceof Uint8Array))throw log$m.error("valid key and value must be provided to store data"),new CodeError$4("valid key and value must be provided",codes$1.ERR_INVALID_PARAMETERS);log$m.trace("setValue await write lock");const o=await this.store.lock.writeLock();log$m.trace("setValue got write lock");let a,c;try{try{a=await this.store.load(e);const u=a.metadata.get(r);if(u!=null&&equals$R(n,u))return}catch(u){if(u.code!==codes$1.ERR_NOT_FOUND)throw u}c=await this.store.mergeOrCreate(e,{metadata:new Map([[r,n]])})}finally{log$m.trace("setValue release write lock"),o()}this.dispatchEvent(new CustomEvent(EVENT_NAME$1,{detail:{peerId:e,metadata:c.metadata,oldMetadata:a==null?new Map:a.metadata}}))}async delete(e){e=peerIdFromPeerId(e),log$m.trace("delete await write lock");const r=await this.store.lock.writeLock();log$m.trace("delete got write lock");let n;try{try{n=await this.store.load(e)}catch(o){if(o.code!==codes$1.ERR_NOT_FOUND)throw o}n!=null&&await this.store.patch(e,{metadata:new Map})}finally{log$m.trace("delete release write lock"),r()}n!=null&&this.dispatchEvent(new CustomEvent(EVENT_NAME$1,{detail:{peerId:e,metadata:new Map,oldMetadata:n.metadata}}))}async deleteValue(e,r){e=peerIdFromPeerId(e),log$m.trace("deleteValue await write lock");const n=await this.store.lock.writeLock();log$m.trace("deleteValue got write lock");let o,a;try{a=await this.store.load(e),o=a.metadata,o.delete(r),await this.store.patch(e,{metadata:o})}catch(c){if(c.code!==codes$1.ERR_NOT_FOUND)throw c}finally{log$m.trace("deleteValue release write lock"),n()}o!=null&&this.dispatchEvent(new CustomEvent(EVENT_NAME$1,{detail:{peerId:e,metadata:o,oldMetadata:a==null?new Map:a.metadata}}))}}const log$l=logger$3("libp2p:peer-store:proto-book"),EVENT_NAME="change:protocols";class PeerStoreProtoBook{constructor(e,r){this.dispatchEvent=e,this.store=r}async get(e){log$l.trace("get wait for read lock");const r=await this.store.lock.readLock();log$l.trace("get got read lock");try{return(await this.store.load(e)).protocols}catch(n){if(n.code!==codes$1.ERR_NOT_FOUND)throw n}finally{log$l.trace("get release read lock"),r()}return[]}async set(e,r){if(e=peerIdFromPeerId(e),!Array.isArray(r))throw log$l.error("protocols must be provided to store data"),new CodeError$4("protocols must be provided",codes$1.ERR_INVALID_PARAMETERS);log$l.trace("set await write lock");const n=await this.store.lock.writeLock();log$l.trace("set got write lock");let o,a;try{try{if(o=await this.store.load(e),new Set([...r]).size===o.protocols.length)return}catch(c){if(c.code!==codes$1.ERR_NOT_FOUND)throw c}a=await this.store.patchOrCreate(e,{protocols:r}),log$l("stored provided protocols for %p",e)}finally{log$l.trace("set release write lock"),n()}this.dispatchEvent(new CustomEvent(EVENT_NAME,{detail:{peerId:e,protocols:a.protocols,oldProtocols:o==null?[]:o.protocols}}))}async add(e,r){if(e=peerIdFromPeerId(e),!Array.isArray(r))throw log$l.error("protocols must be provided to store data"),new CodeError$4("protocols must be provided",codes$1.ERR_INVALID_PARAMETERS);log$l.trace("add await write lock");const n=await this.store.lock.writeLock();log$l.trace("add got write lock");let o,a;try{try{if(o=await this.store.load(e),new Set([...o.protocols,...r]).size===o.protocols.length)return}catch(c){if(c.code!==codes$1.ERR_NOT_FOUND)throw c}a=await this.store.mergeOrCreate(e,{protocols:r}),log$l("added provided protocols for %p",e)}finally{log$l.trace("add release write lock"),n()}this.dispatchEvent(new CustomEvent(EVENT_NAME,{detail:{peerId:e,protocols:a.protocols,oldProtocols:o==null?[]:o.protocols}}))}async remove(e,r){if(e=peerIdFromPeerId(e),!Array.isArray(r))throw log$l.error("protocols must be provided to store data"),new CodeError$4("protocols must be provided",codes$1.ERR_INVALID_PARAMETERS);log$l.trace("remove await write lock");const n=await this.store.lock.writeLock();log$l.trace("remove got write lock");let o,a;try{try{o=await this.store.load(e);const c=new Set(o.protocols);for(const u of r)c.delete(u);if(o.protocols.length===c.size)return;r=Array.from(c)}catch(c){if(c.code!==codes$1.ERR_NOT_FOUND)throw c}a=await this.store.patchOrCreate(e,{protocols:r})}finally{log$l.trace("remove release write lock"),n()}this.dispatchEvent(new CustomEvent(EVENT_NAME,{detail:{peerId:e,protocols:a.protocols,oldProtocols:o==null?[]:o.protocols}}))}async delete(e){e=peerIdFromPeerId(e),log$l.trace("delete await write lock");const r=await this.store.lock.writeLock();log$l.trace("delete got write lock");let n;try{try{n=await this.store.load(e)}catch(o){if(o.code!==codes$1.ERR_NOT_FOUND)throw o}await this.store.patchOrCreate(e,{protocols:[]})}finally{log$l.trace("delete release write lock"),r()}n!=null&&this.dispatchEvent(new CustomEvent(EVENT_NAME,{detail:{peerId:e,protocols:[],oldProtocols:n.protocols}}))}}var Peer;(function(t){let e;t.codec=()=>(e==null&&(e=message$2((r,n,o={})=>{if(o.lengthDelimited!==!1&&n.fork(),r.addresses!=null)for(const a of r.addresses)n.uint32(10),Address.codec().encode(a,n);if(r.protocols!=null)for(const a of r.protocols)n.uint32(18),n.string(a);if(r.metadata!=null)for(const a of r.metadata)n.uint32(26),Metadata.codec().encode(a,n);r.pubKey!=null&&(n.uint32(34),n.bytes(r.pubKey)),r.peerRecordEnvelope!=null&&(n.uint32(42),n.bytes(r.peerRecordEnvelope)),o.lengthDelimited!==!1&&n.ldelim()},(r,n)=>{const o={addresses:[],protocols:[],metadata:[]},a=n==null?r.len:r.pos+n;for(;r.pos<a;){const c=r.uint32();switch(c>>>3){case 1:o.addresses.push(Address.codec().decode(r,r.uint32()));break;case 2:o.protocols.push(r.string());break;case 3:o.metadata.push(Metadata.codec().decode(r,r.uint32()));break;case 4:o.pubKey=r.bytes();break;case 5:o.peerRecordEnvelope=r.bytes();break;default:r.skipType(c&7);break}}return o})),e),t.encode=r=>encodeMessage$2(r,t.codec()),t.decode=r=>decodeMessage$3(r,t.codec())})(Peer||(Peer={}));var Address;(function(t){let e;t.codec=()=>(e==null&&(e=message$2((r,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),r.multiaddr!=null&&r.multiaddr.byteLength>0&&(n.uint32(10),n.bytes(r.multiaddr)),r.isCertified!=null&&(n.uint32(16),n.bool(r.isCertified)),o.lengthDelimited!==!1&&n.ldelim()},(r,n)=>{const o={multiaddr:new Uint8Array(0)},a=n==null?r.len:r.pos+n;for(;r.pos<a;){const c=r.uint32();switch(c>>>3){case 1:o.multiaddr=r.bytes();break;case 2:o.isCertified=r.bool();break;default:r.skipType(c&7);break}}return o})),e),t.encode=r=>encodeMessage$2(r,t.codec()),t.decode=r=>decodeMessage$3(r,t.codec())})(Address||(Address={}));var Metadata;(function(t){let e;t.codec=()=>(e==null&&(e=message$2((r,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),r.key!=null&&r.key!==""&&(n.uint32(10),n.string(r.key)),r.value!=null&&r.value.byteLength>0&&(n.uint32(18),n.bytes(r.value)),o.lengthDelimited!==!1&&n.ldelim()},(r,n)=>{const o={key:"",value:new Uint8Array(0)},a=n==null?r.len:r.pos+n;for(;r.pos<a;){const c=r.uint32();switch(c>>>3){case 1:o.key=r.string();break;case 2:o.value=r.bytes();break;default:r.skipType(c&7);break}}return o})),e),t.encode=r=>encodeMessage$2(r,t.codec()),t.decode=r=>decodeMessage$3(r,t.codec())})(Metadata||(Metadata={}));const log$k=logger$3("libp2p:peer-store:store"),NAMESPACE_COMMON="/peers/";class PersistentStore{constructor(e){this.components=e,this.lock=createMortice({name:"peer-store",singleProcess:!0})}_peerIdToDatastoreKey(e){if(e.type==null)throw log$k.error("peerId must be an instance of peer-id to store data"),new CodeError$4("peerId must be an instance of peer-id",codes$1.ERR_INVALID_PARAMETERS);const r=e.toCID().toString();return new Key(`${NAMESPACE_COMMON}${r}`)}async has(e){return await this.components.datastore.has(this._peerIdToDatastoreKey(e))}async delete(e){await this.components.datastore.delete(this._peerIdToDatastoreKey(e))}async load(e){const r=await this.components.datastore.get(this._peerIdToDatastoreKey(e)),n=Peer.decode(r),o=new Map;for(const a of n.metadata)o.set(a.key,a.value);return{...n,id:e,addresses:n.addresses.map(({multiaddr:a,isCertified:c})=>({multiaddr:multiaddr$1(a),isCertified:c??!1})),metadata:o,pubKey:n.pubKey??void 0,peerRecordEnvelope:n.peerRecordEnvelope??void 0}}async save(e){if(e.pubKey!=null&&e.id.publicKey!=null&&!equals$R(e.pubKey,e.id.publicKey))throw log$k.error("peer publicKey bytes do not match peer id publicKey bytes"),new CodeError$4("publicKey bytes do not match peer id publicKey bytes",codes$1.ERR_INVALID_PARAMETERS);const r=new Set,n=e.addresses.filter(c=>r.has(c.multiaddr.toString())?!1:(r.add(c.multiaddr.toString()),!0)).sort((c,u)=>c.multiaddr.toString().localeCompare(u.multiaddr.toString())).map(({multiaddr:c,isCertified:u})=>({multiaddr:c.bytes,isCertified:u})),o=[];[...e.metadata.keys()].sort().forEach(c=>{const u=e.metadata.get(c);u!=null&&o.push({key:c,value:u})});const a=Peer.encode({addresses:n,protocols:e.protocols.sort(),pubKey:e.pubKey,metadata:o,peerRecordEnvelope:e.peerRecordEnvelope});return await this.components.datastore.put(this._peerIdToDatastoreKey(e.id),a.subarray()),await this.load(e.id)}async patch(e,r){const n=await this.load(e);return await this._patch(e,r,n)}async patchOrCreate(e,r){let n;try{n=await this.load(e)}catch(o){if(o.code!==codes$1.ERR_NOT_FOUND)throw o;n={id:e,addresses:[],protocols:[],metadata:new Map}}return await this._patch(e,r,n)}async _patch(e,r,n){return await this.save({...n,...r,id:e})}async merge(e,r){const n=await this.load(e);return await this._merge(e,r,n)}async mergeOrCreate(e,r){let n;try{n=await this.load(e)}catch(o){if(o.code!==codes$1.ERR_NOT_FOUND)throw o;n={id:e,addresses:[],protocols:[],metadata:new Map}}return await this._merge(e,r,n)}async _merge(e,r,n){const o=new Map;return n.addresses.forEach(a=>{o.set(a.multiaddr.toString(),a.isCertified)}),(r.addresses??[]).forEach(a=>{const c=a.multiaddr.toString(),u=!!o.get(c)||a.isCertified;o.set(c,u)}),await this.save({id:e,addresses:Array.from(o.entries()).map(([a,c])=>({multiaddr:multiaddr$1(a),isCertified:c})),protocols:Array.from(new Set([...n.protocols??[],...r.protocols??[]])),metadata:new Map([...n.metadata?.entries()??[],...r.metadata?.entries()??[]]),pubKey:r.pubKey??n?.pubKey,peerRecordEnvelope:r.peerRecordEnvelope??n?.peerRecordEnvelope})}async*all(){for await(const e of this.components.datastore.queryKeys({prefix:NAMESPACE_COMMON})){const r=e.toString().split("/")[2],n=base32$3.decode(r);yield this.load(peerIdFromBytes$1(n))}}}var Tags;(function(t){let e;t.codec=()=>(e==null&&(e=message$2((r,n,o={})=>{if(o.lengthDelimited!==!1&&n.fork(),r.tags!=null)for(const a of r.tags)n.uint32(10),Tag.codec().encode(a,n);o.lengthDelimited!==!1&&n.ldelim()},(r,n)=>{const o={tags:[]},a=n==null?r.len:r.pos+n;for(;r.pos<a;){const c=r.uint32();switch(c>>>3){case 1:o.tags.push(Tag.codec().decode(r,r.uint32()));break;default:r.skipType(c&7);break}}return o})),e),t.encode=r=>encodeMessage$2(r,t.codec()),t.decode=r=>decodeMessage$3(r,t.codec())})(Tags||(Tags={}));var Tag;(function(t){let e;t.codec=()=>(e==null&&(e=message$2((r,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),r.name!=null&&r.name!==""&&(n.uint32(10),n.string(r.name)),r.value!=null&&(n.uint32(16),n.uint32(r.value)),r.expiry!=null&&(n.uint32(24),n.uint64(r.expiry)),o.lengthDelimited!==!1&&n.ldelim()},(r,n)=>{const o={name:""},a=n==null?r.len:r.pos+n;for(;r.pos<a;){const c=r.uint32();switch(c>>>3){case 1:o.name=r.string();break;case 2:o.value=r.uint32();break;case 3:o.expiry=r.uint64();break;default:r.skipType(c&7);break}}return o})),e),t.encode=r=>encodeMessage$2(r,t.codec()),t.decode=r=>decodeMessage$3(r,t.codec())})(Tag||(Tag={}));const log$j=logger$3("libp2p:peer-store");class PersistentPeerStore extends EventEmitter$1{constructor(e,r={}){super(),this.components=e,this.store=new PersistentStore(e),this.addressBook=new PeerStoreAddressBook(this.dispatchEvent.bind(this),this.store,r.addressFilter),this.keyBook=new PeerStoreKeyBook(this.dispatchEvent.bind(this),this.store),this.metadataBook=new PeerStoreMetadataBook(this.dispatchEvent.bind(this),this.store),this.protoBook=new PeerStoreProtoBook(this.dispatchEvent.bind(this),this.store)}async forEach(e){log$j.trace("getPeers await read lock");const r=await this.store.lock.readLock();log$j.trace("getPeers got read lock");try{for await(const n of this.store.all())n.id.equals(this.components.peerId)||e(n)}finally{log$j.trace("getPeers release read lock"),r()}}async all(){const e=[];return await this.forEach(r=>{e.push(r)}),e}async delete(e){log$j.trace("delete await write lock");const r=await this.store.lock.writeLock();log$j.trace("delete got write lock");try{await this.store.delete(e)}finally{log$j.trace("delete release write lock"),r()}}async get(e){log$j.trace("get await read lock");const r=await this.store.lock.readLock();log$j.trace("get got read lock");try{return await this.store.load(e)}finally{log$j.trace("get release read lock"),r()}}async has(e){log$j.trace("has await read lock");const r=await this.store.lock.readLock();log$j.trace("has got read lock");try{return await this.store.has(e)}finally{log$j.trace("has release read lock"),r()}}async tagPeer(e,r,n={}){const o=n.value??0,a=Math.round(o),c=n.ttl??void 0;if(a!==o||a<0||a>100)throw new CodeError$4("Tag value must be between 0-100","ERR_TAG_VALUE_OUT_OF_BOUNDS");const u=await this.metadataBook.getValue(e,"tags");let l=[];u!=null&&(l=Tags.decode(u).tags),l=l.filter(f=>f.name!==r),l.push({name:r,value:a,expiry:c==null?void 0:BigInt(Date.now()+c)}),await this.metadataBook.setValue(e,"tags",Tags.encode({tags:l}).subarray())}async unTagPeer(e,r){const n=await this.metadataBook.getValue(e,"tags");let o=[];n!=null&&(o=Tags.decode(n).tags),o=o.filter(a=>a.name!==r),await this.metadataBook.setValue(e,"tags",Tags.encode({tags:o}).subarray())}async getTags(e){const r=await this.metadataBook.getValue(e,"tags");let n=[];r!=null&&(n=Tags.decode(r).tags);const o=BigInt(Date.now()),a=n.filter(c=>c.expiry==null||c.expiry>o);return a.length!==n.length&&await this.metadataBook.setValue(e,"tags",Tags.encode({tags:a}).subarray()),a.map(c=>({name:c.name,value:c.value??0}))}}class DHTContentRouting{constructor(e){this.dht=e}async provide(e){await drain$1(this.dht.provide(e))}async*findProviders(e,r={}){for await(const n of this.dht.findProviders(e,r))n.name==="PROVIDER"&&(yield*n.providers)}async put(e,r,n){await drain$1(this.dht.put(e,r,n))}async get(e,r){for await(const n of this.dht.get(e,r))if(n.name==="VALUE")return n.value;throw errcode(new Error("Not found"),"ERR_NOT_FOUND")}}class DefaultComponents{constructor(e={}){this._started=!1,this._peerId=e.peerId,this._addressManager=e.addressManager,this._peerStore=e.peerStore,this._upgrader=e.upgrader,this._metrics=e.metrics,this._registrar=e.registrar,this._connectionManager=e.connectionManager,this._transportManager=e.transportManager,this._connectionGater=e.connectionGater,this._contentRouting=e.contentRouting,this._peerRouting=e.peerRouting,this._datastore=e.datastore,this._connectionProtector=e.connectionProtector,this._dht=e.dht,this._pubsub=e.pubsub,this._dialer=e.dialer}isStarted(){return this._started}async beforeStart(){await Promise.all(Object.values(this).filter(e=>isStartable(e)).map(async e=>{e.beforeStart!=null&&await e.beforeStart()}))}async start(){await Promise.all(Object.values(this).filter(e=>isStartable(e)).map(async e=>{await e.start()})),this._started=!0}async afterStart(){await Promise.all(Object.values(this).filter(e=>isStartable(e)).map(async e=>{e.afterStart!=null&&await e.afterStart()}))}async beforeStop(){await Promise.all(Object.values(this).filter(e=>isStartable(e)).map(async e=>{e.beforeStop!=null&&await e.beforeStop()}))}async stop(){await Promise.all(Object.values(this).filter(e=>isStartable(e)).map(async e=>{await e.stop()})),this._started=!1}async afterStop(){await Promise.all(Object.values(this).filter(e=>isStartable(e)).map(async e=>{e.afterStop!=null&&await e.afterStop()}))}get peerId(){if(this._peerId==null)throw errcode(new Error("peerId not set"),"ERR_SERVICE_MISSING");return this._peerId}set peerId(e){this._peerId=e}get addressManager(){if(this._addressManager==null)throw errcode(new Error("addressManager not set"),"ERR_SERVICE_MISSING");return this._addressManager}set addressManager(e){this._addressManager=e}get peerStore(){if(this._peerStore==null)throw errcode(new Error("peerStore not set"),"ERR_SERVICE_MISSING");return this._peerStore}set peerStore(e){this._peerStore=e}get upgrader(){if(this._upgrader==null)throw errcode(new Error("upgrader not set"),"ERR_SERVICE_MISSING");return this._upgrader}set upgrader(e){this._upgrader=e}get registrar(){if(this._registrar==null)throw errcode(new Error("registrar not set"),"ERR_SERVICE_MISSING");return this._registrar}set registrar(e){this._registrar=e}get connectionManager(){if(this._connectionManager==null)throw errcode(new Error("connectionManager not set"),"ERR_SERVICE_MISSING");return this._connectionManager}set connectionManager(e){this._connectionManager=e}get transportManager(){if(this._transportManager==null)throw errcode(new Error("transportManager not set"),"ERR_SERVICE_MISSING");return this._transportManager}set transportManager(e){this._transportManager=e}get connectionGater(){if(this._connectionGater==null)throw errcode(new Error("connectionGater not set"),"ERR_SERVICE_MISSING");return this._connectionGater}set connectionGater(e){this._connectionGater=e}get contentRouting(){if(this._contentRouting==null)throw errcode(new Error("contentRouting not set"),"ERR_SERVICE_MISSING");return this._contentRouting}set contentRouting(e){this._contentRouting=e}get peerRouting(){if(this._peerRouting==null)throw errcode(new Error("peerRouting not set"),"ERR_SERVICE_MISSING");return this._peerRouting}set peerRouting(e){this._peerRouting=e}get datastore(){if(this._datastore==null)throw errcode(new Error("datastore not set"),"ERR_SERVICE_MISSING");return this._datastore}set datastore(e){this._datastore=e}get connectionProtector(){return this._connectionProtector}set connectionProtector(e){this._connectionProtector=e}get dialer(){if(this._dialer==null)throw errcode(new Error("dialer not set"),"ERR_SERVICE_MISSING");return this._dialer}set dialer(e){this._dialer=e}get metrics(){return this._metrics}set metrics(e){this._metrics=e}get dht(){return this._dht}set dht(e){this._dht=e}get pubsub(){return this._pubsub}set pubsub(e){this._pubsub=e}}var browser$1={exports:{}},ms$1,hasRequiredMs;function requireMs(){if(hasRequiredMs)return ms$1;hasRequiredMs=1;var t=1e3,e=t*60,r=e*60,n=r*24,o=n*7,a=n*365.25;ms$1=function(p,g){g=g||{};var $=typeof p;if($==="string"&&p.length>0)return c(p);if($==="number"&&isFinite(p))return g.long?l(p):u(p);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(p))};function c(p){if(p=String(p),!(p.length>100)){var g=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(p);if(g){var $=parseFloat(g[1]),_=(g[2]||"ms").toLowerCase();switch(_){case"years":case"year":case"yrs":case"yr":case"y":return $*a;case"weeks":case"week":case"w":return $*o;case"days":case"day":case"d":return $*n;case"hours":case"hour":case"hrs":case"hr":case"h":return $*r;case"minutes":case"minute":case"mins":case"min":case"m":return $*e;case"seconds":case"second":case"secs":case"sec":case"s":return $*t;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return $;default:return}}}}function u(p){var g=Math.abs(p);return g>=n?Math.round(p/n)+"d":g>=r?Math.round(p/r)+"h":g>=e?Math.round(p/e)+"m":g>=t?Math.round(p/t)+"s":p+"ms"}function l(p){var g=Math.abs(p);return g>=n?f(p,g,n,"day"):g>=r?f(p,g,r,"hour"):g>=e?f(p,g,e,"minute"):g>=t?f(p,g,t,"second"):p+" ms"}function f(p,g,$,_){var b=g>=$*1.5;return Math.round(p/$)+" "+_+(b?"s":"")}return ms$1}function setup(t){r.debug=r,r.default=r,r.coerce=l,r.disable=a,r.enable=o,r.enabled=c,r.humanize=requireMs(),r.destroy=f,Object.keys(t).forEach(p=>{r[p]=t[p]}),r.names=[],r.skips=[],r.formatters={};function e(p){let g=0;for(let $=0;$<p.length;$++)g=(g<<5)-g+p.charCodeAt($),g|=0;return r.colors[Math.abs(g)%r.colors.length]}r.selectColor=e;function r(p){let g,$=null,_,b;function D(...v){if(!D.enabled)return;const S=D,I=Number(new Date),R=I-(g||I);S.diff=R,S.prev=g,S.curr=I,g=I,v[0]=r.coerce(v[0]),typeof v[0]!="string"&&v.unshift("%O");let C=0;v[0]=v[0].replace(/%([a-zA-Z%])/g,(T,P)=>{if(T==="%%")return"%";C++;const E=r.formatters[P];if(typeof E=="function"){const A=v[C];T=E.call(S,A),v.splice(C,1),C--}return T}),r.formatArgs.call(S,v),(S.log||r.log).apply(S,v)}return D.namespace=p,D.useColors=r.useColors(),D.color=r.selectColor(p),D.extend=n,D.destroy=r.destroy,Object.defineProperty(D,"enabled",{enumerable:!0,configurable:!1,get:()=>$!==null?$:(_!==r.namespaces&&(_=r.namespaces,b=r.enabled(p)),b),set:v=>{$=v}}),typeof r.init=="function"&&r.init(D),D}function n(p,g){const $=r(this.namespace+(typeof g>"u"?":":g)+p);return $.log=this.log,$}function o(p){r.save(p),r.namespaces=p,r.names=[],r.skips=[];let g;const $=(typeof p=="string"?p:"").split(/[\s,]+/),_=$.length;for(g=0;g<_;g++)$[g]&&(p=$[g].replace(/\*/g,".*?"),p[0]==="-"?r.skips.push(new RegExp("^"+p.slice(1)+"$")):r.names.push(new RegExp("^"+p+"$")))}function a(){const p=[...r.names.map(u),...r.skips.map(u).map(g=>"-"+g)].join(",");return r.enable(""),p}function c(p){if(p[p.length-1]==="*")return!0;let g,$;for(g=0,$=r.skips.length;g<$;g++)if(r.skips[g].test(p))return!1;for(g=0,$=r.names.length;g<$;g++)if(r.names[g].test(p))return!0;return!1}function u(p){return p.toString().substring(2,p.toString().length-2).replace(/\.\*\?$/,"*")}function l(p){return p instanceof Error?p.stack||p.message:p}function f(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}return r.enable(r.load()),r}var common=setup;(function(t,e){var r={};e.formatArgs=o,e.save=a,e.load=c,e.useColors=n,e.storage=u(),e.destroy=(()=>{let f=!1;return()=>{f||(f=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),e.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function n(){return typeof window<"u"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs)?!0:typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)?!1:typeof document<"u"&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||typeof window<"u"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)}function o(f){if(f[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+f[0]+(this.useColors?"%c ":" ")+"+"+t.exports.humanize(this.diff),!this.useColors)return;const p="color: "+this.color;f.splice(1,0,p,"color: inherit");let g=0,$=0;f[0].replace(/%[a-zA-Z%]/g,_=>{_!=="%%"&&(g++,_==="%c"&&($=g))}),f.splice($,0,p)}e.log=console.debug||console.log||(()=>{});function a(f){try{f?e.storage.setItem("debug",f):e.storage.removeItem("debug")}catch{}}function c(){let f;try{f=e.storage.getItem("debug")}catch{}return!f&&typeof browser$1$1<"u"&&"env"in browser$1$1&&(f=r.DEBUG),f}function u(){try{return localStorage}catch{}}t.exports=common(e);const{formatters:l}=t.exports;l.j=function(f){try{return JSON.stringify(f)}catch(p){return"[UnexpectedJSONParseError]: "+p.message}}})(browser$1,browser$1.exports);var browserExports=browser$1.exports;const debug=getDefaultExportFromCjs(browserExports);var s=1e3,m=s*60,h=m*60,d=h*24,w=d*7,y=d*365.25,ms=function(t,e){e=e||{};var r=typeof t;if(r==="string"&&t.length>0)return parse(t);if(r==="number"&&isFinite(t))return e.long?fmtLong(t):fmtShort(t);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(t))};function parse(t){if(t=String(t),!(t.length>100)){var e=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(t);if(e){var r=parseFloat(e[1]),n=(e[2]||"ms").toLowerCase();switch(n){case"years":case"year":case"yrs":case"yr":case"y":return r*y;case"weeks":case"week":case"w":return r*w;case"days":case"day":case"d":return r*d;case"hours":case"hour":case"hrs":case"hr":case"h":return r*h;case"minutes":case"minute":case"mins":case"min":case"m":return r*m;case"seconds":case"second":case"secs":case"sec":case"s":return r*s;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return r;default:return}}}}function fmtShort(t){var e=Math.abs(t);return e>=d?Math.round(t/d)+"d":e>=h?Math.round(t/h)+"h":e>=m?Math.round(t/m)+"m":e>=s?Math.round(t/s)+"s":t+"ms"}function fmtLong(t){var e=Math.abs(t);return e>=d?plural(t,e,d,"day"):e>=h?plural(t,e,h,"hour"):e>=m?plural(t,e,m,"minute"):e>=s?plural(t,e,s,"second"):t+" ms"}function plural(t,e,r,n){var o=e>=r*1.5;return Math.round(t/r)+" "+n+(o?"s":"")}var receptacle=Receptacle,toMS=ms,cache$2=Receptacle.prototype,counter=new Date%1e9;function getUID(){return(Math.random()*1e9>>>0)+counter++}function Receptacle(t){t=t||{},this.id=t.id||getUID(),this.max=t.max||1/0,this.items=t.items||[],this._lookup={},this.size=this.items.length,this.lastModified=new Date(t.lastModified||new Date);for(var e,r,n=this.items.length;n--;)e=this.items[n],r=new Date(e.expires)-new Date,this._lookup[e.key]=e,r>0?this.expire(e.key,r):r<=0&&this.delete(e.key)}cache$2.has=function(t){return t in this._lookup},cache$2.get=function(t){if(!this.has(t))return null;var e=this._lookup[t];return e.refresh&&this.expire(t,e.refresh),this.items.splice(this.items.indexOf(e),1),this.items.push(e),e.value},cache$2.meta=function(t){if(!this.has(t))return null;var e=this._lookup[t];return"meta"in e?e.meta:null},cache$2.set=function(t,e,r){var n=this._lookup[t],o=this._lookup[t]={key:t,value:e};return this.lastModified=new Date,n?(clearTimeout(n.timeout),this.items.splice(this.items.indexOf(n),1,o)):(this.size>=this.max&&this.delete(this.items[0].key),this.items.push(o),this.size++),r&&("ttl"in r&&this.expire(t,r.ttl),"meta"in r&&(o.meta=r.meta),r.refresh&&(o.refresh=r.ttl)),this},cache$2.delete=function(t){var e=this._lookup[t];return e?(this.lastModified=new Date,this.items.splice(this.items.indexOf(e),1),clearTimeout(e.timeout),delete this._lookup[t],this.size--,this):!1},cache$2.expire=function(t,e){var r=e||0,n=this._lookup[t];if(!n)return this;if(typeof r=="string"&&(r=toMS(e)),typeof r!="number")throw new TypeError("Expiration time must be a string or number.");return clearTimeout(n.timeout),n.timeout=setTimeout(this.delete.bind(this,n.key),r),n.expires=Number(new Date)+r,this},cache$2.clear=function(){for(var t=this.items.length;t--;)this.delete(this.items[t].key);return this},cache$2.toJSON=function(){for(var t=new Array(this.items.length),e,r=t.length;r--;)e=this.items[r],t[r]={key:e.key,meta:e.meta,value:e.value,expires:e.expires,refresh:e.refresh};return{id:this.id,max:isFinite(this.max)?this.max:void 0,lastModified:this.lastModified,items:t}};let Receptacle$1,globalHeaders;Receptacle$1=getDefaultExportFromCjs(receptacle),globalFetch=globalThis.fetch,globalHeaders=globalThis.Headers;function buildResource(t,e,r){return`${t}?name=${e}&type=${r}`}async function request(t,e){return await(await globalFetch(t,{headers:new globalHeaders({accept:"application/dns-json"}),signal:e})).json()}function getCacheKey(t,e){return`${e}_${t}`}const log$i=Object.assign(debug("dns-over-http-resolver"),{error:debug("dns-over-http-resolver:error")});class Resolver{constructor(e={}){N(this,"_cache");N(this,"_TXTcache");N(this,"_servers");N(this,"_request");N(this,"_abortControllers");this._cache=new Receptacle$1({max:e?.maxCache??100}),this._TXTcache=new Receptacle$1({max:e?.maxCache??100}),this._servers=["https://cloudflare-dns.com/dns-query","https://dns.google/resolve"],this._request=e.request??request,this._abortControllers=[]}cancel(){this._abortControllers.forEach(e=>{e.abort()})}getServers(){return this._servers}_getShuffledServers(){const e=[...this._servers];for(let r=e.length-1;r>0;r--){const n=Math.floor(Math.random()*r),o=e[r];e[r]=e[n],e[n]=o}return e}setServers(e){this._servers=e}async resolve(e,r="A"){switch(r){case"A":return this.resolve4(e);case"AAAA":return this.resolve6(e);case"TXT":return this.resolveTxt(e);default:throw new Error(`${r} is not supported`)}}async resolve4(e){const r="A",n=this._cache.get(getCacheKey(e,r));if(n!=null)return n;let o=!1;for(const a of this._getShuffledServers()){const c=new AbortController;this._abortControllers.push(c);try{const u=await this._request(buildResource(a,e,r),c.signal),l=u.Answer.map(p=>p.data),f=Math.min(...u.Answer.map(p=>p.TTL));return this._cache.set(getCacheKey(e,r),l,{ttl:f}),l}catch{c.signal.aborted&&(o=!0),log$i.error(`${a} could not resolve ${e} record ${r}`)}finally{this._abortControllers=this._abortControllers.filter(u=>u!==c)}}throw o?Object.assign(new Error("queryA ECANCELLED"),{code:"ECANCELLED"}):new Error(`Could not resolve ${e} record ${r}`)}async resolve6(e){const r="AAAA",n=this._cache.get(getCacheKey(e,r));if(n!=null)return n;let o=!1;for(const a of this._getShuffledServers()){const c=new AbortController;this._abortControllers.push(c);try{const u=await this._request(buildResource(a,e,r),c.signal),l=u.Answer.map(p=>p.data),f=Math.min(...u.Answer.map(p=>p.TTL));return this._cache.set(getCacheKey(e,r),l,{ttl:f}),l}catch{c.signal.aborted&&(o=!0),log$i.error(`${a} could not resolve ${e} record ${r}`)}finally{this._abortControllers=this._abortControllers.filter(u=>u!==c)}}throw o?Object.assign(new Error("queryAaaa ECANCELLED"),{code:"ECANCELLED"}):new Error(`Could not resolve ${e} record ${r}`)}async resolveTxt(e){const r="TXT",n=this._TXTcache.get(getCacheKey(e,r));if(n!=null)return n;let o=!1;for(const a of this._getShuffledServers()){const c=new AbortController;this._abortControllers.push(c);try{const u=await this._request(buildResource(a,e,r),c.signal),l=u.Answer.map(p=>[p.data.replace(/['"]+/g,"")]),f=Math.min(...u.Answer.map(p=>p.TTL));return this._TXTcache.set(getCacheKey(e,r),l,{ttl:f}),l}catch{c.signal.aborted&&(o=!0),log$i.error(`${a} could not resolve ${e} record ${r}`)}finally{this._abortControllers=this._abortControllers.filter(u=>u!==c)}}throw o?Object.assign(new Error("queryTxt ECANCELLED"),{code:"ECANCELLED"}):new Error(`Could not resolve ${e} record ${r}`)}clearCache(){this._cache.clear(),this._TXTcache.clear()}}const{code:dnsaddrCode}=getProtocol$3("dnsaddr");async function dnsaddrResolver(t,e={}){const r=new Resolver;e.signal!=null&&e.signal.addEventListener("abort",()=>{r.cancel()});const n=t.getPeerId(),[,o]=t.stringTuples().find(([c])=>c===dnsaddrCode)??[];if(o==null)throw new Error("No hostname found in multiaddr");let a=(await r.resolveTxt(`_dnsaddr.${o}`)).flat().map(c=>c.split("=")[1]).filter(Boolean);return n!=null&&(a=a.filter(c=>c.includes(n))),a}const DIAL_TIMEOUT=3e4,INBOUND_UPGRADE_TIMEOUT=3e4,MAX_PARALLEL_DIALS=100,MAX_PER_PEER_DIALS=4,MAX_ADDRS_TO_DIAL=25,DefaultConfig={addresses:{listen:[],announce:[],noAnnounce:[],announceFilter:t=>t},connectionManager:{maxConnections:300,minConnections:50,autoDial:!0,autoDialInterval:1e4,maxParallelDials:MAX_PARALLEL_DIALS,maxDialsPerPeer:MAX_PER_PEER_DIALS,dialTimeout:DIAL_TIMEOUT,inboundUpgradeTimeout:INBOUND_UPGRADE_TIMEOUT,resolvers:{dnsaddr:dnsaddrResolver},addressSorter:publicAddressesFirst},connectionGater:{},transportManager:{faultTolerance:FaultTolerance$2.FATAL_ALL},peerRouting:{refreshManager:{enabled:!0,interval:6e5,bootDelay:1e4}},nat:{enabled:!0,ttl:7200,keepAlive:!0},relay:{enabled:!0,advertise:{bootDelay:ADVERTISE_BOOT_DELAY,enabled:!1,ttl:ADVERTISE_TTL},hop:{enabled:!1,active:!1,timeout:3e4},autoRelay:{enabled:!1,maxListeners:2}},identify:{protocolPrefix:"ipfs",host:{agentVersion:AGENT_VERSION},timeout:6e4,maxInboundStreams:1,maxOutboundStreams:1,maxPushIncomingStreams:1,maxPushOutgoingStreams:1},ping:{protocolPrefix:"ipfs",maxInboundStreams:1,maxOutboundStreams:1,timeout:1e4},fetch:{protocolPrefix:"libp2p",maxInboundStreams:1,maxOutboundStreams:1,timeout:1e4}};function validateConfig(t){const e=mergeOptions$h(DefaultConfig,t);if(e.transports==null||e.transports.length<1)throw errcode(new Error(messages.ERR_TRANSPORTS_REQUIRED),codes$4.ERR_TRANSPORTS_REQUIRED);if(e.connectionEncryption==null||e.connectionEncryption.length===0)throw errcode(new Error(messages.CONN_ENCRYPTION_REQUIRED),codes$4.CONN_ENCRYPTION_REQUIRED);if(e.connectionProtector===null&&globalThis.process?.env?.LIBP2P_FORCE_PNET!=null)throw errcode(new Error(messages.ERR_PROTECTOR_REQUIRED),codes$4.ERR_PROTECTOR_REQUIRED);return e.identify.host.agentVersion===AGENT_VERSION&&(isNode||isElectronMain?e.identify.host.agentVersion+=` UserAgent=${globalThis.process.version}`:(isBrowser$2||isWebWorker$1||isElectronRenderer||isReactNative$2)&&(e.identify.host.agentVersion+=` UserAgent=${globalThis.navigator.userAgent}`)),e}var PeerIdProto;(function(t){let e;t.codec=()=>(e==null&&(e=message$2((r,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),r.id!=null&&(n.uint32(10),n.bytes(r.id)),r.pubKey!=null&&(n.uint32(18),n.bytes(r.pubKey)),r.privKey!=null&&(n.uint32(26),n.bytes(r.privKey)),o.lengthDelimited!==!1&&n.ldelim()},(r,n)=>{const o={},a=n==null?r.len:r.pos+n;for(;r.pos<a;){const c=r.uint32();switch(c>>>3){case 1:o.id=r.bytes();break;case 2:o.pubKey=r.bytes();break;case 3:o.privKey=r.bytes();break;default:r.skipType(c&7);break}}return o})),e),t.encode=r=>encodeMessage$2(r,t.codec()),t.decode=r=>decodeMessage$3(r,t.codec())})(PeerIdProto||(PeerIdProto={}));const createEd25519PeerId=async()=>{const t=await generateKeyPair("Ed25519"),e=await createFromPrivKey(t);if(e.type==="Ed25519")return e;throw new Error(`Generated unexpected PeerId type "${e.type}"`)},createRSAPeerId=async t=>{const e=await generateKeyPair("RSA",t?.bits??2048),r=await createFromPrivKey(e);if(r.type==="RSA")return r;throw new Error(`Generated unexpected PeerId type "${r.type}"`)};async function createFromPrivKey(t){return peerIdFromKeys(marshalPublicKey(t.public),marshalPrivateKey(t))}class DummyDHT extends EventEmitter$1{get[symbol$6](){return!0}get[Symbol.toStringTag](){return"@libp2p/dummy-dht"}get wan(){throw errcode(new Error(messages.DHT_DISABLED),codes$4.DHT_DISABLED)}get lan(){throw errcode(new Error(messages.DHT_DISABLED),codes$4.DHT_DISABLED)}get(){throw errcode(new Error(messages.DHT_DISABLED),codes$4.DHT_DISABLED)}findProviders(){throw errcode(new Error(messages.DHT_DISABLED),codes$4.DHT_DISABLED)}findPeer(){throw errcode(new Error(messages.DHT_DISABLED),codes$4.DHT_DISABLED)}getClosestPeers(){throw errcode(new Error(messages.DHT_DISABLED),codes$4.DHT_DISABLED)}provide(){throw errcode(new Error(messages.DHT_DISABLED),codes$4.DHT_DISABLED)}put(){throw errcode(new Error(messages.DHT_DISABLED),codes$4.DHT_DISABLED)}async getMode(){throw errcode(new Error(messages.DHT_DISABLED),codes$4.DHT_DISABLED)}async setMode(){throw errcode(new Error(messages.DHT_DISABLED),codes$4.DHT_DISABLED)}async refreshRoutingTable(){throw errcode(new Error(messages.DHT_DISABLED),codes$4.DHT_DISABLED)}}class DummyPubSub extends EventEmitter$1{constructor(){super(...arguments),this.topicValidators=new Map}isStarted(){return!1}start(){}stop(){}get globalSignaturePolicy(){throw errcode(new Error(messages.PUBSUB_DISABLED),codes$4.ERR_PUBSUB_DISABLED)}get multicodecs(){throw errcode(new Error(messages.PUBSUB_DISABLED),codes$4.ERR_PUBSUB_DISABLED)}getPeers(){throw errcode(new Error(messages.PUBSUB_DISABLED),codes$4.ERR_PUBSUB_DISABLED)}getTopics(){throw errcode(new Error(messages.PUBSUB_DISABLED),codes$4.ERR_PUBSUB_DISABLED)}subscribe(){throw errcode(new Error(messages.PUBSUB_DISABLED),codes$4.ERR_PUBSUB_DISABLED)}unsubscribe(){throw errcode(new Error(messages.PUBSUB_DISABLED),codes$4.ERR_PUBSUB_DISABLED)}getSubscribers(){throw errcode(new Error(messages.PUBSUB_DISABLED),codes$4.ERR_PUBSUB_DISABLED)}async publish(){throw errcode(new Error(messages.PUBSUB_DISABLED),codes$4.ERR_PUBSUB_DISABLED)}}var fixedSize=class{constructor(t){if(!(t>0)||t-1&t)throw new Error("Max size for a FixedFIFO should be a power of two");this.buffer=new Array(t),this.mask=t-1,this.top=0,this.btm=0,this.next=null}clear(){this.top=this.btm=0,this.next=null,this.buffer.fill(void 0)}push(t){return this.buffer[this.top]!==void 0?!1:(this.buffer[this.top]=t,this.top=this.top+1&this.mask,!0)}shift(){const t=this.buffer[this.btm];if(t!==void 0)return this.buffer[this.btm]=void 0,this.btm=this.btm+1&this.mask,t}peek(){return this.buffer[this.btm]}isEmpty(){return this.buffer[this.btm]===void 0}};const FixedFIFO=fixedSize;var fastFifo=class{constructor(t){this.hwm=t||16,this.head=new FixedFIFO(this.hwm),this.tail=this.head,this.length=0}clear(){this.head=this.tail,this.head.clear(),this.length=0}push(t){if(this.length++,!this.head.push(t)){const e=this.head;this.head=e.next=new FixedFIFO(2*this.head.buffer.length),this.head.push(t)}}shift(){this.length!==0&&this.length--;const t=this.tail.shift();if(t===void 0&&this.tail.next){const e=this.tail.next;return this.tail.next=null,this.tail=e,this.tail.shift()}return t}peek(){const t=this.tail.peek();return t===void 0&&this.tail.next?this.tail.next.peek():t}isEmpty(){return this.length===0}};const pDefer=()=>{const t={};return t.promise=new Promise((e,r)=>{t.resolve=e,t.reject=r}),t};var pDefer_1=pDefer;const Fifo=fastFifo,defer=pDefer_1;var pFifo=class{constructor(){this._buffer=new Fifo,this._waitingConsumers=new Fifo}push(t){const{promise:e,resolve:r}=defer();return this._buffer.push({chunk:t,resolve:r}),this._consume(),e}_consume(){for(;!this._waitingConsumers.isEmpty()&&!this._buffer.isEmpty();){const t=this._waitingConsumers.shift(),e=this._buffer.shift();t.resolve(e.chunk),e.resolve()}}shift(){const{promise:t,resolve:e}=defer();return this._waitingConsumers.push({resolve:e}),this._consume(),t}isEmpty(){return this._buffer.isEmpty()}};const FIFO=getDefaultExportFromCjs(pFifo),log$h=logger$3("libp2p:dialer:dial-request");class DialRequest{constructor(e){const{addrs:r,dialAction:n,dialer:o}=e;this.addrs=r,this.dialer=o,this.dialAction=n}async run(e={}){const r=this.dialer.getTokens(this.addrs.length);if(r.length<1)throw errcode(new Error("No dial tokens available"),codes$4.ERR_NO_DIAL_TOKENS);const n=new FIFO;for(const u of r)n.push(u).catch(l=>{log$h.error(l)});const o=this.addrs.map(()=>{const u=new AbortController;try{eventsExports.setMaxListeners?.(1/0,u.signal)}catch{}return u});if(e.signal!=null)try{eventsExports.setMaxListeners?.(1/0,e.signal)}catch{}let a=0,c=!1;try{return await Promise.any(this.addrs.map(async(u,l)=>{const f=await n.shift();if(c)throw this.dialer.releaseToken(r.splice(r.indexOf(f),1)[0]),errcode(new Error("dialAction already succeeded"),codes$4.ERR_ALREADY_SUCCEEDED);const p=o[l];if(p==null)throw errcode(new Error("dialAction did not come with an AbortController"),codes$4.ERR_INVALID_PARAMETERS);let g;try{const $=p.signal;g=await this.dialAction(u,{...e,signal:e.signal!=null?anySignal_2([$,e.signal]):$}),o[l]=void 0}finally{a++,this.addrs.length-a>=r.length?n.push(f).catch($=>{log$h.error($)}):this.dialer.releaseToken(r.splice(r.indexOf(f),1)[0])}if(g==null)throw errcode(new Error("dialAction led to empty object"),codes$4.ERR_TRANSPORT_DIAL_FAILED);return c=!0,g}))}finally{o.forEach(u=>{u!==void 0&&u.abort()}),r.forEach(u=>this.dialer.releaseToken(u))}}}const log$g=logger$3("libp2p:dialer");class DefaultDialer{constructor(e,r={}){this.started=!1,this.addressSorter=r.addressSorter??publicAddressesFirst,this.maxAddrsToDial=r.maxAddrsToDial??MAX_ADDRS_TO_DIAL,this.timeout=r.dialTimeout??DIAL_TIMEOUT,this.maxDialsPerPeer=r.maxDialsPerPeer??MAX_PER_PEER_DIALS,this.tokens=[...new Array(r.maxParallelDials??MAX_PARALLEL_DIALS)].map((n,o)=>o),this.components=e,this.pendingDials=trackedMap({name:"libp2p_dialler_pending_dials",metrics:e.metrics}),this.pendingDialTargets=trackedMap({name:"libp2p_dialler_pending_dial_targets",metrics:e.metrics});for(const[n,o]of Object.entries(r.resolvers??{}))resolvers$3.set(n,o)}isStarted(){return this.started}async start(){this.started=!0}async stop(){this.started=!1;for(const e of this.pendingDials.values())try{e.controller.abort()}catch(r){log$g.error(r)}this.pendingDials.clear();for(const e of this.pendingDialTargets.values())e.abort();this.pendingDialTargets.clear()}async dial(e,r={}){const{peerId:n,multiaddr:o}=getPeerAddress(e);if(n!=null){if(this.components.peerId.equals(n))throw errcode(new Error("Tried to dial self"),codes$4.ERR_DIALED_SELF);if(o!=null&&(log$g("storing multiaddrs %p",n,o),await this.components.peerStore.addressBook.add(n,[o])),await this.components.connectionGater.denyDialPeer(n))throw errcode(new Error("The dial request is blocked by gater.allowDialPeer"),codes$4.ERR_PEER_DIAL_INTERCEPTED)}log$g("creating dial target for %p",n);const a=new AbortController,c=randomId();this.pendingDialTargets.set(c,a);let u=a.signal;r.signal!=null&&(u=anySignal_2([u,r.signal]));let l;try{l=await this._createDialTarget({peerId:n,multiaddr:o},{...r,signal:u})}finally{this.pendingDialTargets.delete(c)}if(l.addrs.length===0)throw errcode(new Error("The dial request has no valid addresses"),codes$4.ERR_NO_VALID_ADDRESSES);const f=this.pendingDials.get(l.id)??this._createPendingDial(l,r);try{const p=await f.promise;return log$g("dial succeeded to %s",l.id),p}catch(p){throw log$g("dial failed to %s",l.id,p),f.controller.signal.aborted&&(p.code=codes$4.ERR_TIMEOUT),log$g.error(p),p}finally{f.destroy()}}async _createDialTarget(e,r){let n=[];if(isMultiaddr$3(e.multiaddr)&&n.push(e.multiaddr),!isMultiaddr$3(e.multiaddr)&&isPeerId(e.peerId)&&n.push(...await this._loadAddresses(e.peerId)),n=(await Promise.all(n.map(async a=>await this._resolve(a,r)))).flat().filter(a=>!!this.components.transportManager.transportForMultiaddr(a)),n=[...new Set(n.map(a=>a.toString()))].map(a=>multiaddr$3(a)),n.length>this.maxAddrsToDial)throw errcode(new Error("dial with more addresses than allowed"),codes$4.ERR_TOO_MANY_ADDRESSES);const o=isPeerId(e.peerId)?e.peerId:void 0;if(o!=null){const a=`/p2p/${o.toString()}`;n=n.map(c=>{const u=c.getPeerId();return u==null||!o.equals(u)?c.encapsulate(a):c})}return{id:o==null?randomId():o.toString(),addrs:n}}async _loadAddresses(e){const r=await this.components.peerStore.addressBook.get(e);return(await Promise.all(r.map(async n=>await this.components.connectionGater.denyDialMultiaddr(e,n.multiaddr)?!1:n))).filter(isTruthy).sort(this.addressSorter).map(n=>n.multiaddr)}_createPendingDial(e,r={}){const n=async(f,p={})=>{if(p.signal?.aborted===!0)throw errcode(new Error("already aborted"),codes$4.ERR_ALREADY_ABORTED);return await this.components.transportManager.dial(f,p).catch(g=>{throw log$g.error("dial to %s failed",f,g),g})},o=new DialRequest({addrs:e.addrs,dialAction:n,dialer:this}),a=new timeoutAbortController.TimeoutController(this.timeout),c=[a.signal];r.signal!=null&&c.push(r.signal);const u=anySignal_2(c);try{eventsExports.setMaxListeners?.(1/0,u)}catch{}const l={dialRequest:o,controller:a,promise:o.run({...r,signal:u}),destroy:()=>{a.clear(),this.pendingDials.delete(e.id)}};return this.pendingDials.set(e.id,l),l}getTokens(e){const r=Math.min(e,this.maxDialsPerPeer,this.tokens.length),n=this.tokens.splice(0,r);return log$g("%d tokens request, returning %d, %d remaining",e,r,this.tokens.length),n}releaseToken(e){this.tokens.includes(e)||(log$g("token %d released",e),this.tokens.push(e))}async _resolve(e,r){if(!e.protoNames().includes("dnsaddr"))return[e];const n=await this._resolveRecord(e,r);return(await Promise.all(n.map(async o=>await this._resolve(o,r)))).flat().reduce((o,a)=>(o.find(c=>c.equals(a))==null&&o.push(a),o),[])}async _resolveRecord(e,r){try{return e=multiaddr$3(e.toString()),await e.resolve(r)}catch(n){return log$g.error(`multiaddr ${e.toString()} could not be resolved`,n),[]}}}function isTruthy(t){return!!t}function randomId(){return`${parseInt(String(Math.random()*1e9),10).toString()}${Date.now()}`}const log$f=logger$3("libp2p");class Libp2pNode extends EventEmitter$1{constructor(e){super(),this.started=!1,this.peerId=e.peerId;const r=this.components=new DefaultComponents({peerId:e.peerId,datastore:e.datastore??new MemoryDatastore,connectionGater:{denyDialPeer:async()=>await Promise.resolve(!1),denyDialMultiaddr:async()=>await Promise.resolve(!1),denyInboundConnection:async()=>await Promise.resolve(!1),denyOutboundConnection:async()=>await Promise.resolve(!1),denyInboundEncryptedConnection:async()=>await Promise.resolve(!1),denyOutboundEncryptedConnection:async()=>await Promise.resolve(!1),denyInboundUpgradedConnection:async()=>await Promise.resolve(!1),denyOutboundUpgradedConnection:async()=>await Promise.resolve(!1),filterMultiaddrForPeer:async()=>await Promise.resolve(!0),...e.connectionGater}});r.peerStore=new PersistentPeerStore(r,{addressFilter:this.components.connectionGater.filterMultiaddrForPeer,...e.peerStore}),this.services=[r],e.metrics!=null&&(this.metrics=this.components.metrics=this.configureComponent(e.metrics(this.components))),this.peerStore=this.components.peerStore,this.peerStore.addEventListener("peer",c=>{const{detail:u}=c;this.dispatchEvent(new CustomEvent("peer:discovery",{detail:u}))}),e.connectionProtector!=null&&(this.components.connectionProtector=e.connectionProtector(r)),this.components.upgrader=new DefaultUpgrader(this.components,{connectionEncryption:(e.connectionEncryption??[]).map(c=>this.configureComponent(c(this.components))),muxers:(e.streamMuxers??[]).map(c=>this.configureComponent(c(this.components))),inboundUpgradeTimeout:e.connectionManager.inboundUpgradeTimeout}),this.components.dialer=new DefaultDialer(this.components,e.connectionManager),this.connectionManager=this.components.connectionManager=new DefaultConnectionManager(this.components,e.connectionManager),this.components.connectionManager.addEventListener("peer:disconnect",c=>{this.dispatchEvent(new CustomEvent("peer:disconnect",{detail:c.detail}))}),this.components.connectionManager.addEventListener("peer:connect",c=>{this.dispatchEvent(new CustomEvent("peer:connect",{detail:c.detail}))}),this.registrar=this.components.registrar=new DefaultRegistrar(this.components),this.components.transportManager=new DefaultTransportManager(this.components,e.transportManager),this.components.addressManager=new DefaultAddressManager(this.components,e.addresses),this.configureComponent(new PeerRecordUpdater(this.components)),this.configureComponent(new AutoDialler(this.components,{enabled:e.connectionManager.autoDial,minConnections:e.connectionManager.minConnections,autoDialInterval:e.connectionManager.autoDialInterval}));const n=KeyChain.generateOptions();this.keychain=this.configureComponent(new KeyChain(this.components,{...n,...e.keychain})),this.services.push(new NatManager(this.components,e.nat)),e.transports.forEach(c=>{this.components.transportManager.add(this.configureComponent(c(this.components)))}),this.identifyService=new IdentifyService(this.components,{...e.identify}),this.configureComponent(this.identifyService),e.dht!=null?this.dht=this.components.dht=e.dht(this.components):this.dht=new DummyDHT,e.pubsub!=null?this.pubsub=this.components.pubsub=e.pubsub(this.components):this.pubsub=new DummyPubSub;const o=(e.peerRouters??[]).map(c=>this.configureComponent(c(this.components)));e.dht!=null&&(o.push(this.configureComponent(new DHTPeerRouting(this.dht))),this.dht.addEventListener("peer",c=>{this.onDiscoveryPeer(c)})),this.peerRouting=this.components.peerRouting=this.configureComponent(new DefaultPeerRouting(this.components,{...e.peerRouting,routers:o}));const a=(e.contentRouters??[]).map(c=>this.configureComponent(c(this.components)));e.dht!=null&&a.push(this.configureComponent(new DHTContentRouting(this.dht))),this.contentRouting=this.components.contentRouting=this.configureComponent(new CompoundContentRouting(this.components,{routers:a})),e.relay.enabled&&(this.components.transportManager.add(this.configureComponent(new Circuit$1(this.components,e.relay))),this.configureComponent(new Relay(this.components,{addressSorter:e.connectionManager.addressSorter,...e.relay}))),this.fetchService=this.configureComponent(new FetchService(this.components,{...e.fetch})),this.pingService=this.configureComponent(new PingService(this.components,{...e.ping}));for(const c of e.peerDiscovery??[])this.configureComponent(c(this.components)).addEventListener("peer",u=>{this.onDiscoveryPeer(u)})}configureComponent(e){return isStartable(e)&&this.services.push(e),e}async start(){if(!this.started){this.started=!0,log$f("libp2p is starting");try{await Promise.all(this.services.map(async e=>{e.beforeStart!=null&&await e.beforeStart()})),await Promise.all(this.services.map(e=>e.start())),await Promise.all(this.services.map(async e=>{e.afterStart!=null&&await e.afterStart()})),log$f("libp2p has started")}catch(e){throw log$f.error("An error occurred starting libp2p",e),await this.stop(),e}}}async stop(){this.started&&(log$f("libp2p is stopping"),this.started=!1,await Promise.all(this.services.map(async e=>{e.beforeStop!=null&&await e.beforeStop()})),await Promise.all(this.services.map(e=>e.stop())),await Promise.all(this.services.map(async e=>{e.afterStop!=null&&await e.afterStop()})),log$f("libp2p has stopped"))}isStarted(){return this.started}getConnections(e){return this.components.connectionManager.getConnections(e)}getPeers(){const e=new PeerSet;for(const r of this.components.connectionManager.getConnections())e.add(r.remotePeer);return Array.from(e)}async dial(e,r={}){return await this.components.connectionManager.openConnection(e,r)}async dialProtocol(e,r,n={}){if(r==null)throw errcode(new Error("no protocols were provided to open a stream"),codes$4.ERR_INVALID_PROTOCOLS_FOR_STREAM);if(r=Array.isArray(r)?r:[r],r.length===0)throw errcode(new Error("no protocols were provided to open a stream"),codes$4.ERR_INVALID_PROTOCOLS_FOR_STREAM);return await(await this.dial(e,n)).newStream(r,n)}getMultiaddrs(){return this.components.addressManager.getAddresses()}getProtocols(){return this.components.registrar.getProtocols()}async hangUp(e){isMultiaddr$3(e)&&(e=peerIdFromString$1(e.getPeerId()??"")),await this.components.connectionManager.closeConnections(e)}async getPublicKey(e,r={}){if(log$f("getPublicKey %p",e),e.publicKey!=null)return e.publicKey;const n=await this.peerStore.get(e);if(n.pubKey!=null)return n.pubKey;if(this.dht==null)throw errcode(new Error("Public key was not in the peer store and the DHT is not enabled"),codes$4.ERR_NO_ROUTERS_AVAILABLE);const o=concat$8([fromString$y("/pk/"),e.multihash.digest]);for await(const a of this.dht.get(o,r))if(a.name==="VALUE"){const c=unmarshalPublicKey(a.value);return await this.peerStore.keyBook.set(e,a.value),c.bytes}throw errcode(new Error(`Node not responding with its public key: ${e.toString()}`),codes$4.ERR_INVALID_RECORD)}async fetch(e,r,n={}){if(isMultiaddr$3(e)){const o=peerIdFromString$1(e.getPeerId()??"");await this.components.peerStore.addressBook.add(o,[e]),e=o}return await this.fetchService.fetch(e,r,n)}async ping(e,r={}){if(isMultiaddr$3(e)){const n=peerIdFromString$1(e.getPeerId()??"");await this.components.peerStore.addressBook.add(n,[e]),e=n}return await this.pingService.ping(e,r)}async handle(e,r,n){Array.isArray(e)||(e=[e]),await Promise.all(e.map(async o=>{await this.components.registrar.handle(o,r,n)}))}async unhandle(e){Array.isArray(e)||(e=[e]),await Promise.all(e.map(async r=>{await this.components.registrar.unhandle(r)}))}async register(e,r){return await this.registrar.register(e,r)}unregister(e){this.registrar.unregister(e)}onDiscoveryPeer(e){const{detail:r}=e;if(r.id.toString()===this.peerId.toString()){log$f.error(new Error(codes$4.ERR_DISCOVERED_SELF));return}r.multiaddrs.length>0&&this.components.peerStore.addressBook.add(r.id,r.multiaddrs).catch(n=>log$f.error(n)),r.protocols.length>0&&this.components.peerStore.protoBook.set(r.id,r.protocols).catch(n=>log$f.error(n)),this.dispatchEvent(new CustomEvent("peer:discovery",{detail:r}))}}async function createLibp2pNode(t){if(t.peerId==null){const e=t.datastore;if(e!=null)try{const r=new KeyChain({datastore:e},{...KeyChain.generateOptions(),...t.keychain??{}});t.peerId=await r.exportPeerId("self")}catch(r){if(r.code!=="ERR_NOT_FOUND")throw r}}return t.peerId==null&&(t.peerId=await createEd25519PeerId()),new Libp2pNode(validateConfig(t))}async function createLibp2p$1(t){const e=await createLibp2pNode(t);return t.start!==!1&&await e.start(),e}const randomBytes=requireBrowser$1(),{EventEmitter}=eventsExports;function arrayEquals(t,e){if(t===e)return!0;if(t.length!==e.length)return!1;for(let r=0,n=t.length;r<n;++r)if(t[r]!==e[r])return!1;return!0}function createNode(){return{contacts:[],dontSplit:!1,left:null,right:null}}function ensureInt8(t,e){if(!(e instanceof Uint8Array))throw new TypeError(t+" is not a Uint8Array")}class KBucket extends EventEmitter{constructor(e={}){super(),this.localNodeId=e.localNodeId||randomBytes(20),this.numberOfNodesPerKBucket=e.numberOfNodesPerKBucket||20,this.numberOfNodesToPing=e.numberOfNodesToPing||3,this.distance=e.distance||KBucket.distance,this.arbiter=e.arbiter||KBucket.arbiter,this.metadata=Object.assign({},e.metadata),ensureInt8("option.localNodeId as parameter 1",this.localNodeId),this.root=createNode()}static arbiter(e,r){return e.vectorClock>r.vectorClock?e:r}static distance(e,r){let n=0,o=0;const a=Math.min(e.length,r.length),c=Math.max(e.length,r.length);for(;o<a;++o)n=n*256+(e[o]^r[o]);for(;o<c;++o)n=n*256+255;return n}add(e){ensureInt8("contact.id",(e||{}).id);let r=0,n=this.root;for(;n.contacts===null;)n=this._determineNode(n,e.id,r++);const o=this._indexOf(n,e.id);return o>=0?(this._update(n,o,e),this):n.contacts.length<this.numberOfNodesPerKBucket?(n.contacts.push(e),this.emit("added",e),this):n.dontSplit?(this.emit("ping",n.contacts.slice(0,this.numberOfNodesToPing),e),this):(this._split(n,r),this.add(e))}closest(e,r=1/0){if(ensureInt8("id",e),!Number.isInteger(r)&&r!==1/0||r<=0)throw new TypeError("n is not positive number");let n=[];for(let o=[this.root],a=0;o.length>0&&n.length<r;){const c=o.pop();if(c.contacts===null){const u=this._determineNode(c,e,a++);o.push(c.left===u?c.right:c.left),o.push(u)}else n=n.concat(c.contacts)}return n.map(o=>[this.distance(o.id,e),o]).sort((o,a)=>o[0]-a[0]).slice(0,r).map(o=>o[1])}count(){let e=0;for(const r=[this.root];r.length>0;){const n=r.pop();n.contacts===null?r.push(n.right,n.left):e+=n.contacts.length}return e}_determineNode(e,r,n){const o=n>>3,a=n%8;return r.length<=o&&a!==0?e.left:r[o]&1<<7-a?e.right:e.left}get(e){ensureInt8("id",e);let r=0,n=this.root;for(;n.contacts===null;)n=this._determineNode(n,e,r++);const o=this._indexOf(n,e);return o>=0?n.contacts[o]:null}_indexOf(e,r){for(let n=0;n<e.contacts.length;++n)if(arrayEquals(e.contacts[n].id,r))return n;return-1}remove(e){ensureInt8("the id as parameter 1",e);let r=0,n=this.root;for(;n.contacts===null;)n=this._determineNode(n,e,r++);const o=this._indexOf(n,e);if(o>=0){const a=n.contacts.splice(o,1)[0];this.emit("removed",a)}return this}_split(e,r){e.left=createNode(),e.right=createNode();for(const a of e.contacts)this._determineNode(e,a.id,r).contacts.push(a);e.contacts=null;const n=this._determineNode(e,this.localNodeId,r),o=e.left===n?e.right:e.left;o.dontSplit=!0}toArray(){let e=[];for(const r=[this.root];r.length>0;){const n=r.pop();n.contacts===null?r.push(n.right,n.left):e=e.concat(n.contacts)}return e}*toIterable(){for(const e=[this.root];e.length>0;){const r=e.pop();r.contacts===null?e.push(r.right,r.left):yield*r.contacts}}_update(e,r,n){if(!arrayEquals(e.contacts[r].id,n.id))throw new Error("wrong index for _update");const o=e.contacts[r],a=this.arbiter(o,n);a===o&&o!==n||(e.contacts.splice(r,1),e.contacts.push(a),this.emit("updated",o,a))}}var kBucket=KBucket;const KBuck=getDefaultExportFromCjs(kBucket),equals$3=(t,e)=>{if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0},coerce$2=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")},fromString$1=t=>new TextEncoder().encode(t),toString$1=t=>new TextDecoder().decode(t);var encode_1$3=encode$a,MSB$5=128,REST$5=127,MSBALL$3=~REST$5,INT$3=Math.pow(2,31);function encode$a(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$3;)e[r++]=t&255|MSB$5,t/=128;for(;t&MSBALL$3;)e[r++]=t&255|MSB$5,t>>>=7;return e[r]=t|0,encode$a.bytes=r-n+1,e}var decode$e=read$3,MSB$1$3=128,REST$1$3=127;function read$3(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$3.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$3)<<o:(c&REST$1$3)*Math.pow(2,o),o+=7}while(c>=MSB$1$3);return read$3.bytes=a-n,r}var N1$3=Math.pow(2,7),N2$3=Math.pow(2,14),N3$3=Math.pow(2,21),N4$3=Math.pow(2,28),N5$3=Math.pow(2,35),N6$3=Math.pow(2,42),N7$3=Math.pow(2,49),N8$3=Math.pow(2,56),N9$3=Math.pow(2,63),length$3=function(t){return t<N1$3?1:t<N2$3?2:t<N3$3?3:t<N4$3?4:t<N5$3?5:t<N6$3?6:t<N7$3?7:t<N8$3?8:t<N9$3?9:10},varint$4={encode:encode_1$3,decode:decode$e,encodingLength:length$3},_brrp_varint$2=varint$4;const decode$d=(t,e=0)=>[_brrp_varint$2.decode(t,e),_brrp_varint$2.decode.bytes],encodeTo$2=(t,e,r=0)=>(_brrp_varint$2.encode(t,e,r),e),encodingLength$2=t=>_brrp_varint$2.encodingLength(t),create$4=(t,e)=>{const r=e.byteLength,n=encodingLength$2(t),o=n+encodingLength$2(r),a=new Uint8Array(o+r);return encodeTo$2(t,a,0),encodeTo$2(r,a,n),a.set(e,o),new Digest$2(t,r,e,a)},decode$c=t=>{const e=coerce$2(t),[r,n]=decode$d(e),[o,a]=decode$d(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest$2(r,o,c,e)},equals$2=(t,e)=>{if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$3(t.bytes,r.bytes)}};let Digest$2=class{constructor(t,e,r,n){this.code=t,this.size=e,this.digest=r,this.bytes=n}};const from$5=({name:t,code:e,encode:r})=>new Hasher$2(t,e,r);let Hasher$2=class{constructor(t,e,r){this.name=t,this.code=e,this.encode=r}digest(t){if(t instanceof Uint8Array){const e=this.encode(t);return e instanceof Uint8Array?create$4(this.code,e):e.then(r=>create$4(this.code,r))}else throw Error("Unknown type, must be binary type")}};const sha$2=t=>async e=>new Uint8Array(await crypto.subtle.digest(t,e)),sha256$3=from$5({name:"sha2-256",code:18,encode:sha$2("SHA-256")}),second=1e3,minute=60*second,hour=60*minute,MAX_RECORD_AGE=36*hour,LAN_PREFIX="/lan",PROTOCOL_PREFIX="/ipfs",PROTOCOL_DHT="/kad/1.0.0",RECORD_KEY_PREFIX="/dht/record",PROVIDER_KEY_PREFIX="/dht/provider",PROVIDERS_LRU_CACHE_SIZE=256,PROVIDERS_VALIDITY=24*hour,PROVIDERS_CLEANUP_INTERVAL=hour,K=20,ALPHA=3,QUERY_SELF_INTERVAL=Number(5*minute),QUERY_SELF_TIMEOUT=Number(30*second),TABLE_REFRESH_INTERVAL=Number(5*minute),TABLE_REFRESH_QUERY_TIMEOUT=Number(30*second),DEFAULT_QUERY_TIMEOUT=Number(30*second),PK_PREFIX=fromString$y("/pk/");function removePrivateAddresses(t){return{...t,multiaddrs:t.multiaddrs.filter(e=>{const[[r,n]]=e.stringTuples();if(r===53||r===54||r===55)return n!=="localhost";if(r!==4&&r!==6||n==null)return!1;const o=is_ip_private(n);return o==null?!0:!o})}}function removePublicAddresses(t){return{...t,multiaddrs:t.multiaddrs.filter(e=>{const[[r,n]]=e.stringTuples();return n==="localhost"?!0:r!==4&&r!==6||n==null?!1:is_ip_private(n)??!1})}}async function convertBuffer(t){return(await sha256$3.digest(t)).digest}async function convertPeerId(t){return await convertBuffer(t.toBytes())}function bufferToRecordKey(t){return new Key(`${RECORD_KEY_PREFIX}/${toString$D(t,"base32")}`,!1)}function keyForPublicKey(t){return concat$8([PK_PREFIX,t.toBytes()])}function isPublicKeyKey(t){return toString$D(t.subarray(0,4))==="/pk/"}function fromPublicKeyKey(t){return peerIdFromBytes$1(t.subarray(4))}function createPutRecord(t,e){const r=new Date;return new Libp2pRecord(t,e,r).serialize()}function debounce$1(t,e=100){let r;return()=>{clearTimeout(r),r=setTimeout(()=>{t()},e)}}const KAD_CLOSE_TAG_NAME="kad-close",KAD_CLOSE_TAG_VALUE=50,KBUCKET_SIZE=20,PING_TIMEOUT=1e4,PING_CONCURRENCY=10;class RoutingTable{constructor(e,r){const{kBucketSize:n,pingTimeout:o,lan:a,pingConcurrency:c,protocol:u,tagName:l,tagValue:f}=r;this.components=e,this.log=logger$3(`libp2p:kad-dht:${a?"lan":"wan"}:routing-table`),this.kBucketSize=n??KBUCKET_SIZE,this.pingTimeout=o??PING_TIMEOUT,this.pingConcurrency=c??PING_CONCURRENCY,this.lan=a,this.running=!1,this.protocol=u,this.tagName=l??KAD_CLOSE_TAG_NAME,this.tagValue=f??KAD_CLOSE_TAG_VALUE;const p=()=>{this.metrics?.pingQueueSize.update(this.pingQueue.size),this.metrics?.pingRunning.update(this.pingQueue.pending)};this.pingQueue=new PQueue$1({concurrency:this.pingConcurrency}),this.pingQueue.addListener("add",p),this.pingQueue.addListener("next",p),this._onPing=this._onPing.bind(this)}isStarted(){return this.running}async start(){this.running=!0,this.components.metrics!=null&&(this.metrics={routingTableSize:this.components.metrics.registerMetric(`libp2p_kad_dht_${this.lan?"lan":"wan"}_routing_table_size`),pingQueueSize:this.components.metrics.registerMetric(`libp2p_kad_dht_${this.lan?"lan":"wan"}_ping_queue_size`),pingRunning:this.components.metrics.registerMetric(`libp2p_kad_dht_${this.lan?"lan":"wan"}_ping_running`)});const e=new KBuck({localNodeId:await convertPeerId(this.components.peerId),numberOfNodesPerKBucket:this.kBucketSize,numberOfNodesToPing:1});this.kb=e,e.on("ping",this._onPing),this._tagPeers(e)}async stop(){this.running=!1,this.pingQueue.clear(),this.kb=void 0}_tagPeers(e){let r=new PeerSet;const n=debounce$1(()=>{const o=new PeerSet(e.closest(e.localNodeId,KBUCKET_SIZE).map(u=>u.peer)),a=o.difference(r),c=r.difference(o);Promise.resolve().then(async()=>{for(const u of a)await this.components.peerStore.tagPeer(u,this.tagName,{value:this.tagValue});for(const u of c)await this.components.peerStore.unTagPeer(u,this.tagName)}).catch(u=>{this.log.error("Could not update peer tags",u)}),r=o});e.on("added",()=>{n()}),e.on("removed",()=>{n()})}_onPing(e,r){this.pingQueue.add(async()=>{if(!this.running)return;let n=0;try{await Promise.all(e.map(async o=>{let a;try{a=new timeoutAbortController.TimeoutController(this.pingTimeout);const c={signal:a.signal};this.log("pinging old contact %p",o.peer),(await(await this.components.connectionManager.openConnection(o.peer,c)).newStream(this.protocol,c)).close(),n++}catch(c){this.running&&this.kb!=null&&(this.log.error("could not ping peer %p",o.peer,c),this.log("evicting old contact after ping failed %p",o),this.kb.remove(o.id))}finally{a?.clear(),this.metrics?.routingTableSize.update(this.size)}})),this.running&&n<e.length&&this.kb!=null&&(this.log("adding new contact %p",r.peer),this.kb.add(r))}catch(o){this.log.error("could not process k-bucket ping event",o)}}).catch(n=>{this.log.error("could not process k-bucket ping event",n)})}get size(){return this.kb==null?0:this.kb.count()}async find(e){const r=await convertPeerId(e),n=this.closestPeer(r);if(n!=null&&e.equals(n))return n}closestPeer(e){const r=this.closestPeers(e,1);if(r.length>0)return r[0]}closestPeers(e,r=this.kBucketSize){return this.kb==null?[]:this.kb.closest(e,r).map(n=>n.peer)}async add(e){if(this.kb==null)throw new Error("RoutingTable is not started");const r=await convertPeerId(e);this.kb.add({id:r,peer:e}),this.log("added %p with kad id %b",e,r),this.metrics?.routingTableSize.update(this.size)}async remove(e){if(this.kb==null)throw new Error("RoutingTable is not started");const r=await convertPeerId(e);this.kb.remove(r),this.metrics?.routingTableSize.update(this.size)}}const GENERATED_PREFIXES=[77591,22417,43971,28421,740,29829,71467,228973,196661,78537,27689,36431,44415,14362,19456,106025,96308,2882,49509,21149,87173,131409,75844,23676,121838,30291,17492,2953,7564,110620,129477,127283,53113,72417,165166,109690,21200,102125,24049,71504,90342,25307,72039,26812,26715,32264,133800,71161,88956,171987,51779,24425,16671,30251,186294,247761,14202,2121,8465,35024,4876,85917,169730,3638,256836,96184,943,18678,6583,52907,35807,112254,214097,18796,11595,9243,23554,887,268203,382004,24590,111335,11625,16619,29039,102425,69006,97976,92362,32552,63717,41433,128974,137630,59943,10019,13986,35430,33665,108037,43799,43280,38195,29078,58629,18265,14425,46832,235538,40830,77881,110717,58937,3463,325358,51300,47623,117252,19007,10170,20540,91237,294813,4951,79841,56232,36270,128547,69209,66275,100156,32063,73531,34439,80937,28892,44466,88595,216307,32583,49620,16605,82127,45807,21630,78726,20235,40163,111007,96926,5567,72083,21665,58844,39419,179767,48328,42662,51550,5251,37811,49608,81056,50854,55513,20922,18891,197409,164656,32593,71449,220474,58919,85682,67854,13758,35066,3565,61905,214793,119572,141419,21504,10302,27354,67003,46131,32668,15165,64871,34450,17821,2757,11452,34189,5160,12257,85523,560,53385,65887,119549,135620,312353,115979,122356,10867,193231,124537,54783,90675,120791,4715,142253,50943,17271,43358,25331,4917,120566,34580,12878,33786,160528,32523,4869,301307,104817,81491,23276,8832,97911,31265,52065,7998,49622,9715,43998,34091,84587,20664,69041,29419,53205,10838,58288,116145,6185,5154,141795,35924,21307,144738,43730,12085,8279,10002,119,133779,199668,72938,31768,39176,67875,38453,9700,44144,4121,116048,41733,12868,82669,92308,128,34262,11332,7712,90764,36141,13553,71312,77470,117314,96549,49135,23602,54468,28605,6327,62308,17171,67531,21319,14105,894,107722,46157,8503,51069,100472,45138,15246,14577,35609,191464,1757,13364,161349,32067,91705,81144,52339,5408,91066,21983,14157,100545,4372,26630,129112,1423,29676,213626,4397,88436,99190,6877,49958,26122,114348,60661,29818,293118,50042,179738,16400,163423,89627,31040,43973,36638,45952,5153,1894,109322,1898,134021,12402,112077,68309,190269,69866,31938,107383,11522,105232,11248,14868,39852,71707,186525,16530,38162,106212,11700,5130,16608,26998,59586,108399,230033,43683,48135,82179,2073,5015,196684,189293,16378,23452,8301,35640,11632,214551,29240,57644,33137,91949,55157,52384,117313,5090,17717,89668,49363,82238,241035,66216,29066,184088,97206,62820,26595,4241,135635,173672,8202,459,71355,146294,29587,3008,135385,141203,14803,6634,45094,69362,50925,546,51884,62011,83296,234584,44515,56050,89476,87751,19373,12691,149923,19794,13833,35846,87557,58339,2884,19145,25647,12224,11024,77338,64608,122297,53025,7205,36189,36294,170779,21750,7739,173883,75192,35664,224240,113121,30181,26267,27036,117827,92015,106516,55628,203549,67949,60462,60844,35911,20457,1820,920,19773,8738,73173,181993,38521,98254,76257,46008,92796,5384,26868,151566,22124,2411,15919,186872,180021,28099,152961,78811,80237,62352,102653,74259,184890,16792,123702,224945,29940,19512,75283,14059,112691,92811,233329,20411,138569,53341,109802,50600,134528,66747,5529,166531,31578,64732,67189,1596,126357,967,167999,206598,109752,119431,207825,78791,91938,10301,27311,24233,252343,28831,32812,66002,112267,90895,8786,8095,16824,22866,21813,60507,174833,19549,130985,117051,52110,6938,81923,123864,38061,919,18680,53534,46739,112893,161529,85429,26761,11900,81121,91968,15390,217947,56524,1713,6654,37089,85630,138866,61850,16491,75577,16884,98296,73523,6140,44645,6062,36366,29844,57946,37932,42472,5266,20834,19309,33753,127182,134259,35810,41805,45878,312001,14881,47757,49251,120050,44252,3708,25856,107864,120347,1228,36550,41682,34496,47025,8393,173365,246526,12894,161607,35670,90785,126572,2095,124731,157033,58694,554,12786,9642,4817,16136,47864,174698,66992,4639,69284,10625,40710,27763,51738,30404,264105,137904,109882,52487,42824,57514,2740,10479,146799,107390,16586,88038,174951,9410,16185,44158,5568,40658,46108,12763,97385,26175,108859,664,230732,67470,46663,14395,50750,141320,93140,15361,47997,55784,6791,307840,118569,107326,18056,58281,260415,54691,8790,73332,45633,7511,45674,143373,14031,11799,94491,35646,96544,14560,26049,32983,25791,83814,42094,231370,63955,139212,2359,169908,3108,183486,105867,28197,32941,124968,26402,88267,149768,23053,3078,19091,52924,25383,19209,111548,97361,3959,24880,235061,9099,24921,161254,151405,20508,7159,34381,20133,11434,74036,19974,34769,36585,1076,22454,17354,38727,235160,111547,96454,117448,156940,91330,37299,7310,26915,117060,51369,22620,61861,322264,106850,111694,15091,2624,40345,300446,177064,1707,27389,54792,327783,132669,183543,59003,17744,20603,151134,106923,53084,71803,279424,319816,11579,21946,16728,38274,72711,5085,83391,88646,40159,25027,34680,10752,12988,54126,30365,18338,100445,230674,44874,84974,143877,123253,139372,28082,91477,144002,13096,219729,46016,50029,42377,14601,6660,58244,58978,23918,88206,113611,64452,17541,41032,10942,12021,49189,10978,40175,37156,10947,71709,106894,112538,57007,137486,150608,152719,40615,7746,279716,13101,19524,28708,40578,72320,1096,182051,94527,51275,22833,45164,81917,77519,48508,5421,140302,37845,149830,5587,27579,5357,428725,248187,6326,206760,39814,32585,89923,44341,288753,284443,96368,31201,94189,119504,20359,52073,103216,179,27934,32801,96035,34111,34309,101326,18198,20704,210266,37643,27880,141873,106e3,19414,56614,167714,66483,107885,86602,4379,20796,75467,4987,5017,118857,26003,34308,114428,29198,6686,29697,73632,3739,69795,16798,41504,7207,30722,21436,36735,28067,28545,3239,11221,36031,41889,100010,19247,317673,29495,174554,6424,129725,53845,94986,7955,59676,2604,191497,19735,102214,62954,23844,11872,179525,261436,34492,428,78404,142035,16747,17246,27578,37021,33672,57944,26056,135760,2369,61674,122066,31327,19374,157065,40553,130982,69619,71290,38855,72100,92903,95940,51422,165999,65713,57873,50726,7288,20272,2081,42326,22624,81120,57914,79352,19447,1684,72302,11774,302559,161481,96396,13692,414988,3721,79066,56627,46883,21150,11747,12184,5856,113458,176117,84416,52079,27933,3354,59765,141359,2212,216309,2555,23458,196722,142463,45701,44548,28798,19418,215,29916,9396,10574,114226,84475,13520,18694,34056,4524,90302,62930,13539,19407,77209,7728,38088,9535,2263,23875,183945,17750,26274,67172,10585,28042,22199,7478,51331,66030,26774,192929,31434,25850,50197,52926,178158,4679,181256,70184,229600,9959,105594,72158,73974,2726,35085,78087,23284,35568,51713,155676,5401,27254,11966,17569,223253,71993,103357,111477,55722,30504,26034,46774,35392,36285,214814,41143,163465,1051,16094,81044,6636,76489,179102,20712,39178,35683,125177,54219,30617,52994,25324,50123,2543,87529,58995,10688,125199,12388,60158,125481,131646,7642,133350,65874,3438,97277,101450,10075,56344,116821,50778,60547,98016,106135,13859,14255,16300,77373,173521,8285,45932,37426,4054,114295,55947,7703,39114,52,51119,128135,19714,60715,9554,50492,88180,2823,118271,52993,122625,97919,23859,37895,25040,33614,32102,20431,3577,9275,15686,43031,157741,110358,1884,40291,125391,13736,5008,64881,87336,77381,70711,43032,49155,118587,70494,4318,10168,30126,12580,10524,280104,104001,145413,2862,84140,6603,106005,13566,12780,11251,42830,571,179910,82443,13146,469,42714,32591,265217,424024,92553,54721,134100,6007,15242,114681,59030,16718,85465,200214,85982,55174,165013,23493,56964,82529,109150,32706,27568,82442,5350,14976,13165,44890,60021,21343,33978,17264,4655,22328,27819,75730,16567,55483,14510,17926,45827,150609,3704,7385,272531,161543,76904,122163,52405,2039,19165,41623,14423,228354,3369,176360,85491,7122,35789,303724,4465,13628,2233,55311,118771,20713,10006,221519,45115,71021,35650,29775,7337,10864,20665,21142,1746,15080,1624,32449,10905,105743,229797,7701,3940,22997,178467,57208,389057,39683,59403,63344,63125,54847,69691,18336,56448,3362,37202,18282,29648,138224,35867,10495,5911,28814,26653,31514,176702,26550,45621,11734,4525,40543,73944,121080,27858,155561,14887,44670,30742,8796,107455,113472,56369,75581,183777,240095,133699,153299,8768,160464,26058,49078,103971,21875,71486,44888,17156,9678,89541,123019,102337,3972,83930,21245,87852,109660,287918,183019,686,10100,39177,283941,11274,24736,26793,26214,25995,77011,141580,4070,23742,46285,46632,30700,26669,19056,35951,115575,174034,56097,35463,87425,24575,44245,38701,82317,85922,281616,100333,147697,61503,7730,84330,8530,59917,61597,17173,9092,32658,90288,193136,39023,20381,56654,31132,7779,1919,1375,117128,30819,11169,40938,23935,115201,101155,151034,4835,11231,74550,89388,59951,91704,107312,167882,115062,12732,72738,88703,464019,158267,57995,60496,737,14371,123867,4174,243339,159946,7568,16025,134556,110916,38103,191,80226,88794,29688,27230,10454,76308,57647,77409,113483,66864,14745,19808,12023,46583,84805,16015,17102,2231,20611,3547,95740,250131,34559,108894,8498,15853,159169,148920,20942,2813,93160,45188,210613,45531,52587,149062,39782,28194,57849,60965,84954,89766,84453,100927,16501,27658,165311,103841,54192,207341,19558,20084,319622,5672,205467,98462,61849,36279,13609,147177,24726,165015,209489,59591,31157,6551,117580,75060,141146,277310,21072,22023,106474,63041,137443,122965,68371,5383,42146,98961,113467,30863,23794,4843,99630,30392,82679,13699,241612,33601,93146,24319,18643,32155,95669,40440,15333,34089,67799,142144,58245,38633,114531,117400,77861,188726,5507,2568,8853,10987,107222,2663,2421,11530,13345,30075,41785,118661,104786,17459,12490,16281,71936,193555,17431,5944,71758,26485,77317,20803,367167,158,7362,93430,11735,172445,46002,11532,54482,930,62911,2235,23004,179236,4764,101859,208113,22477,55163,95579,14098,67320,162556,90709,156949,3826,57492,4025,34092,87442,104565,6718,186015,28214,14209,10039,107186,233912,58877,81637,55265,39828,6194,145813,50831,105849,4974,88319,122296,10272,197216,95714,51540,72418,23324,91555,8743,140452,250249,51666,34124,7229,38592,129641,78169,174242,22464,149964,51450,14034,10026,95376,26190,120062,14401,8700,265,31386,143573,7203,229889,61567,4227,140981,2466,72052,10787,10062,30958,6099,38471,30103,23202,208101,70847,467,58934,32271,32984,36637,24107,30771,17109,73353,13650,2098,157040,67366,66904,106018,265380,107238,18535,44025,32681,144983,62505,91295,56120,3082,77508,10322,63023,36700,81885,224127,16721,45023,239261,111272,13852,7866,149243,204199,32309,22084,42029,38316,126644,104973,14406,43454,67322,61310,15789,40285,24026,181047,6301,70927,23319,115823,27248,66693,115875,278566,63007,146844,56841,59007,87368,180001,22370,42114,80605,12022,10374,308,25079,14689,12618,63368,7936,264973,212291,136713,95999,105801,18965,32075,48700,52230,35119,96912,32992,8586,16606,101333,101812,14969,39930,759,193090,27387,42914,12937,5058,62646,64528,38624,25743,37502,3716,4435,30352,178687,26461,132611,42002,138442,35833,59582,16345,8048,60319,49349,309,47800,49739,90482,26405,34470,63786,32479,85028,39866,47846,11649,23934,29466,2816,42864,31828,7410,74885,49632,47629,111801,90749,19536,18767,105764,59606,21223,10746,76298,22220,39408,7190,79654,64856,11602,82156,272765,17079,70089,245473,51813,184407,384678,1576,122249,5064,27481,6188,25790,74361,27541,318284,45430,31488,620,93579,45723,192118,22670,51913,4162,70244,35966,26397,16199,50899,209613,121702,287507,2993,36101,132229,67345,33062,76295,118628,78705,52316,34375,107083,107454,44863,127561,33964,3073,154010,190914,55967,39074,6272,31047,5550,41123,26154,98638,47110,19998,148091,50229,31329,59900,195442,19106,61347,73497,70015,682,45850,25776,38022,148951,6288,37411,232526,109277,27286,32342,9262,5220,16651,23175,46740,129438,78614,121925,66914,88710,127952,5563,21500,34521,10739,14863,191006,62956,17359,16749,67027,56284,69134,43301,35039,58883,54466,60823,404451,75743,59856,86979,7923,34273,83785,32142,7693,268986,197428,282681,17049,22346,22990,92245,107180,3357,37104,96724,49153,7683,31197,43267,82231,164276,23696,20848,188364,22309,24821,158707,1018,22514,70922,27792,45589,59709,10765,736,35218,63479,51987,24275,63588,55361,92929,81964,4658,20122,12330,44058,13065,311456,72224,8337,211229,38979,22590,138478,52757,32595,133600,8838,31549,94412,43391,90056,1585,94802,127271,6223,31889,137038,132910,2165,57616,230152,6080,10748,36737,74579,134062,50525,180532,119270,34556,76155,82394,52595,29258,31435,87820,67996,26943,183878,38007,2410,13526,180297,69856,3503,187396,167700,7838,16701,9199,56267,3661,37407,65994,23767,5708,62508,221700,67088,86978,46776,84434,32088,5612,9149,88244,21685,95151,46750,189612,2979,506311,2594,3628,40074,105039,78243,28523,6651,38058,71999,30992,12764,68261,108991,6165,26450,61961,13400,22426,7490,60890,109623,2070,12958,50355,67979,257096,7213,42578,52121,35716,65461,7516,124758,39268,302,64712,14977,1467,219452,2840,34229,11121,21602,19270,63574,8024,1532,17331,79839,78885,52029,180767,57957,6069,91265,61380,55767,8927,32881,287603,22149,35029,68876,6428,199567,46926,13412,104132,21434,366616,45060,110046,81924,128910,45886,52821,130416,29416,77342,21762,67329,121432,79924,11724,38625,81006,102033,28338,13326,3250,82056,82526,38212,21112,12382,111495,3263,7414,86274,93490,40844,30224,45212,24019,48411,71367,24941,76729,57776,3769,38114,202019,197745,31953,237533,33270,201580,255648,100798,44741,32241,98468,106931,10085,15090,170358,33154,66787,18819,69760,25061,234005,82660,6295,131975,16874,9076,4094,25005,17740,40908,19533,220019,44330,99792,50040,19619,13950,55228,24423,31253,95308,103177,184795,28590,82285,5059,3210,75525,49894,70007,56178,10580,36051,139681,21617,98736,3555,106306,164189,37352,63915,47824,24883,145530,61904,28444,11483,19837,145446,30420,112972,85939,11835,191233,2262,20705,58630,1753,148334,1197,144714,6887,11223,107667,60879,77914,4151,57417,81594,96681,169430,1784,20444,95138,254041,27038,596,7117,72808,13759,3353,126776,21074,55322,27081,36942,39547,139830,179275,4453,713,8722,71399,19204,25785,22794,23923,104114,11291,25458,102309,88396,75288,230440,206396,104551,58447,130857,37247,94734,31548,176529,226077,65159,20104,10096,66881,94191,237909,27109,37404,1520,27421,25220,113003,23423,24884,50585,6286,231877,150800,11789,3226,90004,60642,5053,202400,61442,132531,175329,57138,30116,103847,9973,75367,16452,32360,59119,21246,10191,164804,23305,61051,37348,154530,13214,5468,50403,66754,130976,50559,80515,14436,155492,84017,5472,43107,41240,2890,90431,70188,382,76234,48040,50211,281038,237007,32115,142178,1536,22761,96429,1811,31243,1679,49143,55209,17402,235054,61494,7462,77030,34925,87609,78002,9499,9027,73289,201078,101379,63544,27666,5469,10642,30029,49816,132979,95620,58086,351930,116300,2110,2043,30845,6154,11279,16727,4122,2277,27281,4971,3650,39060,61970,65951,39674,75686,38151,11370,130809,177895,32665,63725,122267,7857,39618,118483,44792,157755,178624,136994,24260,41308,22471,12404,21707,12486,30473,52781,50246,20247,39065,909,56825,103158,128603,31542,1089,41935,32744,12428,37963,84420,33134,72921,208449,42622,168151,127335,147107,46699,38216,12591,94342,85814,31423,24944,2605,87542,67473,192551,4496,56321,91819,17630,6300,256183,114569,202090,33209,35289,34897,24967,40520,43470,5344,10199,34810,14283,10381,10017,62923,49924,23233,64539,13051,35686,19698,11570,135555,120868,44924,87065,52318,52335,47586,140906,245885,109834,78668,9065,46990,25258,72022,61243,40838,4545,146387,10537,11557,17470,36930,68104,46711,24264,79401,81043,18225,120488,24746,84338,81652,28266,13776,21878,46973,1047,230465,73357,95777,24973,210160,62210,58404,110633,169651,6937,41870,9909,26822,191062,76553,27519,96256,239070,2478,205678,67955,58532,20601,50120,19148,78501,195724,110740,8249,109665,27446,30568,57631,31425,49752,32820,65504,50079,3663,102256,219898,23849,211315,14645,4359,91767,9528,12449,49366,7941,49763,107848,8930,27086,50686,9744,10447,81935,39513,46514,1670,29229,6172,22312,137280,97759,9806,14445,22976,56458,73391,34983,93760,174219,52573,33149,59747,2429,136277,75123,165263,91040,7446,57632,48633,97140,246081,84766,151684,79918,93268,120346,54059,54875,77858,32996,103590,45276,11968,19600,25849,17159,132907,42828,16817,4913,99462,103303,27395,5737,74184,20749,21160,14377,77062,131403,158735,10999,27799,77785,9320,34366,51593,61070,33746,47048,29268,36675,30262,53297,9832,82e3,20188,122292,39917,7331,18160,68301,185935,134830,15031,4935,10004,165845,185534,46923,30109,44134,122631,18874,22903,112790,26561,18549,348902,82871,140345,255565,135390,63556,103747,145055,179600,145662,296111,61661,211987,23952,52342,126343,48450,32919,44277,82185,9591,62139,205363,376969,394874,108461,18040,120885,14798,39863,16571,16794,58271,81025,55206,14640,118656,6361,44092,85970,6262,153863,108244,180200,72264,79947,38044,10050,5735,61221,80712,5471,115689,11391,11661,184257,20010,60116,30320,19327,134598,45455,27542,18004,125092,452272,1549,91523,46567,180063,156026,2608,11174,58848,37788,65907,80194,30490,5786,40775,119519,106241,11323,156297,8425,61495,2617,29675,2425,59886,112582,49142,59618,4863,50597,86710,50650,168632,27693,85641,83643,18993,25768,84284,28090,93592,36627,312804,43381,9887,9402,100931,97165,3311,173330,66805,28935,4963,184460,3201,78102,19126,21607,37496,24938,22615,16153,32862,134792,153318,61120,6067,2812,12826,12792,23825,37559,64662,202250,102694,155488,85881,149193,46233,65383,15521,106982,11358,176786,25752,39717,34208,24510,32464,77742,39371,72028,138229,60688,71386,102834,132477,2208,11548,63670,271279,28351,30338,38620,32491,99845,143885,152266,13252,2825,178663,108097,1775,78201,14897,113573,163346,62292,171129,22183,96598,38733,64971,166776,117445,9968,146393,44677,74867,20908,97328,12761,25656,26785,9148,112344,26115,99176,110121,22437,49547,6180,79320,5835,31392,43328,33377,75870,119860,69497,80273,7325,155219,43167,111173,28347,20222,3763,71752,55041,47252,14618,28088,15012,97805,194698,54636,2036,41349,6173,96604,61530,51859,43782,13361,24334,22668,24792,7070,23441,16789,3209,36211,208475,26242,32880,122181,182407,21444,31060,88459,29929,77907,12716,10934,97005,20599,31690,8403,58445,30303,22700,10336,86731,103115,337709,72556,46788,112566,47684,67089,53548,36874,56487,41387,125985,26893,40071,106683,73712,18787,40105,72992,67246,137276,50802,36790,70328,138827,22466,39263,183295,29858,50975,9322,57397,10654,24364,30383,55799,41600,23584,127295,296610,129078,143558,244131,86397,36049,1085,80677,3820,108139,5476,34767,24683,7758,13060,7239,131671,250593,59556,103392,29810,4188,252323,39404,116877,7651,43600,40338,13554,157253,39196,25978,144387,61211,234,50104,6129,10449,93777,9240,356378,274148,4439,72970,3724,147770,78680,62570,115877,40027,40547,36817,224392,64609,34795,165027,67440,2477,37206,23431,50754,164797,46018,94995,170982,27051,7957,22767,3674,27900,56419,18930,60701,41302,2692,84749,339721,61996,111094,80221,50129,1045,8153,62945,19202,8250,37208,37418,32560,79477,41106,88569,33963,36693,5892,30570,1581,66471,49647,11922,160717,29442,5643,114865,82962,95982,132098,22633,22838,94726,54556,28566,205039,162340,33216,16849,35847,221339,94851,26533,71469,1805,3804,12935,45483,71020,36310,65381,192960,34240,35165,59773,1248,46954,155332,96864,4246,388800,16129,57133,74592,44807,442014,38203,42574,80818,91592,26377,36424,65760,977,77387,22628,147610,28018,30561,98454,6969,119628,63648,18170,36854,26601,64018,22027,37279,51395,152934,21153,9430,58760,194742,5330,55115,34158,28917,174111,13171,122326,1526,43896,66094,25325,4234,148354,11450,275,18999,112191,44365,22723,68409,8733,57746,96565,75007,14196,108844,29475,88599,177563,100792,106156,86323,93726,14248,135341,194131,40126,47099,14779,8272,39597,95983,171398,65882,28052,10393,47213,40689,22120,72212,106829,34964,109146,753,648,21660,30047,17527,181025,5619,145357,4085,216883,9359,186951,24779,53931,24545,36197,223296,62628,168101,4243,107313,30321,26642,13049,51059,31027,107912,807,73550,26551,84369,122422,165872,49754,74213,234264,33151,52014,33100,87183,22365,52500,40013,23302,5652,72723,21404,26107,48434,587,94049,168493,96418,32871,70860,31709,25128,443,71597,166253,15670,70994,26341,133675,28280,75491,54756,47955,56028,26182,11952,113272,472197,64640,110753,17919,337,50642,22576,142,87371,53391,93210,126694,15285,19642,85667,14148,1506,42092,52962,33243,11970,20734,135843,57044,58880,13002,219134,22876,64754,232519,4257,43120,321573,24799,64526,124728,52579,81472,70831,276848,17403,74359,23021,182101,74597,23744,148267,12055,7976,5349,11772,67540,167347,65318,18720,127832,108238,22828,90233,9987,259080,118185,73209,79270,13775,90100,137742,90799,70569,15699,19961,9087,67475,57872,39731,8810,134897,131868,146849,19898,3334,2281,167061,91073,60356,467742,74712,188,53179,137679,92769,29241,9537,132595,80119,1041,88962,5976,40171,44911,102859,139059,104558,98987,47761,19272,71472,113864,175377,73338,10857,23402,23758,1591,139864,5644,4076,118760,16427,134198,18853,20291,100849,37423,22038,36677,19071,195521,57445,11069,31869,55718,66882,148490,44,41296,75242,49704,166810,9906,20943,122258,49112,105667,15969,10344,6408,187694,21399,72742,58970,14867,14376,81889,41856,23225,15042,56993,16074,131389,74276,72407,53875,383108,53597,37363,68993,44854,122548,430927,198279,38430,80409,12245,2981,628,2818,17760,37437,238229,7968,46892,2200,3730,34190,65983,37959,112291,87850,70827,6522,20750,73913,111621,41652,19587,2780,58668,25916,85259,18200,168962,95781,42445,102050,7776,57662,103313,47742,96358,41964,66174,100396,29069,204735,19679,27978,7479,40264,22534,61183,36081,107436,58223,14680,23002,101311,24716,124108,12908,5646,31750,40380,14215,232799,102772,14122,96775,61398,50917,12096,149880,67833,598749,124194,155871,49216,790,14677,65319,56917,7440,145744,95701,12206,49405,129269,76199,45732,9767,11058,9047,210885,11051,7392,26307,2130,8132,147526,20802,232698,115660,50060,59789,57344,107623,80343,112676,23291,9866,160971,34032,118291,15719,59730,164911,28975,2659,58046,78480,21854,66209,53863,109085,116045,29021,46481,107552,22130,18764,70254,31272,11300,52460,43933,84738,20721,53869,190840,79673,105300,7561,321817,66924,13940,33281,101046,183181,32176,71878,5678,62924,79535,56646,40303,19559,27703,93042,73368,42187,3670,37376,46440,7023,36816,109628,20680,5940,276440,275233,170848,112093,136996,14984,20226,111441,77693,112960,48577,39370,55707,50314,123404,26570,54281,61372,123391,4857,35928,246740,132507,106646,44241,7196,92258,9825,37688,51197,303141,5590,15476,132986,10955,85782,34486,26696,7991,28813,18858,39546,11703,11365,38185,5716,93555,11925,40121,60002,6985,10976,171384,3887,43394,13337,56346,6381,252336,39573,75042,53711,1028,31781,44295,95925,131713,7214,68125,43571,70954,213234,1628,8760,13391,65485,17320,56038,1710,25248,60803,57399,19839,3870,326,281556,50945,72400,21460,316244,75619,56246,98775,481,13513,55765,50427,7388,123519,32929,57908,27124,61316,101097,57467,30228,48792,10788,20402,37318,50526,155730,34456,158065,145305,17832,43733,64052,4506,35072,205355,177028,184004,187081,68616,35938,83703,10367,36892,93186,260137,51934,89970,4985,23445,26755,21558,7948,78741,23376,124405,85594,68596,57536,49351,12619,56593,132668,99924,109728,71844,71935,196018,65464,17617,14987,89701,143773,33997,8687,22701,33258,2914,4436,72108,85610,9671,49067,2327,82988,1361,1672,44033,35777,30269,24057,10605,82236,616,15793,13919,47249,112086,116698,9484,80207,90574,33304,68624,93127,56101,42210,160929,4827,38995,38095,4701,125119,5027,33680,9236,231236,14135,87837,23318,70261,78893,30151,81482,14332,1084,74256,27532,46644,79185,3148,62615,6981,55672,31668,36825,1849,14536,37446,14738,23779,43058,162749,72199,1168,21346,5592,85932,85302,9668,18351,57135,150360,2080,228015,77953,34670,119302,151751,31009,106725,84265,45214,59289,74178,113071,263206,111009,4021,44449,188119,192629,123592,392506,292847,114487,12831,205858,9852,20780,79648,75767,357014,97721,18166,21005,67950,33226,204009,16536,2987,11335,66717,144910,47950,17262,55060,15063,2934,51038,26775,178497,66008,3427,49433,128592,20036,157553,63861,3089,23015,51210,28696,35933,49942,71135,231518,99620,17248,21835,176536,20676,16944,38700,165831,233253,295625,36723,13023,52745,10907,19423,67972,125868,95473,82875,1183,108455,52685,33417,64095,21433,52438,33191,127809,44505,211823,7810,2752,95548,162031,7185,91196,47563,61721,33359,17897,23682,42806,178101,22874,49707,199897,75419,82456,8618,11171,79712,116847,18783,44190,46564,5346,59046,95032,7893,14916,3214,26800,24172,121453,34362,10250,17408,18888,4840,68696,22831,13162,36005,32512,14800,62357,41723,45046,27247,37486,5372,2564,34261,298500,66509,133920,89138,31305,117697,19097,108304,81386,84106,23802,46411,63304,946,51417,41777,41041,19501,115864,60743,294354,37955,94165,18116,1156,17937,20645,57114,90804,58042,48643,92288,9861,2557,88546,61333,101008,12853,5148,87856,4152,144503,73841,18718,9789,147565,10846,42085,12789,30223,8993,56352,67203,2448,28215,6052,23540,126319,75933,36689,80235,23231,23561,21383,38800,77548,102798,21234,31468,158608,46188,63960,191679,8051,67014,11185,170078,42186,28827,34777,41930,212079,12421,34750,24111,110344,73918,45171,70826,141949,40063,23979,24254,37309,26724,27179,24718,83648,54938,14591,17425,29525,102675,48975,48654,12316,8929,60640,41709,50168,63264,89812,50716,48632,38755,138583,160123,55579,71829,24230,233277,46322,39650,166388,34718,24108,98252,7031,106695,62498,18258,35062,217827,78731,34824,33354,19520,60852,2432,60224,8587,2836,62955,702,20227,42285,40560,95592,62486,11094,53035,143291,18842,46177,77994,1770,9657,107422,172915,32655,128716,25886,25164,156740,119928,165875,85817,11007,89110,33956,12652,65156,180266,8494,36889,19958,20955,96,1264,118288,135769,44754,86671,5632,19026,168220,289120,33569,93821,66144,70635,7687,5642,2714,55445,56636,71545,184182,93133,7332,37389,12643,52315,22729,11014,158742,17050,152889,50178,34601,41945,52136,9948,26914,63548,95721,115951,40759,8960,158258,38938,49232,48325,42234,81523,253019,66128,40978,20048,238048,38760,62928,122560,118532,43687,137472,163689,26680,9878,17448,51035,16211,60834,36749,29178,14241,59868,150086,2305,26477,42422,34342,165341,83279,33894,14257,29928,12743,13957,125571,89134,66712,10952,16507,147839,30146,7249,16565,45399,39874,114565,215780,31990,230881,171477,102,196546,44538,10880,84948,281705,86651,10617,31395,2342,453658,43569,60561,132901,21845,17727,58556,258242,22262,58728,4008,77997,11806,37431,30599,81375,109137,185787,114085,217292,97453,169085,30593,60212,11544,102056,65580,2384,91655,4855,95725,7295,157994,16228,20669,53276,141590,105246,17334,25440,76067,17967,39321,38911,11362,28559,63807,21627,26468,85816,40120,1025,15234,58319,69516,66512,124548,75845,78873,22137,46681,51242,85683,32909,76747,35555,43396,101465,1765,73094,1077,2962,39028,66777,57831,42048,15828,13962,36041,63657,52412,5242,58846,2141,5506,219012,134451,3936,182230,17558,17153,152237,22621,49377,170216,35257,68233,65374,6510,11126,212151,7184,2480,22517,3437,33073,30156,16557,3768,55067,86829,91e3,12350,148650,66017,79424,70885,49066,28250,21369,51213,34533,11510,3258,18176,18465,84413,6315,36411,163765,4346,356,107618,598,13727,285026,162695,8749,14583,7132,63521,184253,32378,25991,5604,30961,53675,4874,84693,5086,34811,26978,56564,7904,33519,51221,113942,69253,6664,125563,22055,220680,102008,742,51930,19494,176108,44424,35123,13025,75685,11759,74335,22250,181453,131147,16984,132115,154311,11991,76452,52609,85351,196,30969,9198,74919,2529,56838,71779,29187,116304,3504,62330,41190,86153,28393,254926,104228,105189,13264,84359,3574,12415,8534,57147,10175,188174,59504,60932,66318,16407,107921,17638,99103,49278,28403,39786,145865,8462,3558,43406,142271,29139,21989,36552,93955,72365,7176,13556,106185,37957,321774,17782,129017,51154,27938,24952,1935,39366,2791,33489,41582,56078,24558,9311,5449,218786,27808,190429,68013,36020,86003,29735,3404,87348,119357,115714,2324,86796,81973,40992,43376,93621,28784,16808,36367,2517,2909,191926,24978,55303,53308,205724,60068,3098,21375,64784,23949,26579,63121,12319,80145,39967,97861,6757,70143,67642,37082,34698,69140,122883,46151,62187,80934,429,19437,135071,137885,222647,13331,154065,327,61778,74257,40116,37493,14855,85079,237641,42342,102164,199965,71204,4662,29368,5042,113914,122214,8955,13149,102503,43173,5659,163787,69003,307084,63392,171080,21390,81918,86666,36622,24126,28887,5736,28054,207170,163428,79891,346467,95363,38980,111806,80828,9200,19288,294896,114468,87405,111715,141705,7015,72754,68463,48738,243147,33397,101210,37051,98801,82847,20397,4940,185559,18716,54718,83491,11725,40803,1128,12128,23060,5174,7745,67007,46701,1571,27807,180186,256996,18975,16837,7877,212758,250379,15440,87954,57755,24719,124057,83461,258,50864,8874,29038,71289,31627,15429,9005,4061,113851,107716,82819,13651,79656,117851,17539,111446,12938,39724,190787,4352,15402,21070,62708,8539,23777,73853,13552,38810,86117,16285,56400,1718,75342,142863,29033,378,110113,180321,32586,23606,26393,160984,207987,23783,8406,16904,24596,47274,11693,46539,60524,78595,48423,31718,20170,9009,146268,15183,191060,172765,1349,138436,37365,10970,40509,225817,20021,70394,152138,21541,66559,66544,89352,2725,17258,91345,7313,3815,115868,8660,40362,4071,103524,39388,118275,21950,6549,38226,32754,209574,29201,43495,18028,20296,40597,18370,47520,202450,24134,2219,8195,69545,38041,136934,46374,19041,159811,84865,58620,846,98749,13569,30714,97246,32186,4479,27355,92973,35214,151491,75963,37631,1561,27200,238083,23182,60756,12291,25766,39355,102333,87362,65741,59906,19538,201575,48772,102938,24438,292580,39964,66366,9004,61379,50548,37622,38732,28379,68180,76622,17488,69849,5963,7219,48143,43413,55358,540,58691,29506,19245,52193,48621,5518,13048,118625,44755,191081,42061,89197,2259,60665,66994,71210,51232,3585,142096,55024,7892,8345,58653,463307,65658,64319,137941,136323,53499,12746,43492,6978,95163,29925,60175,5128,7352,41463,184756,121146,20473,18426,4598,5309,54580,14277,121151,10691,56711,43880,63409,76682,11830,172218,264898,32632,66536,81062,31649,25788,92774,60222,11100,63159,9432,224657,25240,53613,152,138620,163829,2397,85345,12501,37507,64932,38575,43522,65789,80198,78796,35226,3851,108891,73311,3060,28391,93671,39663,46142,30982,66041,37281,68157,26553,71872,81142,211527,39747,118119,22695,2859,11066,20232,168911,7933,197005,17066,111071,44434,133994,120798,12766,227798,45756,132852,29917,36076,55352,65281,129800,41958,18944,84678,18580,168093,132621,39997,54092,27740,32354,3770,114118,103242,43918,15899,18574,145944,3190,123469,219903,24169,100571,62403,16776,92779,14535,17168,16475,14304,37231,1712,28218,242754,61688,28980,1318,51359,222657,99200,67989,31772,23932,35351,201251,49041,27306,19128,40135,3986,77333,19649,120683,151927,21081,7076,78375,77501,101599,8011,89585,96715,58179,5378,102138,106793,26051,217276,4197,16297,27014,46721,13322,22806,5278,29629,70632,9647,71519,58818,40603,128530,8903,36770,56900,31483,26935,43845,34265,34920,87658,6114,84767,64250,47318,50720,19264,162514,33357,13117,6705,46696,75032,71054,87004,42035,69138,11903,99854,102328,19611,34525,69312,6431,49842,101600,133178,108751,41829,89939,225664,48916,99556,9195,130387,5960,36857,116724,53518,94002,39077,53996,6945,22261,64291,8314,152785,57588,16522,9091,5048,87671,35441,39509,1945,12423,158923,178413,37549,14095,1475,73188,62878,4819,24012,68534,42606,4010,120809,57497,59564,101758,103718,32701,80116,12345,95834,46918,21468,53213,15665,31200,3867,5140,96013,250744,21016,10069,13968,35449,180829,27683,39704,59956,22893,3115,26293,32785,75934,62445,141162,62720,2018,83638,19949,114012,95006,3330,99829,130935,309272,9565,55874,121727,37017,23586,319858,40970,27602,8625,112329,61060,100088,118525,25922,16232,1907,60671,51583,44553,80993,5262,94679,8676,940,20736,11823,3020,16476,12340,152600,97416,3703,25744,66826,16245,16876,46446,84798,74227,176020,45192,61955,75496,23946,23626,40372,26036,6149,11822,30582,16541,41914,82385,232823,40921,80773,14930,3631,7517,39619,4348,36180,126106,138939,62611,1477,113512,47321,25052,14546,118881,29060,23589,128322,36795,18401,137921,104699,267929,36194,172791,18113,4766,188215,30083,332586,94089,5805,77909,22194,68234,154976,43220,40660,70001,184893,138095,11128,103010,22663,5108,212615,8485,5565,49222,54614,26530,42639,16319,55062,152662,105595,21114,22216,10294,68158,10436,86950,7206,62115,3977,3657,59874,456,118617,18156,106663,112229,80992,17442,8217,55551,5133,34344,251927,51153,39364,201321,7816,66803,23057,156724,145664,14276,95705,979,2796,6875,13429,212525,50602,26276,28284,3424,19465,52397,46963,31420,51399,206476,92317,48851,637,100820,83349,10317,60227,21972,6908,282439,32857,224767,95629,83882,42106,87338,69757,29840,68709,37665,45244,114577,49188,175943,54009,186746,106158,70168,3358,234002,50555,9221,129338,9562,20118,32923,78479,118280,65752,4977,10474,102174,60947,129006,10570,83451,8598,8078,159367,123785,80438,16742,5905,5281,181513,42402,6977,163136,93179,42191,14968,50421,112401,105440,33456,57347,121611,4221,94954,36517,24046,27796,6255,33394,72990,135408,116627,1233,57874,25654,95419,68156,401399,313338,55208,45573,93124,119251,47200,38196,11909,130667,45391,73904,64964,167846,4137,115606,52036,62214,7969,160925,7187,1132,134835,40309,73195,64494,80472,444841,61111,26500,45323,40743,53625,52797,22659,15631,29739,36706,28841,39147,102836,26794,10536,14845,87305,45874,12241,127587,83833,57183,79722,30844,41304,84655,20825,92500,3722,25655,27811,10157,81634,31362,34088,92487,70123,22190,185100,72658,139035,192523,88241,2078,230490,44528,85638,100198,22088,29982,291233,241062,13865,4445,137791,37835,107218,31726,19718,38234,72528,23046,19177,66695,5109,17251,28077,5617,21554,47839,72425,133825,1486,73065,181275,141508,21768,62971,63082,2512,34200,9904,120309,6392,91243,68416,268253,41199,116757,138551,185526,41246,28986,4093,19057,17295,4148,245766,122360,35356,112075,20301,75441,10998,7977,19769,62922,937,63547,100196,26427,157820,20983,236696,22935,8140,90315,156004,47204,140973,7726,45097,52725,22636,23436,257282,105247,522,88389,216031,202204,46812,211666,19693,68828,81691,45925,11256,30292,372,5236,167826,88328,232776,151611,5360,82104,18841,80393,25465,18285,20320,72377,31730,33160,45803,38715,27705,37379,24163,18360,103586,4015,32305,269494,91252,20080,36567,54650,7797,57073,12650,31164,42209,6375,261663,105528,81661,106002,2800,5375,17247,43151,4442,15727,194619,100855,144898,62320,78465,39929,16454,1967,28311,61363,17219,9395,8745,121445,76939,80385,162380,22009,54191,44248,16299,122830,48151,74429,78291,64755,14238,44966,2511,17712,67954,93583,829,105899,49935,84750,11591,33185,85447,42717,27409,208542,28965,62052,52525,5597,25694,65594,16343,63224,276188,12475,9331,127507,38522,57287,24128,133161,79723,105548,133695,48917,27558,43278,46520,13778,141954,110785,83366,17715,46317,105763,66298,147013,41086,94180,16478,220447,44611,730,19722,78975,117889,125643,26254,16574,18480,65006,15806,38549,246418,46052,36056,8440,34984,30170,3163,59800,4458,115442,4283,41970,33507,104078,1653,22,121158,276486,3655,6338,24048,133421,23641,2161,24422,36006,8086,10675,181474,12307,29514,59143,14729,52509,87128,122470,19446,80852,33314,24573,119864,14237,9652,57779,6612,51851,15284,98871,90581,124466,156831,21190,22015,71380,161906,87247,69201,18392,17908,108470,72962,40719,14338,17911,95260,43339,20610,78916,20710,72451,11315,31448,17263,58853,178878,48111,116002,45497,80506,82605,85880,36300,121755,25215,36118,301929,88728,405223,276136,553,34704,212438,49970,78329,922,20711,25036,257130,38295,145369,18128,15385,30829,55656,48345,8012,3561,28004,122041,192900,58338,112508,41085,29976,87040,47117,23905,4336,92061,138880,97407,42083,172121,6256,25192,172671,5,93568,1420,12677,31605,56743,40620,6015,78415,231077,31298,80026,13902,19048,24924,170586,32955,176119,87859,36731,6773,27711,24658,26475,115216,133207,93250,95820,88522,8317,5714,124047,55219,86860,19677,23961,22928,162209,8904,225992,359835,56084,96201,29392,96558,86071,93643,55114,13347,8183,95129,82012,2017,123336,34219,115554,157159,47747,101684,41008,18735,193781,104151,226906,7552,179874,124113,31159,21162,44010,14771,51268,166128,31382,73124,77438,92830,205709,12113,1292,38937,13114,1334,2118,15597,69581,14449,21934,76618,48728,67038,14967,51495,24243,87736,147249,26720,11119,46063,43749,5843,44147,152629,133428,65703,14269,45604,57982,28672,55616,45957,8438,95433,37698,220862,132034,39456,61870,4161,26501,73560,56418,9845,4654,20916,10456,88920,119358,9015,65931,96507,48029,38534,21676,109081,43078,34943,25089,6131,28766,23665,5477,10255,16695,67,45778,42443,42770,29534,23733,100513,62617,42630,48746,14191,43753,50295,26007,8792,57243,43119,54725,164253,58250,112304,131796,25165,4651,3188,24831,47748,3705,19540,13211,102095,5593,18699,23666,32005,117571,33541,60584,74573,86311,99443,25172,27222,168938,7143,11853,53560,18834,19960,86522,28217,53266,117700,72989,34323,18721,66450,34346,74056,47217,202002,46269,9429,68582,75458,37823,82843,96652,32549,145144,27958,19820,158086,31955,201406,135379,31207,192545,12950,51704,9094,248263,76147,64028,110009,79407,89345,99284,223492,47966,26848,15359,201137,2861,110507,71231,72297,31851,118777,71039,151051,240855,16333,50766,14727,7939,4149,80908,418780,88378,59276,1327,7284,38576,79814,65820,42199,84860,49574,62596,12396,70598,40117,8648,7994,16836,7630,14047,359699,106878,525,29037,28064,13380,11675,50669,74216,103539,180314,27449,56299,172344,19274,7301,246099,32043,19422,36506,129317,6806,30140,4614,46639,66926,932,86600,6322,27847,233103,10541,39025,34887,3517,12972,26220,2031,66561,115015,48658,47596,12714,33845,3893,16165,35237,89983,14769,11962,147224,47018,29977,27979,5552,82338,86023,131368,1218,24853,237840,132193,15455,40873,3668,65351,53388,15229,59889,272245,47934,11858,34347,18038,90853,86981,300602,19343,114181,29362,84921,6095,106059,79472,38015,1206,48741,6208,8e4,21916,17423,6002,108083,24479,34931,56661,9511,26995,100694,163853,35997,81254,58321,18919,171890,86877,91341,74503,70477,53412,7027,59281,39892,131302,5864,15947,61301,67466,162369,47956,27874,35624,282324,21270,111847,102548,41482,30955,116737,28264,8592,55458,22301,75090,29821,30697,51709,3041,19208,8038,24634,30467,87509,126428,19389,18814,152686,20701,83474,45832,80891,105808,11378,153223,120770,98186,150633,49838,9141,12755,30962,5260,74490,21256,31678,65062,33326,289838,187831,20595,89768,2805,58535,10844,70085,12090,2451,138068,98544,24461,4511,6754,41684,28203,3383,65355,82833,30161,83924,234361,128424,28921,222594,33975,125491,34069,11508,67464,144226,41850,98703,34371,7901,21254,38398,65651,23549,53883,213340,123269,12028,71764,177701,28758,2623,68395,11549,15232,68603,9660,63116,36079,57093,31198,20475,48467,89984,35619,186847,107469,31389,43631,73867,41949,68841,114250,1605,30564,63403,17588,27680,99533,12641,70325,50428,73426,78379,11855,91651,72081,91720,60198,15743,12065,83398,140046,6761,46598,45900,5068,886,62448,148968,37347,19405,9680,15819,43496,63370,75667,163700,37639,3633,22774,34341,183131,134335,37200,23915,7054,14194,12970,26438,13350,285521,25594,8219,104410,91039,168804,138480,149734,15907,33818,61132,60082,4622,110187,56736,13551,73571,3945,73463,65498,17758,263266,17593,2710,27585,54469,38200,45367,63754,28881,3473,12791,98287,31895,65787,4463,94536,24951,36332,59901,28803,52130,86403,7668,181822,74831,18977,9850,177206,145485,109798,7292,31421,26280,77211,58511,12507,127004,11113,147,8729,56208,43066,79926,129937,31345,83947,39915,46146,98763,42566,1337,13192,18323,105163,80570,117753,16555,72883,11077,159438,40764,70933,83329,26066,12276,72059,21655,173836,126713,69454,153482,91585,70644,102558,110483,6764,127864,190133,3961,101798,20945,71138,82402,90884,69669,44753,923,16939,59700,164258,25969,27082,31399,43846,6306,246093,51342,6153,151581,202801,182731,56475,162188,89426,141356,14355,121815,27536,28023,65257,77523,106668,127314,24947,12790,38796,169698,23555,10725,44573,183083,42088,62716,43265,105958,32050,44067,50118,1668,3874,6243,318411,16599,1691,94999,52378,28671,216728,123258,2059,34969,69225,5913,136280,171443,141515,91662,22175,135282,80020,92270,1663,4808,4482,3495,34691,5226,109830,108512,17342,107488,11606,123190,100247,29666,146527,113014,15794,30894,13224,39585,243192,22351,9903,7836,47699,11078,25468,122291,48821,26780,122679,75521,81450,630,4895,92900,55074,74293,17441,3563,111657,103102,51613,12318,52370,36191,68245,34269,40445,41354,122901,168604,182500,62012,42557,11259,24428,115113,86345,12362,3909,78430,86852,134602,20459,47853,93879,22577,7659,3688,38555,13349,17381,56715,91639,12493,10895,92438,3142,37057,28928,2004,36427,32268,34222,209974,10432,67436,41989,173518,107930,27079,62729,30908,55558,5828,45031,14902,53546,8204,144263,60255,14520,88212,86582,109589,69356,8064,47449,8505,66558,16886,4844,52817,111260,215129,12941,91118,650,20770,6273,73089,40618,62790,2873,35002,14023,97208,19386,102646,36993,143736,135457,35385,113601,17893,32627,84439,100619,56016,6581,57264,172160,45452,111710,203627,70131,24100,322787,1996,35665,70078,22358,90922,83658,4097,63200,58499,14542,99153,52159,6615,12414,63415,31986,16823,1579,65405,137809,8841,16898,48082,259,33014,42375,12260,179850,73667,91389,98882,29532,17311,326251,41092,5928,20742,44964,48019,43505,9317,49265,6643,192712,48424,163487,19861,20113,70848,31928,105333,23685,78563,14638,54755,7158,24142,44018,20774,125255,20331,24280,10163,1285,2336,39851,4299,117269,46714,63816,87779,159624,11731,9971,990,137317,108831,50994,74554,162680,23640,131597,146962,170620,34829,91205,21184,1913,63616,18427,93136,156592,17519,67565,115882,138220,78622,88535,18115,2711,33554,109492,54298,971,24914,25863,36363,45715,27099,194995,14299,178181,111488,72395,322385,157719,130787,11897,81843,83999,11369,49280,118604,40922,61332,110343,53407,75639,40582,300440,54722,25637,13694,48248,48278,194521,56203,52779,48783,72627,10953,376,16733,280238,26351,230789,15132,25168,137270,3588,63704,73376,94031,74284,19443,159557,9697,39901,13351,119050,15406,146455,3460,29556,75195,37673,102524,92329,47289,98413,15311,100684,56345,7116,95480,11590,7200,167,23610,58426,17730,136656,27944,53151,2701,8824,103124,3017,90744,113588,53216,79736,65940,26931,498,29568,80540,143543,21292,1740,59268,16561,180816,42323,50174,40890,52866,10703,57169,4700,17191,4424,93511,49698,166650,26972,48631,165169,82879,69326,202970,4007,2376,231325,139592,22119,62851,37504,68816,58345,67398,186643,43331,277416,53749,15746,23102,17432,4793,151138,48822,54265,48203,198688,14305,54287,2291,18018,113378,123260,7180,97549,87027,120085,2920,76080,8190,102005,5641,64580,14955,59802,54028,58884,19367,81779,412567,85957,97053,103637,78871,29364,27637,141728,4767,30686,112738,130146,42745,12730,105040,14844,232,210944,36581,152317,135543,29744,3129,55647,58149,46319,27265,17499,28005,59948,7170,34138,5702,293047,110892,408,91760,218674,18469,46095,81403,14389,4610,35672,73060,11006,74848,104820,118143,190357,20043,105358,141735,5115,27093,45924,123073,52599,29433,9616,238350,78610,24851,58858,26769,31969,24613,18294,4982,32735,39639,143563,112073,202205,12567,4873,88601,44897,81503,101648,81362,34662,85277,17574,48173,21435,221188,40215,39576,80786,26544,64668,81841,10731,37733,247986,149188,127703,495,18382,54388,72446,43071,30974,198723,89608,41360,190,33045,8386,31658,19992,237838,119015,137622,50890,100913,6460,116233,267230,26621,104129,65114,14190,41542,14888,85962,23342,23041,26453,43725,71809,45186,4770,46452,53894,56616,221286,18973,9038,109299,55365,19366,26863,18808,60909,69353,41738,83463,12100,68561,72860,3980,13796,49340,12332,31311,27418,4255,53430,18976,45523,510,14224,30477,26581,4530,3651,101663,139840,22709,150861,31996,63923,120623,262522,3076,10528,2929,14672,130238,18087,9816,121894,100308,25085,55111,14565,18952,53293,2042,369988,23674,61789,133529,28783,108293,35477,47119,36448,71049,40015,33055,78598,198442,1833,159937,40654,77444,189245,113153,8621,18599,38553,35223,166072,2375,11659,21786,89523,6032,12116,63046,159398,18454,3678,32521,47626,11411,103527,38896,42946,15696,26370,10185,8413,37080,165583,4331,63555,14907,72220,50056,6623,62236,36565,49783,10049,17503,100581,55951,146244,24724,9626,17969,25524,109300,173965,99994,101056,46459,43647,53737,277968,8347,123521,74858,33829,44762,77574,877,81377,222525,123532,30602,43881,53145,2973,16284,81940,61281,127044,63620,9875,14756,114829,19032,9202,52759,119141,23928,120551,19607,3599,33401,76821,73233,117430,39968,36539,7071,5446,121735,194059,15206,45283,6706,15603,65615,1207,165723,92275,34773,104447,8396,32353,205240,164323,13600,60555,79205,25532,22907,33410,57480,107111,69630,32137,47832,70913,33161,20321,2371,117348,10714,86246,1625,11763,17900,268,78457,99175,97940,101092,86660,32221,14041,128504,125080,53744,124263,31017,13897,403,31859,21964,5633,111630,5547,77329,17961,18241,84995,25984,12983,67491,62168,47262,5241,297,51191,7351,8967,147212,82060,16821,782,11033,82431,62957,5026,43459,77963,203477,53528,6247,191852,87774,74164,215654,13467,1522,219964,28589,244104,16242,117821,67725,72570,156792,17186,15979,26990,44128,193014,35276,57125,16212,166451,68017,6905,77608,16364,53777,75921,76426,37975,26203,269296,64099,84122,12077,38533,830,4407,20139,963,43028,38902,42911,37503,83343,85045,16979,1165,60835,137387,58380,86990,110066,134540,56331,193845,81238,17922,163093,38744,110641,12502,56404,34862,26865,125964,12965,111648,25547,7771,27196,136980,9555,29551,107158,57885,18831,37705,35505,101742,13970,102109,62548,124657,23328,11124,89592,146376,248050,6241,22033,18337,80685,29898,11908,216623,67721,106162,146610,21377,15085,91552,42041,62560,122532,125336,102365,121537,142559,29693,223919,11515,110495,18776,22494,5895,185059,103592,229351,51220,100102,37027,257855,29359,54123,36066,106493,12244,79258,32002,432,56205,94836,90182,6726,14762,29391,48938,26864,38083,60364,3310,60192,14766,205567,57504,110760,22649,24666,46333,21517,3430,13135,28873,27052,158809,11597,20529,6695,23138,22960,37137,45574,6545,305877,43423,26153,24769,59844,14501,10430,134352,56169,13213,103432,49523,35181,13435,12408,129475,64620,230854,77390,51990,15653,83248,33466,44571,117828,51481,2187,10559,68019,18021,54895,48247,18354,33737,4554,108595,37288,39767,116707,9175,3726,108877,21616,83684,49862,1938,8543,276466,20134,108498,48770,102254,31914,131520,185291,100559,51890,209,19526,76471,50544,71814,99351,8172,198526,28816,20419,9109,98389,136777,76479,75596,30635,165417,48216,120220,25955,211071,39314,24308,32164,2559,146280,43403,9233,17947,90585,1786,86920,125662,2457,64741,32152,32918,122882,78538,44001,31723,56426,23375,103172,88177,145697,52506,49319,68016,31664,41488,18486,110400,7030,28241,986,109199,19900,42147,56864,65287,49183,7858,24e3,30453,840,16673,25907,68916,89927,6309,158335,36407,199737,130464,13137,59603,201778,195292,21015,42466,179062,172561,89492,11075,180407,31868,72493,20998,60217,9865,19530,39274,130266,54539,21623,12535,13505,40641,73375,4087,85633,2153,3117,70680,55788,92096,47509,98493,37490,271936,151475,3032,16171,96642,34106,78425,125761,19591,3366,19316,54508,24183,50786,194248,91528,33253,34622,108355,41741,705,3814,3883,108929,13203,67831,10142,59754,68208,29128,84820,56880,38794,24972,48571,40821,40476,18137,164254,24064,236309,79181,11282,395,39169,2013,51587,28551,9645,701,109513,115899,113566,12762,62045,58322,103726,41343,40866,244102,143816,2490,70346,40973,52618,15412,30720,104315,38917,42027,93676,17513,107418,20706,123890,13399,97727,24044,87962,65606,44250,98044,65276,74790,101473,19350,91570,1326,87790,172042,7577,100813,86896,85891,41512,108130,27794,14875,71431,12835,156250,58135,3759,22476,42176,115873,34686,56523,73643,108505,51491,20838,12721,32863,45700,29496,13700,34294,55360,29206,155942,123812,7706,163234,203,132720,49358,144431,8130,175788,35818,3270,76832,25710,54095,97274,28779,94621,74396,19092,128242,58067,20885,14670,93255,15107,63291,23654,126900,129421,59294,262659,9798,3251,67344,28600,44629,50672,29072,26999,31526,23183,49175,165843,175455,17282,175411,32022,45989,30298,90690,78118,83156,23749,35636,31317,7069,80381,94561,133756,14960,97404,6138,41065,78041,32843,16601,34123,9559,146529,123377,96395,54441,42012,84257,123541,10745,22139,106459,11720,150883,172651,154996,110538,4728,53447,25704,2009,71152,119354,21166,66604,1429,216162,8637,122250,63520,27180,29172,36124,276428,107787,77184,4680,14952,104903,24418,14793,51561,52931,8371,26342,48526,7118,92066,67280,40653,8847,34597,105438,14198,50163,61188,146286,50315,41205,170829,161496,585,197359,95056,1687,365794,91349,48507,5804,49263,5146,104902,96365,117343,132222,46084,96919,16875,8073,262381,79982,52663,13928,16056,153908,15145,109256,132308,18763,24904,167644,13618,40750,18686,147124,114709,150038,52849,2938,12568,48617,8778,5459,44202,44591,74914,17183,248689,13878,7822,80060,23116,194037,18487,2067,7798,43077,33678,244028,31320,74273,2794,19466,8218,36280,183997,48124,19416,29656,19280,98734,7715,18311,30701,133602,150307,126956,7378,2933,79903,13178,12593,86571,26604,92446,13574,44205,65699,427599,21118,8245,14407,27877,47936,33542,7916,26460,117762,21596,37818,2249,127359,209394,60044,47677,308089,36791,154971,31417,6998,150042,174360,12255,43009,29335,48739,3912,101398,53340,2580,146939,151295,45360,125275,15273,45383,27456,48761,23314,8750,60801,85823,104759,27894,123685,66968,39480,26917,55290,83305,2696,98390,57569,145853,340733,4919,20024,52268,30884,7413,203685,70989,112855,4129,50536,349518,68205,332641,159581,135361,236026,37563,176404,64899,6578,122033,63871,1850,85234,82089,66124,74145,121098,107351,12687,36881,117334,13136,14698,85933,93866,18047,32620,310,15094,46e3,88451,23632,36645,27940,87618,80520,58892,20976,27702,140090,96075,67841,103292,238964,87778,107338,17019,83427,67522,7302,8261,47570,116787,8730,80484,61772,174422,56005,131193,52875,14588,28471,59817,9586,15720,158155,51307,109734,15196,11025,59331,3884,52626,102602,84797,25158,27314,4437,20488,76214,189248,35023,114952,157376,2827,62439,102878,129749,36405,10329,109339,108633,36662,1254,13267,5470,87105,58004,15397,10434,159667,21864,52022,179464,3013,32147,31496,116832,18494,105502,129227,107267,50033,13481,9954,24267,22141,16257,116154,36185,950,115685,11305,176708,2048,178671,112573,287867,162328,497663,95170,50979,193861,50987,30368,136257,31830,46549,15119,169876,23788,17462,249887,57377,1949,35448,14791,43769,210091,3783,34612,282103,88380,245190,5457,20491,98908,11402,86899,117916,16028,162584,60644,320177,156096,31065,55876,22e3,77655,9992,23397,13757,317623,63978,215255,2443,17648,93231,27388,104529,93807,55505,140477,12046,112040,70887,40152,94365,112353,25063,114679,266061,71248,119555,15589,2244,617,14129,211431,70110,100652,7777,4383,85911,89221,21010,120615,58357,86405,37554,41647,18,15143,69662,60491,14714,186134,148344,42347,5410,168175,44535,42449,343894,129417,99682,20659,27272,140483,63455,222159,17536,13722,42637,62324,11976,114691,148109,2283,32057,182393,4295,147364,33705,2075,44303,30274,28331,63740,69740,29148,10346,44862,33716,73937,153333,12930,38784,247159,2515,41053,20256,83368,256189,54639,115240,5096,24661,175419,153552,26516,141,138176,63885,34115,47222,55709,2765,28479,38875,236608,12229,22921,77291,54426,45388,2860,57787,114579,295139,105782,17826,71066,19119,54364,69385,16568,12323,28057,33346,34919,124763,155533,101386,31644,8627,49001,303600,29868,63213,9103,77280,71333,9696,138789,37059,24823,5057,21352,32368,114208,56803,19424,10445,58514,8661,209508,26187,171838,10460,63454,14016,122504,41328,21329,46618,32493,38225,7855,31763,7945,29876,8734,6438,24205,97490,139977,130740,47323,33195,85390,57194,13813,60600,21313,96251,7699,27584,170521,139271,1363,4402,336738,129223,84983,69150,13147,3590,163929,207225,155260,55916,20288,4503,8398,98490,11773,27512,37113,84976,86558,28365,11756,116005,182148,13733,115313,47644,67208,85069,9347,14995,226141,14704,101835,41159,35314,13113,63526,214039,29978,50446,83339,17440,129441,72522,118641,97816,24907,73844,15717,118884,167255,96509,162793,30847,36849,51297,78974,77793,10427,1873,2972,9999,35074,28190,64297,146836,46298,60038,163007,108919,61219,2403,75022,127339,4233,110389,69022,9833,128097,88016,79390,222936,22570,94657,28462,56956,38803,81536,30474,152794,19566,16481,147408,74574,81895,20731,1918,1366,76367,187321,54494,24366,21690,61696,33283,107477,77499,31112,414383,74362,18463,218441,120929,59848,258629,201924,69269,454,19989,13054,59894,3623,58908,20681,35723,78523,102680,38988,184112,108087,50944,132704,52966,21699,18860,96349,201411,82697,85395,95658,5093,6427,177894,44191,32755,26961,155739,6249,31310,81030,26574,84311,120155,86730,113535,7424,48888,13516,45747,98098,20077,183995,81945,43210,26704,40420,75831,45648,11180,6855,57927,65528,124096,34851,2598,156633,107572,127352,38169,123845,60142,62722,105584,232364,23211,68120,1601,22169,89299,747,258039,80572,7258,152249,11862,101204,8834,121434,33761,19175,133142,46343,40178,48723,3589,41977,30210,38868,62257,10087,82658,87827,90646,16415,47552,351723,28298,72225,91146,272760,1701,11295,1652,109651,300747,51863,198800,29446,11794,32345,37538,22356,33102,37590,113544,37970,11478,179743,25454,103417,59905,221970,105196,145604,7817,164809,102360,16974,75840,255333,56902,6659,1954,645,59400,67769,7689,18675,5215,13793,20536,27852,3387,29523,259718,16860,94625,43143,29245,15848,233581,22685,63631,78557,22836,133302,84513,1348,51826,47129,98836,58284,1830,1749,94642,10933,6145,12506,10975,13879,103781,144434,10268,28409,32346,52968,121567,107374,77268,23686,35097,10501,155275,15303,47136,21102,168741,55332,90385,15996,84817,681,137803,25054,142275,6163,38175,8056,124296,240642,65621,4934,178205,16101,62803,60964,18230,100622,76465,44689,14545,9543,47514,16852,93380,28048,12047,107106,37575,101485,77047,57326,34819,96137,76916,6469,46264,115983,75768,87668,69942,13027,165,8373,114231,26434,52844,42799,182044,23580,146254,38081,43236,33883,146220,382894,14606,46035,36481,166621,35417,95382,2957,59384,60428,36358,66343,75378,22267,22950,83528,17577,56474,25285,4619,179691,75355,95836,53295,34588,171410,4487,14679,84208,44015,18562,109133,54101,11531,86052,174479,303157,28095,9953,35642,14564,39802,16145,77606,117406,53038,121117,53624,22062,1212,7632,127157,237292,189087,10478,127345,102515,181997,86752,87623,10966,121602,68783,68681,83042,114380,138349,191305,67176,50085,39016,1427,42384,1412,67118,122616,72389,25260,2237,13576,137346,19938,20304,2191,68759,5373,61364,238507,75814,23931,69565,38993,131741,38364,12528,87762,5679,129853,5310,186831,32653,90338,260176,389531,108118,26843,43985,50175,30563,25106,56965,18130,140428,4542,165503,117991,24219,229605,1819,129663,1240,3797,76093,18398,71339,51919,93043,27175,47060,216257,6483,35051,1217,16512,80798,129064,13225,69339,8548,237079,72298,2575,34280,51379,117910,55671,53345,247552,29486,39328,140821,34681,57045,60177,5004,90269,78522,2479,322607,48474,61296,13057,31558,4678,59271,6699,27044,31988,35944,12503,83480,4389,136508,3781,114121,70279,4488,155829,42214,2898,68191,75695,305850,45041,74344,106509,30087,17429,93292,12477,290,23080,114802,35714,18751,26554,105424,17775,2144,2412,100610,65192,113975,52975,180272,135050,129815,76238,106483,21440,63186,4260,46189,9711,28249,4169,23429,23390,8324,141585,63809,67668,38457,38063,39226,59972,1189,203916,62368,14403,16949,61767,85801,1739,40147,35049,76757,33124,62102,15780,103593,103009,53484,22952,67973,114645,6566,5245,50462,7601,8288,3513,194571,80276,1908,54592,5124,58571,2513,6800,273997,193904,1119,17991,117245,2508,129156,82366,26278,71465,63341,56943,39662,106116,94966,156875,9736,2204,122308,94418,27134,1280,24539,49022,45314,3764,50904,46424,30699,28087,293839,9400,33646,40165,822,147499,50263,116179,29085,11863,31314,5578,17797,5104,12454,1604,15342,219206,10232,67800,94261,25872,13565,90339,78971,75377,26649,41184,47695,11514,35369,20767,14227,41953,309396,148270,147938,33074,14453,27499,109019,39018,25738,240196,158931,52820,8612,95853,21524,137010,84901,70869,70021,116794,48404,38771,6732,1070,70990,187297,49140,5238,576,3564,253975,16027,16483,2811,37775,19034,25259,4053,2e3,70083,95774,19713,33431,92703,91314,42381,288770,48194,95985,3991,77418,13406,241328,245086,56533,35275,62725,9246,51924,70181,95331,16163,31410,79016,39312,120878,119371,275987,80124,27712,9186,220,23598,146167,85209,68238,282190,57048,31273,30555,80913,17594,75779,59160,135002,101219,189377,29225,96735,60126,62522,104e3,27620,86814,17240,147533,11001,5425,43682,410,49460,87270,69480,46315,59448,1816,76201,9431,11788,87960,29063,65539,47347,11678,33846,7008,196704,9895,6753,8633,120892,59970,572824,115934,6646,202559,892,48351,37611,251282,57823,67263,57750,26527,34485,90747,7685,88370,6144,64182,1709,41969,21458,62327,181657,49247,225330,122600,114574,107124,85361,111833,63243,71420,15655,191178,72430,18063,51425,54002,12364,53225,86557,18193,97580,41232,138398,67821,128724,8944,233212,101353,52099,42127,14006,120107,32789,32132,3498,18123,33758,56058,5779,128760,59888,98869,18445,84702,51911,13234,218379,20093,39031,8074,70195,20708,23462,24355,131384,60189,26390,10403,41060,7140,10781,49410,42261,87202,82566,41663,43105,60276,2768,5733,74176,28329,2297,145430,131632,83615,122915,105441,655,224102,5284,136426,67763,16294,188511,32538,61049,27893,3394,13951,159099,28542,17930,145360,9492,190122,32285,78855,26440,13570,58648,73908,4239,124561,2444,74172,53131,11468,10794,73566,11623,35343,64710,30481,4163,10328,38309,29901,10538,154377,76132,92405,24839,11679,3465,13449,11637,7824,2337,57754,1260,14458,41118,19878,38661,13416,159180,37074,163164,54137,28627,52134,184900,8520,40385,29546,30502,22386,66527,107458,6850,24022,47983,30603,35083,8934,304066,39500,9,28261,33026,77251,9374,44833,116312,34990,29236,63563,125639,135405,165398,159055,55690,88141,69643,236964,31983,25572,20436,36746,60896,31850,16179,11828,5888,3043,66368,9750,31167,7915,53111,36430,1333,64344,93659,20061,60596,180191,51630,6792,30244,43509,101058,22409,420,44210,109783,43223,27030,72477,72831,32679,29235,7675,47556,12258,39907,149412,84926,118247,24692,71717,105038,86009,45941,41189,89453,29856,52543,30627,226798,67303,59230,67415,34408,1367,99685,16867,128419,52147,4111,125381,117881,16173,44093,102224,31575,23234,24870,83790,127407,239098,3200,994,1255,100903,242275,117266,55116,38205,16140,29662,11307,40414,208793,123355,56470,4862,75600,30119,58218,70828,24075,26974,7802,192353,4851,5475,78720,66596,3409,28573,64396,30381,30690,59859,88256,5406,99945,103064,34463,37727,24238,86643,60088,4057,23741,5967,162904,38240,28356,93858,25510,122879,6897,3278,7057,11971,4400,35461,211413,21395,59615,39471,87233,55795,128426,3051,22470,41950,14705,3974,180108,80476,78442,204996,91987,15634,67610,139015,142373,35611,51134,10387,4353,153456,57749,181039,14183,68447,151532,21107,36452,20551,3186,46247,46383,129666,88736,140662,146243,2066,8360,7978,64818,106963,17896,47801,10723,114821,223295,74192,3293,3393,16987,74064,11277,91622,4270,29828,27951,387869,103235,1374,61988,120083,477,145892,128378,11779,211263,61354,18221,17869,46530,83061,108538,157981,90608,67199,95080,49064,195814,12302,66307,10348,231346,160732,112859,63633,146558,21271,31037,198802,47622,12862,95710,3910,77850,73961,85585,34752,61e3,4082,24595,103679,71107,8208,79568,150019,16615,24961,139857,32664,197366,4559,54735,32696,4126,162019,75698,13916,70108,159638,19834,9349,24675,175560,49643,18206,52459,27992,10809,88865,401975,133172,29e3,34558,30915,3658,25834,42430,36562,125265,18182,10155,40149,97082,208980,19575,60853,90529,66545,9600,789,46420,2317,88593,55595,98980,115302,5742,169155,1073,177901,3472,11189,63711,78643,65472,50459,127979,93,42202,67053,21720,157650,11145,141378,42033,22824,85705,79114,35584,15974,1510,54172,28562,12451,104226,19190,97151,73024,20948,5151,81741,21499,29006,84183,198074,54003,45120,170125,26240,35177,28389,64863,79974,60778,176915,232183,45342,2038,80253,41564,40703,32689,5430,100689,5366,23007,134279,14266,26712,73993,24934,64242,52113,102887,61801,46415,201049,54251,62133,122757,164883,30815,139966,2319,30842,766,13362,10287,134518,86111,81665,82440,28333,43019,18963,8804,161944,23439,102144,101145,80029,39052,248708,30350,117340,11878,128467,974,138625,63961,5237,74778,61834,67040,43814,13690,65947,33809,232476,115258,181745,28824,94013,9510,10246,93722,81976,7217,114383,3493,16014,69045,72692,12145,80981,9507,6692,1620,60820,330444,35474,33962,4797,7053,295463,46445,27026,12491,77988,49524,35675,90947,29114,166705,101385,133782,32704,6186,84595,176031,185623,45966,151302,63069,1699,107491,947,15458,74452,196212,6046,10498,12163,10239,35191,243951,9277,9090,29539,54460,22820,26514,112549,60372,51753,48756,21812,70861,260326,41,44222,10441,16961,48148,138771,216194,5914,52153,53400,212036,56519,26245,10117,45888,15294,138019,90913,26368,43842,42111,23348,6082,194845,161089,156206,51546,11647,30759,302912,262094,8635,78876,26535,35283,54183,31183,85484,147873,12989,5197,6356,72894,65347,20150,27370,73787,1493,45918,12366,190217,20724,13858,10981,67449,81213,7553,14115,72242,271517,11842,48310,88743,143726,22177,3290,243231,58452,62937,12592,1654,40066,33477,13751,9921,128442,15868,7106,75236,83773,10775,36938,10482,170465,17368,17469,161508,32752,98340,800,19824,264456,3901,87319,2867,26782,9630,113102,185815,24197,44584,86366,40224,3636,140916,31731,267731,9567,53678,72984,29389,27963,17106,50282,284911,60170,8322,12608,23374,89652,5268,39044,229766,8869,151350,31436,177342,12269,183212,120418,116270,2843,78888,69192,7865,184099,1086,129897,18383,70508,20242,18508,229924,124569,35749,50589,55626,9884,83115,40971,30671,18135,14452,38861,17844,201826,5549,26413,17189,13561,38539,10679,143331,3314,36785,171194,49685,187713,67506,4618,104039,17060,195080,50648,33159,19238,67559,134840,28599,157523,17130,38064,117398,94355,31918,13575,34538,40326,13997,3494,348283,62481,26862,3603,104426,244363,153709,112487,304612,199674,41239,35545,54869,293005,28223,26277,26899,4533,18518,15492,38587,80488,70485,160395,263,60162,11382,222152,4696,250751,51921,182609,10707,48463,46243,1227,49111,111564,46502,33342,56846,68541,63559,858,139927,16654,229375,76759,26478,33205,95828,23399,92945,2637,35630,28470,143992,50214,14174,21456,166191,65665,1711,21594,78019,97599,111701,36,147151,110246,189022,43021,30397,40757,131935,42065,73335,48039,26596,28984,15102,2361,7421,202167,69744,43766,52826,3642,83304,33873,75140,63169,192389,36551,92748,13039,123959,233220,21738,84447,77230,20228,187852,19095,25799,92136,108774,29237,53947,2299,118106,2687,8830,42331,202924,33667,2023,73763,30704,19363,19779,16737,35629,48081,24068,101013,162338,291912,13749,24745,328289,167679,70086,48299,23306,16732,17801,43322,54589,3586,63653,43624,53474,925,109177,251316,43805,13082,19511,86565,142182,92461,17117,101033,103319,64589,4022,4351,235897,5352,82705,107142,46391,156084,5860,61365,10558,13045,7717,18357,33922,12590,33065,6928,46993,783,46937,67846,8952,26295,6107,119656,18799,17458,50747,4229,179559,112727,118080,20683,41464,125468,51560,49749,44231,7359,35339,62988,136487,67015,5208,29150,24956,105186,48858,6143,18097,6972,16404,73489,58742,97196,36357,164616,5834,32267,13746,147733,15113,132091,34127,106298,39729,106426,22294,9780,15602,36213,71502,42808,66802,599,60755,5851,39120,67363,108623,126368,72770,91263,32486,30596,151717,7951,52002,43103,11768,68942,40901,39344,24037,127500,116890,48403,16926,86750,17745,48648,159545,34460,58419,5634,114317,67865,31462,23352,24010,98185,125708,69686,68337,13610,26271,70691,2980,4768,27225,102402,75453,28106,8104,6931,1176,6274,6475,112635,22498,6176,238686,26832,28893,90319,14441,15682,15087,39517,45270,109134,104440,45965,47645,81772,7876,52683,87720,12898,4505,185665,2769,113401,15664,57592,105229,137381,97059,119268,6876,43309,33886,128363,35476,144249,67013,143587,83367,25703,91436,59347,53236,2289,16519,19844,46309,58558,99834,23313,218816,231303,36388,51333,183535,109792,139277,54306,90139,18235,8275,32710,37677,82464,86025,92204,88842,117723,37570,128723,234242,76350,73795,34896,148247,58424,11105,11744,45746,63372,17118,49772,199520,81902,38004,22911,33752,3125,1995,53792,4689,26909,108150,146062,69674,41811,161444,84855,8999,28561,16731,93937,3189,21967,24890,22943,1356,145300,51569,28802,517,118679,31703,40607,48098,108854,25003,10233,73969,177495,5248,24516,215347,146192,48712,60626,69188,40735,5866,586,101541,6509,47590,52129,5969,222045,110933,25733,24223,65339,62812,2414,155418,35819,16022,78423,43138,20995,128255,240673,46745,236093,72176,57085,97841,61248,107,36068,193177,105427,55726,215229,20446,47228,100420,87091,14429,121708,23605,21157,187721,21880,2997,203976,99166,95068,25877,7724,98925,83401,4829,13182,18229,13718,239662,38653,116505,153497,30589,89029,38962,181302,43853,78872,180301,4786,248240,7401,106136,112590,77745,19731,60880,77789,125748,135487,5975,48627,34084,12419,215770,47557,254582,10364,106495,21856,67539,88981,38805,21428,48732,42316,12149,16078,52808,25327,51322,33850,51147,12253,122354,46077,56483,254553,115417,81834,150991,94662,86668,7381,12841,100650,18218,15741,22372,68294,50705,15535,84660,61887,22553,72299,31361,24824,17743,46820,64288,31582,77006,111674,116384,30760,80920,86149,77192,51979,79691,60342,122805,103800,240873,160744,233114,78962,54920,8608,3484,316104,72548,24337,5088,230040,21926,10172,36838,26,86221,83458,102176,12062,17571,41929,41170,28428,68239,41750,103930,2634,18313,53019,34825,97837,63115,24606,73157,152474,14715,91439,37033,109806,140259,30668,174760,380,135597,95673,136073,65073,134249,13829,17279,122305,4420,46444,10237,64848,203623,70728,10349,182885,65075,24519,25783,40318,34139,22222,63394,55266,102764,41422,20126,65100,90408,53640,35128,48932,11192,38935,96839,34782,39492,19396,41332,6250,5511,19492,51304,25936,104466,54099,73771,86115,5080,7669,30891,111700,13931,25276,72289,135447,14820,258641,25265,31005,281179,75286,393,95359,14623,13584,6680,101227,80173,44933,76666,54542,13244,39348,458,25379,109451,134348,81143,6959,65554,12027,51311,8716,57589,140731,28467,23316,17272,30458,25980,55229,77197,83798,28302,114784,7428,34548,26241,14712,39336,103304,18928,54080,12870,334,87722,15208,16895,142098,114262,39820,83913,57817,28682,7721,14900,108672,11250,62246,42849,415188,1724,26555,24549,25505,26443,107450,145899,61035,43528,6901,60726,65906,267741,21338,147590,42079,18924,73017,135236,15393,5206,4026,84185,1531,5988,113890,82647,303391,7386,69844,71611,189865,76523,31877,13315,19314,198575,32821,1928,67641,25913,104475,103489,3297,70391,18406,15446,113347,19295,93790,27856,1792,167471,116449,8541,4408,41757,63233,25765,86680,64501,27034,24816,34975,6079,4486,49693,36229,16917,21581,62426,27862,11612,54284,35702,194034,355,24277,48262,87411,70504,310164,118018,12516,47559,43502,57433,107139,9290,66533,80863,14634,34312,91725,28606,21342,67241,72355,43244,375789,37402,174015,105070,8342,44167,67494,1890,16365,11723,271002,1865,47918,8350,45564,27742,25110,125803,8553,49504,81925,62211,4534,15491,19011,80373,206920,667,102405,128623,245524,5553,113309,192739,65766,19567,22832,261958,29679,21293,71134,20962,105123,24721,860,21752,33448,18372,157167,94822,35770,173224,232737,75729,28937,46828,28062,25453,5207,140366,36665,30652,6169,67920,150458,92040,23186,184604,92330,20891,176492,49427,27828,38305,42495,143982,49560,25503,90043,29747,65328,47830,12932,11068,77721,9003,25213,94205,140426,46090,89945,138173,192691,33329,112232,129905,35709,27514,1841,19957,31411,127476,53572,17497,173549,55063,175135,19841,69314,5192,237921,117660,150697,4060,273045,50414,98940,65348,153665,164423,58804,156695,48994,213928,86036,28608,8355,39574,34540,16927,135680,18374,151587,10830,53805,16878,16623,4282,48030,8537,14986,46102,13062,72897,72,33050,108227,39451,45935,651,113320,40535,95176,57450,48843,5003,19019,10407,211163,3848,1068,4988,32091,30095,41692,15099,43602,107434,50744,7627,171349,16313,150832,352665,207750,33937,38256,51091,156e3,87889,90663,84175,24908,114900,50365,31494,83829,5398,169342,47521,54818,18935,8356,43094,41212,174536,10082,92550,6678,60614,23355,69721,14796,34149,128830,58187,3179,208,40325,28399,225029,401412,51150,31580,207268,6657,10993,69818,64282,289845,23308,12961,38447,6681,52944,31855,2572,47646,120728,179148,37240,45196,218274,4816,3695,21961,50084,35209,18073,51452,27004,6100,33941,1377,84831,171214,85,141510,9078,99227,32610,6417,11718,49868,65579,87902,73018,49062,46280,61742,21512,40862,107733,15941,29168,157765,144919,14487,5767,158014,140070,7241,573,71584,16921,223566,40331,179473,35081,47926,140885,41508,52104,59180,42310,32811,29048,123517,102413,80208,10104,14746,12649,153641,126022,37965,113017,4171,83,142592,2809,6362,50416,71323,116894,260776,16204,1524,5760,30351,12658,20703,54403,36083,45408,74772,4946,14485,50759,111222,10890,2195,167147,92962,130534,16283,177256,35016,15472,210156,151187,73922,117691,43250,52051,37392,24811,24358,30830,5775,818,21969,1476,127322,151783,58392,31021,106913,65215,89407,90802,28531,11690,20234,95249,44602,37256,18707,11928,5161,4410,26571,51903,49768,22008,25252,65780,209499,68769,203726,13249,137363,48845,86823,6658,5674,31881,1083,1823,108676,34518,166752,13791,14287,91576,91429,8665,11529,26401,16191,91972,30964,5254,28486,54697,79613,66520,18447,22870,45203,194466,22822,51703,12278,76716,44595,73455,33546,12235,144843,36154,51247,11116,33040,3180,225753,60864,1972,28469,12891,28879,10338,144157,56294,353058,38302,41447,87532,110616,27065,168438,6557,1213,50804,144643,24817,2390,136531,38174,247513,16190,4059,122791,131994,137430,39506,57650,16305,5188,54309,106128,20628,88071,67394,395446,250285,66176,91254,1399,114196,43915,60230,44853,27206,106353,43013,18733,345105,226453,51202,16607,57106,117175,35492,10476,89598,127439,15187,39624,13688,61570,10615,31111,59370,6238,175252,32143,224492,41388,95408,34384,148238,78307,38959,9340,160091,61443,15737,11216,41244,170,38299,102443,113097,26382,14027,33707,3957,76300,66160,19431,18900,6952,1717,108656,82206,188021,257335,27295,43999,41210,31777,46956,57457,12657,11489,15697,48060,204748,53583,82422,284790,30503,137341,8120,19615,220311,15991,10217,63424,9808,67431,70976,98221,4491,15177,28535,144789,751,13230,2394,1504,33977,132104,30316,22230,931,97193,185240,24826,22687,174322,15307,22988,1390,188745,180325,29580,59068,74903,18994,29195,79,15436,7622,38462,11566,138710,44828,45774,37768,99236,68137,84083,19282,22698,17134,74807,126662,173497,46248,16938,119735,3212,28292,213652,49013,9975,32180,45660,86250,4801,68788,95490,77482,113751,11994,44624,94452,46839,128497,100316,5798,58588,73184,202987,65417,37790,88524,1606,43156,97964,105717,34947,11203,100060,37742,130074,93653,107799,94311,196106,41347,8035,10780,16390,27883,118236,167395,1979,25006,19375,31628,18916,144723,78502,114047,103107,86492,107686,5844,20934,206963,23556,22591,16562,146333,20167,10471,117434,33085,2863,9740,36669,41849,37271,22790,18209,28979,8231,12952,54408,21731,25130,45208,55748,138120,75826,414,29593,9925,292865,25999,683,123149,7036,92159,86055,61827,103680,23176,54918,58466,57578,13305,5709,86479,16697,31064,17660,200919,10770,49793,33423,32370,52047,16488,62555,6459,8426,83493,7763,59725,82812,18628,67760,79405,68557,9612,7673,28102,56517,69620,171797,32458,29541,15870,81109,32080,207644,71495,21202,11039,91036,61230,2810,130800,32260,4613,60590,37112,75214,33979,126402,155062,30642,63875,12810,194463,82799,47664,16725,36685,43367,61099,449,172150,102867,21691,301838,36745,7130,18671,57316,34852,38034,54182,35578,65900,99486,19771,3456,2658,16914,99866,28390,28109,8262,21147,34353,20006,4228,137085,1675,203023,283196,198286,214375,163329,290603,152574,40471,83506,30068,14730,23177,131539,34759,27668,32178,71896,104799,116305,85430,119262,42860,25160,8911,23428,49437,105322,6519,16203,6349,74711,1230,38045,8540,75165,44736,25909,51026,317034,4984,32281,91312,27060,44431,17817,45363,155937,239085,35697,59784,91993,29531,126740,213757,76560,167776,285273,24262,8237,65030,41160,74437,48804,118916,13159,37842,1031,75349,1478,11655,108777,23435,277425,101734,67469,70231,124711,43532,28514,65526,54956,1e3,21882,17728,25302,40952,52214,149632,1999,2111,3259,63362,89961,220561,39777,26335,9063,10572,12416,34551,34623,38604,24723,5947,15588,69927,66252,119177,69173,46629,28714,70715,212408,20521,406913,74380,11716,50659,50862,37009,88460,130101,7210,53853,538,65120,151950,55806,163748,52837,13153,21100,16674,64536,6091,138201,44837,58547,3723,163,2177,32288,85454,34033,8497,14282,25742,10535,10741,79559,117493,243787,49337,100718,79495,40139,42956,7551,55433,15421,31509,23034,45081,547,61176,53434,328001,8470,36263,30145,4519,74173,53935,11845,73774,60211,78025,3,4102,73782,109293,315332,48412,26683,13714,6865,20128,18490,104141,325,39470,171970,115860,15707,7268,73301,74336,31370,2368,111827,107757,136231,142844,97138,96638,84053,38691,23801,1588,10573,122098,77039,240,186135,146101,11996,18143,112963,46171,155836,348769,47795,121213,116266,132515,3344,144804,31286,99187,255838,129694,35894,48779,55235,148582,71967,65282,15174,13920,47080,6147,108242,157593,125025,7136,1286,28957,127956,28402,98813,20805,7532,109417,40610,5041,32958,15142,18408,108596,33543,50517,27748,80114,233434,91447,487,37094,100048,30541,43477,10639,89862,155868,37667,8726,60684,237903,73408,99589,12190,38739,97348,3914,13594,2680,149016,13907,30171,28343,23530,115225,61104,35821,147679,14337,4297,244282,24085,326976,56428,7851,21303,131620,71446,83253,68692,111870,5224,15813,38197,49026,45057,13660,3306,76345,40671,27905,91072,996,68527,62085,91351,122634,55109,168209,2024,27560,112707,17352,8306,167115,169921,166958,5031,46020,11844,67284,19130,76185,6920,32849,5450,14610,22451,21002,17392,31872,66682,84796,13709,40210,59898,12029,8719,53564,21462,91884,21647,88379,194428,12754,37797,132826,160016,22567,54383,53186,77611,31107,8339,4694,19185,90355,23597,17222,140675,28442,23668,55977,9128,61555,28774,155229,17658,9390,24379,69357,15752,127381,239631,62460,93181,55913,45133,140155,18676,25249,33164,29581,82837,67223,22362,29975,7317,52813,1943,29613,20012,207130,49617,49651,5636,15334,36313,29226,28084,95247,72072,19e3,224932,15811,114,32127,38097,37508,88507,37225,27359,91626,12193,69279,20608,11055,88156,92808,2152,57259,55275,72789,24475,104414,1708,9882,3818,48661,66897,1631,34806,227930,85815,87753,18321,250664,72733,25107,206797,50891,8082,196411,92596,96764,152823,65514,22819,387277,62176,51225,40329,15563,189,3659,73670,64357,51793,275136,33482,86653,74615,67058,11318,125720,15388,22388,8267,1730,102663,170910,40784,7144,85373,13040,7088,94309,583,44224,140424,77439,18496,164026,36578,4722,9151,5824,63365,26510,35199,40500,79277,32495,44614,35233,9566,203293,152144,7097,2330,183480,98629,13423,330887,44130,68600,30939,97829,31012,345465,56747,94879,4939,160027,149761,99423,46099,32251,15332,8761,96094,128555,5763,235318,222223,55729,30241,55420,201746,3987,81382,8259,49325,23287,7719,24633,251100,92311,18591,110533,64759,170260,393860,7175,21144,132887,3593,75346,101277,91109,16387,259187,11627,57459,173829,44694,55780,49797,89192,120443,62622,3904,14814,23887,1027,112258,64955,99800,11132,66353,36202,48624,18158,88481,96882,43059,11040,2455,7077,21651,181159,99126,100434,61388,68186,19161,110468,120052,8819,55324,41494,7014,37689,3618,87729,92615,207943,9823,128657,12587,15857,6379,67628,51216,71775,157617,63244,1503,3864,218754,110864,5769,21492,7243,1192,87921,85529,31512,18537,42698,35350,73510,84474,34301,8991,21013,35034,566,38832,19838,35586,37216,39413,55006,12178,59742,856,84563,6900,25632,17437,49786,30723,13847,70845,4044,7843,23944,235976,55530,48942,6518,20939,73769,192653,52936,95207,23895,132542,142982,22632,87452,48042,54018,178468,10728,26230,23559,363,81269,142012,5718,346258,31456,84333,246476,51018,66692,101804,120570,39962,30373,70593,2864,60541,19425,54209,104092,7201,31545,48018,25865,15442,46257,40443,8328,6451,111782,47527,97754,33046,470,245116,31095,39,91934,87208,73470,36708,36521,12801,70624,36272,8892,79768,12427,55454,103756,5908,52390,62962,22720,141138,94634,41689,128402,126390,6628,106394,35527,134394,82727,254651,194502,148064,89549,3202,28359,957,21954,27906,49840,142747,8307,24206,48978,1186,71728,133038,71474,91306,6333,110959,74600,70387,18983,62609,56057,22970,1147,135850,1321,28834,3578,59715,102227,32827,81415,99952,55636,257598,390,22702,35701,85872,402916,39216,189795,14929,19467,10112,144422,61514,5279,63421,134686,41436,8424,51925,10598,132295,124416,4604,194739,210929,57866,31829,51626,50007,9976,91878,61906,56168,81906,60918,61859,40017,23059,16887,40927,62064,12785,32893,32913,21782,93965,20169,44387,79084,38463,11457,93950,27127,157050,2697,337088,5116,54128,48255,33279,8821,27352,25515,124022,65710,28906,38557,33390,1722,104435,72215,38551,12094,30978,25113,6671,37355,175109,42862,98024,65406,221276,59624,118012,64637,78760,86697,21426,1639,40350,12584,67193,84144,31396,7863,143011,69629,63112,9454,28666,65798,46372,134721,6314,51402,30837,151922,2847,38676,38008,92823,136245,17540,5504,109295,205242,37606,5211,214892,1586,20670,208711,137743,19328,40652,16995,20023,14657,154919,34422,12996,13918,38221,47690,16398,2959,37680,89122,6721,198469,91876,172043,83898,101992,26084,94570,3635,76958,22853,76497,38266,176590,168403,44464,142840,79180,184594,1984,41806,83147,11985,6546,366068,59732,24533,271505,8736,39084,222992,93429,28962,58985,86665,8432,30028,14548,32439,54424,165029,55175,27458,69046,121277,46168,33732,20661,24581,135574,123110,37556,79260,72611,16957,12939,46162,58238,44907,72936,253758,41324,32518,96480,11949,124438,65280,43256,34107,53533,43531,37037,28366,45970,32741,173438,6121,194202,62969,26355,30314,58370,28455,1848,50519,82830,90393,21761,295490,10936,256940,133568,44050,20269,4089,27457,21610,219460,36743,14821,101388,52005,13124,30979,140816,167362,26054,18458,60789,34917,40447,26606,33422,9066,3452,83614,5761,20263,137238,25038,91310,101,52322,74548,42572,38084,214054,186568,31802,17665,30620,141936,37730,14420,4265,187218,49640,188208,51441,55388,96452,66659,40869,42039,60967,221027,19234,178581,29105,96050,9165,196118,157335,3738,40354,117436,2965,34136,59659,15570,50843,230035,31444,71260,43886,18316,5387,38500,168508,17406,32174,8828,103373,143806,90367,3560,18719,122310,16508,26719,2541,105429,6645,37998,73190,10591,235916,49737,87112,233941,53188,32193,79154,4544,52905,126477,7580,63501,57314,3216,31337,6541,103083,60846,49,9756,15481,1355,43840,14319,13743,27486,10222,73114,230718,418644,16706,6674,279748,23058,45273,295831,86306,2743,5535,88773,21829,35253,120938,31153,3169,16839,42847,8751,80974,33942,36867,35514,16485,26474,77775,56877,5391,48346,3882,108713,31403,27804,55248,26235,43821,136104,40118,175507,28034,203908,18732,1788,34030,106427,36958,54359,7251,44936,15356,69139,455,157915,22173,140291,50348,43275,82066,49621,54952,15216,36226,96695,66855,6936,1987,8227,196087,4631,68827,99004,47541,110265,17953,147605,110242,58520,31312,38724,329975,642,3155,34497,75937,6207,73843,6120,17249,51429,117746,3218,910,68961,319671,14938,29555,34700,1649,66673,72268,9655,76800,153087,6941,210168,27130,35398,1780,73242,3135,56689,19556,165307,8765,35967,121458,13333,70453,17350,117253,22265,13340,44265,39869,441,3742,135025,23581,33309,16543,17731,13291,157637,283005,21408,101360,63887,52312,83873,5338,233779,23759,186949,34531,177320,38069,156465,91004,19353,59852,68160,14891,1338,1072,29823,1950,28901,81407,313445,73038,84807,162348,240257,37162,138934,16111,58013,41253,102951,16457,96056,19541,56402,67217,41638,94381,89674,29481,37456,80815,151579,13937,13683,132537,19699,134545,67020,29816,222341,141235,427578,48868,129557,233342,23077,87871,16213,18728,16184,9469,37913,19680,2798,171356,178328,13216,50049,72690,71904,124644,55455,7504,29052,41036,266546,19899,30391,188755,8659,59469,16,104298,112943,53865,76203,138226,68857,139953,14125,107625,119795,173133,4398,50273,48808,54390,16466,122086,31835,67035,50971,48859,7508,46427,66477,73021,84615,39985,83076,46779,201569,53336,36443,60865,168164,143810,51393,25548,169307,32896,24485,38424,21837,29087,275813,51674,6714,64883,46169,187369,55186,76192,12852,12018,62134,31067,118303,16542,12125,10579,4928,26291,43854,7091,10946,253716,109062,39283,17261,113012,258512,47764,125126,32646,55892,80279,201623,149872,3192,385,1208,48750,5376,58738,22335,5427,82416,47811,32435,143086,38930,94128,59975,156037,37977,38224,62485,7698,50405,71027,16462,21559,136153,34131,107506,162069,63703,3101,215029,40407,4178,3774,9187,80019,17880,97926,67579,2600,18405,8351,47924,86638,70820,92206,86453,29610,42241,119200,3198,15466,67813,57863,35454,4779,99518,4649,104641,144269,33730,38073,65864,6838,109456,193298,154007,5623,45741,30846,182578,25573,157224,1543,58575,138703,146140,44971,49356,18275,59064,20300,13122,11848,24453,11973,9797,86843,2919,25530,49210,1130,161220,76788,75373,85604,34926,36014,17777,17255,51533,11676,92226,51845,119859,21525,5936,18507,28050,1140,31418,14857,34207,47859,10750,36382,32079,106909,59426,87757,38393,110042,15965,97104,33757,35344,97993,53979,33651,45407,41884,82515,173089,7177,58371,35365,47543,51927,35587,10670,23544,29306,84233,39976,76076,62097,9007,8668,28119,78281,120790,19835,143020,54968,18670,64959,20649,34469,42570,33001,136570,87796,120044,1106,58700,63951,127623,12805,83057,40212,31773,49850,7361,54336,347524,101314,23751,19569,48791,29174,49369,20467,7465,75842,38281,623,112457,60210,28849,51003,94720,6426,90047,85560,43761,3579,85105,34607,90410,118528,7224,42907,111163,18168,6960,161135,191298,5247,100584,127552,171568,20121,91173,12636,54615,20199,63730,98105,2396,40387,14438,125012,4765,33235,12865,45299,37728,82098,77872,114037,59253,19675,24838,398016,102561,11446,17069,57508,178277,65836,99941,26114,2585,271882,136866,50126,11027,155648,118367,14585,8910,123015,335383,40434,41016,53021,14439,87098,176860,201543,121888,2358,9286,5739,22666,54270,37884,169381,33984,93859,16124,89364,72207,51639,76366,99029,65812,2198,12147,174891,194289,6986,30252,88822,21284,11445,288337,160821,33034,100869,43852,25761,52882,1144,103809,1924,84458,86079,43411,13542,139276,18141,34978,41298,7276,26481,173800,33210,17951,142652,33616,33677,2210,19941,98568,2486,192414,80136,12058,235883,50963,249638,29572,27221,47034,6124,72107,63346,97620,158513,299699,40388,23235,37176,224244,198386,121323,67992,23827,63170,17838,106622,158590,26807,5345,23489,91891,55474,74834,37981,13058,5977,72552,34706,26828,145172,19904,21367,34043,960,77092,91381,4733,47446,7680,41697,5170,16960,14741,46101,13656,473,51842,37433,11103,11551,121951,13191,97536,165932,50397,51628,129028,9069,44885,6590,59195,47045,32940,225472,90345,21833,13303,29407,96615,141951,5198,6028,18395,7181,3861,14966,156358,167182,36529,55253,25942,173153,30959,27261,50691,150176,162201,38467,48462,80602,42163,118482,168,108756,26011,17166,54149,456538,22512,91374,13816,90358,131615,18132,226707,1824,28139,26860,42253,93877,77351,65575,8980,80574,22020,27948,40422,91324,76376,13528,39281,91685,82215,122541,144066,1983,193851,17283,26320,2739,194978,4790,26845,42627,61300,65815,174612,55133,4200,191130,79771,158321,52280,166796,221620,62461,11278,4067,88152,83409,31717,121367,13522,47325,37945,10406,174348,249321,154101,64912,29938,51775,17220,15776,166138,78890,84425,54121,42861,16368,24572,291647,10197,32073,22651,11677,97509,26952,35787,18424,41910,71614,94977,72318,41594,70024,275419,37702,60199,7335,39107,61315,18271,18394,33768,87884,104277,123724,7277,56288,71981,189803,49320,3352,6798,14240,8954,69220,94433,57372,28620,68863,193727,85575,42309,41667,67689,42081,22543,44824,12719,28540,114236,101553,27638,27296,4300,5353,4663,19379,94098,3758,95888,95144,80344,87320,28447,259518,12718,71391,152731,37063,24132,31911,104896,15672,103782,1521,4945,72541,23717,122632,15619,87175,206120,29428,189780,61416,28350,44457,972,1175,47233,198738,95789,41907,21953,97034,59341,22864,53713,16873,32971,20693,20954,31336,21477,16169,38370,16412,9019,3841,24599,21938,17085,6484,81198,76413,5849,72514,12320,65247,276175,37234,59796,52642,16312,57349,198507,94148,46134,18958,125552,1747,18725,151873,14901,5490,68287,29470,3689,64794,40814,26018,25692,54450,2703,88278,124886,173087,174e3,24159,179477,24276,46004,201876,209202,445,52876,31948,30206,157610,39180,18439,44124,50469,5774,96278,222758,200216,50290,45486,20435,46986,46276,140133,142326,15569,13363,47522,92583,2182,7135,16853,22998,30272,4952,63263,35623,39096,53789,44864,20053,110392,124213,4630,16087,28221,127787,25839,77481,44693,13464,113146,6983,27069,55717,50102,4760,7107,26186,66507,59145,36032,104182,71328,29425,64317,50781,47465,94298,69706,74899,22754,120756,25108,93077,56834,73286,39928,16218,41699,176763,7555,70819,50083,26895,23315,26014,16773,123079,41712,5719,31516,90427,158540,85051,183128,40864,27505,55392,9058,45224,96857,30901,136622,96557,56304,120061,11501,151448,5773,89743,7769,86069,2935,18471,41628,10114,33660,110170,49479,26745,92846,33221,26731,18795,87076,8550,2100,29972,120289,3077,72490,33784,2630,208722,50861,63483,79029,6419,39467,14302,45286,64207,9686,67513,44170,1050,77246,59266,17055,53801,7150,11111,42432,4278,94579,362117,36175,42902,41933,39002,98489,22913,74161,84773,57036,17556,162288,74485,178760,93867,73635,128860,50362,261,67455,80001,46080,35662,4368,25247,19230,74393,22588,1822,27682,235324,13798,85998,13194,235067,23514,71669,147632,23191,134748,214683,105101,1518,25489,247114,7380,54842,26922,3971,26361,20844,68642,170517,77339,123255,8963,77818,150998,48466,36806,2732,23261,11741,236162,18243,126216,28690,50546,16385,92760,197383,246558,201295,88255,67588,71687,176076,172653,169058,33906,63747,24835,157621,43338,30050,46152,132741,2770,51371,94835,6614,15112,11749,56936,1250,19027,399017,58036,100215,23388,55815,308768,124152,94803,9521,64186,8971,28,30427,62163,7616,103838,35079,29203,131235,7743,17389,10882,37420,61460,228512,85363,41581,131077,62822,119647,10130,54445,26925,19968,29016,24446,74028,24176,61448,67185,9254,8563,119129,9771,99184,37716,39514,10532,221512,258753,218630,55980,23394,32141,61924,66749,32411,3741,36475,26678,77010,44946,91203,128749,116953,20476,49625,53116,13735,102335,29376,51946,83407,67892,59212,34685,21083,1546,112982,32972,74397,1078,190545,16082,86140,58591,89611,101531,10061,105104,76319,20035,17551,52611,169061,190842,100780,23907,90413,115619,9675,34710,193435,49443,129734,11183,258877,16318,136182,126808,44635,27304,192375,2599,125648,47051,12091,23814,721,58800,40137,66726,97930,60877,74487,7942,54326,9841,41428,13762,8211,85383,6950,99177,79806,201786,296464,124087,13144,29741,41721,47634,55088,254286,106408,17041,99064,12942,64086,45233,14005,2612,55827,255,7984,13980,38574,12776,46654,73499,249951,2101,26676,25996,132326,116415,119062,50449,31033,23038,11589,179252,20007,14860,129270,21143,17796,144715,60106,70758,69842,34674,282133,44014,16774,57268,38528,24053,46373,201667,28327,471023,51889,102667,21193,114909,84132,69317,96723,67969,16134,68145,15058,28765,32035,2524,101089,98664,25045,76571,14957,86040,118506,262428,154764,81573,39681,283900,73287,127825,544,80448,52347,38512,175971,15180,45467,33086,46552,48894,81107,43213,36672,54025,76703,8053,7608,13299,56619,20752,238099,54164,105133,1444,32942,953,37564,8e3,66316,119463,106817,404,13667,149108,128597,31267,10269,49836,106150,1484,52330,76965,160486,171648,38456,31263,22424,37738,66245,67467,143369,60471,75610,20895,115528,86070,60854,40796,49347,18989,15030,11371,37578,15779,79867,10187,86462,46402,155626,93200,40229,7090,57547,108053,99598,11088,47505,41218,206017,2173,20988,30219,22919,80563,57566,42369,93141,41675,2407,182519,120495,27154,16702,29456,14349,7958,16688,117177,140375,42467,261919,74916,153569,10836,34742,49526,7621,105997,12212,2270,392377,7755,17959,25086,232152,138791,33847,13860,35316,5811,1344,71259,50452,207539,92635,50359,5821,33674,30255,2086,2587,96264,17543,42,6029,9580,43007,139248,82831,12917,29607,25786,51467,42137,85161,100698,31561,88989,121990,278500,3602,109344,37982,15279,116442,28936,30880,87894,58079,128661,126731,67392,28051,146885,4861,16216,97344,42827,147561,153948,22684,21335,47685,1853,43349,15185,59642,10229,25520,187921,108972,5579,98037,24945,6697,19193,63734,137934,75056,89740,19767,224268,56138,63643,151661,39313,70618,84031,89723,84074,13703,85626,35460,8867,64845,3439,57906,99776,63968,49270,81130,34356,16210,23547,36446,34090,140028,72439,2221,22163,57058,363492,113754,18913,95451,48663,54464,54037,176097,68425,3023,34906,29482,117389,341780,80431,58330,16753,92616,60907,94846,147486,4498,48646,7773,46801,7778,18946,464978,47558,33223,177444,7328,15626,63337,94700,11743,9351,255024,39098,16447,42647,96230,39769,58840,10068,63439,35800,65843,58823,413844,9156,51258,7434,61791,85018,6872,3692,28096,7121,33024,6009,75532,31997,192535,9661,3304,9547,14753,31987,25314,55689,15896,20430,39472,31340,99744,25398,115569,54883,28719,205423,23071,57855,64638,149867,25671,82403,37616,20668,39989,77996,74948,140555,175248,64810,36515,46595,4958,248773,24045,28728,136673,168704,20804,114833,100325,27135,21205,96151,153134,45992,7093,13992,76047,1980,19432,145001,75159,87462,17710,1013,45556,34297,144882,20648,26061,11319,129567,108555,18872,464580,33386,22717,65948,167189,5603,135042,79542,8801,202632,18114,91882,5973,5239,67315,4431,60916,47819,71693,32597,32606,18183,45072,80329,76385,24749,51305,40314,156514,14693,130345,13168,66214,18029,12858,34801,27628,14544,10823,40522,40185,33739,148694,23548,9923,61012,28859,17933,19442,34364,99849,164107,141167,30629,21054,6744,36491,8096,42474,41706,155060,30650,10600,163442,1143,96655,61390,52359,7559,51568,64256,203854,4467,22453,14504,436398,7878,6980,8293,63610,293747,16167,35763,19627,147603,15419,18032,110744,51346,33681,54571,40472,48615,39073,21604,13754,173027,92560,11083,47299,63062,11813,52007,29883,9734,139722,15953,1550,20651,13616,49306,16113,90089,92326,7584,30712,72424,164858,6831,152871,55746,197721,34167,196442,6022,112107,55215,7538,123381,4920,43539,77165,8939,50392,34192,20225,79762,22505,58667,40770,29788,97180,82835,4568,8579,13273,363569,35898,49983,436,36598,3237,131691,62418,35591,8101,4073,379438,65218,76072,33887,2968,27573,212619,288680,68278,72851,150504,217896,6913,121339,22017,35340,51072,43616,75043,31437,10833,81487,4364,22968,41454,106687,85446,19863,109625,149241,524,141850,214404,54376,657,237023,9401,108137,53800,32474,49712,53334,126876,27337,45552,177696,8269,15036,12097,42240,2328,125374,119295,99715,2500,19624,39441,27220,102691,60957,94543,39101,18566,67362,13975,78230,25017,34017,239007,90027,39351,41681,35354,43822,1043,916,58587,141983,94818,38799,75459,41114,67432,16195,36606,59568,22272,126769,31424,68659,12287,134302,257977,5756,207285,95637,47248,117689,19583,77451,22373,12200,54993,117118,34244,29386,34562,53819,71267,64172,77665,49368,7716,59301,25749,45426,194789,17297,2650,1766,32501,45198,20403,20984,6600,14171,94604,19037,5402,29896,9938,59935,109708,88081,145182,44844,39167,352626,164173,35374,45982,6122,154,73419,220487,53834,53601,17992,8609,229321,5610,68098,66815,71012,95069,140968,27396,8957,134489,24656,86659,56598,134852,17316,123838,255436,6613,41610,138033,81452,32023,32396,123687,63398,8693,29712,30407,19296,121188,3551,36099,20032,111948,56624,16547,27453,35916,15378,52039,56849,13489,22214,73177,53097,277349,2157,14029,187886,10260,141743,246460,91880,50869,3788,49486,133566,54950,33120,129337,53768,18333,9525,26902,312251,10297,9020,70759,16647,112432,59260,84609,9818,82766,73569,468,46001,75780,55028,52106,11498,43645,108069,17150,17753,29417,16705,31799,9606,289,122254,115975,8620,6133,255357,56908,14456,133464,43554,79224,11247,29630,160,12756,25464,65960,350428,62521,321796,100359,67358,35169,46172,113128,48988,88868,31094,33266,6847,60887,98188,49659,69117,92977,220228,13947,80181,35103,62170,97351,13475,2440,199768,19498,36597,46971,25234,67806,62881,84717,73648,181966,10488,94149,21550,26655,63436,48375,14405,165650,9621,24439,28043,42735,4490,29963,56674,45373,1934,262446,50855,67098,26898,5261,52696,40644,33900,9440,180286,87162,22940,19704,26936,69769,10254,101759,27406,12243,48e3,73926,113215,54935,5726,192787,4312,106216,9366,11550,52949,23457,212271,277152,133895,108374,6191,96477,29980,218916,58024,54696,40853,91124,65894,91170,65908,252552,6793,29212,15389,44516,122515,52617,35058,9017,103536,39510,49136,19242,130652,662077,74699,47024,31422,8517,73351,24399,13867,128360,4810,4434,61779,111983,61036,17798,110240,59722,102960,39688,10001,23803,23039,176498,56659,44814,134295,17188,77577,74466,226175,102472,154333,63900,111747,18062,41171,79669,32773,408933,42562,28931,30907,107388,43487,2946,240310,23938,24354,319,184983,7927,6488,1422,10790,68809,68209,64775,4361,202,17123,59634,51200,44391,18188,17843,2619,74278,3230,9540,47187,21702,36274,56894,43907,16310,34790,16866,6150,5561,13587,107545,108873,126867,86986,28640,33427,19017,5762,80637,17430,46903,2047,131055,25958,13558,5444,47152,13900,44563,122857,45348,70863,39593,54332,38068,33637,318,40310,143467,18502,24520,11377,62013,28942,27246,28269,83545,17999,59015,90707,30065,15161,34720,1263,37008,2012,6060,98575,92933,5721,299,199555,24578,29223,2985,743,115825,109523,136657,47454,26378,53586,3733,174945,93340,244456,5693,37386,28782,89767,27545,23573,18798,136425,34320,84778,20041,48453,38215,7477,71958,40621,8773,5874,187927,105965,51100,43533,18083,8443,10180,43597,2003,183999,69689,12216,129696,146188,62389,34044,68410,12765,43273,26949,266807,3345,34477,79197,5688,47539,213110,21634,22257,50092,32222,42346,39530,63668,98,134978,74022,5152,59088,174145,37220,9934,9545,118937,5724,87240,19875,15784,40143,23263,87513,181654,285152,37881,263241,4966,43934,10433,186657,6470,74416,225854,25908,142677,246262,32280,6192,75890,45546,143264,135305,29742,47013,77787,11732,126658,8763,37950,21806,57557,113464,89465,108995,164574,23894,22996,23169,15369,23117,17642,130607,40503,36239,280990,44666,9981,40427,147487,26869,168452,32886,32991,46798,240839,15111,70502,65697,88548,44145,28701,48767,31139,206777,35659,181164,166262,14554,171445,31786,66523,76607,17956,6507,31279,90476,116611,167918,6560,1243,115324,80128,41867,55897,187323,37069,32596,189444,145931,13390,105530,65709,26805,6999,55714,41300,22915,68951,22138,21120,22264,10058,19945,33635,56123,99085,10032,5818,6016,46649,57476,35264,94413,112522,262288,93686,83038,14341,23204,28807,66084,77987,6101,126673,7133,38126,5923,122091,170240,97772,46874,215746,43948,41622,3272,55596,8332,146411,251315,13533,8561,81521,115449,48616,175175,2063,186556,3036,134537,75772,29728,82360,22973,186559,86348,89100,38388,82297,45610,2613,87082,9986,177812,57884,23591,47485,42543,33582,44713,74439,257444,252451,31825,35631,38540,33066,5147,13973,4343,51830,70378,22827,26448,95560,36896,241741,48067,203953,298860,61620,20450,3220,67272,6586,107662,100160,108684,6929,57226,4762,7457,1320,40404,77204,99309,62750,208653,59977,44e3,74315,34332,5819,172217,64904,114077,18147,84012,1791,98456,90930,21446,116669,103938,7422,85140,59713,5768,326211,16239,75411,13229,29398,10758,236107,1539,112472,95979,152154,151294,306,21196,38146,10700,6891,84282,109646,56492,40539,6589,119491,51354,30685,140209,136906,29622,73617,49553,70525,51671,166869,139616,74395,37439,49595,45678,11959,33211,86560,52434,9282,62690,112155,130810,5243,108261,99970,265613,72551,80049,6391,33365,90721,66737,69872,87011,1860,9032,112544,60905,37371,89015,140351,19076,850,373531,2802,36725,218795,72062,28990,16550,24614,7815,6187,26336,33373,32162,42791,73555,32062,23386,10244,56392,49442,27076,136262,12412,14883,1134,33675,97153,199281,15608,100152,74072,47942,254301,36451,16026,10687,65067,56708,254030,30290,50490,13864,57941,259331,35588,23485,43486,24869,21620,92971,22072,88645,1048,182050,13343,32452,14825,19509,3325,216938,45740,99716,189082,53740,78245,25609,24311,176777,47340,308354,40669,66085,14102,125339,9225,128709,97207,1271,200933,78439,113451,88975,18324,46521,11819,18570,141756,72512,170020,52754,63550,118515,103073,93330,32736,50499,14722,31600,68452,398867,29316,172786,18417,104924,2606,5670,84818,16288,67106,59580,82929,607401,291,85829,359,15897,35830,50696,65630,52672,22115,356968,29895,40837,231192,34024,38957,26722,406,23335,124952,72068,68804,13268,147101,164740,276569,162596,66943,11569,26654,66358,4777,23229,102127,5848,978,2921,59666,5371,28212,90108,42938,39320,2499,4271,108792,33510,125072,71653,65239,38250,66357,38577,13964,86251,35708,50755,36010,29448,12209,3844,38222,206337,100876,67827,137088,14167,252225,84163,195270,1306,5703,54198,779,46802,22028,51124,86759,70560,113164,35685,162145,45471,34561,422,2611,6464,47486,19223,38246,9191,18331,89942,243642,212364,15893,17518,22617,6409,30046,126182,59716,36560,104428,18846,26592,19458,50793,147333,30826,1388,27647,10922,14495,33545,19269,135828,39727,41601,46931,233379,49169,131130,182112,16276,82381,118209,142445,128310,19672,28740,82907,33436,3118,102206,28723,24819,41937,38854,5157,3881,111491,1142,9776,421673,152241,29309,14961,87854,6054,15424,3796,82656,54996,2108,55367,239450,154525,9643,118103,106041,64601,68549,48707,30266,25772,18740,9462,229669,91798,112152,191327,14493,72828,8175,66636,236474,25817,87351,129027,76653,20422,22983,71240,27846,44661,12399,46158,77704,53101,35032,11072,17300,109294,33638,24408,1895,11241,760,17584,82479,125877,63150,141075,34259,23274,81698,15732,43577,48340,91584,14688,16379,24481,150280,96420,262050,48635,43727,61819,56268,72003,88178,17281,79912,13218,122519,125295,166396,11811,2171,118930,67746,17636,178278,174656,95661,173039,83845,79689,17473,98555,127696,203415,54730,22925,232239,9309,12136,175026,20740,180188,10747,39816,314017,266131,10040,175732,112550,220651,31974,37393,888,23008,86799,4303,64905,148467,75337,251,3284,370102,50264,9835,5438,23655,4481,29851,329,12855,7162,64931,78141,12804,42372,296771,83547,18624,34874,86271,3360,48665,77735,88767,11463,63527,28889,22258,29140,194315,113924,25499,6406,31334,1845,4802,49184,43455,35469,127594,92970,61038,115005,38840,87761,106838,8811,20572,55637,11162,96721,132425,108925,2948,125457,36356,3502,75270,27622,127192,2561,123095,49394,61155,16897,110064,9699,89448,53356,19628,220310,21622,83036,9885,112214,6087,26713,17901,161912,91492,3440,68594,9266,92238,8087,6866,150194,72175,80701,13459,31836,43243,239700,95846,44749,50647,21945,230538,120612,132371,244604,5193,105637,34661,41341,68775,85393,1874,8771,33718,49672,77403,595452,99507,6490,58895,128742,7704,39239,73217,43816,62824,37804,199976,22361,80005,87514,94832,14089,4574,139975,59142,75523,100268,43906,53442,15152,2547,186002,17011,19513,204282,3343,60568,128318,119250,4298,51871,41336,71759,21921,45074,98169,145889,99427,11350,1237,5520,28799,7803,53702,21026,136352,38293,128690,12158,90132,44600,10184,26957,39459,126025,78904,82999,59373,39301,150198,120529,153042,20177,50089,14764,271571,30530,123161,38975,101562,22941,5648,124654,109243,69817,71675,49162,106884,21241,107795,30258,16572,188262,141456,7688,60718,8271,11044,32440,104608,103419,236109,93156,43293,128929,42107,67180,25201,115254,185488,130954,72813,167547,20537,39969,38432,22582,184022,1139,27199,5655,17767,97412,122606,209377,27070,35871,326617,188954,42680,73512,80911,22629,3011,95021,315242,157737,383,41821,41808,19335,27950,15674,25677,110950,35375,76835,59108,57370,35262,16569,160415,37706,78086,32041,49691,137143,9782,172080,50148,77917,6323,10110,69172,17711,21795,59511,76184,135114,31046,132319,59105,157578,20549,80778,57649,158421,65143,4575,72235,21899,10797,92745,34035,106079,80159,4508,78304,25350,75457,46458,32937,25623,47,8531,104751,84953,8138,36508,187199,66310,115274,13253,32461,38536,1916,42007,187160,35055,26325,84394,35963,94216,45590,97782],MAX_COMMON_PREFIX_LENGTH=15;class RoutingTableRefresh{constructor(e){const{peerRouting:r,routingTable:n,refreshInterval:o,refreshQueryTimeout:a,lan:c}=e;this.log=logger$3(`libp2p:kad-dht:${c?"lan":"wan"}:routing-table:refresh`),this.peerRouting=r,this.routingTable=n,this.refreshInterval=o??TABLE_REFRESH_INTERVAL,this.refreshQueryTimeout=a??TABLE_REFRESH_QUERY_TIMEOUT,this.commonPrefixLengthRefreshedAt=[],this.refreshTable=this.refreshTable.bind(this)}async start(){this.log(`refreshing routing table every ${this.refreshInterval}ms`),this.refreshTable(!0)}async stop(){this.refreshTimeoutId!=null&&clearTimeout(this.refreshTimeoutId)}refreshTable(e=!1){this.log("refreshing routing table");const r=this._maxCommonPrefix(),n=this._getTrackedCommonPrefixLengthsForRefresh(r);this.log(`max common prefix length ${r}`),this.log(`tracked CPLs [ ${n.map(o=>o.toISOString()).join(", ")} ]`),Promise.all(n.map(async(o,a)=>{try{if(await this._refreshCommonPrefixLength(a,o,e),this._numPeersForCpl(r)===0){const c=Math.min(2*(a+1),n.length-1);for(let u=a+1;u<c+1;u++)try{await this._refreshCommonPrefixLength(u,o,e)}catch(l){this.log.error(l)}}}catch(c){this.log.error(c)}})).catch(o=>{this.log.error(o)}).then(()=>{this.refreshTimeoutId=setTimeout(this.refreshTable,this.refreshInterval),this.refreshTimeoutId.unref!=null&&this.refreshTimeoutId.unref()}).catch(o=>{this.log.error(o)})}async _refreshCommonPrefixLength(e,r,n){if(!n&&r.getTime()>Date.now()-this.refreshInterval){this.log("not running refresh for cpl %s as time since last refresh not above interval",e);return}const o=await this._generateRandomPeerId(e);this.log("starting refreshing cpl %s with key %p (routing table size was %s)",e,o,this.routingTable.size);const a=new timeoutAbortController.TimeoutController(this.refreshQueryTimeout);try{const c=await length$f(this.peerRouting.getClosestPeers(o.toBytes(),{signal:a.signal}));this.log(`found ${c} peers that were close to imaginary peer %p`,o),this.log("finished refreshing cpl %s with key %p (routing table size is now %s)",e,o,this.routingTable.size)}finally{a.clear()}}_getTrackedCommonPrefixLengthsForRefresh(e){e>MAX_COMMON_PREFIX_LENGTH&&(e=MAX_COMMON_PREFIX_LENGTH);const r=[];for(let n=0;n<=e;n++)r[n]=this.commonPrefixLengthRefreshedAt[n]??new Date;return r}async _generateRandomPeerId(e){if(this.routingTable.kb==null)throw new Error("Routing table not started");const r=randomBytes$3(2),n=(r[1]<<8)+r[0],o=await this._makePeerId(this.routingTable.kb.localNodeId,n,e);return peerIdFromBytes$1(o)}async _makePeerId(e,r,n){if(n>MAX_COMMON_PREFIX_LENGTH)throw new Error(`Cannot generate peer ID for common prefix length greater than ${MAX_COMMON_PREFIX_LENGTH}`);const o=new DataView(e.buffer,e.byteOffset,e.byteLength).getUint16(0,!1)^32768>>n,a=65535<<16-(n+1),c=o&a|r&~a,u=GENERATED_PREFIXES[c],l=new ArrayBuffer(34),f=new DataView(l,0,l.byteLength);return f.setUint8(0,sha256$3.code),f.setUint8(1,32),f.setUint32(2,u,!1),new Uint8Array(f.buffer,f.byteOffset,f.byteLength)}_maxCommonPrefix(){let e=0;for(const r of this._prefixLengths())r>e&&(e=r);return e}_numPeersForCpl(e){let r=0;for(const n of this._prefixLengths())n===e&&r++;return r}*_prefixLengths(){if(this.routingTable.kb!=null)for(const{id:e}of this.routingTable.kb.toIterable()){const r=xor(this.routingTable.kb.localNodeId,e);let n=0;for(const o of r)if(o===0)n++;else break;yield n}}}function allocUnsafe$3(t){return globalThis?.Buffer?.allocUnsafe!=null?globalThis.Buffer.allocUnsafe(t):new Uint8Array(t)}const defaultEncoder$1=t=>{const e=unsigned.encodingLength(t),r=allocUnsafe$3(e);return unsigned.encode(t,r),defaultEncoder$1.bytes=e,r};defaultEncoder$1.bytes=0;function encode$9(t){t=t??{};const e=t.lengthEncoder??defaultEncoder$1;return async function*(r){for await(const n of r){const o=e(n.byteLength);o instanceof Uint8Array?yield o:yield*o,n instanceof Uint8Array?yield n:yield*n}}}encode$9.single=(t,e)=>{e=e??{};const r=e.lengthEncoder??defaultEncoder$1;return new Uint8ArrayList(r(t.byteLength),t)};const MAX_LENGTH_LENGTH$2=8,MAX_DATA_LENGTH$2=1024*1024*4;var ReadMode$2;(function(t){t[t.LENGTH=0]="LENGTH",t[t.DATA=1]="DATA"})(ReadMode$2||(ReadMode$2={}));const defaultDecoder$2=t=>{const e=unsigned.decode(t);return defaultDecoder$2.bytes=unsigned.encodingLength(e),e};defaultDecoder$2.bytes=0;function decode$b(t){return async function*(e){const r=new Uint8ArrayList;let n=ReadMode$2.LENGTH,o=-1;const a=t?.lengthDecoder??defaultDecoder$2,c=t?.maxLengthLength??MAX_LENGTH_LENGTH$2,u=t?.maxDataLength??MAX_DATA_LENGTH$2;for await(const l of e)for(r.append(l);r.byteLength>0;){if(n===ReadMode$2.LENGTH)try{if(o=a(r),o<0)throw errcode(new Error("invalid message length"),"ERR_INVALID_MSG_LENGTH");if(o>u)throw errcode(new Error("message length too long"),"ERR_MSG_DATA_TOO_LONG");const f=a.bytes;r.consume(f),t?.onLength!=null&&t.onLength(o),n=ReadMode$2.DATA}catch(f){if(f instanceof RangeError){if(r.byteLength>c)throw errcode(new Error("message length length too long"),"ERR_MSG_LENGTH_TOO_LONG");break}throw f}if(n===ReadMode$2.DATA){if(r.byteLength<o)break;const f=r.sublist(0,o);r.consume(o),t?.onData!=null&&t.onData(f),yield f,n=ReadMode$2.LENGTH}}if(r.byteLength>0)throw errcode(new Error("unexpected end of input"),"ERR_UNEXPECTED_EOF")}}decode$b.fromReader=(t,e)=>{let r=1;const n=async function*(){for(;;)try{const{done:o,value:a}=await t.next(r);if(o===!0)return;a!=null&&(yield a)}catch(o){if(o.code==="ERR_UNDER_READ")return{done:!0,value:null};throw o}finally{r=1}}();return decode$b({...e??{},onLength:o=>{r=o}})(n)};const isV4=isIPv4,isV6=isIPv6,toBytes=function(t){let e=0;if(t=t.toString().trim(),isV4(t)){const r=new Uint8Array(e+4);return t.split(/\./g).forEach(n=>{r[e++]=parseInt(n,10)&255}),r}if(isV6(t)){const r=t.split(":",8);let n;for(n=0;n<r.length;n++){const a=isV4(r[n]);let c;a&&(c=toBytes(r[n]),r[n]=toString$D(c.slice(0,2),"base16")),c!=null&&++n<8&&r.splice(n,0,toString$D(c.slice(2,4),"base16"))}if(r[0]==="")for(;r.length<8;)r.unshift("0");else if(r[r.length-1]==="")for(;r.length<8;)r.push("0");else if(r.length<8){for(n=0;n<r.length&&r[n]!=="";n++);const a=[n,1];for(n=9-r.length;n>0;n--)a.push("0");r.splice.apply(r,a)}const o=new Uint8Array(e+16);for(n=0;n<r.length;n++){const a=parseInt(r[n],16);o[e++]=a>>8&255,o[e++]=a&255}return o}throw new Error("invalid ip address")},toString=function(t,e=0,r){e=~~e,r=r??t.length-e;const n=new DataView(t.buffer);if(r===4){const o=[];for(let a=0;a<r;a++)o.push(t[e+a]);return o.join(".")}if(r===16){const o=[];for(let a=0;a<r;a+=2)o.push(n.getUint16(e+a).toString(16));return o.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""},V=-1,names={},codes={},table=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,V,"ip6zone"],[43,8,"ipcidr"],[53,V,"dns",!0],[54,V,"dns4",!0],[55,V,"dns6",!0],[56,V,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc"],[281,0,"webrtc-w3c"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,V,"unix",!1,!0],[421,V,"ipfs"],[421,V,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,V,"garlic64"],[448,0,"tls"],[449,V,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,V,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[777,V,"memory"]];table.forEach(t=>{const e=createProtocol(...t);codes[e.code]=e,names[e.name]=e});function createProtocol(t,e,r,n,o){return{code:t,size:e,name:r,resolvable:!!n,path:!!o}}function getProtocol(t){if(typeof t=="number"){if(codes[t]!=null)return codes[t];throw new Error(`no protocol with code: ${t}`)}else if(typeof t=="string"){if(names[t]!=null)return names[t];throw new Error(`no protocol with name: ${t}`)}throw new Error(`invalid protocol id type: ${typeof t}`)}function base$3(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$3=base$3,_brrp__multiformats_scope_baseX$2=src$3;let Encoder$3=class{constructor(t,e,r){this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$3=class{constructor(t,e,r){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$3(this,t)}},ComposedDecoder$2=class{constructor(t){this.decoders=t}or(t){return or$3(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$3=(t,e)=>new ComposedDecoder$2({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});let Codec$2=class{constructor(t,e,r,n){this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$3(t,e,r),this.decoder=new Decoder$3(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};const from$4=({name:t,prefix:e,encode:r,decode:n})=>new Codec$2(t,e,r,n),baseX$2=({prefix:t,name:e,alphabet:r})=>{const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$2(r,e);return from$4({prefix:t,name:e,encode:n,decode:a=>coerce$2(o(a))})},decode$a=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode$8=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648$2=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from$4({prefix:e,name:t,encode(o){return encode$8(o,n,r)},decode(o){return decode$a(o,n,r,t)}}),base58btc$1=baseX$2({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),base58flickr=baseX$2({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),base58=Object.freeze(Object.defineProperty({__proto__:null,base58btc:base58btc$1,base58flickr},Symbol.toStringTag,{value:"Module"})),base32$1=rfc4648$2({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),base32upper=rfc4648$2({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),base32pad=rfc4648$2({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),base32padupper=rfc4648$2({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),base32hex=rfc4648$2({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),base32hexupper=rfc4648$2({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),base32hexpad=rfc4648$2({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),base32hexpadupper=rfc4648$2({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),base32z=rfc4648$2({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),base32$2=Object.freeze(Object.defineProperty({__proto__:null,base32:base32$1,base32hex,base32hexpad,base32hexpadupper,base32hexupper,base32pad,base32padupper,base32upper,base32z},Symbol.toStringTag,{value:"Module"})),format$1=(t,e)=>{const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0$1(r,baseCache$1(t),e||base58btc$1.encoder);default:return toStringV1$1(r,baseCache$1(t),e||base32$1.encoder)}},cache$1=new WeakMap,baseCache$1=t=>{const e=cache$1.get(t);if(e==null){const r=new Map;return cache$1.set(t,r),r}return e};let CID$1=class Ze{constructor(e,r,n,o){this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE$1)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE$1)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return Ze.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$4(e,r);return Ze.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return Ze.equals(this,e)}static equals(e,r){const n=r;return n&&e.code===n.code&&e.version===n.version&&equals$2(e.multihash,n.multihash)}toString(e){return format$1(this,e)}toJSON(){return{"/":format$1(this)}}link(){return this}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof Ze)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new Ze(n,o,a,c||encodeCID$1(n,o,a.bytes))}else if(r[cidSymbol$1]===!0){const{version:n,multihash:o,code:a}=r,c=decode$c(o);return Ze.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE$1)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$1}) block encoding`);return new Ze(e,r,n,n.bytes)}case 1:{const o=encodeCID$1(e,r,n.bytes);return new Ze(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return Ze.create(0,DAG_PB_CODE$1,e)}static createV1(e,r){return Ze.create(1,e,r)}static decode(e){const[r,n]=Ze.decodeFirst(e);if(n.length)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=Ze.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$2(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest$2(r.multihashCode,r.digestSize,a,o);return[r.version===0?Ze.createV0(c):Ze.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$d(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE$1;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes$1(e,r),a=Ze.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache$1(a).set(n,e),a}};const parseCIDtoBytes$1=(t,e)=>{switch(t[0]){case"Q":{const r=e||base58btc$1;return[base58btc$1.prefix,r.decode(`${base58btc$1.prefix}${t}`)]}case base58btc$1.prefix:{const r=e||base58btc$1;return[base58btc$1.prefix,r.decode(t)]}case base32$1.prefix:{const r=e||base32$1;return[base32$1.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}},toStringV0$1=(t,e,r)=>{const{prefix:n}=r;if(n!==base58btc$1.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o},toStringV1$1=(t,e,r)=>{const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o},DAG_PB_CODE$1=112,SHA_256_CODE$1=18,encodeCID$1=(t,e,r)=>{const n=encodingLength$2(t),o=n+encodingLength$2(e),a=new Uint8Array(o+r.byteLength);return encodeTo$2(t,a,0),encodeTo$2(e,a,n),a.set(r,o),a},cidSymbol$1=Symbol.for("@ipld/js-cid/CID"),identity=from$4({prefix:"\0",name:"identity",encode:t=>toString$1(t),decode:t=>fromString$1(t)}),identityBase=Object.freeze(Object.defineProperty({__proto__:null,identity},Symbol.toStringTag,{value:"Module"})),base2=rfc4648$2({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),base2$1=Object.freeze(Object.defineProperty({__proto__:null,base2},Symbol.toStringTag,{value:"Module"})),base8=rfc4648$2({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),base8$1=Object.freeze(Object.defineProperty({__proto__:null,base8},Symbol.toStringTag,{value:"Module"})),base10=baseX$2({prefix:"9",name:"base10",alphabet:"0123456789"}),base10$1=Object.freeze(Object.defineProperty({__proto__:null,base10},Symbol.toStringTag,{value:"Module"})),base16=rfc4648$2({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),base16upper=rfc4648$2({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),base16$1=Object.freeze(Object.defineProperty({__proto__:null,base16,base16upper},Symbol.toStringTag,{value:"Module"})),base36=baseX$2({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),base36upper=baseX$2({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),base36$1=Object.freeze(Object.defineProperty({__proto__:null,base36,base36upper},Symbol.toStringTag,{value:"Module"})),base64=rfc4648$2({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),base64pad=rfc4648$2({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),base64url=rfc4648$2({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),base64urlpad=rfc4648$2({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),base64$1=Object.freeze(Object.defineProperty({__proto__:null,base64,base64pad,base64url,base64urlpad},Symbol.toStringTag,{value:"Module"})),alphabet=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),alphabetBytesToChars=alphabet.reduce((t,e,r)=>(t[r]=e,t),[]),alphabetCharsToBytes=alphabet.reduce((t,e,r)=>(t[e.codePointAt(0)]=r,t),[]);function encode$7(t){return t.reduce((e,r)=>(e+=alphabetBytesToChars[r],e),"")}function decode$9(t){const e=[];for(const r of t){const n=alphabetCharsToBytes[r.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${r}`);e.push(n)}return new Uint8Array(e)}const base256emoji=from$4({prefix:"\u{1F680}",name:"base256emoji",encode:encode$7,decode:decode$9}),base256emoji$1=Object.freeze(Object.defineProperty({__proto__:null,base256emoji},Symbol.toStringTag,{value:"Module"}));new TextEncoder,new TextDecoder;const bases={...identityBase,...base2$1,...base8$1,...base10$1,...base16$1,...base32$2,...base36$1,...base58,...base64$1,...base256emoji$1};function convertToString(t,e){switch(getProtocol(t).code){case 4:case 41:return bytes2ip(e);case 42:return bytes2str(e);case 6:case 273:case 33:case 132:return bytes2port(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return bytes2str(e);case 421:return bytes2mh(e);case 444:return bytes2onion(e);case 445:return bytes2onion(e);case 466:return bytes2mb(e);default:return toString$D(e,"base16")}}function convertToBytes(t,e){switch(getProtocol(t).code){case 4:return ip2bytes(e);case 41:return ip2bytes(e);case 42:return str2bytes(e);case 6:case 273:case 33:case 132:return port2bytes(parseInt(e,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return str2bytes(e);case 421:return mh2bytes(e);case 444:return onion2bytes(e);case 445:return onion32bytes(e);case 466:return mb2bytes(e);default:return fromString$y(e,"base16")}}const decoders=Object.values(bases).map(t=>t.decoder),anybaseDecoder=function(){let t=decoders[0].or(decoders[1]);return decoders.slice(2).forEach(e=>t=t.or(e)),t}();function ip2bytes(t){if(!isIP(t))throw new Error("invalid ip address");return toBytes(t)}function bytes2ip(t){const e=toString(t,0,t.length);if(e==null)throw new Error("ipBuff is required");if(!isIP(e))throw new Error("invalid ip address");return e}function port2bytes(t){const e=new ArrayBuffer(2);return new DataView(e).setUint16(0,t),new Uint8Array(e)}function bytes2port(t){return new DataView(t.buffer).getUint16(t.byteOffset)}function str2bytes(t){const e=fromString$y(t),r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function bytes2str(t){const e=varint$w.decode(t);if(t=t.slice(varint$w.decode.bytes),t.length!==e)throw new Error("inconsistent lengths");return toString$D(t)}function mh2bytes(t){let e;t[0]==="Q"||t[0]==="1"?e=decode$c(base58btc$1.decode(`z${t}`)).bytes:e=CID$1.parse(t).multihash.bytes;const r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function mb2bytes(t){const e=anybaseDecoder.decode(t),r=Uint8Array.from(varint$w.encode(e.length));return concat$8([r,e],r.length+e.length)}function bytes2mb(t){const e=varint$w.decode(t),r=t.slice(varint$w.decode.bytes);if(r.length!==e)throw new Error("inconsistent lengths");return"u"+toString$D(r,"base64url")}function bytes2mh(t){const e=varint$w.decode(t),r=t.slice(varint$w.decode.bytes);if(r.length!==e)throw new Error("inconsistent lengths");return toString$D(r,"base58btc")}function onion2bytes(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==16)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion address.`);const r=base32$1.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes(n);return concat$8([r,o],r.length+o.length)}function onion32bytes(t){const e=t.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==56)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion3 address.`);const r=base32$1.decode(`b${e[0]}`),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const o=port2bytes(n);return concat$8([r,o],r.length+o.length)}function bytes2onion(t){const e=t.slice(0,t.length-2),r=t.slice(t.length-2),n=toString$D(e,"base32"),o=bytes2port(r);return`${n}:${o}`}function stringToStringTuples(t){const e=[],r=t.split("/").slice(1);if(r.length===1&&r[0]==="")return[];for(let n=0;n<r.length;n++){const o=r[n],a=getProtocol(o);if(a.size===0){e.push([o]);continue}if(n++,n>=r.length)throw ParseError("invalid address: "+t);if(a.path===!0){e.push([o,cleanPath(r.slice(n).join("/"))]);break}e.push([o,r[n]])}return e}function stringTuplesToString(t){const e=[];return t.map(r=>{const n=protoFromTuple(r);return e.push(n.name),r.length>1&&r[1]!=null&&e.push(r[1]),null}),cleanPath(e.join("/"))}function stringTuplesToTuples(t){return t.map(e=>{Array.isArray(e)||(e=[e]);const r=protoFromTuple(e);return e.length>1?[r.code,convertToBytes(r.code,e[1])]:[r.code]})}function tuplesToStringTuples(t){return t.map(e=>{const r=protoFromTuple(e);return e[1]!=null?[r.code,convertToString(r.code,e[1])]:[r.code]})}function tuplesToBytes(t){return fromBytes(concat$8(t.map(e=>{const r=protoFromTuple(e);let n=Uint8Array.from(varint$w.encode(r.code));return e.length>1&&e[1]!=null&&(n=concat$8([n,e[1]])),n})))}function sizeForAddr(t,e){return t.size>0?t.size/8:t.size===0?0:varint$w.decode(e)+(varint$w.decode.bytes??0)}function bytesToTuples(t){const e=[];let r=0;for(;r<t.length;){const n=varint$w.decode(t,r),o=varint$w.decode.bytes??0,a=getProtocol(n),c=sizeForAddr(a,t.slice(r+o));if(c===0){e.push([n]),r+=o;continue}const u=t.slice(r+o,r+o+c);if(r+=c+o,r>t.length)throw ParseError("Invalid address Uint8Array: "+toString$D(t,"base16"));e.push([n,u])}return e}function bytesToString(t){const e=bytesToTuples(t),r=tuplesToStringTuples(e);return stringTuplesToString(r)}function stringToBytes(t){t=cleanPath(t);const e=stringToStringTuples(t),r=stringTuplesToTuples(e);return tuplesToBytes(r)}function fromString(t){return stringToBytes(t)}function fromBytes(t){const e=validateBytes(t);if(e!=null)throw e;return Uint8Array.from(t)}function validateBytes(t){try{bytesToTuples(t)}catch(e){return e}}function cleanPath(t){return"/"+t.trim().split("/").filter(e=>e).join("/")}function ParseError(t){return new Error("Error parsing address: "+t)}function protoFromTuple(t){return getProtocol(t[0])}var __classPrivateFieldGet=function(t,e,r,n){if(r==="a"&&!n)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?t!==e||!n:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return r==="m"?n:r==="a"?n.call(t):n?n.value:e.get(t)},__classPrivateFieldSet=function(t,e,r,n,o){if(n==="m")throw new TypeError("Private method is not writable");if(n==="a"&&!o)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?t!==e||!o:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return n==="a"?o.call(t,r):o?o.value=r:e.set(t,r),r},_DefaultMultiaddr_string,_DefaultMultiaddr_tuples,_DefaultMultiaddr_stringTuples,_a;const inspect=Symbol.for("nodejs.util.inspect.custom"),DNS_CODES=[getProtocol("dns").code,getProtocol("dns4").code,getProtocol("dns6").code,getProtocol("dnsaddr").code],resolvers=new Map,symbol$1=Symbol.for("@multiformats/js-multiaddr/multiaddr");function isMultiaddr(t){return!!t?.[symbol$1]}class DefaultMultiaddr{constructor(e){if(_DefaultMultiaddr_string.set(this,void 0),_DefaultMultiaddr_tuples.set(this,void 0),_DefaultMultiaddr_stringTuples.set(this,void 0),this[_a]=!0,e==null&&(e=""),e instanceof Uint8Array)this.bytes=fromBytes(e);else if(typeof e=="string"){if(e.length>0&&e.charAt(0)!=="/")throw new Error(`multiaddr "${e}" must start with a "/"`);this.bytes=fromString(e)}else if(isMultiaddr(e))this.bytes=fromBytes(e.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr")}toString(){return __classPrivateFieldGet(this,_DefaultMultiaddr_string,"f")==null&&__classPrivateFieldSet(this,_DefaultMultiaddr_string,bytesToString(this.bytes),"f"),__classPrivateFieldGet(this,_DefaultMultiaddr_string,"f")}toJSON(){return this.toString()}toOptions(){let e,r,n,o,a="";const c=getProtocol("tcp"),u=getProtocol("udp"),l=getProtocol("ip4"),f=getProtocol("ip6"),p=getProtocol("dns6"),g=getProtocol("ip6zone");for(const[$,_]of this.stringTuples())$===g.code&&(a=`%${_??""}`),DNS_CODES.includes($)&&(r=c.name,o=443,n=`${_??""}${a}`,e=$===p.code?6:4),($===c.code||$===u.code)&&(r=getProtocol($).name,o=parseInt(_??"")),($===l.code||$===f.code)&&(r=getProtocol($).name,n=`${_??""}${a}`,e=$===f.code?6:4);if(e==null||r==null||n==null||o==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:e,host:n,transport:r,port:o}}protos(){return this.protoCodes().map(e=>Object.assign({},getProtocol(e)))}protoCodes(){const e=[],r=this.bytes;let n=0;for(;n<r.length;){const o=varint$w.decode(r,n),a=varint$w.decode.bytes??0,c=getProtocol(o),u=sizeForAddr(c,r.slice(n+a));n+=u+a,e.push(o)}return e}protoNames(){return this.protos().map(e=>e.name)}tuples(){return __classPrivateFieldGet(this,_DefaultMultiaddr_tuples,"f")==null&&__classPrivateFieldSet(this,_DefaultMultiaddr_tuples,bytesToTuples(this.bytes),"f"),__classPrivateFieldGet(this,_DefaultMultiaddr_tuples,"f")}stringTuples(){return __classPrivateFieldGet(this,_DefaultMultiaddr_stringTuples,"f")==null&&__classPrivateFieldSet(this,_DefaultMultiaddr_stringTuples,tuplesToStringTuples(this.tuples()),"f"),__classPrivateFieldGet(this,_DefaultMultiaddr_stringTuples,"f")}encapsulate(e){return e=new DefaultMultiaddr(e),new DefaultMultiaddr(this.toString()+e.toString())}decapsulate(e){const r=e.toString(),n=this.toString(),o=n.lastIndexOf(r);if(o<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${e.toString()}`);return new DefaultMultiaddr(n.slice(0,o))}decapsulateCode(e){const r=this.tuples();for(let n=r.length-1;n>=0;n--)if(r[n][0]===e)return new DefaultMultiaddr(tuplesToBytes(r.slice(0,n)));return this}getPeerId(){try{const e=this.stringTuples().filter(r=>r[0]===names.ipfs.code).pop();if(e?.[1]!=null){const r=e[1];return r[0]==="Q"||r[0]==="1"?toString$D(base58btc$1.decode(`z${r}`),"base58btc"):toString$D(CID$1.parse(r).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){let e=null;try{e=this.stringTuples().filter(r=>getProtocol(r[0]).path===!0)[0][1],e==null&&(e=null)}catch{e=null}return e}equals(e){return equals$R(this.bytes,e.bytes)}async resolve(e){const r=this.protos().find(o=>o.resolvable);if(r==null)return[this];const n=resolvers.get(r.name);if(n==null)throw errcode(new Error(`no available resolver for ${r.name}`),"ERR_NO_AVAILABLE_RESOLVER");return(await n(this,e)).map(o=>new DefaultMultiaddr(o))}nodeAddress(){const e=this.toOptions();if(e.transport!=="tcp"&&e.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${e.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:e.family,address:e.host,port:e.port}}isThinWaistAddress(e){const r=(e??this).protos();return!(r.length!==2||r[0].code!==4&&r[0].code!==41||r[1].code!==6&&r[1].code!==273)}[(_DefaultMultiaddr_string=new WeakMap,_DefaultMultiaddr_tuples=new WeakMap,_DefaultMultiaddr_stringTuples=new WeakMap,_a=symbol$1,inspect)](){return`Multiaddr(${bytesToString(this.bytes)})`}}function multiaddr(t){return new DefaultMultiaddr(t)}var Record;(function(t){let e;t.codec=()=>(e==null&&(e=message$2((r,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),r.key!=null&&(n.uint32(10),n.bytes(r.key)),r.value!=null&&(n.uint32(18),n.bytes(r.value)),r.author!=null&&(n.uint32(26),n.bytes(r.author)),r.signature!=null&&(n.uint32(34),n.bytes(r.signature)),r.timeReceived!=null&&(n.uint32(42),n.string(r.timeReceived)),o.lengthDelimited!==!1&&n.ldelim()},(r,n)=>{const o={},a=n==null?r.len:r.pos+n;for(;r.pos<a;){const c=r.uint32();switch(c>>>3){case 1:o.key=r.bytes();break;case 2:o.value=r.bytes();break;case 3:o.author=r.bytes();break;case 4:o.signature=r.bytes();break;case 5:o.timeReceived=r.string();break;default:r.skipType(c&7);break}}return o})),e),t.encode=r=>encodeMessage$2(r,t.codec()),t.decode=r=>decodeMessage$3(r,t.codec())})(Record||(Record={}));var Message$2;(function(t){(function(o){o.PUT_VALUE="PUT_VALUE",o.GET_VALUE="GET_VALUE",o.ADD_PROVIDER="ADD_PROVIDER",o.GET_PROVIDERS="GET_PROVIDERS",o.FIND_NODE="FIND_NODE",o.PING="PING"})(t.MessageType||(t.MessageType={}));let e;(function(o){o[o.PUT_VALUE=0]="PUT_VALUE",o[o.GET_VALUE=1]="GET_VALUE",o[o.ADD_PROVIDER=2]="ADD_PROVIDER",o[o.GET_PROVIDERS=3]="GET_PROVIDERS",o[o.FIND_NODE=4]="FIND_NODE",o[o.PING=5]="PING"})(e||(e={})),function(o){o.codec=()=>enumeration$2(e)}(t.MessageType||(t.MessageType={})),function(o){o.NOT_CONNECTED="NOT_CONNECTED",o.CONNECTED="CONNECTED",o.CAN_CONNECT="CAN_CONNECT",o.CANNOT_CONNECT="CANNOT_CONNECT"}(t.ConnectionType||(t.ConnectionType={}));let r;(function(o){o[o.NOT_CONNECTED=0]="NOT_CONNECTED",o[o.CONNECTED=1]="CONNECTED",o[o.CAN_CONNECT=2]="CAN_CONNECT",o[o.CANNOT_CONNECT=3]="CANNOT_CONNECT"})(r||(r={})),function(o){o.codec=()=>enumeration$2(r)}(t.ConnectionType||(t.ConnectionType={})),function(o){let a;o.codec=()=>(a==null&&(a=message$2((c,u,l={})=>{if(l.lengthDelimited!==!1&&u.fork(),c.id!=null&&(u.uint32(10),u.bytes(c.id)),c.addrs!=null)for(const f of c.addrs)u.uint32(18),u.bytes(f);c.connection!=null&&(u.uint32(24),t.ConnectionType.codec().encode(c.connection,u)),l.lengthDelimited!==!1&&u.ldelim()},(c,u)=>{const l={addrs:[]},f=u==null?c.len:c.pos+u;for(;c.pos<f;){const p=c.uint32();switch(p>>>3){case 1:l.id=c.bytes();break;case 2:l.addrs.push(c.bytes());break;case 3:l.connection=t.ConnectionType.codec().decode(c);break;default:c.skipType(p&7);break}}return l})),a),o.encode=c=>encodeMessage$2(c,o.codec()),o.decode=c=>decodeMessage$3(c,o.codec())}(t.Peer||(t.Peer={}));let n;t.codec=()=>(n==null&&(n=message$2((o,a,c={})=>{if(c.lengthDelimited!==!1&&a.fork(),o.type!=null&&(a.uint32(8),t.MessageType.codec().encode(o.type,a)),o.clusterLevelRaw!=null&&(a.uint32(80),a.int32(o.clusterLevelRaw)),o.key!=null&&(a.uint32(18),a.bytes(o.key)),o.record!=null&&(a.uint32(26),a.bytes(o.record)),o.closerPeers!=null)for(const u of o.closerPeers)a.uint32(66),t.Peer.codec().encode(u,a);if(o.providerPeers!=null)for(const u of o.providerPeers)a.uint32(74),t.Peer.codec().encode(u,a);c.lengthDelimited!==!1&&a.ldelim()},(o,a)=>{const c={closerPeers:[],providerPeers:[]},u=a==null?o.len:o.pos+a;for(;o.pos<u;){const l=o.uint32();switch(l>>>3){case 1:c.type=t.MessageType.codec().decode(o);break;case 10:c.clusterLevelRaw=o.int32();break;case 2:c.key=o.bytes();break;case 3:c.record=o.bytes();break;case 8:c.closerPeers.push(t.Peer.codec().decode(o,o.uint32()));break;case 9:c.providerPeers.push(t.Peer.codec().decode(o,o.uint32()));break;default:o.skipType(l&7);break}}return c})),n),t.encode=o=>encodeMessage$2(o,t.codec()),t.decode=o=>decodeMessage$3(o,t.codec())})(Message$2||(Message$2={}));const MESSAGE_TYPE=Message$2.MessageType,CONNECTION_TYPE=Message$2.ConnectionType,MESSAGE_TYPE_LOOKUP=Object.keys(MESSAGE_TYPE);let Message$1=class Mr{constructor(e,r,n){if(!(r instanceof Uint8Array))throw new Error("Key must be a Uint8Array");this.type=e,this.key=r,this.clusterLevelRaw=n,this.closerPeers=[],this.providerPeers=[],this.record=void 0}get clusterLevel(){const e=this.clusterLevelRaw-1;return e<0?0:e}set clusterLevel(e){this.clusterLevelRaw=e}serialize(){return Message$2.encode({key:this.key,type:this.type,clusterLevelRaw:this.clusterLevelRaw,closerPeers:this.closerPeers.map(toPbPeer),providerPeers:this.providerPeers.map(toPbPeer),record:this.record==null?void 0:this.record.serialize().subarray()})}static deserialize(e){const r=Message$2.decode(e),n=new Mr(r.type??Message$2.MessageType.PUT_VALUE,r.key??Uint8Array.from([]),r.clusterLevelRaw??0);return n.closerPeers=r.closerPeers.map(fromPbPeer),n.providerPeers=r.providerPeers.map(fromPbPeer),r.record?.length!=null&&(n.record=Libp2pRecord.deserialize(r.record)),n}};function toPbPeer(t){return{id:t.id.toBytes(),addrs:(t.multiaddrs??[]).map(e=>e.bytes),connection:CONNECTION_TYPE.CONNECTED}}function fromPbPeer(t){if(t.id==null)throw new Error("Invalid peer in message");return{id:peerIdFromBytes$1(t.id),multiaddrs:(t.addrs??[]).map(e=>multiaddr(e)),protocols:[]}}function sendingQueryEvent(t){return{...t,name:"SENDING_QUERY",type:0,messageName:t.type,messageType:MESSAGE_TYPE_LOOKUP.indexOf(t.type.toString())}}function peerResponseEvent(t){return{...t,name:"PEER_RESPONSE",type:1,messageName:t.messageType,closer:t.closer!=null?t.closer:[],providers:t.providers!=null?t.providers:[]}}function finalPeerEvent(t){return{...t,name:"FINAL_PEER",type:2}}function queryErrorEvent(t){return{...t,name:"QUERY_ERROR",type:3}}function providerEvent(t){return{...t,name:"PROVIDER",type:4}}function valueEvent(t){return{...t,name:"VALUE",type:5}}function dialingPeerEvent(t){return{...t,name:"DIALING_PEER",type:7}}let AbortError$3=class extends Error{constructor(t,e){super(t??"The operation was aborted"),this.type="aborted",this.code=e??"ABORT_ERR"}};function abortableSource$3(t,e,r){const n=r??{},o=getIterator(t);async function*a(){let c;const u=()=>{c?.()};for(e.addEventListener("abort",u);;){let l;try{if(e.aborted){const{abortMessage:p,abortCode:g}=n;throw new AbortError$3(p,g)}const f=new Promise((p,g)=>{c=()=>{const{abortMessage:$,abortCode:_}=n;g(new AbortError$3($,_))}});l=await Promise.race([f,o.next()]),c=null}catch(f){e.removeEventListener("abort",u);const p=f.type==="aborted"&&e.aborted;if(p&&n.onAbort!=null&&await n.onAbort(t),typeof o.return=="function")try{const g=o.return();g instanceof Promise&&g.catch($=>{n.onReturnError!=null&&n.onReturnError($)})}catch(g){n.onReturnError!=null&&n.onReturnError(g)}if(p&&n.returnOnAbort===!0)return;throw f}if(l.done===!0)break;yield l.value}e.removeEventListener("abort",u)}return a()}function abortableSink(t,e,r){return n=>t(abortableSource$3(n,e,r))}function abortableDuplex(t,e,r){return{sink:abortableSink(t.sink,e,{...r,onAbort:void 0}),source:abortableSource$3(t.source,e,r)}}let Network$2=class extends EventEmitter$1{constructor(t,e){super();const{protocol:r,lan:n}=e;this.components=t,this.log=logger$3(`libp2p:kad-dht:${n?"lan":"wan"}:network`),this.running=!1,this.protocol=r}async start(){this.running||(this.running=!0)}async stop(){this.running=!1}isStarted(){return this.running}async*sendRequest(t,e,r={}){if(this.running){this.log("sending %s to %p",e.type,t),yield dialingPeerEvent({peer:t}),yield sendingQueryEvent({to:t,type:e.type});try{const n=await(await this.components.connectionManager.openConnection(t,r)).newStream(this.protocol,r),o=await this._writeReadMessage(n,e.serialize(),r);yield peerResponseEvent({from:t,messageType:o.type,closer:o.closerPeers,providers:o.providerPeers,record:o.record})}catch(n){yield queryErrorEvent({from:t,error:n})}finally{}}}async*sendMessage(t,e,r={}){if(this.running){this.log("sending %s to %p",e.type,t),yield dialingPeerEvent({peer:t}),yield sendingQueryEvent({to:t,type:e.type});try{const n=await(await this.components.connectionManager.openConnection(t,r)).newStream(this.protocol,r);await this._writeMessage(n,e.serialize(),r),yield peerResponseEvent({from:t,messageType:e.type})}catch(n){yield queryErrorEvent({from:t,error:n})}finally{}}}async _writeMessage(t,e,r){r.signal!=null&&(t=abortableDuplex(t,r.signal)),await pipe$1([e],encode$9(),t,drain$1)}async _writeReadMessage(t,e,r){r.signal!=null&&(t=abortableDuplex(t,r.signal));const n=await pipe$1([e],encode$9(),t,decode$b(),async a=>{const c=await first$1(a);if(c!=null)return c;throw new CodeError$4("No message received","ERR_NO_MESSAGE_RECEIVED")}),o=Message$1.deserialize(n);return o.closerPeers.forEach(a=>{this.dispatchEvent(new CustomEvent("peer",{detail:a}))}),o.providerPeers.forEach(a=>{this.dispatchEvent(new CustomEvent("peer",{detail:a}))}),o}};var encode_1$2=encode$6,MSB$4=128,REST$4=127,MSBALL$2=~REST$4,INT$2=Math.pow(2,31);function encode$6(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$2;)e[r++]=t&255|MSB$4,t/=128;for(;t&MSBALL$2;)e[r++]=t&255|MSB$4,t>>>=7;return e[r]=t|0,encode$6.bytes=r-n+1,e}var decode$8=read$2,MSB$1$2=128,REST$1$2=127;function read$2(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$2.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$2)<<o:(c&REST$1$2)*Math.pow(2,o),o+=7}while(c>=MSB$1$2);return read$2.bytes=a-n,r}var N1$2=Math.pow(2,7),N2$2=Math.pow(2,14),N3$2=Math.pow(2,21),N4$2=Math.pow(2,28),N5$2=Math.pow(2,35),N6$2=Math.pow(2,42),N7$2=Math.pow(2,49),N8$2=Math.pow(2,56),N9$2=Math.pow(2,63),length$2=function(t){return t<N1$2?1:t<N2$2?2:t<N3$2?3:t<N4$2?4:t<N5$2?5:t<N6$2?6:t<N7$2?7:t<N8$2?8:t<N9$2?9:10},varint$3={encode:encode_1$2,decode:decode$8,encodingLength:length$2},_brrp_varint$1=varint$3;const encodeTo$1=(t,e,r=0)=>(_brrp_varint$1.encode(t,e,r),e),encodingLength$1=t=>_brrp_varint$1.encodingLength(t),create$3=(t,e)=>{const r=e.byteLength,n=encodingLength$1(t),o=n+encodingLength$1(r),a=new Uint8Array(o+r);return encodeTo$1(t,a,0),encodeTo$1(r,a,n),a.set(e,o),new Digest$1(t,r,e,a)};let Digest$1=class{constructor(t,e,r,n){this.code=t,this.size=e,this.digest=r,this.bytes=n}};const from$3=({name:t,code:e,encode:r})=>new Hasher$1(t,e,r);let Hasher$1=class{constructor(t,e,r){this.name=t,this.code=e,this.encode=r}digest(t){if(t instanceof Uint8Array){const e=this.encode(t);return e instanceof Uint8Array?create$3(this.code,e):e.then(r=>create$3(this.code,r))}else throw Error("Unknown type, must be binary type")}};const sha$1=t=>async e=>new Uint8Array(await crypto.subtle.digest(t,e)),sha256$2=from$3({name:"sha2-256",code:18,encode:sha$1("SHA-256")});async function verifyRecord(t,e){const r=e.key,n=toString$D(r).split("/");if(n.length<3)return;const o=t[n[1].toString()];if(o==null){const a="Invalid record keytype";throw new CodeError$4(a,"ERR_INVALID_RECORD_KEY_TYPE")}await o(r,e.value)}const validatePublicKeyRecord=async(t,e)=>{if(!(t instanceof Uint8Array))throw new CodeError$4('"key" must be a Uint8Array',"ERR_INVALID_RECORD_KEY_NOT_BUFFER");if(t.byteLength<5)throw new CodeError$4("invalid public key record","ERR_INVALID_RECORD_KEY_TOO_SHORT");if(toString$D(t.subarray(0,4))!=="/pk/")throw new CodeError$4("key was not prefixed with /pk/","ERR_INVALID_RECORD_KEY_BAD_PREFIX");const r=t.slice(4),n=await sha256$2.digest(e);if(!equals$R(r,n.bytes))throw new CodeError$4("public key does not match passed in key","ERR_INVALID_RECORD_HASH_MISMATCH")},validators={pk:validatePublicKeyRecord};function bestRecord(t,e,r){if(r.length===0){const a="No records given";throw new CodeError$4(a,"ERR_NO_RECORDS_RECEIVED")}const n=toString$D(e).split("/");if(n.length<3){const a="Record key does not have a selector function";throw new CodeError$4(a,"ERR_NO_SELECTOR_FUNCTION_FOR_RECORD_KEY")}const o=t[n[1].toString()];if(o==null){const a=`Unrecognized key prefix: ${n[1]}`;throw new CodeError$4(a,"ERR_UNRECOGNIZED_KEY_PREFIX")}return r.length===1?0:o(e,r)}function publickKey(t,e){return 0}const selectors={pk:publickKey};class ContentFetching{constructor(e,r){const{validators:n,selectors:o,peerRouting:a,queryManager:c,routingTable:u,network:l,lan:f}=r;this.components=e,this.log=logger$3(`libp2p:kad-dht:${f?"lan":"wan"}:content-fetching`),this.validators=n,this.selectors=o,this.peerRouting=a,this.queryManager=c,this.routingTable=u,this.network=l}async putLocal(e,r){const n=bufferToRecordKey(e);await this.components.datastore.put(n,r)}async getLocal(e){this.log("getLocal %b",e);const r=bufferToRecordKey(e);this.log("fetching record for key %k",r);const n=await this.components.datastore.get(r);this.log("found %k in local datastore",r);const o=Libp2pRecord.deserialize(n);return await verifyRecord(this.validators,o),o}async*sendCorrectionRecord(e,r,n,o={}){this.log("sendCorrection for %b",e);const a=createPutRecord(e,n);for(const{value:c,from:u}of r){if(equals$R(c,n)){this.log("record was ok");continue}if(this.components.peerId.equals(u)){try{const p=bufferToRecordKey(e);this.log(`Storing corrected record for key ${p.toString()}`),await this.components.datastore.put(p,a.subarray())}catch(p){this.log.error("Failed error correcting self",p)}continue}let l=!1;const f=new Message$1(MESSAGE_TYPE.PUT_VALUE,e,0);f.record=Libp2pRecord.deserialize(a);for await(const p of this.network.sendRequest(u,f,o))p.name==="PEER_RESPONSE"&&p.record!=null&&equals$R(p.record.value,Libp2pRecord.deserialize(a).value)&&(l=!0),yield p;l||(yield queryErrorEvent({from:u,error:new CodeError$4("value not put correctly","ERR_PUT_VALUE_INVALID")})),this.log.error("Failed error correcting entry")}}async*put(e,r,n={}){this.log("put key %b value %b",e,r);const o=createPutRecord(e,r),a=bufferToRecordKey(e);this.log(`storing record for key ${a.toString()}`),await this.components.datastore.put(a,o.subarray()),yield*pipe$1(this.peerRouting.getClosestPeers(e,{signal:n.signal}),c=>map$3(c,u=>async()=>{if(u.name!=="FINAL_PEER")return[u];const l=[],f=new Message$1(MESSAGE_TYPE.PUT_VALUE,e,0);f.record=Libp2pRecord.deserialize(o),this.log("send put to %p",u.peer.id);for await(const p of this.network.sendRequest(u.peer.id,f,n))l.push(p),p.name==="PEER_RESPONSE"&&(p.record!=null&&equals$R(p.record.value,Libp2pRecord.deserialize(o).value)||l.push(queryErrorEvent({from:u.peer.id,error:new CodeError$4("value not put correctly","ERR_PUT_VALUE_INVALID")})));return l}),c=>parallel(c,{ordered:!1,concurrency:ALPHA}),async function*(c){for await(const u of c)yield*u})}async*get(e,r={}){this.log("get %b",e);const n=[];for await(const u of this.getMany(e,r))u.name==="VALUE"&&n.push(u),yield u;if(n.length===0)return;const o=n.map(u=>u.value);let a=0;try{a=bestRecord(this.selectors,e,o)}catch(u){if(u.code!=="ERR_NO_SELECTOR_FUNCTION_FOR_RECORD_KEY")throw u}const c=o[a];if(this.log("GetValue %b %b",e,c),c==null)throw new CodeError$4("best value was not found","ERR_NOT_FOUND");yield*this.sendCorrectionRecord(e,n,c,r),yield n[a]}async*getMany(e,r={}){this.log("getMany values for %b",e);try{const u=await this.getLocal(e);yield valueEvent({value:u.value,from:this.components.peerId})}catch(u){this.log("error getting local value for %b",e,u)}const n=await convertBuffer(e),o=this.routingTable.closestPeers(n);this.log("found %d peers in routing table",o.length);const a=this,c=async function*({peer:u,signal:l}){for await(const f of a.peerRouting.getValueOrPeers(u,e,{signal:l}))yield f,f.name==="PEER_RESPONSE"&&f.record!=null&&(yield valueEvent({from:u,value:f.record.value}))};yield*this.queryManager.run(e,o,c,r)}}class ContentRouting{constructor(e,r){const{network:n,peerRouting:o,queryManager:a,routingTable:c,providers:u,lan:l}=r;this.components=e,this.log=logger$3(`libp2p:kad-dht:${l?"lan":"wan"}:content-routing`),this.network=n,this.peerRouting=o,this.queryManager=a,this.routingTable=c,this.providers=u}async*provide(e,r,n={}){this.log("provide %s",e),await this.providers.addProvider(e,this.components.peerId);const o=new Message$1(MESSAGE_TYPE.ADD_PROVIDER,e.multihash.bytes,0);o.providerPeers=[{id:this.components.peerId,multiaddrs:r,protocols:[]}];let a=0;const c=u=>async()=>{if(u.name!=="FINAL_PEER")return[u];const l=[];this.log("putProvider %s to %p",e,u.peer.id);try{this.log("sending provider record for %s to %p",e,u.peer.id);for await(const f of this.network.sendMessage(u.peer.id,o,n))f.name==="PEER_RESPONSE"&&(this.log("sent provider record for %s to %p",e,u.peer.id),a++),l.push(f)}catch(f){this.log.error("error sending provide record to peer %p",u.peer.id,f),l.push(queryErrorEvent({from:u.peer.id,error:f}))}return l};yield*pipe$1(this.peerRouting.getClosestPeers(e.multihash.bytes,n),u=>map$3(u,l=>c(l)),u=>parallel(u,{ordered:!1,concurrency:ALPHA}),async function*(u){for await(const l of u)yield*l}),this.log("sent provider records to %d peers",a)}async*findProviders(e,r){const n=this.routingTable.kBucketSize,o=e.multihash.bytes,a=await convertBuffer(o),c=this;this.log("findProviders %c",e);const u=await this.providers.getProviders(e);if(u.length>0){const p=[];for(const g of u.slice(0,n))p.push({id:g,multiaddrs:(await this.components.peerStore.addressBook.get(g)??[]).map($=>$.multiaddr),protocols:[]});yield peerResponseEvent({from:this.components.peerId,messageType:MESSAGE_TYPE.GET_PROVIDERS,providers:p}),yield providerEvent({from:this.components.peerId,providers:p})}if(u.length>=n)return;const l=async function*({peer:p,signal:g}){const $=new Message$1(MESSAGE_TYPE.GET_PROVIDERS,o,0);yield*c.network.sendRequest(p,$,{signal:g})},f=new Set(u.map(p=>p.toString()));for await(const p of this.queryManager.run(o,this.routingTable.closestPeers(a),l,r))if(yield p,p.name==="PEER_RESPONSE"){this.log("Found %d provider entries for %c and %d closer peers",p.providers.length,e,p.closer.length);const g=[];for(const $ of p.providers)f.has($.id.toString())||(f.add($.id.toString()),g.push($));if(g.length>0&&(yield providerEvent({from:p.from,providers:g})),f.size===n)return}}}class PeerDistanceList{constructor(e,r){this.originDhtKey=e,this.capacity=r,this.peerDistances=[]}get length(){return this.peerDistances.length}get peers(){return this.peerDistances.map(e=>e.peerId)}async add(e){if(this.peerDistances.find(o=>o.peerId.equals(e))!=null)return;const r=await convertPeerId(e),n={peerId:e,distance:xor(this.originDhtKey,r)};this.peerDistances.push(n),this.peerDistances.sort((o,a)=>compare$4(o.distance,a.distance)),this.peerDistances=this.peerDistances.slice(0,this.capacity)}async anyCloser(e){if(e.length===0)return!1;if(this.length===0)return!0;const r=await Promise.all(e.map(convertPeerId)),n=this.peerDistances[this.peerDistances.length-1].distance;for(const o of r){const a=xor(this.originDhtKey,o);if(compare$4(a,n)<0)return!0}return!1}}class PeerRouting{constructor(e,r){const{routingTable:n,network:o,validators:a,queryManager:c,lan:u}=r;this.components=e,this.routingTable=n,this.network=o,this.validators=a,this.queryManager=c,this.log=logger$3(`libp2p:kad-dht:${u?"lan":"wan"}:peer-routing`)}async findPeerLocal(e){let r;const n=await this.routingTable.find(e);if(n!=null){this.log("findPeerLocal found %p in routing table",e);try{r=await this.components.peerStore.get(n)}catch(o){if(o.code!=="ERR_NOT_FOUND")throw o}}if(r==null)try{r=await this.components.peerStore.get(e)}catch(o){if(o.code!=="ERR_NOT_FOUND")throw o}if(r!=null)return this.log("findPeerLocal found %p in peer store",e),{id:r.id,multiaddrs:r.addresses.map(o=>o.multiaddr),protocols:[]}}async*_getValueSingle(e,r,n={}){const o=new Message$1(MESSAGE_TYPE.GET_VALUE,r,0);yield*this.network.sendRequest(e,o,n)}async*getPublicKeyFromNode(e,r={}){const n=keyForPublicKey(e);for await(const o of this._getValueSingle(e,n,r))if(yield o,o.name==="PEER_RESPONSE"&&o.record!=null){const a=await peerIdFromKeys(marshalPublicKey({bytes:o.record.value}));if(!a.equals(e))throw new CodeError$4("public key does not match id","ERR_PUBLIC_KEY_DOES_NOT_MATCH_ID");if(a.publicKey==null)throw new CodeError$4("public key missing","ERR_PUBLIC_KEY_MISSING");yield valueEvent({from:e,value:a.publicKey})}throw new CodeError$4(`Node not responding with its public key: ${e.toString()}`,"ERR_INVALID_RECORD")}async*findPeer(e,r={}){this.log("findPeer %p",e);const n=await this.findPeerLocal(e);if(n!=null){this.log("found local"),yield finalPeerEvent({from:this.components.peerId,peer:n});return}const o=await convertPeerId(e),a=this.routingTable.closestPeers(o);if(a.find(f=>f.equals(e))!=null)try{const f=await this.components.peerStore.get(e);this.log("found in peerStore"),yield finalPeerEvent({from:this.components.peerId,peer:{id:f.id,multiaddrs:f.addresses.map(p=>p.multiaddr),protocols:[]}});return}catch(f){if(f.code!=="ERR_NOT_FOUND")throw f}const c=this,u=async function*({peer:f,signal:p}){const g=new Message$1(MESSAGE_TYPE.FIND_NODE,e.toBytes(),0);for await(const $ of c.network.sendRequest(f,g,{signal:p}))if(yield $,$.name==="PEER_RESPONSE"){const _=$.closer.find(b=>b.id.equals(e));_!=null&&(yield finalPeerEvent({from:$.from,peer:_}))}};let l=!1;for await(const f of this.queryManager.run(e.toBytes(),a,u,r))f.name==="FINAL_PEER"&&(l=!0),yield f;l||(yield queryErrorEvent({from:this.components.peerId,error:new CodeError$4("Not found","ERR_NOT_FOUND")}))}async*getClosestPeers(e,r={}){this.log("getClosestPeers to %b",e);const n=await convertBuffer(e),o=this.routingTable.closestPeers(n),a=this,c=new PeerDistanceList(n,this.routingTable.kBucketSize);await Promise.all(o.map(async l=>{await c.add(l)}));const u=async function*({peer:l,signal:f}){a.log("closerPeersSingle %s from %p",toString$D(e,"base32"),l);const p=new Message$1(MESSAGE_TYPE.FIND_NODE,e,0);yield*a.network.sendRequest(l,p,{signal:f})};for await(const l of this.queryManager.run(e,o,u,r))yield l,l.name==="PEER_RESPONSE"&&await Promise.all(l.closer.map(async f=>{await c.add(f.id)}));this.log("found %d peers close to %b",c.length,e);for(const l of c.peers)yield finalPeerEvent({from:this.components.peerId,peer:{id:l,multiaddrs:(await this.components.peerStore.addressBook.get(l)??[]).map(f=>f.multiaddr),protocols:[]}})}async*getValueOrPeers(e,r,n={}){for await(const o of this._getValueSingle(e,r,n)){if(o.name==="PEER_RESPONSE"&&o.record!=null)try{await this._verifyRecordOnline(o.record)}catch{const a="invalid record received, discarded";this.log(a),yield queryErrorEvent({from:o.from,error:new CodeError$4(a,"ERR_INVALID_RECORD")});continue}yield o}}async _verifyRecordOnline(e){if(e.timeReceived==null)throw new CodeError$4("invalid record received","ERR_INVALID_RECORD");await verifyRecord(this.validators,new Libp2pRecord(e.key,e.value,e.timeReceived))}async getCloserPeersOffline(e,r){const n=await convertBuffer(e),o=this.routingTable.closestPeers(n),a=[];for(const c of o)if(!c.equals(r))try{const u=await this.components.peerStore.addressBook.get(c),l=await this.components.peerStore.protoBook.get(c);a.push({id:c,multiaddrs:u.map(f=>f.multiaddr),protocols:l})}catch(u){if(u.code!=="ERR_NOT_FOUND")throw u}return a.length>0?this.log("getCloserPeersOffline found %d peer(s) closer to %b than %p",a.length,e,r):this.log("getCloserPeersOffline could not find peer closer to %b than %p",e,r),a}}const log$e=logger$3("libp2p:kad-dht:providers");class Providers{constructor(e,r={}){const{cacheSize:n,cleanupInterval:o,provideValidity:a}=r;this.components=e,this.cleanupInterval=o??PROVIDERS_CLEANUP_INTERVAL,this.provideValidity=a??PROVIDERS_VALIDITY,this.cache=cache$l(n??PROVIDERS_LRU_CACHE_SIZE),this.syncQueue=new PQueue$1({concurrency:1}),this.started=!1}isStarted(){return this.started}async start(){this.started||(this.started=!0,this.cleaner=setInterval(()=>{this._cleanup().catch(e=>{log$e.error(e)})},this.cleanupInterval))}async stop(){this.started=!1,this.cleaner!=null&&(clearInterval(this.cleaner),this.cleaner=void 0)}async _cleanup(){await this.syncQueue.add(async()=>{const e=Date.now();let r=0,n=0;const o=new Map,a=this.components.datastore.batch(),c=this.components.datastore.query({prefix:PROVIDER_KEY_PREFIX});for await(const u of c)try{const{cid:l,peerId:f}=parseProviderKey(u.key),p=readTime(u.value).getTime(),g=Date.now(),$=g-p,_=$>this.provideValidity;if(log$e("comparing: %d - %d = %d > %d %s",g,p,$,this.provideValidity,_?"(expired)":""),_){n++,a.delete(u.key);const b=o.get(l)??new Set;b.add(f),o.set(l,b)}r++}catch(l){log$e.error(l.message)}o.size>0?(log$e("deleting %d / %d entries",n,r),await a.commit()):log$e("nothing to delete");for(const[u,l]of o){const f=makeProviderKey(u),p=this.cache.get(f);if(p!=null){for(const g of l)p.delete(g);p.size===0?this.cache.remove(f):this.cache.set(f,p)}}log$e("Cleanup successful (%dms)",Date.now()-e)})}async _getProvidersMap(e){const r=makeProviderKey(e);let n=this.cache.get(r);return n==null&&(n=await loadProviders(this.components.datastore,e),this.cache.set(r,n)),n}async addProvider(e,r){await this.syncQueue.add(async()=>{log$e("%p provides %s",r,e);const n=await this._getProvidersMap(e);log$e("loaded %s provs",n.size);const o=new Date;n.set(r.toString(),o);const a=makeProviderKey(e);this.cache.set(a,n),await writeProviderEntry(this.components.datastore,e,r,o)})}async getProviders(e){return await this.syncQueue.add(async()=>(log$e("get providers for %s",e),[...(await this._getProvidersMap(e)).keys()].map(r=>peerIdFromString$1(r))),{throwOnTimeout:!0})}}function makeProviderKey(t){const e=typeof t=="string"?t:toString$D(t.multihash.bytes,"base32");return`${PROVIDER_KEY_PREFIX}/${e}`}async function writeProviderEntry(t,e,r,n){const o=[makeProviderKey(e),"/",r.toString()].join(""),a=new Key(o),c=Uint8Array.from(varint$w.encode(n.getTime()));await t.put(a,c)}function parseProviderKey(t){const e=t.toString().split("/");if(e.length!==5)throw new Error(`incorrectly formatted provider entry key in datastore: ${t.toString()}`);return{cid:e[3],peerId:e[4]}}async function loadProviders(t,e){const r=new Map,n=t.query({prefix:makeProviderKey(e)});for await(const o of n){const{peerId:a}=parseProviderKey(o.key);r.set(a,readTime(o.value))}return r}function readTime(t){return new Date(varint$w.decode(t))}const MAX_XOR=BigInt("0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF");async function*queryPath(t){const{key:e,startingPeer:r,ourPeerId:n,signal:o,query:a,alpha:c,pathIndex:u,numPaths:l,cleanUp:f,queryFuncTimeout:p,log:g,peersSeen:$}=t,_=new PQueue$1({concurrency:c}),b=await convertBuffer(e);function D(v,S){if(v==null)return;$.add(v);const I=BigInt("0x"+toString$D(xor(S,b),"base16"));_.add(async()=>{let R;const C=[o];p!=null&&(R=new timeoutAbortController.TimeoutController(p),C.push(R.signal));const T=anySignal_2(C);try{for await(const P of a({key:e,peer:v,signal:T,pathIndex:u,numPaths:l})){if(T.aborted)return;if(P.name==="PEER_RESPONSE")for(const E of P.closer){if($.has(E.id)){g("already seen %p in query",E.id);continue}if(n.equals(E.id)){g("not querying ourselves");continue}const A=await convertPeerId(E.id);if(BigInt("0x"+toString$D(xor(A,b),"base16"))>I){g("skipping %p as they are not closer to %b than %p",E.id,e,v);continue}g("querying closer peer %p",E.id),D(E.id,A)}_.emit("completed",P)}R?.clear()}catch(P){o.aborted?_.emit("error",P):_.emit("completed",queryErrorEvent({from:v,error:P}))}finally{R?.clear()}},{priority:MAX_XOR-I}).catch(R=>{g.error(R)})}D(r,await convertPeerId(r)),yield*toGenerator(_,o,f,g)}async function*toGenerator(t,e,r,n){let o=pDefer$1(),a=!0;const c=[],u=()=>{a&&(n("clean up queue, results %d, queue size %d, pending tasks %d",c.length,t.size,t.pending),a=!1,t.clear(),c.splice(0,c.length))};for(t.on("completed",l=>{c.push(l),o.resolve()}),t.on("error",l=>{n("queue error",l),u(),o.reject(l)}),t.on("idle",()=>{n("queue idle"),a=!1,o.resolve()}),e.addEventListener("abort",()=>{n("abort queue");const l=a;u(),l&&o.reject(new CodeError$4("Query aborted","ERR_QUERY_ABORTED"))}),r.addEventListener("cleanup",()=>{u(),o.resolve()});a;)for(await o.promise,o=pDefer$1();c.length>0;){const l=c.shift();l!=null&&(yield l)}yield*c}class QueryManager{constructor(e,r){const{lan:n=!1,disjointPaths:o=K,alpha:a=ALPHA}=r;this.components=e,this.disjointPaths=o??K,this.controllers=new Set,this.running=!1,this.alpha=a??ALPHA,this.lan=n,this.queries=0}isStarted(){return this.running}async start(){this.running=!0,this.components.metrics!=null&&this.metrics==null&&(this.metrics={runningQueries:this.components.metrics.registerMetric(`libp2p_kad_dht_${this.lan?"lan":"wan"}_running_queries`),queryTime:this.components.metrics.registerMetric(`libp2p_kad_dht_${this.lan?"lan":"wan"}_query_time_seconds`)})}async stop(){this.running=!1;for(const e of this.controllers)e.abort();this.controllers.clear()}async*run(e,r,n,o={}){if(!this.running)throw new Error("QueryManager not started");const a=this.metrics?.queryTime.timer();let c;if(o.signal==null){c=new timeoutAbortController.TimeoutController(DEFAULT_QUERY_TIMEOUT),o.signal=c.signal;try{eventsExports.setMaxListeners!=null&&eventsExports.setMaxListeners(1/0,c.signal)}catch{}}const u=new AbortController;this.controllers.add(u);const l=[u.signal];o.signal!=null&&l.push(o.signal);const f=anySignal_2(l);try{eventsExports.setMaxListeners!=null&&eventsExports.setMaxListeners(1/0,f)}catch{}const p=logger$3(`libp2p:kad-dht:${this.lan?"lan":"wan"}:query:`+toString$D(e,"base58btc")),g=r.slice(0,Math.min(this.disjointPaths,r.length)),$=Date.now(),_=new EventEmitter$1;try{if(p("query:start"),this.queries++,this.metrics?.runningQueries.update(this.queries),r.length===0){p.error("Running query with no peers");return}const b=new PeerSet,D=g.map((v,S)=>queryPath({key:e,startingPeer:v,ourPeerId:this.components.peerId,signal:f,query:n,pathIndex:S,numPaths:g.length,alpha:this.alpha,cleanUp:_,queryFuncTimeout:o.queryFuncTimeout,log:p,peersSeen:b}));for await(const v of merge$2(...D))yield v,v.name==="QUERY_ERROR"&&p("error",v.error)}catch(b){if(!(!this.running&&b.code==="ERR_QUERY_ABORTED"))throw b}finally{this.controllers.delete(u),c?.clear(),this.queries--,this.metrics?.runningQueries.update(this.queries),a?.(),_.dispatchEvent(new CustomEvent("cleanup")),p("query:done in %dms",Date.now()-$)}}}const log$d=logger$3("libp2p:kad-dht:rpc:handlers:add-provider");class AddProviderHandler{constructor(e){const{providers:r}=e;this.providers=r}async handle(e,r){if(log$d("start"),r.key==null||r.key.length===0)throw new CodeError$4("Missing key","ERR_MISSING_KEY");let n;try{n=CID$1.decode(r.key)}catch{throw new CodeError$4("Invalid CID","ERR_INVALID_CID")}(r.providerPeers==null||r.providerPeers.length===0)&&log$d.error("no providers found in message"),await Promise.all(r.providerPeers.map(async o=>{if(!o.id.equals(e)){log$d("invalid provider peer %p from %p",o.id,e);return}if(o.multiaddrs.length<1){log$d("no valid addresses for provider %p. Ignore",e);return}log$d("received provider %p for %s (addrs %s)",e,n,o.multiaddrs.map(a=>a.toString())),await this.providers.addProvider(n,o.id)}))}}const log$c=logger$3("libp2p:kad-dht:rpc:handlers:find-node");class FindNodeHandler{constructor(e,r){const{peerRouting:n,lan:o}=r;this.components=e,this.peerRouting=n,this.lan=!!o}async handle(e,r){log$c("incoming request from %p for peers closer to %b",e,r.key);let n=[];equals$R(this.components.peerId.toBytes(),r.key)?n=[{id:this.components.peerId,multiaddrs:this.components.addressManager.getAddresses().map(a=>a.decapsulateCode(getProtocol("p2p").code)),protocols:[]}]:n=await this.peerRouting.getCloserPeersOffline(r.key,e),n=n.map(this.lan?removePublicAddresses:removePrivateAddresses).filter(({multiaddrs:a})=>a.length);const o=new Message$1(r.type,new Uint8Array(0),r.clusterLevel);return n.length>0?o.closerPeers=n:log$c("could not find any peers closer to %b than %p",r.key,e),o}}const log$b=logger$3("libp2p:kad-dht:rpc:handlers:get-providers");class GetProvidersHandler{constructor(e,r){const{peerRouting:n,providers:o,lan:a}=r;this.components=e,this.peerRouting=n,this.providers=o,this.lan=!!a}async handle(e,r){let n;try{n=CID$1.decode(r.key)}catch{throw new CodeError$4("Invalid CID","ERR_INVALID_CID")}log$b("%p asking for providers for %s",e,n);const[o,a]=await Promise.all([this.providers.getProviders(n),this.peerRouting.getCloserPeersOffline(r.key,e)]),c=await this._getPeers(o),u=await this._getPeers(a.map(({id:f})=>f)),l=new Message$1(r.type,r.key,r.clusterLevel);return c.length>0&&(l.providerPeers=c),u.length>0&&(l.closerPeers=u),log$b("got %s providers %s closerPeers",c.length,u.length),l}async _getAddresses(e){return(await this.components.peerStore.addressBook.get(e)).map(r=>r.multiaddr)}async _getPeers(e){const r=[],n=this.lan?removePublicAddresses:removePrivateAddresses;for(const o of e){const a=n({id:o,multiaddrs:await this._getAddresses(o),protocols:[]});a.multiaddrs.length>0&&r.push(a)}return r}}const log$a=logger$3("libp2p:kad-dht:rpc:handlers:get-value");class GetValueHandler{constructor(e,r){const{peerRouting:n}=r;this.components=e,this.peerRouting=n}async handle(e,r){const n=r.key;if(log$a("%p asked for key %b",e,n),n==null||n.length===0)throw new CodeError$4("Invalid key","ERR_INVALID_KEY");const o=new Message$1(MESSAGE_TYPE.GET_VALUE,n,r.clusterLevel);if(isPublicKeyKey(n)){log$a("is public key");const u=fromPublicKeyKey(n);let l;try{const f=await this.components.peerStore.keyBook.get(u);if(f==null)throw new CodeError$4("No public key found in key book","ERR_NOT_FOUND");l=f}catch(f){if(f.code!=="ERR_NOT_FOUND")throw f}if(l!=null)return log$a("returning found public key"),o.record=new Libp2pRecord(n,l,new Date),o}const[a,c]=await Promise.all([this._checkLocalDatastore(n),this.peerRouting.getCloserPeersOffline(r.key,e)]);return a!=null&&(log$a("had record for %b in local datastore",n),o.record=a),c.length>0&&(log$a("had %s closer peers in routing table",c.length),o.closerPeers=c),o}async _checkLocalDatastore(e){log$a("checkLocalDatastore looking for %b",e);const r=bufferToRecordKey(e);let n;try{n=await this.components.datastore.get(r)}catch(a){if(a.code==="ERR_NOT_FOUND")return;throw a}const o=Libp2pRecord.deserialize(n);if(o==null)throw new CodeError$4("Invalid record","ERR_INVALID_RECORD");if(o.timeReceived==null||Date.now()-o.timeReceived.getTime()>MAX_RECORD_AGE){await this.components.datastore.delete(r);return}return o}}const log$9=logger$3("libp2p:kad-dht:rpc:handlers:ping");class PingHandler{async handle(e,r){return log$9("ping from %p",e),r}}class PutValueHandler{constructor(e,r){const{validators:n}=r;this.components=e,this.log=logger$3("libp2p:kad-dht:rpc:handlers:put-value"),this.validators=n}async handle(e,r){const n=r.key;this.log("%p asked us to store value for key %b",e,n);const o=r.record;if(o==null){const a=`Empty record from: ${e.toString()}`;throw this.log.error(a),new CodeError$4(a,"ERR_EMPTY_RECORD")}try{await verifyRecord(this.validators,o),o.timeReceived=new Date;const a=bufferToRecordKey(o.key);await this.components.datastore.put(a,o.serialize().subarray()),this.log("put record for %b into datastore under key %k",n,a)}catch(a){this.log("did not put record for key %b into datastore %o",n,a)}return r}}class RPC{constructor(e,r){const{providers:n,peerRouting:o,validators:a,lan:c}=r;this.log=logger$3("libp2p:kad-dht:rpc"),this.routingTable=r.routingTable,this.handlers={[MESSAGE_TYPE.GET_VALUE]:new GetValueHandler(e,{peerRouting:o}),[MESSAGE_TYPE.PUT_VALUE]:new PutValueHandler(e,{validators:a}),[MESSAGE_TYPE.FIND_NODE]:new FindNodeHandler(e,{peerRouting:o,lan:c}),[MESSAGE_TYPE.ADD_PROVIDER]:new AddProviderHandler({providers:n}),[MESSAGE_TYPE.GET_PROVIDERS]:new GetProvidersHandler(e,{peerRouting:o,providers:n,lan:c}),[MESSAGE_TYPE.PING]:new PingHandler}}async handleMessage(e,r){try{await this.routingTable.add(e)}catch(o){this.log.error("Failed to update the kbucket store",o)}const n=this.handlers[r.type];if(n==null){this.log.error(`no handler found for message type: ${r.type}`);return}return await n.handle(e,r)}onIncomingStream(e){Promise.resolve().then(async()=>{const{stream:r,connection:n}=e,o=n.remotePeer;try{await this.routingTable.add(o)}catch(c){this.log.error(c)}const a=this;await pipe$1(r,decode$b(),async function*(c){for await(const u of c){const l=Message$1.deserialize(u);a.log("incoming %s from %p",l.type,o);const f=await a.handleMessage(o,l);f!=null&&(yield f.serialize())}},encode$9(),r)}).catch(r=>{this.log.error(r)})}}class TopologyListener extends EventEmitter$1{constructor(e,r){super();const{protocol:n,lan:o}=r;this.components=e,this.log=logger$3(`libp2p:kad-dht:topology-listener:${o?"lan":"wan"}`),this.running=!1,this.protocol=n}isStarted(){return this.running}async start(){if(this.running)return;this.running=!0;const e=createTopology({onConnect:r=>{this.log("observed peer %p with protocol %s",r,this.protocol),this.dispatchEvent(new CustomEvent("peer",{detail:r}))}});this.registrarId=await this.components.registrar.register(this.protocol,e)}async stop(){this.running=!1,this.registrarId!=null&&(this.components.registrar.unregister(this.registrarId),this.registrarId=void 0)}}class QuerySelf{constructor(e,r){const{peerRouting:n,lan:o,count:a,interval:c,queryTimeout:u}=r;this.components=e,this.log=logger$3(`libp2p:kad-dht:${o?"lan":"wan"}:query-self`),this.running=!1,this.peerRouting=n,this.count=a??K,this.interval=c??QUERY_SELF_INTERVAL,this.queryTimeout=u??QUERY_SELF_TIMEOUT}isStarted(){return this.running}async start(){this.running||(this.running=!0,this._querySelf())}async stop(){this.running=!1,this.timeoutId!=null&&clearTimeout(this.timeoutId),this.controller!=null&&this.controller.abort()}_querySelf(){Promise.resolve().then(async()=>{const e=new timeoutAbortController.TimeoutController(this.queryTimeout);try{this.controller=new AbortController;const r=anySignal_2([this.controller.signal,e.signal]);try{eventsExports.setMaxListeners!=null&&eventsExports.setMaxListeners(1/0,r)}catch{}const n=await pipe$1(this.peerRouting.getClosestPeers(this.components.peerId.toBytes(),{signal:r}),o=>take(o,this.count),async o=>await length$f(o));this.log("query ran successfully - found %d peers",n)}catch(r){this.log("query error",r)}finally{this.timeoutId=setTimeout(this._querySelf.bind(this),this.interval),e.clear()}}).catch(e=>{this.log("query error",e)})}}const DEFAULT_MAX_INBOUND_STREAMS$1=32,DEFAULT_MAX_OUTBOUND_STREAMS$1=64;let KadDHT$1=class extends EventEmitter$1{constructor(t,e){super();const{kBucketSize:r,clientMode:n,validators:o,selectors:a,querySelfInterval:c,lan:u,protocolPrefix:l,pingTimeout:f,pingConcurrency:p,maxInboundStreams:g,maxOutboundStreams:$,providers:_}=e;this.running=!1,this.components=t,this.lan=!!u,this.log=logger$3(`libp2p:kad-dht:${u===!0?"lan":"wan"}`),this.protocol=`${l??PROTOCOL_PREFIX}${u===!0?LAN_PREFIX:""}${PROTOCOL_DHT}`,this.kBucketSize=r??20,this.clientMode=n??!0,this.maxInboundStreams=g??DEFAULT_MAX_INBOUND_STREAMS$1,this.maxOutboundStreams=$??DEFAULT_MAX_OUTBOUND_STREAMS$1,this.routingTable=new RoutingTable(t,{kBucketSize:r,lan:this.lan,pingTimeout:f,pingConcurrency:p,protocol:this.protocol}),this.providers=new Providers(t,_??{}),this.validators={...validators,...o},this.selectors={...selectors,...a},this.network=new Network$2(t,{protocol:this.protocol,lan:this.lan}),this.queryManager=new QueryManager(t,{disjointPaths:Math.ceil(this.kBucketSize/2),lan:u}),this.peerRouting=new PeerRouting(t,{routingTable:this.routingTable,network:this.network,validators:this.validators,queryManager:this.queryManager,lan:this.lan}),this.contentFetching=new ContentFetching(t,{validators:this.validators,selectors:this.selectors,peerRouting:this.peerRouting,queryManager:this.queryManager,routingTable:this.routingTable,network:this.network,lan:this.lan}),this.contentRouting=new ContentRouting(t,{network:this.network,peerRouting:this.peerRouting,queryManager:this.queryManager,routingTable:this.routingTable,providers:this.providers,lan:this.lan}),this.routingTableRefresh=new RoutingTableRefresh({peerRouting:this.peerRouting,routingTable:this.routingTable,lan:this.lan}),this.rpc=new RPC(t,{routingTable:this.routingTable,providers:this.providers,peerRouting:this.peerRouting,validators:this.validators,lan:this.lan}),this.topologyListener=new TopologyListener(t,{protocol:this.protocol,lan:this.lan}),this.querySelf=new QuerySelf(t,{peerRouting:this.peerRouting,interval:c,lan:this.lan}),this.network.addEventListener("peer",b=>{const D=b.detail;this.onPeerConnect(D).catch(v=>{this.log.error("could not add %p to routing table",D.id,v)}),this.dispatchEvent(new CustomEvent("peer",{detail:D}))}),this.topologyListener.addEventListener("peer",b=>{const D=b.detail;Promise.resolve().then(async()=>{const v=await this.components.peerStore.addressBook.get(D),S={id:D,multiaddrs:v.map(I=>I.multiaddr),protocols:[]};await this.onPeerConnect(S)}).catch(v=>{this.log.error("could not add %p to routing table",D,v)})})}get[symbol$6](){return!0}get[Symbol.toStringTag](){return"@libp2p/kad-dht"}async onPeerConnect(t){if(this.log("peer %p connected with protocols %s",t.id,t.protocols),this.lan?t=removePublicAddresses(t):t=removePrivateAddresses(t),t.multiaddrs.length===0){this.log("ignoring %p as they do not have any %s addresses in %s",t.id,this.lan?"private":"public",t.multiaddrs.map(e=>e.toString()));return}try{await this.routingTable.add(t.id)}catch(e){this.log.error("could not add %p to routing table",t.id,e)}}isStarted(){return this.running}async getMode(){return this.clientMode?"client":"server"}async setMode(t){await this.components.registrar.unhandle(this.protocol),t==="client"?(this.log("enabling client mode"),this.clientMode=!0):(this.log("enabling server mode"),this.clientMode=!1,await this.components.registrar.handle(this.protocol,this.rpc.onIncomingStream.bind(this.rpc),{maxInboundStreams:this.maxInboundStreams,maxOutboundStreams:this.maxOutboundStreams}))}async start(){this.running=!0,await this.setMode(this.clientMode?"client":"server"),await Promise.all([this.providers.start(),this.queryManager.start(),this.network.start(),this.routingTable.start(),this.topologyListener.start(),this.querySelf.start()]),await this.routingTableRefresh.start()}async stop(){this.running=!1,await Promise.all([this.providers.stop(),this.queryManager.stop(),this.network.stop(),this.routingTable.stop(),this.routingTableRefresh.stop(),this.topologyListener.stop(),this.querySelf.stop()])}async*put(t,e,r={}){yield*this.contentFetching.put(t,e,r)}async*get(t,e={}){yield*this.contentFetching.get(t,e)}async*provide(t,e={}){yield*this.contentRouting.provide(t,this.components.addressManager.getAddresses(),e)}async*findProviders(t,e={}){yield*this.contentRouting.findProviders(t,e)}async*findPeer(t,e={}){yield*this.peerRouting.findPeer(t,e)}async*getClosestPeers(t,e={}){yield*this.peerRouting.getClosestPeers(t,e)}async refreshRoutingTable(){this.routingTableRefresh.refreshTable(!0)}};const log$8=logger$3("libp2p:kad-dht");class DualKadDHT extends EventEmitter$1{constructor(e,r,n){super(),this.components=e,this.wan=r,this.lan=n,this.wan.addEventListener("peer",o=>{this.dispatchEvent(new CustomEvent("peer",{detail:o.detail}))}),this.lan.addEventListener("peer",o=>{this.dispatchEvent(new CustomEvent("peer",{detail:o.detail}))})}get[symbol$6](){return!0}get[Symbol.toStringTag](){return"@libp2p/dual-kad-dht"}isStarted(){return this.wan.isStarted()&&this.lan.isStarted()}async getMode(){return await this.wan.getMode()}async setMode(e){await this.wan.setMode(e)}async start(){await Promise.all([this.lan.start(),this.wan.start()])}async stop(){await Promise.all([this.lan.stop(),this.wan.stop()])}async*put(e,r,n={}){for await(const o of merge$2(this.lan.put(e,r,n),this.wan.put(e,r,n)))yield o}async*get(e,r={}){let n=!1,o=!1;for await(const a of merge$2(this.lan.get(e,r),this.wan.get(e,r)))yield a,a.name==="DIALING_PEER"&&(n=!0),a.name==="VALUE"&&(n=!0,a.value!=null&&(o=!0)),a.name==="SENDING_QUERY"&&(n=!0);if(!n)throw new CodeError$4("No peers found in routing table!","ERR_NO_PEERS_IN_ROUTING_TABLE");o||(yield queryErrorEvent({from:this.components.peerId,error:new CodeError$4("Not found","ERR_NOT_FOUND")}))}async*provide(e,r={}){let n=0,o=0;const a=[],c=[this.lan];await this.wan.getMode()==="server"&&c.push(this.wan);for await(const u of merge$2(...c.map(l=>l.provide(e,r))))yield u,u.name==="SENDING_QUERY"&&n++,u.name==="QUERY_ERROR"&&a.push(u.error),u.name==="PEER_RESPONSE"&&u.messageName==="ADD_PROVIDER"&&(log$8("sent provider record for %s to %p",e,u.from),o++);if(o===0)throw a.length>0?new CodeError$4(`Failed to provide to ${a.length} of ${n} peers`,"ERR_PROVIDES_FAILED",{errors:a}):new CodeError$4("Failed to provide - no peers found","ERR_PROVIDES_FAILED")}async*findProviders(e,r={}){yield*merge$2(this.lan.findProviders(e,r),this.wan.findProviders(e,r))}async*findPeer(e,r={}){let n=!1;for await(const o of merge$2(this.lan.findPeer(e,r),this.wan.findPeer(e,r)))yield o,(o.name==="SENDING_QUERY"||o.name==="FINAL_PEER")&&(n=!0);if(!n)throw new CodeError$4("Peer lookup failed","ERR_LOOKUP_FAILED")}async*getClosestPeers(e,r={}){yield*merge$2(this.lan.getClosestPeers(e,r),this.wan.getClosestPeers(e,r))}async refreshRoutingTable(){await Promise.all([this.lan.refreshRoutingTable(),this.wan.refreshRoutingTable()])}}class KadDHT extends DualKadDHT{constructor(e,r){super(e,new KadDHT$1(e,{protocolPrefix:"/ipfs",...r,lan:!1}),new KadDHT$1(e,{protocolPrefix:"/ipfs",...r,clientMode:!1,lan:!0}))}}function kadDHT(t){return e=>new KadDHT(e,t)}let DNS4,DNS6,DNSADDR,DNS,IP,TCP,UDP,UTP,QUIC,QUICV1,_WebSockets,WebSockets$1,_WebSocketsSecure,WebSocketsSecure,HTTP,HTTPS,_WebRTCDirect,WebRTCDirect,_WebTransport,WebTransport$1,Reliable,_P2P,_Circuit,CircuitRecursive,Circuit,P2P;DNS4=base$2("dns4"),DNS6=base$2("dns6"),DNSADDR=base$2("dnsaddr"),DNS=or$2(base$2("dns"),DNSADDR,DNS4,DNS6),IP=or$2(base$2("ip4"),base$2("ip6")),TCP=or$2(and(IP,base$2("tcp")),and(DNS,base$2("tcp"))),UDP=and(IP,base$2("udp")),UTP=and(UDP,base$2("utp")),QUIC=and(UDP,base$2("quic")),QUICV1=and(UDP,base$2("quic-v1")),_WebSockets=or$2(and(TCP,base$2("ws")),and(DNS,base$2("ws"))),WebSockets$1=or$2(and(_WebSockets,base$2("p2p")),_WebSockets),_WebSocketsSecure=or$2(and(TCP,base$2("wss")),and(DNS,base$2("wss")),and(TCP,base$2("tls"),base$2("ws")),and(DNS,base$2("tls"),base$2("ws"))),WebSocketsSecure=or$2(and(_WebSocketsSecure,base$2("p2p")),_WebSocketsSecure),HTTP=or$2(and(TCP,base$2("http")),and(IP,base$2("http")),and(DNS,base$2("http"))),HTTPS=or$2(and(TCP,base$2("https")),and(IP,base$2("https")),and(DNS,base$2("https"))),_WebRTCDirect=and(UDP,base$2("webrtc-direct"),base$2("certhash")),WebRTCDirect=or$2(and(_WebRTCDirect,base$2("p2p")),_WebRTCDirect),_WebTransport=and(QUICV1,base$2("webtransport"),base$2("certhash"),base$2("certhash")),WebTransport$1=or$2(and(_WebTransport,base$2("p2p")),_WebTransport),P2PWebRTCStar=or$2(and(WebSockets$1,base$2("p2p-webrtc-star"),base$2("p2p")),and(WebSocketsSecure,base$2("p2p-webrtc-star"),base$2("p2p")),and(WebSockets$1,base$2("p2p-webrtc-star")),and(WebSocketsSecure,base$2("p2p-webrtc-star"))),P2PWebRTCDirect=or$2(and(HTTP,base$2("p2p-webrtc-direct"),base$2("p2p")),and(HTTPS,base$2("p2p-webrtc-direct"),base$2("p2p")),and(HTTP,base$2("p2p-webrtc-direct")),and(HTTPS,base$2("p2p-webrtc-direct"))),Reliable=or$2(_WebSockets,_WebSocketsSecure,HTTP,HTTPS,P2PWebRTCStar,P2PWebRTCDirect,TCP,UTP,QUIC,DNS,WebRTCDirect,WebTransport$1),_P2P=or$2(and(Reliable,base$2("p2p")),P2PWebRTCStar,P2PWebRTCDirect,WebRTCDirect,WebTransport$1,base$2("p2p")),_Circuit=or$2(and(_P2P,base$2("p2p-circuit"),_P2P),and(_P2P,base$2("p2p-circuit")),and(base$2("p2p-circuit"),_P2P),and(Reliable,base$2("p2p-circuit")),and(base$2("p2p-circuit"),Reliable),base$2("p2p-circuit")),CircuitRecursive=()=>or$2(and(_Circuit,CircuitRecursive),_Circuit),Circuit=CircuitRecursive(),P2P=or$2(and(Circuit,_P2P,Circuit),and(_P2P,Circuit),and(Circuit,_P2P),Circuit,_P2P);function makeMatchesFunction(t){function e(r){let n;try{n=multiaddr$9(r)}catch{return!1}const o=t(n.protoNames());return o===null?!1:o===!0||o===!1?o:o.length===0}return e}function and(...t){function e(r){if(r.length<t.length)return null;let n=r;return t.some(o=>(n=typeof o=="function"?o().partialMatch(r):o.partialMatch(r),Array.isArray(n)&&(r=n),n===null)),n}return{toString:function(){return"{ "+t.join(" ")+" }"},input:t,matches:makeMatchesFunction(e),partialMatch:e}}function or$2(...t){function e(r){let n=null;return t.some(o=>{const a=typeof o=="function"?o().partialMatch(r):o.partialMatch(r);return a!=null?(n=a,!0):!1}),n}return{toString:function(){return"{ "+t.join(" ")+" }"},input:t,matches:makeMatchesFunction(e),partialMatch:e}}function base$2(t){const e=t;function r(o){let a;try{a=multiaddr$9(o)}catch{return!1}const c=a.protoNames();return c.length===1&&c[0]===e}function n(o){return o.length===0?null:o[0]===e?o.slice(1):null}return{toString:function(){return e},matches:r,partialMatch:n}}const log$7=logger$3("libp2p:bootstrap"),DEFAULT_BOOTSTRAP_TAG_NAME="bootstrap",DEFAULT_BOOTSTRAP_TAG_VALUE=50,DEFAULT_BOOTSTRAP_TAG_TTL=12e4,DEFAULT_BOOTSTRAP_DISCOVERY_TIMEOUT=1e3;class Bootstrap extends EventEmitter$1{constructor(e,r={list:[]}){if(r.list==null||r.list.length===0)throw new Error("Bootstrap requires a list of peer addresses");super(),this.components=e,this.timeout=r.timeout??DEFAULT_BOOTSTRAP_DISCOVERY_TIMEOUT,this.list=[];for(const n of r.list){if(!P2P.matches(n)){log$7.error("Invalid multiaddr");continue}const o=multiaddr$9(n),a=o.getPeerId();if(a==null){log$7.error("Invalid bootstrap multiaddr without peer id");continue}const c={id:peerIdFromString$1(a),multiaddrs:[o],protocols:[]};this.list.push(c)}this._init=r}get[symbol$6](){return!0}get[Symbol.toStringTag](){return"@libp2p/bootstrap"}isStarted(){return!!this.timer}start(){this.isStarted()||(log$7("Starting bootstrap node discovery, discovering peers after %s ms",this.timeout),this.timer=setTimeout(()=>{this._discoverBootstrapPeers().catch(e=>{log$7.error(e)})},this.timeout))}async _discoverBootstrapPeers(){if(this.timer!=null)for(const e of this.list){if(await this.components.peerStore.tagPeer(e.id,this._init.tagName??DEFAULT_BOOTSTRAP_TAG_NAME,{value:this._init.tagValue??DEFAULT_BOOTSTRAP_TAG_VALUE,ttl:this._init.tagTTL??DEFAULT_BOOTSTRAP_TAG_TTL}),this.timer==null)return;this.dispatchEvent(new CustomEvent("peer",{detail:e}))}}stop(){this.timer!=null&&clearTimeout(this.timer),this.timer=void 0}}Bootstrap.tag="bootstrap";function bootstrap(t){return e=>new Bootstrap(e,t)}const WebSocket$1=WebSocket;var dom={},eventIterator={};Object.defineProperty(eventIterator,"__esModule",{value:!0});class EventQueue{constructor(){this.pullQueue=[],this.pushQueue=[],this.eventHandlers={},this.isPaused=!1,this.isStopped=!1}push(e){if(this.isStopped)return;const r={value:e,done:!1};if(this.pullQueue.length){const n=this.pullQueue.shift();n&&n.resolve(r)}else this.pushQueue.push(Promise.resolve(r)),this.highWaterMark!==void 0&&this.pushQueue.length>=this.highWaterMark&&!this.isPaused&&(this.isPaused=!0,this.eventHandlers.highWater?this.eventHandlers.highWater():console&&console.warn(`EventIterator queue reached ${this.pushQueue.length} items`))}stop(){if(!this.isStopped){this.isStopped=!0,this.remove();for(const e of this.pullQueue)e.resolve({value:void 0,done:!0});this.pullQueue.length=0}}fail(e){if(!this.isStopped)if(this.isStopped=!0,this.remove(),this.pullQueue.length){for(const r of this.pullQueue)r.reject(e);this.pullQueue.length=0}else{const r=Promise.reject(e);r.catch(()=>{}),this.pushQueue.push(r)}}remove(){Promise.resolve().then(()=>{this.removeCallback&&this.removeCallback()})}[Symbol.asyncIterator](){return{next:e=>{const r=this.pushQueue.shift();return r?(this.lowWaterMark!==void 0&&this.pushQueue.length<=this.lowWaterMark&&this.isPaused&&(this.isPaused=!1,this.eventHandlers.lowWater&&this.eventHandlers.lowWater()),r):this.isStopped?Promise.resolve({value:void 0,done:!0}):new Promise((n,o)=>{this.pullQueue.push({resolve:n,reject:o})})},return:()=>(this.isStopped=!0,this.pushQueue.length=0,this.remove(),Promise.resolve({value:void 0,done:!0}))}}}let EventIterator$1=class{constructor(t,{highWaterMark:e=100,lowWaterMark:r=1}={}){const n=new EventQueue;n.highWaterMark=e,n.lowWaterMark=r,n.removeCallback=t({push:o=>n.push(o),stop:()=>n.stop(),fail:o=>n.fail(o),on:(o,a)=>{n.eventHandlers[o]=a}})||(()=>{}),this[Symbol.asyncIterator]=()=>n[Symbol.asyncIterator](),Object.freeze(this)}};eventIterator.EventIterator=EventIterator$1,eventIterator.default=EventIterator$1,Object.defineProperty(dom,"__esModule",{value:!0});const event_iterator_1=eventIterator;var EventIterator=dom.EventIterator=event_iterator_1.EventIterator;function subscribe(t,e,r){return new event_iterator_1.EventIterator(({push:n})=>(this.addEventListener(t,n,e),()=>this.removeEventListener(t,n,e)),r)}dom.subscribe=subscribe,dom.default=event_iterator_1.EventIterator;function isArrayBuffer(t){return t instanceof ArrayBuffer||t?.constructor?.name==="ArrayBuffer"&&typeof t?.byteLength=="number"}const source=t=>{t.binaryType="arraybuffer";const e=async()=>await new Promise((a,c)=>{if(n)return a();if(o!=null)return c(o);const u=p=>{t.removeEventListener("open",l),t.removeEventListener("error",f),p()},l=()=>u(a),f=p=>{u(()=>c(p.error??new Error(`connect ECONNREFUSED ${t.url}`)))};t.addEventListener("open",l),t.addEventListener("error",f)}),r=async function*(){const a=new EventIterator(({push:c,stop:u,fail:l})=>{const f=g=>{let $=null;typeof g.data=="string"&&($=fromString$y(g.data)),isArrayBuffer(g.data)&&($=new Uint8Array(g.data)),g.data instanceof Uint8Array&&($=g.data),$!=null&&c($)},p=g=>l(g.error??new Error("Socket error"));return t.addEventListener("message",f),t.addEventListener("error",p),t.addEventListener("close",u),()=>{t.removeEventListener("message",f),t.removeEventListener("error",p),t.removeEventListener("close",u)}},{highWaterMark:1/0});await e();for await(const c of a)yield isArrayBuffer(c)?new Uint8Array(c):c}();let n=t.readyState===1,o;return t.addEventListener("open",()=>{n=!0,o=null}),t.addEventListener("close",()=>{n=!1,o=null}),t.addEventListener("error",a=>{n||(o=a.error??new Error(`connect ECONNREFUSED ${t.url}`))}),Object.assign(r,{connected:e})},ready=t=>{if(t.readyState>=2)throw new Error("socket closed");if(t.readyState!==1)return new Promise((e,r)=>{function n(){t.removeEventListener("open",o),t.removeEventListener("error",a)}function o(){n(),e()}function a(c){n(),r(c.error??new Error(`connect ECONNREFUSED ${t.url}`))}t.addEventListener("open",o),t.addEventListener("error",a)})},sink=(t,e)=>(e=e??{},e.closeOnEnd=e.closeOnEnd!==!1,async r=>{for await(const n of r){try{await ready(t)}catch(o){if(o.message==="socket closed")break;throw o}t.send(n)}if(e.closeOnEnd!=null&&t.readyState<=1)return await new Promise((n,o)=>{t.addEventListener("close",a=>{if(a.wasClean||a.code===1006)n();else{const c=Object.assign(new Error("ws error"),{event:a});o(c)}}),setTimeout(()=>t.close())})}),duplex=(t,e)=>{e=e??{};const r=source(t);let n=e.remoteAddress,o=e.remotePort;if(t.url!=null)try{const a=new URL(t.url);n=a.hostname,o=parseInt(a.port,10)}catch{}if(n==null||o==null)throw new Error("Remote connection did not have address and/or port");return{sink:sink(t,e),source:r,connected:async()=>await r.connected(),close:async()=>{(t.readyState===t.CONNECTING||t.readyState===t.OPEN)&&await new Promise(a=>{t.addEventListener("close",()=>{a()}),t.close()})},destroy:()=>{t.terminate!=null?t.terminate():t.close()},remoteAddress:n,remotePort:o,socket:t}},map={http:"ws",https:"wss"},def="ws",wsurl=(t,e)=>isoUrl.relative(t,e,map,def);function connect(t,e){const r=typeof window>"u"?"":window.location;e=e??{};const n=wsurl(t,r.toString()),o=new WebSocket$1(n,e.websocket);return duplex(o,e)}function createListener(){throw new Error("WebSocket Servers can not be created in the browser!")}let AbortError$2=class extends Error{constructor(t,e){super(t??"The operation was aborted"),this.type="aborted",this.code=e??"ABORT_ERR"}};function abortableSource$2(t,e,r){const n=r??{},o=getIterator(t);async function*a(){let c;const u=()=>{c?.()};for(e.addEventListener("abort",u);;){let l;try{if(e.aborted){const{abortMessage:p,abortCode:g}=n;throw new AbortError$2(p,g)}const f=new Promise((p,g)=>{c=()=>{const{abortMessage:$,abortCode:_}=n;g(new AbortError$2($,_))}});l=await Promise.race([f,o.next()]),c=null}catch(f){e.removeEventListener("abort",u);const p=f.type==="aborted"&&e.aborted;if(p&&n.onAbort!=null&&await n.onAbort(t),typeof o.return=="function")try{const g=o.return();g instanceof Promise&&g.catch($=>{n.onReturnError!=null&&n.onReturnError($)})}catch(g){n.onReturnError!=null&&n.onReturnError(g)}if(p&&n.returnOnAbort===!0)return;throw f}if(l.done===!0)break;yield l.value}e.removeEventListener("abort",u)}return a()}const CODE_P2P=421,CODE_CIRCUIT=290,CLOSE_TIMEOUT=2e3,log$6=logger$3("libp2p:websockets:socket");function socketToMaConn(t,e,r){r=r??{};const n={async sink(o){r?.signal!=null&&(o=abortableSource$2(o,r.signal));try{await t.sink(o)}catch(a){a.type!=="aborted"&&log$6.error(a)}},source:r.signal!=null?abortableSource$2(t.source,r.signal):t.source,remoteAddr:e,timeline:{open:Date.now()},async close(){const o=Date.now();try{await pTimeout$1(t.close(),{milliseconds:CLOSE_TIMEOUT})}catch{const{host:a,port:c}=n.remoteAddr.toOptions();log$6("timeout closing stream to %s:%s after %dms, destroying it manually",a,c,Date.now()-o),t.destroy()}finally{n.timeline.close=Date.now()}}};return t.socket.addEventListener("close",()=>{n.timeline.close==null&&(n.timeline.close=Date.now())},{once:!0}),n}function all(t){return t.filter(e=>{if(e.protoCodes().includes(CODE_CIRCUIT))return!1;const r=e.decapsulateCode(CODE_P2P);return WebSockets$1.matches(r)||WebSocketsSecure.matches(r)})}function wss(t){return t.filter(e=>{if(e.protoCodes().includes(CODE_CIRCUIT))return!1;const r=e.decapsulateCode(CODE_P2P);return WebSocketsSecure.matches(r)})}const log$5=logger$3("libp2p:websockets");class WebSockets{constructor(e){this.init=e}get[Symbol.toStringTag](){return"@libp2p/websockets"}get[symbol$7](){return!0}async dial(e,r){log$5("dialing %s",e),r=r??{};const n=await this._connect(e,r),o=socketToMaConn(n,e);log$5("new outbound connection %s",o.remoteAddr);const a=await r.upgrader.upgradeOutbound(o);return log$5("outbound connection %s upgraded",o.remoteAddr),a}async _connect(e,r){if(r?.signal?.aborted===!0)throw new AbortError$c;const n=e.toOptions();log$5("dialing %s:%s",n.host,n.port);const o=pDefer$1(),a=f=>{log$5.error("connection error:",f),o.reject(f)},c=connect(multiaddrToUri(e),this.init);if(c.socket.on!=null?c.socket.on("error",a):c.socket.onerror=a,r.signal==null)return await Promise.race([c.connected(),o.promise]),log$5("connected %s",e),c;let u;const l=new Promise((f,p)=>{if(u=()=>{p(new AbortError$c),c.close().catch(g=>{log$5.error("error closing raw socket",g)})},r?.signal?.aborted===!0){u();return}r?.signal?.addEventListener("abort",u)});try{await Promise.race([l,o.promise,c.connected()])}finally{u!=null&&r?.signal?.removeEventListener("abort",u)}return log$5("connected %s",e),c}createListener(e){return createListener({...this.init,...e})}filter(e){return e=Array.isArray(e)?e:[e],this.init?.filter!=null?this.init?.filter(e):isBrowser$2||isWebWorker$1?wss(e):all(e)}}webSockets=function(t={}){return()=>new WebSockets(t)};let AbortError$1=class extends Error{constructor(t,e){super(t??"The operation was aborted"),this.type="aborted",this.code=e??"ABORT_ERR"}};function abortableSource$1(t,e,r){const n=r??{},o=getIterator(t);async function*a(){let c;const u=()=>{c?.()};for(e.addEventListener("abort",u);;){let l;try{if(e.aborted){const{abortMessage:p,abortCode:g}=n;throw new AbortError$1(p,g)}const f=new Promise((p,g)=>{c=()=>{const{abortMessage:$,abortCode:_}=n;g(new AbortError$1($,_))}});l=await Promise.race([f,o.next()]),c=null}catch(f){e.removeEventListener("abort",u);const p=f.type==="aborted"&&e.aborted;if(p&&n.onAbort!=null&&await n.onAbort(t),typeof o.return=="function")try{const g=o.return();g instanceof Promise&&g.catch($=>{n.onReturnError!=null&&n.onReturnError($)})}catch(g){n.onReturnError!=null&&n.onReturnError(g)}if(p&&n.returnOnAbort===!0)return;throw f}if(l.done===!0)break;yield l.value}e.removeEventListener("abort",u)}return a()}function allocUnsafe$2(t){return new Uint8Array(t)}var MessageTypes;(function(t){t[t.NEW_STREAM=0]="NEW_STREAM",t[t.MESSAGE_RECEIVER=1]="MESSAGE_RECEIVER",t[t.MESSAGE_INITIATOR=2]="MESSAGE_INITIATOR",t[t.CLOSE_RECEIVER=3]="CLOSE_RECEIVER",t[t.CLOSE_INITIATOR=4]="CLOSE_INITIATOR",t[t.RESET_RECEIVER=5]="RESET_RECEIVER",t[t.RESET_INITIATOR=6]="RESET_INITIATOR"})(MessageTypes||(MessageTypes={}));const MessageTypeNames=Object.freeze({0:"NEW_STREAM",1:"MESSAGE_RECEIVER",2:"MESSAGE_INITIATOR",3:"CLOSE_RECEIVER",4:"CLOSE_INITIATOR",5:"RESET_RECEIVER",6:"RESET_INITIATOR"}),InitiatorMessageTypes=Object.freeze({NEW_STREAM:MessageTypes.NEW_STREAM,MESSAGE:MessageTypes.MESSAGE_INITIATOR,CLOSE:MessageTypes.CLOSE_INITIATOR,RESET:MessageTypes.RESET_INITIATOR}),ReceiverMessageTypes=Object.freeze({MESSAGE:MessageTypes.MESSAGE_RECEIVER,CLOSE:MessageTypes.CLOSE_RECEIVER,RESET:MessageTypes.RESET_RECEIVER}),DEFAULT_BATCH_SIZE=1024*1024,DEFAULT_SERIALIZE=(t,e)=>{e.append(t)};async function*batchedBytes(t,e={}){let r=new Uint8ArrayList,n=!1,o=pDefer$1(),a=Number(e.size??DEFAULT_BATCH_SIZE);(isNaN(a)||a===0||a<0)&&(a=DEFAULT_BATCH_SIZE);const c=e.yieldAfter??0,u=e.serialize??DEFAULT_SERIALIZE;for(Promise.resolve().then(async()=>{try{let l;for await(const f of t){if(u(f,r),r.byteLength>=a){clearTimeout(l),o.resolve();continue}l=setTimeout(()=>{o.resolve()},c)}clearTimeout(l),o.resolve()}catch(l){o.reject(l)}finally{n=!0}});!n;)if(await o.promise,o=pDefer$1(),r.byteLength>0){const l=r;r=new Uint8ArrayList,yield l.subarray()}}const POOL_SIZE=10*1024;let Encoder$2=class{constructor(){this._pool=allocUnsafe$2(POOL_SIZE),this._poolOffset=0}write(t,e){const r=this._pool;let n=this._poolOffset;varint$w.encode(t.id<<3|t.type,r,n),n+=varint$w.encode.bytes??0,(t.type===MessageTypes.NEW_STREAM||t.type===MessageTypes.MESSAGE_INITIATOR||t.type===MessageTypes.MESSAGE_RECEIVER)&&t.data!=null?varint$w.encode(t.data.length,r,n):varint$w.encode(0,r,n),n+=varint$w.encode.bytes??0;const o=r.subarray(this._poolOffset,n);POOL_SIZE-n<100?(this._pool=allocUnsafe$2(POOL_SIZE),this._poolOffset=0):this._poolOffset=n,e.append(o),(t.type===MessageTypes.NEW_STREAM||t.type===MessageTypes.MESSAGE_INITIATOR||t.type===MessageTypes.MESSAGE_RECEIVER)&&t.data!=null&&e.append(t.data)}};const encoder=new Encoder$2;async function*encode$5(t,e=0){if(e==null||e===0){for await(const r of t){const n=new Uint8ArrayList;for(const o of r)encoder.write(o,n);yield n.subarray()}return}yield*batchedBytes(t,{size:e,serialize:(r,n)=>{for(const o of r)encoder.write(o,n)}})}const MAX_MSG_SIZE=1<<20,MAX_MSG_QUEUE_SIZE=4<<20;let Decoder$2=class{constructor(t=MAX_MSG_SIZE,e=MAX_MSG_QUEUE_SIZE){this._buffer=new Uint8ArrayList,this._headerInfo=null,this._maxMessageSize=t,this._maxUnprocessedMessageQueueSize=e}write(t){if(t==null||t.length===0)return[];if(this._buffer.append(t),this._buffer.byteLength>this._maxUnprocessedMessageQueueSize)throw Object.assign(new Error("unprocessed message queue size too large!"),{code:"ERR_MSG_QUEUE_TOO_BIG"});const e=[];for(;this._buffer.length!==0;){if(this._headerInfo==null)try{this._headerInfo=this._decodeHeader(this._buffer)}catch(u){if(u.code==="ERR_MSG_TOO_BIG")throw u;break}const{id:r,type:n,length:o,offset:a}=this._headerInfo;if(this._buffer.length-a<o)break;const c={id:r,type:n};(n===MessageTypes.NEW_STREAM||n===MessageTypes.MESSAGE_INITIATOR||n===MessageTypes.MESSAGE_RECEIVER)&&(c.data=this._buffer.sublist(a,a+o)),e.push(c),this._buffer.consume(a+o),this._headerInfo=null}return e}_decodeHeader(t){const{value:e,offset:r}=readVarInt(t),{value:n,offset:o}=readVarInt(t,r),a=e&7;if(MessageTypeNames[a]==null)throw new Error(`Invalid type received: ${a}`);if(n>this._maxMessageSize)throw Object.assign(new Error("message size too large!"),{code:"ERR_MSG_TOO_BIG"});return{id:e>>3,type:a,offset:r+o,length:n}}};const MSB$3=128,REST$3=127;function readVarInt(t,e=0){let r=0,n=0,o=e,a;const c=t.length;do{if(o>=c||n>49)throw e=0,new RangeError("Could not decode varint");a=t.get(o++),r+=n<28?(a&REST$3)<<n:(a&REST$3)*Math.pow(2,n),n+=7}while(a>=MSB$3);return e=o-e,{value:r,offset:e}}function anySignal(t){const e=new globalThis.AbortController;function r(){e.abort();for(const a of t)a?.removeEventListener!=null&&a.removeEventListener("abort",r)}for(const a of t){if(a?.aborted===!0){r();break}a?.addEventListener!=null&&a.addEventListener("abort",r)}function n(){for(const a of t)a?.removeEventListener!=null&&a.removeEventListener("abort",r)}const o=e.signal;return o.clear=n,o}const log$4=logger$3("libp2p:mplex:stream"),ERR_STREAM_RESET="ERR_STREAM_RESET",ERR_STREAM_ABORT="ERR_STREAM_ABORT",ERR_SINK_ENDED="ERR_SINK_ENDED",ERR_DOUBLE_SINK="ERR_DOUBLE_SINK";function createStream(t){const{id:e,name:r,send:n,onEnd:o,type:a="initiator",maxMsgSize:c=MAX_MSG_SIZE}=t,u=new AbortController,l=new AbortController,f=new AbortController,p=a==="initiator"?InitiatorMessageTypes:ReceiverMessageTypes,g=a==="initiator"?`i${e}`:`r${e}`,$=`${r??e}`;let _=!1,b=!1,D=!1,v;const S={open:Date.now()},I=P=>{_||(_=!0,log$4.trace("%s stream %s source end - err: %o",a,$,P),P!=null&&v==null&&(v=P),b&&(T.stat.timeline.close=Date.now(),o?.(v)))},R=P=>{b||(b=!0,log$4.trace("%s stream %s sink end - err: %o",a,$,P),P!=null&&v==null&&(v=P),_&&(S.close=Date.now(),o?.(v)))},C=pushable({onEnd:I}),T={close:()=>{log$4.trace("%s stream %s close",a,$),T.closeRead(),T.closeWrite()},closeRead:()=>{log$4.trace("%s stream %s closeRead",a,$),!_&&C.end()},closeWrite:()=>{if(log$4.trace("%s stream %s closeWrite",a,$),!b){f.abort();try{n({id:e,type:p.CLOSE})}catch(P){log$4.trace("%s stream %s error sending close",a,r,P)}R()}},abort:P=>{log$4.trace("%s stream %s abort",a,$,P),C.end(P),u.abort(),R(P)},reset:()=>{const P=new CodeError$4("stream reset",ERR_STREAM_RESET);l.abort(),C.end(P),R(P)},sink:async P=>{if(D)throw new CodeError$4("sink already called on stream",ERR_DOUBLE_SINK);if(D=!0,b)throw new CodeError$4("stream closed for writing",ERR_SINK_ENDED);const E=anySignal([u.signal,l.signal,f.signal]);try{P=abortableSource$1(P,E),a==="initiator"&&n({id:e,type:InitiatorMessageTypes.NEW_STREAM,data:new Uint8ArrayList(fromString$y($))});for await(let A of P)for(;A.length>0;){if(A.length<=c){n({id:e,type:p.MESSAGE,data:A instanceof Uint8Array?new Uint8ArrayList(A):A});break}A=A instanceof Uint8Array?new Uint8ArrayList(A):A,n({id:e,type:p.MESSAGE,data:A.sublist(0,c)}),A.consume(c)}}catch(A){if(A.type==="aborted"&&A.message==="The operation was aborted"){if(f.signal.aborted)return;l.signal.aborted&&(A.message="stream reset",A.code=ERR_STREAM_RESET),u.signal.aborted&&(A.message="stream aborted",A.code=ERR_STREAM_ABORT)}if(A.code===ERR_STREAM_RESET)log$4.trace("%s stream %s reset",a,r);else{log$4.trace("%s stream %s error",a,r,A);try{n({id:e,type:p.RESET})}catch(k){log$4.trace("%s stream %s error sending reset",a,r,k)}}C.end(A),R(A);return}finally{E.clear()}try{n({id:e,type:p.CLOSE})}catch(A){log$4.trace("%s stream %s error sending close",a,r,A)}R()},source:C,sourcePush:P=>{C.push(P)},sourceReadableLength(){return C.readableLength},stat:{direction:a==="initiator"?"outbound":"inbound",timeline:S},metadata:{},id:g};return T}const log$3=logger$3("libp2p:mplex"),MAX_STREAMS_INBOUND_STREAMS_PER_CONNECTION=1024,MAX_STREAMS_OUTBOUND_STREAMS_PER_CONNECTION=1024,MAX_STREAM_BUFFER_SIZE=1024*1024*4,DISCONNECT_THRESHOLD=5;function printMessage(t){const e={...t,type:`${MessageTypeNames[t.type]} (${t.type})`};return t.type===MessageTypes.NEW_STREAM&&(e.data=toString$D(t.data instanceof Uint8Array?t.data:t.data.subarray())),(t.type===MessageTypes.MESSAGE_INITIATOR||t.type===MessageTypes.MESSAGE_RECEIVER)&&(e.data=toString$D(t.data instanceof Uint8Array?t.data:t.data.subarray(),"base16")),e}class MplexStreamMuxer{constructor(e){this.protocol="/mplex/6.7.0",e=e??{},this._streamId=0,this._streams={initiators:new Map,receivers:new Map},this._init=e,this.sink=this._createSink();const r=this._createSource();this._source=r,this.source=r,this.closeController=new AbortController,this.rateLimiter=new rateLimiterFlexible.RateLimiterMemory({points:e.disconnectThreshold??DISCONNECT_THRESHOLD,duration:1})}get streams(){const e=[];for(const r of this._streams.initiators.values())e.push(r);for(const r of this._streams.receivers.values())e.push(r);return e}newStream(e){if(this.closeController.signal.aborted)throw new Error("Muxer already closed");const r=this._streamId++;e=e==null?r.toString():e.toString();const n=this._streams.initiators;return this._newStream({id:r,name:e,type:"initiator",registry:n})}close(e){this.closeController.signal.aborted||(e!=null?this.streams.forEach(r=>{r.abort(e)}):this.streams.forEach(r=>{r.close()}),this.closeController.abort())}_newReceiverStream(e){const{id:r,name:n}=e,o=this._streams.receivers;return this._newStream({id:r,name:n,type:"receiver",registry:o})}_newStream(e){const{id:r,name:n,type:o,registry:a}=e;if(log$3("new %s stream %s",o,r),o==="initiator"&&this._streams.initiators.size===(this._init.maxOutboundStreams??MAX_STREAMS_OUTBOUND_STREAMS_PER_CONNECTION))throw new CodeError$4("Too many outbound streams open","ERR_TOO_MANY_OUTBOUND_STREAMS");if(a.has(r))throw new Error(`${o} stream ${r} already exists!`);const c=createStream({id:r,name:n,send:u=>{log$3.enabled&&log$3.trace("%s stream %s send",o,r,printMessage(u)),this._source.push(u)},type:o,onEnd:()=>{log$3("%s stream with id %s and protocol %s ended",o,r,c.stat.protocol),a.delete(r),this._init.onStreamEnd!=null&&this._init.onStreamEnd(c)},maxMsgSize:this._init.maxMsgSize});return a.set(r,c),c}_createSink(){return async e=>{const r=anySignal([this.closeController.signal,this._init.signal]);try{e=abortableSource$1(e,r);const n=new Decoder$2(this._init.maxMsgSize,this._init.maxUnprocessedMessageQueueSize);for await(const o of e)for(const a of n.write(o))await this._handleIncoming(a);this._source.end()}catch(n){log$3("error in sink",n),this._source.end(n)}finally{r.clear()}}}_createSource(){const e=pushableV({objectMode:!0,onEnd:r=>{this.close(r)}});return Object.assign(encode$5(e,this._init.minSendBytes),{push:e.push,end:e.end,return:e.return})}async _handleIncoming(e){const{id:r,type:n}=e;if(log$3.enabled&&log$3.trace("incoming message",printMessage(e)),e.type===MessageTypes.NEW_STREAM){if(this._streams.receivers.size===(this._init.maxInboundStreams??MAX_STREAMS_INBOUND_STREAMS_PER_CONNECTION)){log$3("too many inbound streams open"),this._source.push({id:r,type:MessageTypes.RESET_RECEIVER});try{await this.rateLimiter.consume("new-stream",1)}catch{log$3("rate limit hit when opening too many new streams over the inbound stream limit - closing remote connection"),this._source.end(new Error("Too many open streams"));return}return}const c=this._newReceiverStream({id:r,name:toString$D(e.data instanceof Uint8Array?e.data:e.data.subarray())});this._init.onIncomingStream!=null&&this._init.onIncomingStream(c);return}const o=((n&1)===1?this._streams.initiators:this._streams.receivers).get(r);if(o==null){log$3("missing stream %s for message type %s",r,MessageTypeNames[n]);return}const a=this._init.maxStreamBufferSize??MAX_STREAM_BUFFER_SIZE;switch(n){case MessageTypes.MESSAGE_INITIATOR:case MessageTypes.MESSAGE_RECEIVER:if(o.sourceReadableLength()>a){this._source.push({id:e.id,type:n===MessageTypes.MESSAGE_INITIATOR?MessageTypes.RESET_RECEIVER:MessageTypes.RESET_INITIATOR});const c=new CodeError$4("Input buffer full - increase Mplex maxBufferSize to accommodate slow consumers","ERR_STREAM_INPUT_BUFFER_FULL");o.abort(c);return}o.sourcePush(e.data);break;case MessageTypes.CLOSE_INITIATOR:case MessageTypes.CLOSE_RECEIVER:o.closeRead();break;case MessageTypes.RESET_INITIATOR:case MessageTypes.RESET_RECEIVER:o.reset();break;default:log$3("unknown message type %s",n)}}}class Mplex{constructor(e={}){this.protocol="/mplex/6.7.0",this._init=e}createStreamMuxer(e={}){return new MplexStreamMuxer({...e,...this._init})}}function mplex(t={}){return()=>new Mplex(t)}const defaultLengthDecoder=t=>unsigned.decode(t);defaultLengthDecoder.bytes=0;function pbStream(t,e={}){const r=pushable();t.sink(r).catch(c=>{r.end(c)}),t.sink=async c=>{for await(const u of c)r.push(u)};let n=t.source;t.source[Symbol.iterator]!=null?n=t.source[Symbol.iterator]():t.source[Symbol.asyncIterator]!=null&&(n=t.source[Symbol.asyncIterator]());const o=new Uint8ArrayList,a={read:async c=>{if(c==null){const{done:l,value:f}=await n.next();return l===!0?new Uint8ArrayList:f}for(;o.byteLength<c;){const{value:l,done:f}=await n.next();if(f===!0)throw errcode(new Error("unexpected end of input"),"ERR_UNEXPECTED_EOF");o.append(l)}const u=o.sublist(0,c);return o.consume(c),u},readLP:async()=>{let c=-1;const u=new Uint8ArrayList,l=e?.lengthDecoder??defaultLengthDecoder;for(;;){u.append(await a.read(1));try{c=l(u)}catch(f){if(f instanceof RangeError)continue;throw f}if(c>-1)break;if(e?.maxLengthLength!=null&&u.byteLength>e.maxLengthLength)throw errcode(new Error("message length length too long"),"ERR_MSG_LENGTH_TOO_LONG")}if(e?.maxDataLength!=null&&c>e.maxDataLength)throw errcode(new Error("message length too long"),"ERR_MSG_DATA_TOO_LONG");return await a.read(c)},readPB:async c=>{const u=await a.readLP();if(u==null)throw new Error("Value is null");const l=u instanceof Uint8Array?u:u.subarray();return c.decode(l)},write:c=>{c instanceof Uint8Array?r.push(c):r.push(c.subarray())},writeLP:c=>{a.write(encode$f.single(c,e))},writePB:(c,u)=>{a.writeLP(u.encode(c))},pb:c=>({read:async()=>await a.readPB(c),write:u=>{a.writePB(u,c)},unwrap:()=>a}),unwrap:()=>{const c=t.source;return t.source=async function*(){yield*o,yield*c}(),t}};return a}function pair(){const t=pDefer$1();let e=!1;return{sink:async r=>{if(e)throw new Error("already piped");e=!0,t.resolve(r)},source:async function*(){yield*await t.promise}()}}function duplexPair(){const t=pair(),e=pair();return[{source:t.source,sink:e.sink},{source:e.source,sink:t.sink}]}const MAX_LENGTH_LENGTH$1=8,MAX_DATA_LENGTH$1=1024*1024*4;var ReadMode$1;(function(t){t[t.LENGTH=0]="LENGTH",t[t.DATA=1]="DATA"})(ReadMode$1||(ReadMode$1={}));const defaultDecoder$1=t=>{const e=unsigned.decode(t);return defaultDecoder$1.bytes=unsigned.encodingLength(e),e};defaultDecoder$1.bytes=0;function decode$7(t){return async function*(e){const r=new Uint8ArrayList;let n=ReadMode$1.LENGTH,o=-1;const a=t?.lengthDecoder??defaultDecoder$1,c=t?.maxLengthLength??MAX_LENGTH_LENGTH$1,u=t?.maxDataLength??MAX_DATA_LENGTH$1;for await(const l of e)for(r.append(l);r.byteLength>0;){if(n===ReadMode$1.LENGTH)try{if(o=a(r),o<0)throw errcode(new Error("invalid message length"),"ERR_INVALID_MSG_LENGTH");if(o>u)throw errcode(new Error("message length too long"),"ERR_MSG_DATA_TOO_LONG");const f=a.bytes;r.consume(f),t?.onLength!=null&&t.onLength(o),n=ReadMode$1.DATA}catch(f){if(f instanceof RangeError){if(r.byteLength>c)throw errcode(new Error("message length length too long"),"ERR_MSG_LENGTH_TOO_LONG");break}throw f}if(n===ReadMode$1.DATA){if(r.byteLength<o)break;const f=r.sublist(0,o);r.consume(o),t?.onData!=null&&t.onData(f),yield f,n=ReadMode$1.LENGTH}}if(r.byteLength>0)throw errcode(new Error("unexpected end of input"),"ERR_UNEXPECTED_EOF")}}decode$7.fromReader=(t,e)=>{let r=1;const n=async function*(){for(;;)try{const{done:o,value:a}=await t.next(r);if(o===!0)return;a!=null&&(yield a)}catch(o){if(o.code==="ERR_UNDER_READ")return{done:!0,value:null};throw o}finally{r=1}}();return decode$7({...e??{},onLength:o=>{r=o}})(n)};const NOISE_MSG_MAX_LENGTH_BYTES=65535,NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG=NOISE_MSG_MAX_LENGTH_BYTES-16,DUMP_SESSION_KEYS=!!globalThis.process?.env?.DUMP_SESSION_KEYS;var hkdf={},hmac$1={},hash={};Object.defineProperty(hash,"__esModule",{value:!0});function isSerializableHash(t){return typeof t.saveState<"u"&&typeof t.restoreState<"u"&&typeof t.cleanSavedState<"u"}hash.isSerializableHash=isSerializableHash;var constantTime={};Object.defineProperty(constantTime,"__esModule",{value:!0});function select(t,e,r){return~(t-1)&e|t-1&r}constantTime.select=select;function lessOrEqual(t,e){return(t|0)-(e|0)-1>>>31&1}constantTime.lessOrEqual=lessOrEqual;function compare(t,e){if(t.length!==e.length)return 0;for(var r=0,n=0;n<t.length;n++)r|=t[n]^e[n];return 1&r-1>>>8}constantTime.compare=compare;function equal(t,e){return t.length===0||e.length===0?!1:compare(t,e)!==0}constantTime.equal=equal;var wipe$1={};Object.defineProperty(wipe$1,"__esModule",{value:!0});function wipe(t){for(var e=0;e<t.length;e++)t[e]=0;return t}wipe$1.wipe=wipe,Object.defineProperty(hmac$1,"__esModule",{value:!0});var hash_1=hash,constant_time_1=constantTime,wipe_1$3=wipe$1,HMAC=function(){function t(e,r){this._finished=!1,this._inner=new e,this._outer=new e,this.blockSize=this._outer.blockSize,this.digestLength=this._outer.digestLength;var n=new Uint8Array(this.blockSize);r.length>this.blockSize?this._inner.update(r).finish(n).clean():n.set(r);for(var o=0;o<n.length;o++)n[o]^=54;this._inner.update(n);for(var o=0;o<n.length;o++)n[o]^=106;this._outer.update(n),hash_1.isSerializableHash(this._inner)&&hash_1.isSerializableHash(this._outer)&&(this._innerKeyedState=this._inner.saveState(),this._outerKeyedState=this._outer.saveState()),wipe_1$3.wipe(n)}return t.prototype.reset=function(){if(!hash_1.isSerializableHash(this._inner)||!hash_1.isSerializableHash(this._outer))throw new Error("hmac: can't reset() because hash doesn't implement restoreState()");return this._inner.restoreState(this._innerKeyedState),this._outer.restoreState(this._outerKeyedState),this._finished=!1,this},t.prototype.clean=function(){hash_1.isSerializableHash(this._inner)&&this._inner.cleanSavedState(this._innerKeyedState),hash_1.isSerializableHash(this._outer)&&this._outer.cleanSavedState(this._outerKeyedState),this._inner.clean(),this._outer.clean()},t.prototype.update=function(e){return this._inner.update(e),this},t.prototype.finish=function(e){return this._finished?(this._outer.finish(e),this):(this._inner.finish(e),this._outer.update(e.subarray(0,this.digestLength)).finish(e),this._finished=!0,this)},t.prototype.digest=function(){var e=new Uint8Array(this.digestLength);return this.finish(e),e},t.prototype.saveState=function(){if(!hash_1.isSerializableHash(this._inner))throw new Error("hmac: can't saveState() because hash doesn't implement it");return this._inner.saveState()},t.prototype.restoreState=function(e){if(!hash_1.isSerializableHash(this._inner)||!hash_1.isSerializableHash(this._outer))throw new Error("hmac: can't restoreState() because hash doesn't implement it");return this._inner.restoreState(e),this._outer.restoreState(this._outerKeyedState),this._finished=!1,this},t.prototype.cleanSavedState=function(e){if(!hash_1.isSerializableHash(this._inner))throw new Error("hmac: can't cleanSavedState() because hash doesn't implement it");this._inner.cleanSavedState(e)},t}();hmac$1.HMAC=HMAC;function hmac(t,e,r){var n=new HMAC(t,e);n.update(r);var o=n.digest();return n.clean(),o}hmac$1.hmac=hmac,hmac$1.equal=constant_time_1.equal,Object.defineProperty(hkdf,"__esModule",{value:!0});var hmac_1=hmac$1,wipe_1$2=wipe$1,HKDF=function(){function t(e,r,n,o){n===void 0&&(n=new Uint8Array(0)),this._counter=new Uint8Array(1),this._hash=e,this._info=o;var a=hmac_1.hmac(this._hash,n,r);this._hmac=new hmac_1.HMAC(e,a),this._buffer=new Uint8Array(this._hmac.digestLength),this._bufpos=this._buffer.length}return t.prototype._fillBuffer=function(){this._counter[0]++;var e=this._counter[0];if(e===0)throw new Error("hkdf: cannot expand more");this._hmac.reset(),e>1&&this._hmac.update(this._buffer),this._info&&this._hmac.update(this._info),this._hmac.update(this._counter),this._hmac.finish(this._buffer),this._bufpos=0},t.prototype.expand=function(e){for(var r=new Uint8Array(e),n=0;n<r.length;n++)this._bufpos===this._buffer.length&&this._fillBuffer(),r[n]=this._buffer[this._bufpos++];return r},t.prototype.clean=function(){this._hmac.clean(),wipe_1$2.wipe(this._buffer),wipe_1$2.wipe(this._counter),this._bufpos=0},t}(),HKDF_1=hkdf.HKDF=HKDF,x25519={},random={},system={},browser={};Object.defineProperty(browser,"__esModule",{value:!0}),browser.BrowserRandomSource=void 0;const QUOTA=65536;class BrowserRandomSource{constructor(){this.isAvailable=!1,this.isInstantiated=!1;const e=typeof self<"u"?self.crypto||self.msCrypto:null;e&&e.getRandomValues!==void 0&&(this._crypto=e,this.isAvailable=!0,this.isInstantiated=!0)}randomBytes(e){if(!this.isAvailable||!this._crypto)throw new Error("Browser random byte generator is not available.");const r=new Uint8Array(e);for(let n=0;n<r.length;n+=QUOTA)this._crypto.getRandomValues(r.subarray(n,n+Math.min(r.length-n,QUOTA)));return r}}browser.BrowserRandomSource=BrowserRandomSource;var node={};Object.defineProperty(node,"__esModule",{value:!0}),node.NodeRandomSource=void 0;const wipe_1$1=wipe$1;class NodeRandomSource{constructor(){if(this.isAvailable=!1,this.isInstantiated=!1,typeof commonjsRequire<"u"){const e=requireCryptoBrowserify();e&&e.randomBytes&&(this._crypto=e,this.isAvailable=!0,this.isInstantiated=!0)}}randomBytes(e){if(!this.isAvailable||!this._crypto)throw new Error("Node.js random byte generator is not available.");let r=this._crypto.randomBytes(e);if(r.length!==e)throw new Error("NodeRandomSource: got fewer bytes than requested");const n=new Uint8Array(e);for(let o=0;o<n.length;o++)n[o]=r[o];return(0,wipe_1$1.wipe)(r),n}}node.NodeRandomSource=NodeRandomSource,Object.defineProperty(system,"__esModule",{value:!0}),system.SystemRandomSource=void 0;const browser_1=browser,node_1=node;class SystemRandomSource{constructor(){if(this.isAvailable=!1,this.name="",this._source=new browser_1.BrowserRandomSource,this._source.isAvailable){this.isAvailable=!0,this.name="Browser";return}if(this._source=new node_1.NodeRandomSource,this._source.isAvailable){this.isAvailable=!0,this.name="Node";return}}randomBytes(e){if(!this.isAvailable)throw new Error("System random byte generator is not available.");return this._source.randomBytes(e)}}system.SystemRandomSource=SystemRandomSource;var binary={},int={};(function(t){Object.defineProperty(t,"__esModule",{value:!0});function e(u,l){var f=u>>>16&65535,p=u&65535,g=l>>>16&65535,$=l&65535;return p*$+(f*$+p*g<<16>>>0)|0}t.mul=Math.imul||e;function r(u,l){return u+l|0}t.add=r;function n(u,l){return u-l|0}t.sub=n;function o(u,l){return u<<l|u>>>32-l}t.rotl=o;function a(u,l){return u<<32-l|u>>>l}t.rotr=a;function c(u){return typeof u=="number"&&isFinite(u)&&Math.floor(u)===u}t.isInteger=Number.isInteger||c,t.MAX_SAFE_INTEGER=9007199254740991,t.isSafeInteger=function(u){return t.isInteger(u)&&u>=-t.MAX_SAFE_INTEGER&&u<=t.MAX_SAFE_INTEGER}})(int),Object.defineProperty(binary,"__esModule",{value:!0});var int_1=int;function readInt16BE(t,e){return e===void 0&&(e=0),(t[e+0]<<8|t[e+1])<<16>>16}binary.readInt16BE=readInt16BE;function readUint16BE(t,e){return e===void 0&&(e=0),(t[e+0]<<8|t[e+1])>>>0}binary.readUint16BE=readUint16BE;function readInt16LE(t,e){return e===void 0&&(e=0),(t[e+1]<<8|t[e])<<16>>16}binary.readInt16LE=readInt16LE;function readUint16LE(t,e){return e===void 0&&(e=0),(t[e+1]<<8|t[e])>>>0}binary.readUint16LE=readUint16LE;function writeUint16BE(t,e,r){return e===void 0&&(e=new Uint8Array(2)),r===void 0&&(r=0),e[r+0]=t>>>8,e[r+1]=t>>>0,e}binary.writeUint16BE=writeUint16BE,binary.writeInt16BE=writeUint16BE;function writeUint16LE(t,e,r){return e===void 0&&(e=new Uint8Array(2)),r===void 0&&(r=0),e[r+0]=t>>>0,e[r+1]=t>>>8,e}binary.writeUint16LE=writeUint16LE,binary.writeInt16LE=writeUint16LE;function readInt32BE(t,e){return e===void 0&&(e=0),t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3]}binary.readInt32BE=readInt32BE;function readUint32BE(t,e){return e===void 0&&(e=0),(t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3])>>>0}binary.readUint32BE=readUint32BE;function readInt32LE(t,e){return e===void 0&&(e=0),t[e+3]<<24|t[e+2]<<16|t[e+1]<<8|t[e]}binary.readInt32LE=readInt32LE;function readUint32LE(t,e){return e===void 0&&(e=0),(t[e+3]<<24|t[e+2]<<16|t[e+1]<<8|t[e])>>>0}binary.readUint32LE=readUint32LE;function writeUint32BE(t,e,r){return e===void 0&&(e=new Uint8Array(4)),r===void 0&&(r=0),e[r+0]=t>>>24,e[r+1]=t>>>16,e[r+2]=t>>>8,e[r+3]=t>>>0,e}binary.writeUint32BE=writeUint32BE,binary.writeInt32BE=writeUint32BE;function writeUint32LE(t,e,r){return e===void 0&&(e=new Uint8Array(4)),r===void 0&&(r=0),e[r+0]=t>>>0,e[r+1]=t>>>8,e[r+2]=t>>>16,e[r+3]=t>>>24,e}binary.writeUint32LE=writeUint32LE,binary.writeInt32LE=writeUint32LE;function readInt64BE(t,e){e===void 0&&(e=0);var r=readInt32BE(t,e),n=readInt32BE(t,e+4);return r*4294967296+n-(n>>31)*4294967296}binary.readInt64BE=readInt64BE;function readUint64BE(t,e){e===void 0&&(e=0);var r=readUint32BE(t,e),n=readUint32BE(t,e+4);return r*4294967296+n}binary.readUint64BE=readUint64BE;function readInt64LE(t,e){e===void 0&&(e=0);var r=readInt32LE(t,e),n=readInt32LE(t,e+4);return n*4294967296+r-(r>>31)*4294967296}binary.readInt64LE=readInt64LE;function readUint64LE(t,e){e===void 0&&(e=0);var r=readUint32LE(t,e),n=readUint32LE(t,e+4);return n*4294967296+r}binary.readUint64LE=readUint64LE;function writeUint64BE(t,e,r){return e===void 0&&(e=new Uint8Array(8)),r===void 0&&(r=0),writeUint32BE(t/4294967296>>>0,e,r),writeUint32BE(t>>>0,e,r+4),e}binary.writeUint64BE=writeUint64BE,binary.writeInt64BE=writeUint64BE;function writeUint64LE(t,e,r){return e===void 0&&(e=new Uint8Array(8)),r===void 0&&(r=0),writeUint32LE(t>>>0,e,r),writeUint32LE(t/4294967296>>>0,e,r+4),e}binary.writeUint64LE=writeUint64LE,binary.writeInt64LE=writeUint64LE;function readUintBE(t,e,r){if(r===void 0&&(r=0),t%8!==0)throw new Error("readUintBE supports only bitLengths divisible by 8");if(t/8>e.length-r)throw new Error("readUintBE: array is too short for the given bitLength");for(var n=0,o=1,a=t/8+r-1;a>=r;a--)n+=e[a]*o,o*=256;return n}binary.readUintBE=readUintBE;function readUintLE(t,e,r){if(r===void 0&&(r=0),t%8!==0)throw new Error("readUintLE supports only bitLengths divisible by 8");if(t/8>e.length-r)throw new Error("readUintLE: array is too short for the given bitLength");for(var n=0,o=1,a=r;a<r+t/8;a++)n+=e[a]*o,o*=256;return n}binary.readUintLE=readUintLE;function writeUintBE(t,e,r,n){if(r===void 0&&(r=new Uint8Array(t/8)),n===void 0&&(n=0),t%8!==0)throw new Error("writeUintBE supports only bitLengths divisible by 8");if(!int_1.isSafeInteger(e))throw new Error("writeUintBE value must be an integer");for(var o=1,a=t/8+n-1;a>=n;a--)r[a]=e/o&255,o*=256;return r}binary.writeUintBE=writeUintBE;function writeUintLE(t,e,r,n){if(r===void 0&&(r=new Uint8Array(t/8)),n===void 0&&(n=0),t%8!==0)throw new Error("writeUintLE supports only bitLengths divisible by 8");if(!int_1.isSafeInteger(e))throw new Error("writeUintLE value must be an integer");for(var o=1,a=n;a<n+t/8;a++)r[a]=e/o&255,o*=256;return r}binary.writeUintLE=writeUintLE;function readFloat32BE(t,e){e===void 0&&(e=0);var r=new DataView(t.buffer,t.byteOffset,t.byteLength);return r.getFloat32(e)}binary.readFloat32BE=readFloat32BE;function readFloat32LE(t,e){e===void 0&&(e=0);var r=new DataView(t.buffer,t.byteOffset,t.byteLength);return r.getFloat32(e,!0)}binary.readFloat32LE=readFloat32LE;function readFloat64BE(t,e){e===void 0&&(e=0);var r=new DataView(t.buffer,t.byteOffset,t.byteLength);return r.getFloat64(e)}binary.readFloat64BE=readFloat64BE;function readFloat64LE(t,e){e===void 0&&(e=0);var r=new DataView(t.buffer,t.byteOffset,t.byteLength);return r.getFloat64(e,!0)}binary.readFloat64LE=readFloat64LE;function writeFloat32BE(t,e,r){e===void 0&&(e=new Uint8Array(4)),r===void 0&&(r=0);var n=new DataView(e.buffer,e.byteOffset,e.byteLength);return n.setFloat32(r,t),e}binary.writeFloat32BE=writeFloat32BE;function writeFloat32LE(t,e,r){e===void 0&&(e=new Uint8Array(4)),r===void 0&&(r=0);var n=new DataView(e.buffer,e.byteOffset,e.byteLength);return n.setFloat32(r,t,!0),e}binary.writeFloat32LE=writeFloat32LE;function writeFloat64BE(t,e,r){e===void 0&&(e=new Uint8Array(8)),r===void 0&&(r=0);var n=new DataView(e.buffer,e.byteOffset,e.byteLength);return n.setFloat64(r,t),e}binary.writeFloat64BE=writeFloat64BE;function writeFloat64LE(t,e,r){e===void 0&&(e=new Uint8Array(8)),r===void 0&&(r=0);var n=new DataView(e.buffer,e.byteOffset,e.byteLength);return n.setFloat64(r,t,!0),e}binary.writeFloat64LE=writeFloat64LE,function(t){Object.defineProperty(t,"__esModule",{value:!0}),t.randomStringForEntropy=t.randomString=t.randomUint32=t.randomBytes=t.defaultRandomSource=void 0;const e=system,r=binary,n=wipe$1;t.defaultRandomSource=new e.SystemRandomSource;function o(f,p=t.defaultRandomSource){return p.randomBytes(f)}t.randomBytes=o;function a(f=t.defaultRandomSource){const p=o(4,f),g=(0,r.readUint32LE)(p);return(0,n.wipe)(p),g}t.randomUint32=a;const c="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";function u(f,p=c,g=t.defaultRandomSource){if(p.length<2)throw new Error("randomString charset is too short");if(p.length>256)throw new Error("randomString charset is too long");let $="";const _=p.length,b=256-256%_;for(;f>0;){const D=o(Math.ceil(f*256/b),g);for(let v=0;v<D.length&&f>0;v++){const S=D[v];S<b&&($+=p.charAt(S%_),f--)}(0,n.wipe)(D)}return $}t.randomString=u;function l(f,p=c,g=t.defaultRandomSource){const $=Math.ceil(f/(Math.log(p.length)/Math.LN2));return u($,p,g)}t.randomStringForEntropy=l}(random),function(t){Object.defineProperty(t,"__esModule",{value:!0}),t.sharedKey=t.generateKeyPair=t.generateKeyPairFromSeed=t.scalarMultBase=t.scalarMult=t.SHARED_KEY_LENGTH=t.SECRET_KEY_LENGTH=t.PUBLIC_KEY_LENGTH=void 0;const e=random,r=wipe$1;t.PUBLIC_KEY_LENGTH=32,t.SECRET_KEY_LENGTH=32,t.SHARED_KEY_LENGTH=32;function n(C){const T=new Float64Array(16);if(C)for(let P=0;P<C.length;P++)T[P]=C[P];return T}const o=new Uint8Array(32);o[0]=9;const a=n([56129,1]);function c(C){let T=1;for(let P=0;P<16;P++){let E=C[P]+T+65535;T=Math.floor(E/65536),C[P]=E-T*65536}C[0]+=T-1+37*(T-1)}function u(C,T,P){const E=~(P-1);for(let A=0;A<16;A++){const k=E&(C[A]^T[A]);C[A]^=k,T[A]^=k}}function l(C,T){const P=n(),E=n();for(let A=0;A<16;A++)E[A]=T[A];c(E),c(E),c(E);for(let A=0;A<2;A++){P[0]=E[0]-65517;for(let O=1;O<15;O++)P[O]=E[O]-65535-(P[O-1]>>16&1),P[O-1]&=65535;P[15]=E[15]-32767-(P[14]>>16&1);const k=P[15]>>16&1;P[14]&=65535,u(E,P,1-k)}for(let A=0;A<16;A++)C[2*A]=E[A]&255,C[2*A+1]=E[A]>>8}function f(C,T){for(let P=0;P<16;P++)C[P]=T[2*P]+(T[2*P+1]<<8);C[15]&=32767}function p(C,T,P){for(let E=0;E<16;E++)C[E]=T[E]+P[E]}function g(C,T,P){for(let E=0;E<16;E++)C[E]=T[E]-P[E]}function $(C,T,P){let E,A,k=0,O=0,M=0,L=0,U=0,F=0,x=0,z=0,j=0,q=0,Y=0,ne=0,he=0,le=0,H=0,X=0,Z=0,J=0,ee=0,te=0,oe=0,ie=0,ae=0,ce=0,ue=0,mt=0,Nt=0,nr=0,dr=0,br=0,wr=0,fe=P[0],ge=P[1],be=P[2],ye=P[3],$e=P[4],me=P[5],De=P[6],Ee=P[7],we=P[8],_e=P[9],ve=P[10],Se=P[11],Ce=P[12],Te=P[13],Ae=P[14],Re=P[15];E=T[0],k+=E*fe,O+=E*ge,M+=E*be,L+=E*ye,U+=E*$e,F+=E*me,x+=E*De,z+=E*Ee,j+=E*we,q+=E*_e,Y+=E*ve,ne+=E*Se,he+=E*Ce,le+=E*Te,H+=E*Ae,X+=E*Re,E=T[1],O+=E*fe,M+=E*ge,L+=E*be,U+=E*ye,F+=E*$e,x+=E*me,z+=E*De,j+=E*Ee,q+=E*we,Y+=E*_e,ne+=E*ve,he+=E*Se,le+=E*Ce,H+=E*Te,X+=E*Ae,Z+=E*Re,E=T[2],M+=E*fe,L+=E*ge,U+=E*be,F+=E*ye,x+=E*$e,z+=E*me,j+=E*De,q+=E*Ee,Y+=E*we,ne+=E*_e,he+=E*ve,le+=E*Se,H+=E*Ce,X+=E*Te,Z+=E*Ae,J+=E*Re,E=T[3],L+=E*fe,U+=E*ge,F+=E*be,x+=E*ye,z+=E*$e,j+=E*me,q+=E*De,Y+=E*Ee,ne+=E*we,he+=E*_e,le+=E*ve,H+=E*Se,X+=E*Ce,Z+=E*Te,J+=E*Ae,ee+=E*Re,E=T[4],U+=E*fe,F+=E*ge,x+=E*be,z+=E*ye,j+=E*$e,q+=E*me,Y+=E*De,ne+=E*Ee,he+=E*we,le+=E*_e,H+=E*ve,X+=E*Se,Z+=E*Ce,J+=E*Te,ee+=E*Ae,te+=E*Re,E=T[5],F+=E*fe,x+=E*ge,z+=E*be,j+=E*ye,q+=E*$e,Y+=E*me,ne+=E*De,he+=E*Ee,le+=E*we,H+=E*_e,X+=E*ve,Z+=E*Se,J+=E*Ce,ee+=E*Te,te+=E*Ae,oe+=E*Re,E=T[6],x+=E*fe,z+=E*ge,j+=E*be,q+=E*ye,Y+=E*$e,ne+=E*me,he+=E*De,le+=E*Ee,H+=E*we,X+=E*_e,Z+=E*ve,J+=E*Se,ee+=E*Ce,te+=E*Te,oe+=E*Ae,ie+=E*Re,E=T[7],z+=E*fe,j+=E*ge,q+=E*be,Y+=E*ye,ne+=E*$e,he+=E*me,le+=E*De,H+=E*Ee,X+=E*we,Z+=E*_e,J+=E*ve,ee+=E*Se,te+=E*Ce,oe+=E*Te,ie+=E*Ae,ae+=E*Re,E=T[8],j+=E*fe,q+=E*ge,Y+=E*be,ne+=E*ye,he+=E*$e,le+=E*me,H+=E*De,X+=E*Ee,Z+=E*we,J+=E*_e,ee+=E*ve,te+=E*Se,oe+=E*Ce,ie+=E*Te,ae+=E*Ae,ce+=E*Re,E=T[9],q+=E*fe,Y+=E*ge,ne+=E*be,he+=E*ye,le+=E*$e,H+=E*me,X+=E*De,Z+=E*Ee,J+=E*we,ee+=E*_e,te+=E*ve,oe+=E*Se,ie+=E*Ce,ae+=E*Te,ce+=E*Ae,ue+=E*Re,E=T[10],Y+=E*fe,ne+=E*ge,he+=E*be,le+=E*ye,H+=E*$e,X+=E*me,Z+=E*De,J+=E*Ee,ee+=E*we,te+=E*_e,oe+=E*ve,ie+=E*Se,ae+=E*Ce,ce+=E*Te,ue+=E*Ae,mt+=E*Re,E=T[11],ne+=E*fe,he+=E*ge,le+=E*be,H+=E*ye,X+=E*$e,Z+=E*me,J+=E*De,ee+=E*Ee,te+=E*we,oe+=E*_e,ie+=E*ve,ae+=E*Se,ce+=E*Ce,ue+=E*Te,mt+=E*Ae,Nt+=E*Re,E=T[12],he+=E*fe,le+=E*ge,H+=E*be,X+=E*ye,Z+=E*$e,J+=E*me,ee+=E*De,te+=E*Ee,oe+=E*we,ie+=E*_e,ae+=E*ve,ce+=E*Se,ue+=E*Ce,mt+=E*Te,Nt+=E*Ae,nr+=E*Re,E=T[13],le+=E*fe,H+=E*ge,X+=E*be,Z+=E*ye,J+=E*$e,ee+=E*me,te+=E*De,oe+=E*Ee,ie+=E*we,ae+=E*_e,ce+=E*ve,ue+=E*Se,mt+=E*Ce,Nt+=E*Te,nr+=E*Ae,dr+=E*Re,E=T[14],H+=E*fe,X+=E*ge,Z+=E*be,J+=E*ye,ee+=E*$e,te+=E*me,oe+=E*De,ie+=E*Ee,ae+=E*we,ce+=E*_e,ue+=E*ve,mt+=E*Se,Nt+=E*Ce,nr+=E*Te,dr+=E*Ae,br+=E*Re,E=T[15],X+=E*fe,Z+=E*ge,J+=E*be,ee+=E*ye,te+=E*$e,oe+=E*me,ie+=E*De,ae+=E*Ee,ce+=E*we,ue+=E*_e,mt+=E*ve,Nt+=E*Se,nr+=E*Ce,dr+=E*Te,br+=E*Ae,wr+=E*Re,k+=38*Z,O+=38*J,M+=38*ee,L+=38*te,U+=38*oe,F+=38*ie,x+=38*ae,z+=38*ce,j+=38*ue,q+=38*mt,Y+=38*Nt,ne+=38*nr,he+=38*dr,le+=38*br,H+=38*wr,A=1,E=k+A+65535,A=Math.floor(E/65536),k=E-A*65536,E=O+A+65535,A=Math.floor(E/65536),O=E-A*65536,E=M+A+65535,A=Math.floor(E/65536),M=E-A*65536,E=L+A+65535,A=Math.floor(E/65536),L=E-A*65536,E=U+A+65535,A=Math.floor(E/65536),U=E-A*65536,E=F+A+65535,A=Math.floor(E/65536),F=E-A*65536,E=x+A+65535,A=Math.floor(E/65536),x=E-A*65536,E=z+A+65535,A=Math.floor(E/65536),z=E-A*65536,E=j+A+65535,A=Math.floor(E/65536),j=E-A*65536,E=q+A+65535,A=Math.floor(E/65536),q=E-A*65536,E=Y+A+65535,A=Math.floor(E/65536),Y=E-A*65536,E=ne+A+65535,A=Math.floor(E/65536),ne=E-A*65536,E=he+A+65535,A=Math.floor(E/65536),he=E-A*65536,E=le+A+65535,A=Math.floor(E/65536),le=E-A*65536,E=H+A+65535,A=Math.floor(E/65536),H=E-A*65536,E=X+A+65535,A=Math.floor(E/65536),X=E-A*65536,k+=A-1+37*(A-1),A=1,E=k+A+65535,A=Math.floor(E/65536),k=E-A*65536,E=O+A+65535,A=Math.floor(E/65536),O=E-A*65536,E=M+A+65535,A=Math.floor(E/65536),M=E-A*65536,E=L+A+65535,A=Math.floor(E/65536),L=E-A*65536,E=U+A+65535,A=Math.floor(E/65536),U=E-A*65536,E=F+A+65535,A=Math.floor(E/65536),F=E-A*65536,E=x+A+65535,A=Math.floor(E/65536),x=E-A*65536,E=z+A+65535,A=Math.floor(E/65536),z=E-A*65536,E=j+A+65535,A=Math.floor(E/65536),j=E-A*65536,E=q+A+65535,A=Math.floor(E/65536),q=E-A*65536,E=Y+A+65535,A=Math.floor(E/65536),Y=E-A*65536,E=ne+A+65535,A=Math.floor(E/65536),ne=E-A*65536,E=he+A+65535,A=Math.floor(E/65536),he=E-A*65536,E=le+A+65535,A=Math.floor(E/65536),le=E-A*65536,E=H+A+65535,A=Math.floor(E/65536),H=E-A*65536,E=X+A+65535,A=Math.floor(E/65536),X=E-A*65536,k+=A-1+37*(A-1),C[0]=k,C[1]=O,C[2]=M,C[3]=L,C[4]=U,C[5]=F,C[6]=x,C[7]=z,C[8]=j,C[9]=q,C[10]=Y,C[11]=ne,C[12]=he,C[13]=le,C[14]=H,C[15]=X}function _(C,T){$(C,T,T)}function b(C,T){const P=n();for(let E=0;E<16;E++)P[E]=T[E];for(let E=253;E>=0;E--)_(P,P),E!==2&&E!==4&&$(P,P,T);for(let E=0;E<16;E++)C[E]=P[E]}function D(C,T){const P=new Uint8Array(32),E=new Float64Array(80),A=n(),k=n(),O=n(),M=n(),L=n(),U=n();for(let j=0;j<31;j++)P[j]=C[j];P[31]=C[31]&127|64,P[0]&=248,f(E,T);for(let j=0;j<16;j++)k[j]=E[j];A[0]=M[0]=1;for(let j=254;j>=0;--j){const q=P[j>>>3]>>>(j&7)&1;u(A,k,q),u(O,M,q),p(L,A,O),g(A,A,O),p(O,k,M),g(k,k,M),_(M,L),_(U,A),$(A,O,A),$(O,k,L),p(L,A,O),g(A,A,O),_(k,A),g(O,M,U),$(A,O,a),p(A,A,M),$(O,O,A),$(A,M,U),$(M,k,E),_(k,L),u(A,k,q),u(O,M,q)}for(let j=0;j<16;j++)E[j+16]=A[j],E[j+32]=O[j],E[j+48]=k[j],E[j+64]=M[j];const F=E.subarray(32),x=E.subarray(16);b(F,F),$(x,x,F);const z=new Uint8Array(32);return l(z,x),z}t.scalarMult=D;function v(C){return D(C,o)}t.scalarMultBase=v;function S(C){if(C.length!==t.SECRET_KEY_LENGTH)throw new Error(`x25519: seed must be ${t.SECRET_KEY_LENGTH} bytes`);const T=new Uint8Array(C);return{publicKey:v(T),secretKey:T}}t.generateKeyPairFromSeed=S;function I(C){const T=(0,e.randomBytes)(32,C),P=S(T);return(0,r.wipe)(T),P}t.generateKeyPair=I;function R(C,T,P=!1){if(C.length!==t.PUBLIC_KEY_LENGTH)throw new Error("X25519: incorrect secret key length");if(T.length!==t.PUBLIC_KEY_LENGTH)throw new Error("X25519: incorrect public key length");const E=D(C,T);if(P){let A=0;for(let k=0;k<E.length;k++)A|=E[k];if(A===0)throw new Error("X25519: invalid shared key")}return E}t.sharedKey=R}(x25519);var sha256$1={};(function(t){Object.defineProperty(t,"__esModule",{value:!0});var e=binary,r=wipe$1;t.DIGEST_LENGTH=32,t.BLOCK_SIZE=64;var n=function(){function u(){this.digestLength=t.DIGEST_LENGTH,this.blockSize=t.BLOCK_SIZE,this._state=new Int32Array(8),this._temp=new Int32Array(64),this._buffer=new Uint8Array(128),this._bufferLength=0,this._bytesHashed=0,this._finished=!1,this.reset()}return u.prototype._initState=function(){this._state[0]=1779033703,this._state[1]=3144134277,this._state[2]=1013904242,this._state[3]=2773480762,this._state[4]=1359893119,this._state[5]=2600822924,this._state[6]=528734635,this._state[7]=1541459225},u.prototype.reset=function(){return this._initState(),this._bufferLength=0,this._bytesHashed=0,this._finished=!1,this},u.prototype.clean=function(){r.wipe(this._buffer),r.wipe(this._temp),this.reset()},u.prototype.update=function(l,f){if(f===void 0&&(f=l.length),this._finished)throw new Error("SHA256: can't update because hash was finished.");var p=0;if(this._bytesHashed+=f,this._bufferLength>0){for(;this._bufferLength<this.blockSize&&f>0;)this._buffer[this._bufferLength++]=l[p++],f--;this._bufferLength===this.blockSize&&(a(this._temp,this._state,this._buffer,0,this.blockSize),this._bufferLength=0)}for(f>=this.blockSize&&(p=a(this._temp,this._state,l,p,f),f%=this.blockSize);f>0;)this._buffer[this._bufferLength++]=l[p++],f--;return this},u.prototype.finish=function(l){if(!this._finished){var f=this._bytesHashed,p=this._bufferLength,g=f/536870912|0,$=f<<3,_=f%64<56?64:128;this._buffer[p]=128;for(var b=p+1;b<_-8;b++)this._buffer[b]=0;e.writeUint32BE(g,this._buffer,_-8),e.writeUint32BE($,this._buffer,_-4),a(this._temp,this._state,this._buffer,0,_),this._finished=!0}for(var b=0;b<this.digestLength/4;b++)e.writeUint32BE(this._state[b],l,b*4);return this},u.prototype.digest=function(){var l=new Uint8Array(this.digestLength);return this.finish(l),l},u.prototype.saveState=function(){if(this._finished)throw new Error("SHA256: cannot save finished state");return{state:new Int32Array(this._state),buffer:this._bufferLength>0?new Uint8Array(this._buffer):void 0,bufferLength:this._bufferLength,bytesHashed:this._bytesHashed}},u.prototype.restoreState=function(l){return this._state.set(l.state),this._bufferLength=l.bufferLength,l.buffer&&this._buffer.set(l.buffer),this._bytesHashed=l.bytesHashed,this._finished=!1,this},u.prototype.cleanSavedState=function(l){r.wipe(l.state),l.buffer&&r.wipe(l.buffer),l.bufferLength=0,l.bytesHashed=0},u}();t.SHA256=n;var o=new Int32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);function a(u,l,f,p,g){for(;g>=64;){for(var $=l[0],_=l[1],b=l[2],D=l[3],v=l[4],S=l[5],I=l[6],R=l[7],C=0;C<16;C++){var T=p+C*4;u[C]=e.readUint32BE(f,T)}for(var C=16;C<64;C++){var P=u[C-2],E=(P>>>17|P<<15)^(P>>>19|P<<13)^P>>>10;P=u[C-15];var A=(P>>>7|P<<25)^(P>>>18|P<<14)^P>>>3;u[C]=(E+u[C-7]|0)+(A+u[C-16]|0)}for(var C=0;C<64;C++){var E=(((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+(v&S^~v&I)|0)+(R+(o[C]+u[C]|0)|0)|0,A=(($>>>2|$<<30)^($>>>13|$<<19)^($>>>22|$<<10))+($&_^$&b^_&b)|0;R=I,I=S,S=v,v=D+E|0,D=b,b=_,_=$,$=E+A|0}l[0]+=$,l[1]+=_,l[2]+=b,l[3]+=D,l[4]+=v,l[5]+=S,l[6]+=I,l[7]+=R,p+=64,g-=64}return p}function c(u){var l=new n;l.update(u);var f=l.digest();return l.clean(),f}t.hash=c})(sha256$1);var chacha20poly1305={},chacha={};Object.defineProperty(chacha,"__esModule",{value:!0});var binary_1=binary,wipe_1=wipe$1,ROUNDS=20;function core(t,e,r){for(var n=1634760805,o=857760878,a=2036477234,c=1797285236,u=r[3]<<24|r[2]<<16|r[1]<<8|r[0],l=r[7]<<24|r[6]<<16|r[5]<<8|r[4],f=r[11]<<24|r[10]<<16|r[9]<<8|r[8],p=r[15]<<24|r[14]<<16|r[13]<<8|r[12],g=r[19]<<24|r[18]<<16|r[17]<<8|r[16],$=r[23]<<24|r[22]<<16|r[21]<<8|r[20],_=r[27]<<24|r[26]<<16|r[25]<<8|r[24],b=r[31]<<24|r[30]<<16|r[29]<<8|r[28],D=e[3]<<24|e[2]<<16|e[1]<<8|e[0],v=e[7]<<24|e[6]<<16|e[5]<<8|e[4],S=e[11]<<24|e[10]<<16|e[9]<<8|e[8],I=e[15]<<24|e[14]<<16|e[13]<<8|e[12],R=n,C=o,T=a,P=c,E=u,A=l,k=f,O=p,M=g,L=$,U=_,F=b,x=D,z=v,j=S,q=I,Y=0;Y<ROUNDS;Y+=2)R=R+E|0,x^=R,x=x>>>16|x<<16,M=M+x|0,E^=M,E=E>>>20|E<<12,C=C+A|0,z^=C,z=z>>>16|z<<16,L=L+z|0,A^=L,A=A>>>20|A<<12,T=T+k|0,j^=T,j=j>>>16|j<<16,U=U+j|0,k^=U,k=k>>>20|k<<12,P=P+O|0,q^=P,q=q>>>16|q<<16,F=F+q|0,O^=F,O=O>>>20|O<<12,T=T+k|0,j^=T,j=j>>>24|j<<8,U=U+j|0,k^=U,k=k>>>25|k<<7,P=P+O|0,q^=P,q=q>>>24|q<<8,F=F+q|0,O^=F,O=O>>>25|O<<7,C=C+A|0,z^=C,z=z>>>24|z<<8,L=L+z|0,A^=L,A=A>>>25|A<<7,R=R+E|0,x^=R,x=x>>>24|x<<8,M=M+x|0,E^=M,E=E>>>25|E<<7,R=R+A|0,q^=R,q=q>>>16|q<<16,U=U+q|0,A^=U,A=A>>>20|A<<12,C=C+k|0,x^=C,x=x>>>16|x<<16,F=F+x|0,k^=F,k=k>>>20|k<<12,T=T+O|0,z^=T,z=z>>>16|z<<16,M=M+z|0,O^=M,O=O>>>20|O<<12,P=P+E|0,j^=P,j=j>>>16|j<<16,L=L+j|0,E^=L,E=E>>>20|E<<12,T=T+O|0,z^=T,z=z>>>24|z<<8,M=M+z|0,O^=M,O=O>>>25|O<<7,P=P+E|0,j^=P,j=j>>>24|j<<8,L=L+j|0,E^=L,E=E>>>25|E<<7,C=C+k|0,x^=C,x=x>>>24|x<<8,F=F+x|0,k^=F,k=k>>>25|k<<7,R=R+A|0,q^=R,q=q>>>24|q<<8,U=U+q|0,A^=U,A=A>>>25|A<<7;binary_1.writeUint32LE(R+n|0,t,0),binary_1.writeUint32LE(C+o|0,t,4),binary_1.writeUint32LE(T+a|0,t,8),binary_1.writeUint32LE(P+c|0,t,12),binary_1.writeUint32LE(E+u|0,t,16),binary_1.writeUint32LE(A+l|0,t,20),binary_1.writeUint32LE(k+f|0,t,24),binary_1.writeUint32LE(O+p|0,t,28),binary_1.writeUint32LE(M+g|0,t,32),binary_1.writeUint32LE(L+$|0,t,36),binary_1.writeUint32LE(U+_|0,t,40),binary_1.writeUint32LE(F+b|0,t,44),binary_1.writeUint32LE(x+D|0,t,48),binary_1.writeUint32LE(z+v|0,t,52),binary_1.writeUint32LE(j+S|0,t,56),binary_1.writeUint32LE(q+I|0,t,60)}function streamXOR(t,e,r,n,o){if(o===void 0&&(o=0),t.length!==32)throw new Error("ChaCha: key size must be 32 bytes");if(n.length<r.length)throw new Error("ChaCha: destination is shorter than source");var a,c;if(o===0){if(e.length!==8&&e.length!==12)throw new Error("ChaCha nonce must be 8 or 12 bytes");a=new Uint8Array(16),c=a.length-e.length,a.set(e,c)}else{if(e.length!==16)throw new Error("ChaCha nonce with counter must be 16 bytes");a=e,c=o}for(var u=new Uint8Array(64),l=0;l<r.length;l+=64){core(u,a,t);for(var f=l;f<l+64&&f<r.length;f++)n[f]=r[f]^u[f-l];incrementCounter(a,0,c)}return wipe_1.wipe(u),o===0&&wipe_1.wipe(a),n}chacha.streamXOR=streamXOR;function stream(t,e,r,n){return n===void 0&&(n=0),wipe_1.wipe(r),streamXOR(t,e,r,r,n)}chacha.stream=stream;function incrementCounter(t,e,r){for(var n=1;r--;)n=n+(t[e]&255)|0,t[e]=n&255,n>>>=8,e++;if(n>0)throw new Error("ChaCha: counter overflow")}var poly1305={};(function(t){Object.defineProperty(t,"__esModule",{value:!0});var e=constantTime,r=wipe$1;t.DIGEST_LENGTH=16;var n=function(){function c(u){this.digestLength=t.DIGEST_LENGTH,this._buffer=new Uint8Array(16),this._r=new Uint16Array(10),this._h=new Uint16Array(10),this._pad=new Uint16Array(8),this._leftover=0,this._fin=0,this._finished=!1;var l=u[0]|u[1]<<8;this._r[0]=l&8191;var f=u[2]|u[3]<<8;this._r[1]=(l>>>13|f<<3)&8191;var p=u[4]|u[5]<<8;this._r[2]=(f>>>10|p<<6)&7939;var g=u[6]|u[7]<<8;this._r[3]=(p>>>7|g<<9)&8191;var $=u[8]|u[9]<<8;this._r[4]=(g>>>4|$<<12)&255,this._r[5]=$>>>1&8190;var _=u[10]|u[11]<<8;this._r[6]=($>>>14|_<<2)&8191;var b=u[12]|u[13]<<8;this._r[7]=(_>>>11|b<<5)&8065;var D=u[14]|u[15]<<8;this._r[8]=(b>>>8|D<<8)&8191,this._r[9]=D>>>5&127,this._pad[0]=u[16]|u[17]<<8,this._pad[1]=u[18]|u[19]<<8,this._pad[2]=u[20]|u[21]<<8,this._pad[3]=u[22]|u[23]<<8,this._pad[4]=u[24]|u[25]<<8,this._pad[5]=u[26]|u[27]<<8,this._pad[6]=u[28]|u[29]<<8,this._pad[7]=u[30]|u[31]<<8}return c.prototype._blocks=function(u,l,f){for(var p=this._fin?0:2048,g=this._h[0],$=this._h[1],_=this._h[2],b=this._h[3],D=this._h[4],v=this._h[5],S=this._h[6],I=this._h[7],R=this._h[8],C=this._h[9],T=this._r[0],P=this._r[1],E=this._r[2],A=this._r[3],k=this._r[4],O=this._r[5],M=this._r[6],L=this._r[7],U=this._r[8],F=this._r[9];f>=16;){var x=u[l+0]|u[l+1]<<8;g+=x&8191;var z=u[l+2]|u[l+3]<<8;$+=(x>>>13|z<<3)&8191;var j=u[l+4]|u[l+5]<<8;_+=(z>>>10|j<<6)&8191;var q=u[l+6]|u[l+7]<<8;b+=(j>>>7|q<<9)&8191;var Y=u[l+8]|u[l+9]<<8;D+=(q>>>4|Y<<12)&8191,v+=Y>>>1&8191;var ne=u[l+10]|u[l+11]<<8;S+=(Y>>>14|ne<<2)&8191;var he=u[l+12]|u[l+13]<<8;I+=(ne>>>11|he<<5)&8191;var le=u[l+14]|u[l+15]<<8;R+=(he>>>8|le<<8)&8191,C+=le>>>5|p;var H=0,X=H;X+=g*T,X+=$*(5*F),X+=_*(5*U),X+=b*(5*L),X+=D*(5*M),H=X>>>13,X&=8191,X+=v*(5*O),X+=S*(5*k),X+=I*(5*A),X+=R*(5*E),X+=C*(5*P),H+=X>>>13,X&=8191;var Z=H;Z+=g*P,Z+=$*T,Z+=_*(5*F),Z+=b*(5*U),Z+=D*(5*L),H=Z>>>13,Z&=8191,Z+=v*(5*M),Z+=S*(5*O),Z+=I*(5*k),Z+=R*(5*A),Z+=C*(5*E),H+=Z>>>13,Z&=8191;var J=H;J+=g*E,J+=$*P,J+=_*T,J+=b*(5*F),J+=D*(5*U),H=J>>>13,J&=8191,J+=v*(5*L),J+=S*(5*M),J+=I*(5*O),J+=R*(5*k),J+=C*(5*A),H+=J>>>13,J&=8191;var ee=H;ee+=g*A,ee+=$*E,ee+=_*P,ee+=b*T,ee+=D*(5*F),H=ee>>>13,ee&=8191,ee+=v*(5*U),ee+=S*(5*L),ee+=I*(5*M),ee+=R*(5*O),ee+=C*(5*k),H+=ee>>>13,ee&=8191;var te=H;te+=g*k,te+=$*A,te+=_*E,te+=b*P,te+=D*T,H=te>>>13,te&=8191,te+=v*(5*F),te+=S*(5*U),te+=I*(5*L),te+=R*(5*M),te+=C*(5*O),H+=te>>>13,te&=8191;var oe=H;oe+=g*O,oe+=$*k,oe+=_*A,oe+=b*E,oe+=D*P,H=oe>>>13,oe&=8191,oe+=v*T,oe+=S*(5*F),oe+=I*(5*U),oe+=R*(5*L),oe+=C*(5*M),H+=oe>>>13,oe&=8191;var ie=H;ie+=g*M,ie+=$*O,ie+=_*k,ie+=b*A,ie+=D*E,H=ie>>>13,ie&=8191,ie+=v*P,ie+=S*T,ie+=I*(5*F),ie+=R*(5*U),ie+=C*(5*L),H+=ie>>>13,ie&=8191;var ae=H;ae+=g*L,ae+=$*M,ae+=_*O,ae+=b*k,ae+=D*A,H=ae>>>13,ae&=8191,ae+=v*E,ae+=S*P,ae+=I*T,ae+=R*(5*F),ae+=C*(5*U),H+=ae>>>13,ae&=8191;var ce=H;ce+=g*U,ce+=$*L,ce+=_*M,ce+=b*O,ce+=D*k,H=ce>>>13,ce&=8191,ce+=v*A,ce+=S*E,ce+=I*P,ce+=R*T,ce+=C*(5*F),H+=ce>>>13,ce&=8191;var ue=H;ue+=g*F,ue+=$*U,ue+=_*L,ue+=b*M,ue+=D*O,H=ue>>>13,ue&=8191,ue+=v*k,ue+=S*A,ue+=I*E,ue+=R*P,ue+=C*T,H+=ue>>>13,ue&=8191,H=(H<<2)+H|0,H=H+X|0,X=H&8191,H=H>>>13,Z+=H,g=X,$=Z,_=J,b=ee,D=te,v=oe,S=ie,I=ae,R=ce,C=ue,l+=16,f-=16}this._h[0]=g,this._h[1]=$,this._h[2]=_,this._h[3]=b,this._h[4]=D,this._h[5]=v,this._h[6]=S,this._h[7]=I,this._h[8]=R,this._h[9]=C},c.prototype.finish=function(u,l){l===void 0&&(l=0);var f=new Uint16Array(10),p,g,$,_;if(this._leftover){for(_=this._leftover,this._buffer[_++]=1;_<16;_++)this._buffer[_]=0;this._fin=1,this._blocks(this._buffer,0,16)}for(p=this._h[1]>>>13,this._h[1]&=8191,_=2;_<10;_++)this._h[_]+=p,p=this._h[_]>>>13,this._h[_]&=8191;for(this._h[0]+=p*5,p=this._h[0]>>>13,this._h[0]&=8191,this._h[1]+=p,p=this._h[1]>>>13,this._h[1]&=8191,this._h[2]+=p,f[0]=this._h[0]+5,p=f[0]>>>13,f[0]&=8191,_=1;_<10;_++)f[_]=this._h[_]+p,p=f[_]>>>13,f[_]&=8191;for(f[9]-=8192,g=(p^1)-1,_=0;_<10;_++)f[_]&=g;for(g=~g,_=0;_<10;_++)this._h[_]=this._h[_]&g|f[_];for(this._h[0]=(this._h[0]|this._h[1]<<13)&65535,this._h[1]=(this._h[1]>>>3|this._h[2]<<10)&65535,this._h[2]=(this._h[2]>>>6|this._h[3]<<7)&65535,this._h[3]=(this._h[3]>>>9|this._h[4]<<4)&65535,this._h[4]=(this._h[4]>>>12|this._h[5]<<1|this._h[6]<<14)&65535,this._h[5]=(this._h[6]>>>2|this._h[7]<<11)&65535,this._h[6]=(this._h[7]>>>5|this._h[8]<<8)&65535,this._h[7]=(this._h[8]>>>8|this._h[9]<<5)&65535,$=this._h[0]+this._pad[0],this._h[0]=$&65535,_=1;_<8;_++)$=(this._h[_]+this._pad[_]|0)+($>>>16)|0,this._h[_]=$&65535;return u[l+0]=this._h[0]>>>0,u[l+1]=this._h[0]>>>8,u[l+2]=this._h[1]>>>0,u[l+3]=this._h[1]>>>8,u[l+4]=this._h[2]>>>0,u[l+5]=this._h[2]>>>8,u[l+6]=this._h[3]>>>0,u[l+7]=this._h[3]>>>8,u[l+8]=this._h[4]>>>0,u[l+9]=this._h[4]>>>8,u[l+10]=this._h[5]>>>0,u[l+11]=this._h[5]>>>8,u[l+12]=this._h[6]>>>0,u[l+13]=this._h[6]>>>8,u[l+14]=this._h[7]>>>0,u[l+15]=this._h[7]>>>8,this._finished=!0,this},c.prototype.update=function(u){var l=0,f=u.length,p;if(this._leftover){p=16-this._leftover,p>f&&(p=f);for(var g=0;g<p;g++)this._buffer[this._leftover+g]=u[l+g];if(f-=p,l+=p,this._leftover+=p,this._leftover<16)return this;this._blocks(this._buffer,0,16),this._leftover=0}if(f>=16&&(p=f-f%16,this._blocks(u,l,p),l+=p,f-=p),f){for(var g=0;g<f;g++)this._buffer[this._leftover+g]=u[l+g];this._leftover+=f}return this},c.prototype.digest=function(){if(this._finished)throw new Error("Poly1305 was finished");var u=new Uint8Array(16);return this.finish(u),u},c.prototype.clean=function(){return r.wipe(this._buffer),r.wipe(this._r),r.wipe(this._h),r.wipe(this._pad),this._leftover=0,this._fin=0,this._finished=!0,this},c}();t.Poly1305=n;function o(c,u){var l=new n(c);l.update(u);var f=l.digest();return l.clean(),f}t.oneTimeAuth=o;function a(c,u){return c.length!==t.DIGEST_LENGTH||u.length!==t.DIGEST_LENGTH?!1:e.equal(c,u)}t.equal=a})(poly1305),function(t){Object.defineProperty(t,"__esModule",{value:!0});var e=chacha,r=poly1305,n=wipe$1,o=binary,a=constantTime;t.KEY_LENGTH=32,t.NONCE_LENGTH=12,t.TAG_LENGTH=16;var c=new Uint8Array(16),u=function(){function l(f){if(this.nonceLength=t.NONCE_LENGTH,this.tagLength=t.TAG_LENGTH,f.length!==t.KEY_LENGTH)throw new Error("ChaCha20Poly1305 needs 32-byte key");this._key=new Uint8Array(f)}return l.prototype.seal=function(f,p,g,$){if(f.length>16)throw new Error("ChaCha20Poly1305: incorrect nonce length");var _=new Uint8Array(16);_.set(f,_.length-f.length);var b=new Uint8Array(32);e.stream(this._key,_,b,4);var D=p.length+this.tagLength,v;if($){if($.length!==D)throw new Error("ChaCha20Poly1305: incorrect destination length");v=$}else v=new Uint8Array(D);return e.streamXOR(this._key,_,p,v,4),this._authenticate(v.subarray(v.length-this.tagLength,v.length),b,v.subarray(0,v.length-this.tagLength),g),n.wipe(_),v},l.prototype.open=function(f,p,g,$){if(f.length>16)throw new Error("ChaCha20Poly1305: incorrect nonce length");if(p.length<this.tagLength)return null;var _=new Uint8Array(16);_.set(f,_.length-f.length);var b=new Uint8Array(32);e.stream(this._key,_,b,4);var D=new Uint8Array(this.tagLength);if(this._authenticate(D,b,p.subarray(0,p.length-this.tagLength),g),!a.equal(D,p.subarray(p.length-this.tagLength,p.length)))return null;var v=p.length-this.tagLength,S;if($){if($.length!==v)throw new Error("ChaCha20Poly1305: incorrect destination length");S=$}else S=new Uint8Array(v);return e.streamXOR(this._key,_,p.subarray(0,p.length-this.tagLength),S,4),n.wipe(_),S},l.prototype.clean=function(){return n.wipe(this._key),this},l.prototype._authenticate=function(f,p,g,$){var _=new r.Poly1305(p);$&&(_.update($),$.length%16>0&&_.update(c.subarray($.length%16))),_.update(g),g.length%16>0&&_.update(c.subarray(g.length%16));var b=new Uint8Array(8);$&&o.writeUint64LE($.length,b),_.update(b),o.writeUint64LE(g.length,b),_.update(b);for(var D=_.digest(),v=0;v<D.length;v++)f[v]=D[v];_.clean(),n.wipe(D),n.wipe(b)},l}();t.ChaCha20Poly1305=u}(chacha20poly1305);const stablelib={hashSHA256(t){return sha256$1.hash(t)},getHKDF(t,e){const r=new HKDF_1(sha256$1.SHA256,e,t).expand(96),n=r.subarray(0,32),o=r.subarray(32,64),a=r.subarray(64,96);return[n,o,a]},generateX25519KeyPair(){const t=x25519.generateKeyPair();return{publicKey:t.publicKey,privateKey:t.secretKey}},generateX25519KeyPairFromSeed(t){const e=x25519.generateKeyPairFromSeed(t);return{publicKey:e.publicKey,privateKey:e.secretKey}},generateX25519SharedKey(t,e){return x25519.sharedKey(t,e)},chaCha20Poly1305Encrypt(t,e,r,n){return new chacha20poly1305.ChaCha20Poly1305(n).seal(e,t,r)},chaCha20Poly1305Decrypt(t,e,r,n,o){return new chacha20poly1305.ChaCha20Poly1305(n).open(e,t,r,o)}},allocUnsafe$1=t=>globalThis.Buffer?globalThis.Buffer.allocUnsafe(t):new Uint8Array(t),uint16BEEncode=t=>{const e=allocUnsafe$1(2);return new DataView(e.buffer,e.byteOffset,e.byteLength).setUint16(0,t,!1),e};uint16BEEncode.bytes=2;const uint16BEDecode=t=>{if(t.length<2)throw RangeError("Could not decode int16BE");return t instanceof Uint8Array?new DataView(t.buffer,t.byteOffset,t.byteLength).getUint16(0,!1):t.getUint16(0)};uint16BEDecode.bytes=2;function encode0(t){return concat$8([t.ne,t.ciphertext],t.ne.length+t.ciphertext.length)}function encode1(t){return concat$8([t.ne,t.ns,t.ciphertext],t.ne.length+t.ns.length+t.ciphertext.length)}function encode2(t){return concat$8([t.ns,t.ciphertext],t.ns.length+t.ciphertext.length)}function decode0(t){if(t.length<32)throw new Error("Cannot decode stage 0 MessageBuffer: length less than 32 bytes.");return{ne:t.subarray(0,32),ciphertext:t.subarray(32,t.length),ns:new Uint8Array(0)}}function decode1(t){if(t.length<80)throw new Error("Cannot decode stage 1 MessageBuffer: length less than 80 bytes.");return{ne:t.subarray(0,32),ns:t.subarray(32,80),ciphertext:t.subarray(80,t.length)}}function decode2(t){if(t.length<48)throw new Error("Cannot decode stage 2 MessageBuffer: length less than 48 bytes.");return{ne:new Uint8Array(0),ns:t.subarray(0,48),ciphertext:t.subarray(48,t.length)}}function encryptStream(t,e){return async function*(r){for await(const n of r)for(let o=0;o<n.length;o+=NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG){let a=o+NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG;a>n.length&&(a=n.length);const c=t.encrypt(n.subarray(o,a),t.session);e?.encryptedPackets.increment(),yield uint16BEEncode(c.byteLength),yield c}}}function decryptStream(t,e){return async function*(r){for await(const n of r)for(let o=0;o<n.length;o+=NOISE_MSG_MAX_LENGTH_BYTES){let a=o+NOISE_MSG_MAX_LENGTH_BYTES;if(a>n.length&&(a=n.length),a-chacha20poly1305.TAG_LENGTH<o)throw new Error("Invalid chunk");const c=n.subarray(o,a),u=n.subarray(o,a-chacha20poly1305.TAG_LENGTH),{plaintext:l,valid:f}=t.decrypt(c,t.session,u);if(!f)throw e?.decryptErrors.increment(),new Error("Failed to validate decrypted chunk");e?.decryptedPackets.increment(),yield l}}}class UnexpectedPeerError extends Error{constructor(e="Unexpected Peer"){super(e),this.code=UnexpectedPeerError.code}static get code(){return"ERR_UNEXPECTED_PEER"}}class InvalidCryptoExchangeError extends Error{constructor(e="Invalid crypto exchange"){super(e),this.code=InvalidCryptoExchangeError.code}static get code(){return"ERR_INVALID_CRYPTO_EXCHANGE"}}var NoiseExtensions;(function(t){let e;t.codec=()=>(e==null&&(e=message$2((r,n,o={})=>{if(o.lengthDelimited!==!1&&n.fork(),r.webtransportCerthashes!=null)for(const a of r.webtransportCerthashes)n.uint32(10),n.bytes(a);o.lengthDelimited!==!1&&n.ldelim()},(r,n)=>{const o={webtransportCerthashes:[]},a=n==null?r.len:r.pos+n;for(;r.pos<a;){const c=r.uint32();switch(c>>>3){case 1:o.webtransportCerthashes.push(r.bytes());break;default:r.skipType(c&7);break}}return o})),e),t.encode=r=>encodeMessage$2(r,t.codec()),t.decode=r=>decodeMessage$3(r,t.codec())})(NoiseExtensions||(NoiseExtensions={}));var NoiseHandshakePayload;(function(t){let e;t.codec=()=>(e==null&&(e=message$2((r,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),(o.writeDefaults===!0||r.identityKey!=null&&r.identityKey.byteLength>0)&&(n.uint32(10),n.bytes(r.identityKey??new Uint8Array(0))),(o.writeDefaults===!0||r.identitySig!=null&&r.identitySig.byteLength>0)&&(n.uint32(18),n.bytes(r.identitySig??new Uint8Array(0))),r.extensions!=null&&(n.uint32(34),NoiseExtensions.codec().encode(r.extensions,n,{writeDefaults:!1})),o.lengthDelimited!==!1&&n.ldelim()},(r,n)=>{const o={identityKey:new Uint8Array(0),identitySig:new Uint8Array(0)},a=n==null?r.len:r.pos+n;for(;r.pos<a;){const c=r.uint32();switch(c>>>3){case 1:o.identityKey=r.bytes();break;case 2:o.identitySig=r.bytes();break;case 4:o.extensions=NoiseExtensions.codec().decode(r,r.uint32());break;default:r.skipType(c&7);break}}return o})),e),t.encode=r=>encodeMessage$2(r,t.codec()),t.decode=r=>decodeMessage$3(r,t.codec())})(NoiseHandshakePayload||(NoiseHandshakePayload={}));async function getPayload(t,e,r){const n=await signPayload(t,getHandshakePayload(e));if(t.publicKey==null)throw new Error("PublicKey was missing from local PeerId");return createHandshakePayload(t.publicKey,n,r)}function createHandshakePayload(t,e,r){return NoiseHandshakePayload.encode({identityKey:t,identitySig:e,extensions:r??{webtransportCerthashes:[]}}).subarray()}async function signPayload(t,e){if(t.privateKey==null)throw new Error("PrivateKey was missing from PeerId");return await(await unmarshalPrivateKey(t.privateKey)).sign(e)}async function getPeerIdFromPayload(t){return await peerIdFromKeys(t.identityKey)}function decodePayload(t){return NoiseHandshakePayload.decode(t)}function getHandshakePayload(t){const e=fromString$y("noise-libp2p-static-key:");return concat$8([e,t],e.length+t.length)}async function verifySignedPayload(t,e,r){const n=await peerIdFromKeys(e.identityKey);if(!n.equals(r))throw new Error(`Payload identity key ${n.toString()} does not match expected remote peer ${r.toString()}`);const o=getHandshakePayload(t);if(n.publicKey==null)throw new Error("PublicKey was missing from PeerId");if(e.identitySig==null)throw new Error("Signature was missing from message");if(!await unmarshalPublicKey(n.publicKey).verify(o,e.identitySig))throw new Error("Static key doesn't match to peer that signed payload!");return n}function isValidPublicKey(t){return!(!(t instanceof Uint8Array)||t.length!==32)}const log$2=logger$3("libp2p:noise");let keyLogger;DUMP_SESSION_KEYS?keyLogger=log$2:keyLogger=Object.assign(()=>{},{enabled:!1,trace:()=>{},error:()=>{}});function logLocalStaticKeys(t){keyLogger(`LOCAL_STATIC_PUBLIC_KEY ${toString$D(t.publicKey,"hex")}`),keyLogger(`LOCAL_STATIC_PRIVATE_KEY ${toString$D(t.privateKey,"hex")}`)}function logLocalEphemeralKeys(t){t?(keyLogger(`LOCAL_PUBLIC_EPHEMERAL_KEY ${toString$D(t.publicKey,"hex")}`),keyLogger(`LOCAL_PRIVATE_EPHEMERAL_KEY ${toString$D(t.privateKey,"hex")}`)):keyLogger("Missing local ephemeral keys.")}function logRemoteStaticKey(t){keyLogger(`REMOTE_STATIC_PUBLIC_KEY ${toString$D(t,"hex")}`)}function logRemoteEphemeralKey(t){keyLogger(`REMOTE_EPHEMERAL_PUBLIC_KEY ${toString$D(t,"hex")}`)}function logCipherState(t){t.cs1&&t.cs2?(keyLogger(`CIPHER_STATE_1 ${t.cs1.n.getUint64()} ${toString$D(t.cs1.k,"hex")}`),keyLogger(`CIPHER_STATE_2 ${t.cs2.n.getUint64()} ${toString$D(t.cs2.k,"hex")}`)):keyLogger("Missing cipher state.")}const MIN_NONCE=0,MAX_NONCE=4294967295,ERR_MAX_NONCE="Cipherstate has reached maximum n, a new handshake must be performed";class Nonce{constructor(e=MIN_NONCE){this.n=e,this.bytes=new Uint8Array(12),this.view=new DataView(this.bytes.buffer,this.bytes.byteOffset,this.bytes.byteLength),this.view.setUint32(4,e,!0)}increment(){this.n++,this.view.setUint32(4,this.n,!0)}getBytes(){return this.bytes}getUint64(){return this.n}assertValue(){if(this.n>MAX_NONCE)throw new Error(ERR_MAX_NONCE)}}class AbstractHandshake{constructor(e){this.crypto=e}encryptWithAd(e,r,n){const o=this.encrypt(e.k,e.n,r,n);return e.n.increment(),o}decryptWithAd(e,r,n,o){const{plaintext:a,valid:c}=this.decrypt(e.k,e.n,r,n,o);return c&&e.n.increment(),{plaintext:a,valid:c}}hasKey(e){return!this.isEmptyKey(e.k)}createEmptyKey(){return new Uint8Array(32)}isEmptyKey(e){const r=this.createEmptyKey();return equals$R(r,e)}encrypt(e,r,n,o){return r.assertValue(),this.crypto.chaCha20Poly1305Encrypt(o,r.getBytes(),n,e)}encryptAndHash(e,r){let n;return this.hasKey(e.cs)?n=this.encryptWithAd(e.cs,e.h,r):n=r,this.mixHash(e,n),n}decrypt(e,r,n,o,a){r.assertValue();const c=this.crypto.chaCha20Poly1305Decrypt(o,r.getBytes(),n,e,a);return c?{plaintext:c,valid:!0}:{plaintext:new Uint8Array(0),valid:!1}}decryptAndHash(e,r){let n,o=!0;return this.hasKey(e.cs)?{plaintext:n,valid:o}=this.decryptWithAd(e.cs,e.h,r):n=r,this.mixHash(e,r),{plaintext:n,valid:o}}dh(e,r){try{const n=this.crypto.generateX25519SharedKey(e,r);return n.length===32?n:n.subarray(0,32)}catch(n){const o=n;return log$2.error(o),new Uint8Array(32)}}mixHash(e,r){e.h=this.getHash(e.h,r)}getHash(e,r){return this.crypto.hashSHA256(concat$8([e,r],e.length+r.length))}mixKey(e,r){const[n,o]=this.crypto.getHKDF(e.ck,r);e.cs=this.initializeKey(o),e.ck=n}initializeKey(e){return{k:e,n:new Nonce}}initializeSymmetric(e){const r=fromString$y(e,"utf-8"),n=this.hashProtocolName(r),o=n,a=this.createEmptyKey();return{cs:this.initializeKey(a),ck:o,h:n}}hashProtocolName(e){if(e.length<=32){const r=new Uint8Array(32);return r.set(e),r}else return this.getHash(e,new Uint8Array(0))}split(e){const[r,n]=this.crypto.getHKDF(e.ck,new Uint8Array(0)),o=this.initializeKey(r),a=this.initializeKey(n);return{cs1:o,cs2:a}}writeMessageRegular(e,r){const n=this.encryptWithAd(e,new Uint8Array(0),r),o=this.createEmptyKey(),a=new Uint8Array(0);return{ne:o,ns:a,ciphertext:n}}readMessageRegular(e,r){return this.decryptWithAd(e,new Uint8Array(0),r.ciphertext)}}class XX extends AbstractHandshake{initializeInitiator(e,r,n,o){const a=this.initializeSymmetric("Noise_XX_25519_ChaChaPoly_SHA256");this.mixHash(a,e);const c=new Uint8Array(32);return{ss:a,s:r,rs:n,psk:o,re:c}}initializeResponder(e,r,n,o){const a=this.initializeSymmetric("Noise_XX_25519_ChaChaPoly_SHA256");this.mixHash(a,e);const c=new Uint8Array(32);return{ss:a,s:r,rs:n,psk:o,re:c}}writeMessageA(e,r,n){const o=new Uint8Array(0);n!==void 0?e.e=n:e.e=this.crypto.generateX25519KeyPair();const a=e.e.publicKey;this.mixHash(e.ss,a);const c=this.encryptAndHash(e.ss,r);return{ne:a,ns:o,ciphertext:c}}writeMessageB(e,r){e.e=this.crypto.generateX25519KeyPair();const n=e.e.publicKey;this.mixHash(e.ss,n),this.mixKey(e.ss,this.dh(e.e.privateKey,e.re));const o=e.s.publicKey,a=this.encryptAndHash(e.ss,o);this.mixKey(e.ss,this.dh(e.s.privateKey,e.re));const c=this.encryptAndHash(e.ss,r);return{ne:n,ns:a,ciphertext:c}}writeMessageC(e,r){const n=e.s.publicKey,o=this.encryptAndHash(e.ss,n);this.mixKey(e.ss,this.dh(e.s.privateKey,e.re));const a=this.encryptAndHash(e.ss,r),c={ne:this.createEmptyKey(),ns:o,ciphertext:a},{cs1:u,cs2:l}=this.split(e.ss);return{h:e.ss.h,messageBuffer:c,cs1:u,cs2:l}}readMessageA(e,r){return isValidPublicKey(r.ne)&&(e.re=r.ne),this.mixHash(e.ss,e.re),this.decryptAndHash(e.ss,r.ciphertext)}readMessageB(e,r){if(isValidPublicKey(r.ne)&&(e.re=r.ne),this.mixHash(e.ss,e.re),!e.e)throw new Error("Handshake state `e` param is missing.");this.mixKey(e.ss,this.dh(e.e.privateKey,e.re));const{plaintext:n,valid:o}=this.decryptAndHash(e.ss,r.ns);o&&isValidPublicKey(n)&&(e.rs=n),this.mixKey(e.ss,this.dh(e.e.privateKey,e.rs));const{plaintext:a,valid:c}=this.decryptAndHash(e.ss,r.ciphertext);return{plaintext:a,valid:o&&c}}readMessageC(e,r){const{plaintext:n,valid:o}=this.decryptAndHash(e.ss,r.ns);if(o&&isValidPublicKey(n)&&(e.rs=n),!e.e)throw new Error("Handshake state `e` param is missing.");this.mixKey(e.ss,this.dh(e.e.privateKey,e.rs));const{plaintext:a,valid:c}=this.decryptAndHash(e.ss,r.ciphertext),{cs1:u,cs2:l}=this.split(e.ss);return{h:e.ss.h,plaintext:a,valid:o&&c,cs1:u,cs2:l}}initSession(e,r,n){const o=this.createEmptyKey(),a=new Uint8Array(32);let c;return e?c=this.initializeInitiator(r,n,a,o):c=this.initializeResponder(r,n,a,o),{hs:c,i:e,mc:0}}sendMessage(e,r,n){let o;if(e.mc===0)o=this.writeMessageA(e.hs,r,n);else if(e.mc===1)o=this.writeMessageB(e.hs,r);else if(e.mc===2){const{h:a,messageBuffer:c,cs1:u,cs2:l}=this.writeMessageC(e.hs,r);o=c,e.h=a,e.cs1=u,e.cs2=l}else if(e.mc>2)if(e.i){if(!e.cs1)throw new Error("CS1 (cipher state) is not defined");o=this.writeMessageRegular(e.cs1,r)}else{if(!e.cs2)throw new Error("CS2 (cipher state) is not defined");o=this.writeMessageRegular(e.cs2,r)}else throw new Error("Session invalid.");return e.mc++,o}recvMessage(e,r){let n=new Uint8Array(0),o=!1;if(e.mc===0)({plaintext:n,valid:o}=this.readMessageA(e.hs,r));else if(e.mc===1)({plaintext:n,valid:o}=this.readMessageB(e.hs,r));else if(e.mc===2){const{h:a,plaintext:c,valid:u,cs1:l,cs2:f}=this.readMessageC(e.hs,r);n=c,o=u,e.h=a,e.cs1=l,e.cs2=f}return e.mc++,{plaintext:n,valid:o}}}class XXHandshake{constructor(e,r,n,o,a,c,u,l){this.remoteExtensions={webtransportCerthashes:[]},this.isInitiator=e,this.payload=r,this.prologue=n,this.staticKeypair=a,this.connection=c,u&&(this.remotePeer=u),this.xx=l??new XX(o),this.session=this.xx.initSession(this.isInitiator,this.prologue,this.staticKeypair)}async propose(){if(logLocalStaticKeys(this.session.hs.s),this.isInitiator){log$2.trace("Stage 0 - Initiator starting to send first message.");const e=this.xx.sendMessage(this.session,new Uint8Array(0));this.connection.writeLP(encode0(e)),log$2.trace("Stage 0 - Initiator finished sending first message."),logLocalEphemeralKeys(this.session.hs.e)}else{log$2.trace("Stage 0 - Responder waiting to receive first message...");const e=decode0((await this.connection.readLP()).subarray()),{valid:r}=this.xx.recvMessage(this.session,e);if(!r)throw new InvalidCryptoExchangeError("xx handshake stage 0 validation fail");log$2.trace("Stage 0 - Responder received first message."),logRemoteEphemeralKey(this.session.hs.re)}}async exchange(){if(this.isInitiator){log$2.trace("Stage 1 - Initiator waiting to receive first message from responder...");const e=decode1((await this.connection.readLP()).subarray()),{plaintext:r,valid:n}=this.xx.recvMessage(this.session,e);if(!n)throw new InvalidCryptoExchangeError("xx handshake stage 1 validation fail");log$2.trace("Stage 1 - Initiator received the message."),logRemoteEphemeralKey(this.session.hs.re),logRemoteStaticKey(this.session.hs.rs),log$2.trace("Initiator going to check remote's signature...");try{const o=decodePayload(r);this.remotePeer=this.remotePeer||await getPeerIdFromPayload(o),await verifySignedPayload(this.session.hs.rs,o,this.remotePeer),this.setRemoteNoiseExtension(o.extensions)}catch(o){const a=o;throw new UnexpectedPeerError(`Error occurred while verifying signed payload: ${a.message}`)}log$2.trace("All good with the signature!")}else{log$2.trace("Stage 1 - Responder sending out first message with signed payload and static key.");const e=this.xx.sendMessage(this.session,this.payload);this.connection.writeLP(encode1(e)),log$2.trace("Stage 1 - Responder sent the second handshake message with signed payload."),logLocalEphemeralKeys(this.session.hs.e)}}async finish(){if(this.isInitiator){log$2.trace("Stage 2 - Initiator sending third handshake message.");const e=this.xx.sendMessage(this.session,this.payload);this.connection.writeLP(encode2(e)),log$2.trace("Stage 2 - Initiator sent message with signed payload.")}else{log$2.trace("Stage 2 - Responder waiting for third handshake message...");const e=decode2((await this.connection.readLP()).subarray()),{plaintext:r,valid:n}=this.xx.recvMessage(this.session,e);if(!n)throw new InvalidCryptoExchangeError("xx handshake stage 2 validation fail");log$2.trace("Stage 2 - Responder received the message, finished handshake.");try{const o=decodePayload(r);this.remotePeer=this.remotePeer||await getPeerIdFromPayload(o),await verifySignedPayload(this.session.hs.rs,o,this.remotePeer),this.setRemoteNoiseExtension(o.extensions)}catch(o){const a=o;throw new UnexpectedPeerError(`Error occurred while verifying signed payload: ${a.message}`)}}logCipherState(this.session)}encrypt(e,r){const n=this.getCS(r);return this.xx.encryptWithAd(n,new Uint8Array(0),e)}decrypt(e,r,n){const o=this.getCS(r,!1);return this.xx.decryptWithAd(o,new Uint8Array(0),e,n)}getRemoteStaticKey(){return this.session.hs.rs}getCS(e,r=!0){if(!e.cs1||!e.cs2)throw new InvalidCryptoExchangeError("Handshake not completed properly, cipher state does not exist.");return this.isInitiator?r?e.cs1:e.cs2:r?e.cs2:e.cs1}setRemoteNoiseExtension(e){e&&(this.remoteExtensions=e)}}function registerMetrics(t){return{xxHandshakeSuccesses:t.registerCounter("libp2p_noise_xxhandshake_successes_total",{help:"Total count of noise xxHandshakes successes_"}),xxHandshakeErrors:t.registerCounter("libp2p_noise_xxhandshake_error_total",{help:"Total count of noise xxHandshakes errors"}),encryptedPackets:t.registerCounter("libp2p_noise_encrypted_packets_total",{help:"Total count of noise encrypted packets successfully"}),decryptedPackets:t.registerCounter("libp2p_noise_decrypted_packets_total",{help:"Total count of noise decrypted packets"}),decryptErrors:t.registerCounter("libp2p_noise_decrypt_errors_total",{help:"Total count of noise decrypt errors"})}}class Noise{constructor(e={}){this.protocol="/noise";const{staticNoiseKey:r,extensions:n,crypto:o,prologueBytes:a,metrics:c}=e;this.crypto=o??stablelib,this.extensions=n,this.metrics=c?registerMetrics(c):void 0,r?this.staticKeys=this.crypto.generateX25519KeyPairFromSeed(r):this.staticKeys=this.crypto.generateX25519KeyPair(),this.prologue=a??new Uint8Array(0)}async secureOutbound(e,r,n){const o=pbStream(r,{lengthEncoder:uint16BEEncode,lengthDecoder:uint16BEDecode,maxDataLength:NOISE_MSG_MAX_LENGTH_BYTES}),a=await this.performHandshake({connection:o,isInitiator:!0,localPeer:e,remotePeer:n});return{conn:await this.createSecureConnection(o,a),remoteExtensions:a.remoteExtensions,remotePeer:a.remotePeer}}async secureInbound(e,r,n){const o=pbStream(r,{lengthEncoder:uint16BEEncode,lengthDecoder:uint16BEDecode,maxDataLength:NOISE_MSG_MAX_LENGTH_BYTES}),a=await this.performHandshake({connection:o,isInitiator:!1,localPeer:e,remotePeer:n});return{conn:await this.createSecureConnection(o,a),remotePeer:a.remotePeer,remoteExtensions:a.remoteExtensions}}async performHandshake(e){const r=await getPayload(e.localPeer,this.staticKeys.publicKey,this.extensions);return await this.performXXHandshake(e,r)}async performXXHandshake(e,r){const{isInitiator:n,remotePeer:o,connection:a}=e,c=new XXHandshake(n,r,this.prologue,this.crypto,this.staticKeys,a,o);try{await c.propose(),await c.exchange(),await c.finish(),this.metrics?.xxHandshakeSuccesses.increment()}catch(u){if(this.metrics?.xxHandshakeErrors.increment(),u instanceof Error)throw u.message=`Error occurred during XX handshake: ${u.message}`,u}return c}async createSecureConnection(e,r){const[n,o]=duplexPair(),a=e.unwrap();return await pipe$1(n,encryptStream(r,this.metrics),a,decode$7({lengthDecoder:uint16BEDecode}),decryptStream(r,this.metrics),n),o}}noise=function(t={}){return()=>new Noise(t)};const mergeOptions$2=mergeOptions$h.bind({ignoreUndefined:!0,concatArrays:!0});function createLibp2p({options:t={},peerId:e,multiaddrs:r=[],repo:n,keychainConfig:o={},config:a={}}){const{datastore:c}=n,u=getLibp2pOptions({options:t,config:a,datastore:c,keychainConfig:o,peerId:e,multiaddrs:r});return typeof t.libp2p=="function"?t.libp2p({libp2pOptions:u,options:t,config:a,datastore:c,peerId:e}):(u.start=!1,createLibp2p$1(u))}function getLibp2pOptions({options:t,config:e,datastore:r,keychainConfig:n,peerId:o,multiaddrs:a}){const c=()=>{const _=get$3(e,"Pubsub.Router")||"gossipsub",b=routers();if(!b[_])throw errcode(new Error(`Router unavailable. Configure libp2p.modules.pubsub to use the ${_} router.`),"ERR_NOT_SUPPORTED");return b[_]},u={datastore:r,peerId:o},l={addresses:{listen:a.map(_=>_.toString()),announce:get$3(t,"addresses.announce",get$3(e,"Addresses.Announce",[])),noAnnounce:get$3(t,"addresses.noAnnounce",get$3(e,"Addresses.NoAnnounce",[]))},connectionManager:get$3(t,"connectionManager",{maxConnections:get$3(t,"config.Swarm.ConnMgr.HighWater",get$3(e,"Swarm.ConnMgr.HighWater")),minConnections:get$3(t,"config.Swarm.ConnMgr.LowWater",get$3(e,"Swarm.ConnMgr.LowWater"))}),keychain:n,identify:{host:{agentVersion:`js-ipfs/${ipfsCore}`}},contentRouters:[],peerRouters:[],peerDiscovery:[],transports:[],streamMuxers:[mplex({maxInboundStreams:256,maxOutboundStreams:1024})],connectionEncryption:[noise()],relay:{enabled:get$3(t,"relay.enabled",get$3(e,"relay.enabled",!0)),hop:{enabled:get$3(t,"relay.hop.enabled",get$3(e,"relay.hop.enabled",!1)),active:get$3(t,"relay.hop.active",get$3(e,"relay.hop.active",!1))}},nat:{enabled:!get$3(e,"Swarm.DisableNatPortMap",!1)}};get$3(t,"config.Pubsub.Enabled",get$3(e,"Pubsub.Enabled",!0))&&(l.pubsub=c()),get$3(e,"Routing.Type","dhtclient")!=="none"&&(l.dht=kadDHT({clientMode:get$3(e,"Routing.Type","dht")!=="dhtserver",kBucketSize:get$3(t,"dht.kBucketSize",20),validators:{ipns:ipnsValidator},selectors:{ipns:ipnsSelector}}));const f=get$3(t,"config.Bootstrap",get$3(e,"Bootstrap",[]));f.length>0&&l.peerDiscovery?.push(bootstrap({list:f}));let p=get$3(t,"libp2p",void 0);typeof p=="function"&&(p=void 0);const g=mergeOptions$2(u,libp2pConfig(),l,p),$=get$3(t,"config.Addresses.Delegates",get$3(e,"Addresses.Delegates",[]));if($.length>0){const _=$[Math.floor(Math.random()*$.length)],b=multiaddr$a(_).toOptions(),D={host:b.host,protocol:parseInt(b.port)===443?"https":"http",port:b.port},v=create$a(D);g.contentRouters?.push(delegatedContentRouting(v)),g.peerRouters?.push(delegatedPeerRouting(v))}return get$3(t,"config.Discovery.MDNS.Enabled",get$3(e,"Discovery.MDNS.Enabled",!0))||(g.peerDiscovery=g.peerDiscovery?.filter(_=>{try{if(typeof _=="function")return _({})[Symbol.toStringTag]!=="@libp2p/mdns"}catch{}return!0})),g.transports==null&&(g.transports=[]),g.transports.find(_=>{try{if(typeof _=="function")return _({})[Symbol.toStringTag]==="@libp2p/websockets"}catch{}return!1})==null&&g.transports.push(webSockets()),g}const mergeOptions$1=mergeOptions$h.bind({ignoreUndefined:!0}),log$1=logger$3("ipfs:components:peer:storage");class Storage{constructor(e,r,n,o,a){this.print=o,this.peerId=e,this.keychain=r,this.repo=n,this.print=o,this.isNew=a}static async start(e,r,n){const{repoAutoMigrate:o,repo:a,onMigrationProgress:c}=n,u=typeof a=="string"||a==null?createRepo$1(e,r,{path:a,autoMigrate:o,onMigrationProgress:c}):a,{peerId:l,keychain:f,isNew:p}=await loadRepo(e,u,n);return new Storage(l,f,u,e,p)}}const loadRepo=async(t,e,r)=>{if(!e.closed)return{...await configureRepo(e,r),isNew:!1};try{return await e.open(),{...await configureRepo(e,r),isNew:!1}}catch(n){if(n.code!==ERR_REPO_NOT_INITIALIZED)throw n;if(r.init&&r.init.allowNew===!1)throw new NotEnabledError("Initialization of new repos disabled by config, pass `config.init.isNew: true` to enable it");return{...await initRepo(t,e,r),isNew:!0}}},initRepo=async(t,e,r)=>{const n=r.init||{},o=await e.exists();if(log$1("repo exists?",o),o===!0)throw new Error("repo already exists");const a=n.privateKey?await decodePeerId(n.privateKey):await initPeerId(t,n),c=peerIdToIdentity(a);log$1("peer identity: %s",c.PeerID);const u={...mergeOptions$1(applyProfiles(getDefaultConfig(),n.profiles),r.config),Identity:c};await e.init(u),await e.open(),log$1("repo opened");const l={pass:r.pass};try{l.dek=await e.config.get("Keychain.DEK")}catch(p){if(p.code!=="ERR_NOT_FOUND")throw p}const f=await createLibp2p({options:void 0,multiaddrs:void 0,peerId:a,repo:e,config:u,keychainConfig:l});return await e.datastore.has(new Key("/info/self"))||await f.keychain.importPeer("self",a),await e.config.set("Keychain",{DEK:f.keychain.init.dek}),{peerId:a,keychain:f.keychain}},decodePeerId=async t=>{if(log$1("using user-supplied private-key"),isPeerId(t))return t;const e=fromString$y(t,"base64pad"),r=await unmarshalPrivateKey(e);return await peerIdFromKeys(r.public.bytes,r.bytes)},initPeerId=(t,{algorithm:e="Ed25519",bits:r=2048})=>{if(t("generating %s keypair...",e),e==="Ed25519")return createEd25519PeerId();if(e==="RSA")return createRSAPeerId({bits:r});throw errcode(new Error("Unknown PeerId algorithm"),"ERR_UNKNOWN_PEER_ID_ALGORITHM")},peerIdToIdentity=t=>{if(t.privateKey==null)throw errcode(new Error("Private key missing"),"ERR_MISSING_PRIVATE_KEY");return{PeerID:t.toString(),PrivKey:toString$D(t.privateKey,"base64pad")}},configureRepo=async(t,e)=>{const r=e.config,n=e.init&&e.init.profiles||[],o=e.pass,a=await t.config.getAll(),c=mergeConfigs(applyProfiles(a,n),r);if(a!==c&&await t.config.replace(c),!c.Identity||!c.Identity.PrivKey)throw new NotInitializedError("No private key was found in the config, please intialize the repo");const u=fromString$y(c.Identity.PrivKey,"base64pad"),l=await unmarshalPrivateKey(u),f=await peerIdFromKeys(l.public.bytes,l.bytes),p=await createLibp2p({options:void 0,multiaddrs:void 0,peerId:f,repo:t,config:c,keychainConfig:{pass:o,...c.Keychain}});return{peerId:f,keychain:p.keychain}},mergeConfigs=(t,e)=>e?mergeOptions$1(t,e):t,applyProfiles=(t,e)=>(e||[]).reduce((r,n)=>{const o=profiles[n];if(!o)throw new Error(`Could not find profile with name '${n}'`);return log$1("applying profile %s",n),o.transform(r)},t);var encode_1$1=encode$4,MSB$2=128,REST$2=127,MSBALL$1=~REST$2,INT$1=Math.pow(2,31);function encode$4(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT$1;)e[r++]=t&255|MSB$2,t/=128;for(;t&MSBALL$1;)e[r++]=t&255|MSB$2,t>>>=7;return e[r]=t|0,encode$4.bytes=r-n+1,e}var decode$6=read$1,MSB$1$1=128,REST$1$1=127;function read$1(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read$1.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST$1$1)<<o:(c&REST$1$1)*Math.pow(2,o),o+=7}while(c>=MSB$1$1);return read$1.bytes=a-n,r}var N1$1=Math.pow(2,7),N2$1=Math.pow(2,14),N3$1=Math.pow(2,21),N4$1=Math.pow(2,28),N5$1=Math.pow(2,35),N6$1=Math.pow(2,42),N7$1=Math.pow(2,49),N8$1=Math.pow(2,56),N9$1=Math.pow(2,63),length$1=function(t){return t<N1$1?1:t<N2$1?2:t<N3$1?3:t<N4$1?4:t<N5$1?5:t<N6$1?6:t<N7$1?7:t<N8$1?8:t<N9$1?9:10},varint$2={encode:encode_1$1,decode:decode$6,encodingLength:length$1},_brrp_varint=varint$2;const decode$5=(t,e=0)=>[_brrp_varint.decode(t,e),_brrp_varint.decode.bytes],encodeTo=(t,e,r=0)=>(_brrp_varint.encode(t,e,r),e),encodingLength=t=>_brrp_varint.encodingLength(t),equals$1=(t,e)=>{if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;for(let r=0;r<t.byteLength;r++)if(t[r]!==e[r])return!1;return!0},coerce$1=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")},create$2=(t,e)=>{const r=e.byteLength,n=encodingLength(t),o=n+encodingLength(r),a=new Uint8Array(o+r);return encodeTo(t,a,0),encodeTo(r,a,n),a.set(e,o),new Digest(t,r,e,a)},decode$4=t=>{const e=coerce$1(t),[r,n]=decode$5(e),[o,a]=decode$5(e.subarray(n)),c=e.subarray(n+a);if(c.byteLength!==o)throw new Error("Incorrect length");return new Digest(r,o,c,e)},equals=(t,e)=>{if(t===e)return!0;{const r=e;return t.code===r.code&&t.size===r.size&&r.bytes instanceof Uint8Array&&equals$1(t.bytes,r.bytes)}};class Digest{constructor(e,r,n,o){this.code=e,this.size=r,this.digest=n,this.bytes=o}}function base$1(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src$2=base$1,_brrp__multiformats_scope_baseX$1=src$2;let Encoder$1=class{constructor(t,e,r){this.name=t,this.prefix=e,this.baseEncode=r}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},Decoder$1=class{constructor(t,e,r){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=r}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return or$1(this,t)}},ComposedDecoder$1=class{constructor(t){this.decoders=t}or(t){return or$1(this,t)}decode(t){const e=t[0],r=this.decoders[e];if(r)return r.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$1=(t,e)=>new ComposedDecoder$1({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});let Codec$1=class{constructor(t,e,r,n){this.name=t,this.prefix=e,this.baseEncode=r,this.baseDecode=n,this.encoder=new Encoder$1(t,e,r),this.decoder=new Decoder$1(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};const from$2=({name:t,prefix:e,encode:r,decode:n})=>new Codec$1(t,e,r,n),baseX$1=({prefix:t,name:e,alphabet:r})=>{const{encode:n,decode:o}=_brrp__multiformats_scope_baseX$1(r,e);return from$2({prefix:t,name:e,encode:n,decode:a=>coerce$1(o(a))})},decode$3=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode$3=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648$1=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from$2({prefix:e,name:t,encode(o){return encode$3(o,n,r)},decode(o){return decode$3(o,n,r,t)}}),base58btc=baseX$1({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"});baseX$1({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});const base32=rfc4648$1({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5});rfc4648$1({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),rfc4648$1({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),rfc4648$1({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),rfc4648$1({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),rfc4648$1({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),rfc4648$1({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),rfc4648$1({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),rfc4648$1({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});const format=(t,e)=>{const{bytes:r,version:n}=t;switch(n){case 0:return toStringV0(r,baseCache(t),e||base58btc.encoder);default:return toStringV1(r,baseCache(t),e||base32.encoder)}},cache=new WeakMap,baseCache=t=>{const e=cache.get(t);if(e==null){const r=new Map;return cache.set(t,r),r}return e};class CID{constructor(e,r,n,o){this.code=r,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:r}=this;if(e!==DAG_PB_CODE)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(r.code!==SHA_256_CODE)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return CID.createV0(r)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:r}=this.multihash,n=create$2(e,r);return CID.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return CID.equals(this,e)}static equals(e,r){const n=r;return n&&e.code===n.code&&e.version===n.version&&equals(e.multihash,n.multihash)}toString(e){return format(this,e)}toJSON(){return{"/":format(this)}}link(){return this}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const r=e;if(r instanceof CID)return r;if(r["/"]!=null&&r["/"]===r.bytes||r.asCID===r){const{version:n,code:o,multihash:a,bytes:c}=r;return new CID(n,o,a,c||encodeCID(n,o,a.bytes))}else if(r[cidSymbol]===!0){const{version:n,multihash:o,code:a}=r,c=decode$4(o);return CID.create(n,a,c)}else return null}static create(e,r,n){if(typeof r!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(r!==DAG_PB_CODE)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);return new CID(e,r,n,n.bytes)}case 1:{const o=encodeCID(e,r,n.bytes);return new CID(e,r,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return CID.create(0,DAG_PB_CODE,e)}static createV1(e,r){return CID.create(1,e,r)}static decode(e){const[r,n]=CID.decodeFirst(e);if(n.length)throw new Error("Incorrect length");return r}static decodeFirst(e){const r=CID.inspectBytes(e),n=r.size-r.multihashSize,o=coerce$1(e.subarray(n,n+r.multihashSize));if(o.byteLength!==r.multihashSize)throw new Error("Incorrect length");const a=o.subarray(r.multihashSize-r.digestSize),c=new Digest(r.multihashCode,r.digestSize,a,o);return[r.version===0?CID.createV0(c):CID.createV1(r.codec,c),e.subarray(r.size)]}static inspectBytes(e){let r=0;const n=()=>{const[g,$]=decode$5(e.subarray(r));return r+=$,g};let o=n(),a=DAG_PB_CODE;if(o===18?(o=0,r=0):a=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);const c=r,u=n(),l=n(),f=r+l,p=f-c;return{version:o,codec:a,multihashCode:u,digestSize:l,multihashSize:p,size:f}}static parse(e,r){const[n,o]=parseCIDtoBytes(e,r),a=CID.decode(o);if(a.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache(a).set(n,e),a}}const parseCIDtoBytes=(t,e)=>{switch(t[0]){case"Q":{const r=e||base58btc;return[base58btc.prefix,r.decode(`${base58btc.prefix}${t}`)]}case base58btc.prefix:{const r=e||base58btc;return[base58btc.prefix,r.decode(t)]}case base32.prefix:{const r=e||base32;return[base32.prefix,r.decode(t)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[t[0],e.decode(t)]}}},toStringV0=(t,e,r)=>{const{prefix:n}=r;if(n!==base58btc.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const o=e.get(n);if(o==null){const a=r.encode(t).slice(1);return e.set(n,a),a}else return o},toStringV1=(t,e,r)=>{const{prefix:n}=r,o=e.get(n);if(o==null){const a=r.encode(t);return e.set(n,a),a}else return o},DAG_PB_CODE=112,SHA_256_CODE=18,encodeCID=(t,e,r)=>{const n=encodingLength(t),o=n+encodingLength(e),a=new Uint8Array(o+r.byteLength);return encodeTo(t,a,0),encodeTo(e,a,n),a.set(r,o),a},cidSymbol=Symbol.for("@ipld/js-cid/CID"),from$1=({name:t,code:e,encode:r})=>new Hasher(t,e,r);class Hasher{constructor(e,r,n){this.name=e,this.code=r,this.encode=n}digest(e){if(e instanceof Uint8Array){const r=this.encode(e);return r instanceof Uint8Array?create$2(this.code,r):r.then(n=>create$2(this.code,n))}else throw Error("Unknown type, must be binary type")}}const sha=t=>async e=>new Uint8Array(await crypto.subtle.digest(t,e)),sha256=from$1({name:"sha2-256",code:18,encode:sha("SHA-256")});var encode_1=encode$2,MSB$1=128,REST$1=127,MSBALL=~REST$1,INT=Math.pow(2,31);function encode$2(t,e,r){e=e||[],r=r||0;for(var n=r;t>=INT;)e[r++]=t&255|MSB$1,t/=128;for(;t&MSBALL;)e[r++]=t&255|MSB$1,t>>>=7;return e[r]=t|0,encode$2.bytes=r-n+1,e}var decode$2=read,MSB=128,REST=127;function read(t,n){var r=0,n=n||0,o=0,a=n,c,u=t.length;do{if(a>=u)throw read.bytes=0,new RangeError("Could not decode varint");c=t[a++],r+=o<28?(c&REST)<<o:(c&REST)*Math.pow(2,o),o+=7}while(c>=MSB);return read.bytes=a-n,r}var N1=Math.pow(2,7),N2=Math.pow(2,14),N3=Math.pow(2,21),N4=Math.pow(2,28),N5=Math.pow(2,35),N6=Math.pow(2,42),N7=Math.pow(2,49),N8=Math.pow(2,56),N9=Math.pow(2,63),length=function(t){return t<N1?1:t<N2?2:t<N3?3:t<N4?4:t<N5?5:t<N6?6:t<N7?7:t<N8?8:t<N9?9:10},varint$1={encode:encode_1,decode:decode$2,encodingLength:length};const varint=varint$1;var src$1=t=>{if(!(t instanceof Uint8Array))throw new Error("arg needs to be a Uint8Array");const e=[];for(;t.length>0;){const r=varint.decode(t);e.push(r),t=t.slice(varint.decode.bytes)}return e};const vd=getDefaultExportFromCjs(src$1);function varintEncoder(t){let e=new Uint8Array(t.reduce((n,o)=>n+varint$w.encodingLength(o),0)),r=0;for(const n of t)e=varint$v.encode(n,e,r),r+=varint$w.encodingLength(n);return e}class WantListEntry{constructor(e,r,n){this._refCounter=1,this.cid=e,this.priority=r||1,this.wantType=n}inc(){this._refCounter+=1}dec(){this._refCounter=Math.max(0,this._refCounter-1)}hasRefs(){return this._refCounter>0}get[Symbol.toStringTag](){return`WantlistEntry <key: ${this.cid.toString(base58btc)}, priority: ${this.priority}, refs: ${this._refCounter}>`}equals(e){return this._refCounter===e._refCounter&&this.cid.equals(e.cid)&&this.priority===e.priority&&this.wantType===e.wantType}}const $Reader=$protobuf.Reader,$Writer=$protobuf.Writer,$util=$protobuf.util,$root=$protobuf.roots["ipfs-bitswap"]||($protobuf.roots["ipfs-bitswap"]={}),Message=$root.Message=(()=>{function t(e){if(this.blocks=[],this.payload=[],this.blockPresences=[],e)for(var r=Object.keys(e),n=0;n<r.length;++n)e[r[n]]!=null&&(this[r[n]]=e[r[n]])}return t.prototype.wantlist=null,t.prototype.blocks=$util.emptyArray,t.prototype.payload=$util.emptyArray,t.prototype.blockPresences=$util.emptyArray,t.prototype.pendingBytes=0,t.encode=function(e,r){if(r||(r=$Writer.create()),e.wantlist!=null&&Object.hasOwnProperty.call(e,"wantlist")&&$root.Message.Wantlist.encode(e.wantlist,r.uint32(10).fork()).ldelim(),e.blocks!=null&&e.blocks.length)for(var n=0;n<e.blocks.length;++n)r.uint32(18).bytes(e.blocks[n]);if(e.payload!=null&&e.payload.length)for(var n=0;n<e.payload.length;++n)$root.Message.Block.encode(e.payload[n],r.uint32(26).fork()).ldelim();if(e.blockPresences!=null&&e.blockPresences.length)for(var n=0;n<e.blockPresences.length;++n)$root.Message.BlockPresence.encode(e.blockPresences[n],r.uint32(34).fork()).ldelim();return e.pendingBytes!=null&&Object.hasOwnProperty.call(e,"pendingBytes")&&r.uint32(40).int32(e.pendingBytes),r},t.decode=function(e,r){e instanceof $Reader||(e=$Reader.create(e));for(var n=r===void 0?e.len:e.pos+r,o=new $root.Message;e.pos<n;){var a=e.uint32();switch(a>>>3){case 1:{o.wantlist=$root.Message.Wantlist.decode(e,e.uint32());break}case 2:{o.blocks&&o.blocks.length||(o.blocks=[]),o.blocks.push(e.bytes());break}case 3:{o.payload&&o.payload.length||(o.payload=[]),o.payload.push($root.Message.Block.decode(e,e.uint32()));break}case 4:{o.blockPresences&&o.blockPresences.length||(o.blockPresences=[]),o.blockPresences.push($root.Message.BlockPresence.decode(e,e.uint32()));break}case 5:{o.pendingBytes=e.int32();break}default:e.skipType(a&7);break}}return o},t.fromObject=function(e){if(e instanceof $root.Message)return e;var r=new $root.Message;if(e.wantlist!=null){if(typeof e.wantlist!="object")throw TypeError(".Message.wantlist: object expected");r.wantlist=$root.Message.Wantlist.fromObject(e.wantlist)}if(e.blocks){if(!Array.isArray(e.blocks))throw TypeError(".Message.blocks: array expected");r.blocks=[];for(var n=0;n<e.blocks.length;++n)typeof e.blocks[n]=="string"?$util.base64.decode(e.blocks[n],r.blocks[n]=$util.newBuffer($util.base64.length(e.blocks[n])),0):e.blocks[n].length>=0&&(r.blocks[n]=e.blocks[n])}if(e.payload){if(!Array.isArray(e.payload))throw TypeError(".Message.payload: array expected");r.payload=[];for(var n=0;n<e.payload.length;++n){if(typeof e.payload[n]!="object")throw TypeError(".Message.payload: object expected");r.payload[n]=$root.Message.Block.fromObject(e.payload[n])}}if(e.blockPresences){if(!Array.isArray(e.blockPresences))throw TypeError(".Message.blockPresences: array expected");r.blockPresences=[];for(var n=0;n<e.blockPresences.length;++n){if(typeof e.blockPresences[n]!="object")throw TypeError(".Message.blockPresences: object expected");r.blockPresences[n]=$root.Message.BlockPresence.fromObject(e.blockPresences[n])}}return e.pendingBytes!=null&&(r.pendingBytes=e.pendingBytes|0),r},t.toObject=function(e,r){r||(r={});var n={};if((r.arrays||r.defaults)&&(n.blocks=[],n.payload=[],n.blockPresences=[]),r.defaults&&(n.wantlist=null,n.pendingBytes=0),e.wantlist!=null&&e.hasOwnProperty("wantlist")&&(n.wantlist=$root.Message.Wantlist.toObject(e.wantlist,r)),e.blocks&&e.blocks.length){n.blocks=[];for(var o=0;o<e.blocks.length;++o)n.blocks[o]=r.bytes===String?$util.base64.encode(e.blocks[o],0,e.blocks[o].length):r.bytes===Array?Array.prototype.slice.call(e.blocks[o]):e.blocks[o]}if(e.payload&&e.payload.length){n.payload=[];for(var o=0;o<e.payload.length;++o)n.payload[o]=$root.Message.Block.toObject(e.payload[o],r)}if(e.blockPresences&&e.blockPresences.length){n.blockPresences=[];for(var o=0;o<e.blockPresences.length;++o)n.blockPresences[o]=$root.Message.BlockPresence.toObject(e.blockPresences[o],r)}return e.pendingBytes!=null&&e.hasOwnProperty("pendingBytes")&&(n.pendingBytes=e.pendingBytes),n},t.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},t.getTypeUrl=function(e){return e===void 0&&(e="type.googleapis.com"),e+"/Message"},t.Wantlist=function(){function e(r){if(this.entries=[],r)for(var n=Object.keys(r),o=0;o<n.length;++o)r[n[o]]!=null&&(this[n[o]]=r[n[o]])}return e.prototype.entries=$util.emptyArray,e.prototype.full=!1,e.encode=function(r,n){if(n||(n=$Writer.create()),r.entries!=null&&r.entries.length)for(var o=0;o<r.entries.length;++o)$root.Message.Wantlist.Entry.encode(r.entries[o],n.uint32(10).fork()).ldelim();return r.full!=null&&Object.hasOwnProperty.call(r,"full")&&n.uint32(16).bool(r.full),n},e.decode=function(r,n){r instanceof $Reader||(r=$Reader.create(r));for(var o=n===void 0?r.len:r.pos+n,a=new $root.Message.Wantlist;r.pos<o;){var c=r.uint32();switch(c>>>3){case 1:{a.entries&&a.entries.length||(a.entries=[]),a.entries.push($root.Message.Wantlist.Entry.decode(r,r.uint32()));break}case 2:{a.full=r.bool();break}default:r.skipType(c&7);break}}return a},e.fromObject=function(r){if(r instanceof $root.Message.Wantlist)return r;var n=new $root.Message.Wantlist;if(r.entries){if(!Array.isArray(r.entries))throw TypeError(".Message.Wantlist.entries: array expected");n.entries=[];for(var o=0;o<r.entries.length;++o){if(typeof r.entries[o]!="object")throw TypeError(".Message.Wantlist.entries: object expected");n.entries[o]=$root.Message.Wantlist.Entry.fromObject(r.entries[o])}}return r.full!=null&&(n.full=!!r.full),n},e.toObject=function(r,n){n||(n={});var o={};if((n.arrays||n.defaults)&&(o.entries=[]),n.defaults&&(o.full=!1),r.entries&&r.entries.length){o.entries=[];for(var a=0;a<r.entries.length;++a)o.entries[a]=$root.Message.Wantlist.Entry.toObject(r.entries[a],n)}return r.full!=null&&r.hasOwnProperty("full")&&(o.full=r.full),o},e.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},e.getTypeUrl=function(r){return r===void 0&&(r="type.googleapis.com"),r+"/Message.Wantlist"},e.WantType=function(){const r={},n=Object.create(r);return n[r[0]="Block"]=0,n[r[1]="Have"]=1,n}(),e.Entry=function(){function r(n){if(n)for(var o=Object.keys(n),a=0;a<o.length;++a)n[o[a]]!=null&&(this[o[a]]=n[o[a]])}return r.prototype.block=$util.newBuffer([]),r.prototype.priority=0,r.prototype.cancel=!1,r.prototype.wantType=0,r.prototype.sendDontHave=!1,r.encode=function(n,o){return o||(o=$Writer.create()),n.block!=null&&Object.hasOwnProperty.call(n,"block")&&o.uint32(10).bytes(n.block),n.priority!=null&&Object.hasOwnProperty.call(n,"priority")&&o.uint32(16).int32(n.priority),n.cancel!=null&&Object.hasOwnProperty.call(n,"cancel")&&o.uint32(24).bool(n.cancel),n.wantType!=null&&Object.hasOwnProperty.call(n,"wantType")&&o.uint32(32).int32(n.wantType),n.sendDontHave!=null&&Object.hasOwnProperty.call(n,"sendDontHave")&&o.uint32(40).bool(n.sendDontHave),o},r.decode=function(n,o){n instanceof $Reader||(n=$Reader.create(n));for(var a=o===void 0?n.len:n.pos+o,c=new $root.Message.Wantlist.Entry;n.pos<a;){var u=n.uint32();switch(u>>>3){case 1:{c.block=n.bytes();break}case 2:{c.priority=n.int32();break}case 3:{c.cancel=n.bool();break}case 4:{c.wantType=n.int32();break}case 5:{c.sendDontHave=n.bool();break}default:n.skipType(u&7);break}}return c},r.fromObject=function(n){if(n instanceof $root.Message.Wantlist.Entry)return n;var o=new $root.Message.Wantlist.Entry;switch(n.block!=null&&(typeof n.block=="string"?$util.base64.decode(n.block,o.block=$util.newBuffer($util.base64.length(n.block)),0):n.block.length>=0&&(o.block=n.block)),n.priority!=null&&(o.priority=n.priority|0),n.cancel!=null&&(o.cancel=!!n.cancel),n.wantType){case"Block":case 0:o.wantType=0;break;case"Have":case 1:o.wantType=1;break}return n.sendDontHave!=null&&(o.sendDontHave=!!n.sendDontHave),o},r.toObject=function(n,o){o||(o={});var a={};return o.defaults&&(o.bytes===String?a.block="":(a.block=[],o.bytes!==Array&&(a.block=$util.newBuffer(a.block))),a.priority=0,a.cancel=!1,a.wantType=o.enums===String?"Block":0,a.sendDontHave=!1),n.block!=null&&n.hasOwnProperty("block")&&(a.block=o.bytes===String?$util.base64.encode(n.block,0,n.block.length):o.bytes===Array?Array.prototype.slice.call(n.block):n.block),n.priority!=null&&n.hasOwnProperty("priority")&&(a.priority=n.priority),n.cancel!=null&&n.hasOwnProperty("cancel")&&(a.cancel=n.cancel),n.wantType!=null&&n.hasOwnProperty("wantType")&&(a.wantType=o.enums===String?$root.Message.Wantlist.WantType[n.wantType]:n.wantType),n.sendDontHave!=null&&n.hasOwnProperty("sendDontHave")&&(a.sendDontHave=n.sendDontHave),a},r.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},r.getTypeUrl=function(n){return n===void 0&&(n="type.googleapis.com"),n+"/Message.Wantlist.Entry"},r}(),e}(),t.Block=function(){function e(r){if(r)for(var n=Object.keys(r),o=0;o<n.length;++o)r[n[o]]!=null&&(this[n[o]]=r[n[o]])}return e.prototype.prefix=$util.newBuffer([]),e.prototype.data=$util.newBuffer([]),e.encode=function(r,n){return n||(n=$Writer.create()),r.prefix!=null&&Object.hasOwnProperty.call(r,"prefix")&&n.uint32(10).bytes(r.prefix),r.data!=null&&Object.hasOwnProperty.call(r,"data")&&n.uint32(18).bytes(r.data),n},e.decode=function(r,n){r instanceof $Reader||(r=$Reader.create(r));for(var o=n===void 0?r.len:r.pos+n,a=new $root.Message.Block;r.pos<o;){var c=r.uint32();switch(c>>>3){case 1:{a.prefix=r.bytes();break}case 2:{a.data=r.bytes();break}default:r.skipType(c&7);break}}return a},e.fromObject=function(r){if(r instanceof $root.Message.Block)return r;var n=new $root.Message.Block;return r.prefix!=null&&(typeof r.prefix=="string"?$util.base64.decode(r.prefix,n.prefix=$util.newBuffer($util.base64.length(r.prefix)),0):r.prefix.length>=0&&(n.prefix=r.prefix)),r.data!=null&&(typeof r.data=="string"?$util.base64.decode(r.data,n.data=$util.newBuffer($util.base64.length(r.data)),0):r.data.length>=0&&(n.data=r.data)),n},e.toObject=function(r,n){n||(n={});var o={};return n.defaults&&(n.bytes===String?o.prefix="":(o.prefix=[],n.bytes!==Array&&(o.prefix=$util.newBuffer(o.prefix))),n.bytes===String?o.data="":(o.data=[],n.bytes!==Array&&(o.data=$util.newBuffer(o.data)))),r.prefix!=null&&r.hasOwnProperty("prefix")&&(o.prefix=n.bytes===String?$util.base64.encode(r.prefix,0,r.prefix.length):n.bytes===Array?Array.prototype.slice.call(r.prefix):r.prefix),r.data!=null&&r.hasOwnProperty("data")&&(o.data=n.bytes===String?$util.base64.encode(r.data,0,r.data.length):n.bytes===Array?Array.prototype.slice.call(r.data):r.data),o},e.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},e.getTypeUrl=function(r){return r===void 0&&(r="type.googleapis.com"),r+"/Message.Block"},e}(),t.BlockPresenceType=function(){const e={},r=Object.create(e);return r[e[0]="Have"]=0,r[e[1]="DontHave"]=1,r}(),t.BlockPresence=function(){function e(r){if(r)for(var n=Object.keys(r),o=0;o<n.length;++o)r[n[o]]!=null&&(this[n[o]]=r[n[o]])}return e.prototype.cid=$util.newBuffer([]),e.prototype.type=0,e.encode=function(r,n){return n||(n=$Writer.create()),r.cid!=null&&Object.hasOwnProperty.call(r,"cid")&&n.uint32(10).bytes(r.cid),r.type!=null&&Object.hasOwnProperty.call(r,"type")&&n.uint32(16).int32(r.type),n},e.decode=function(r,n){r instanceof $Reader||(r=$Reader.create(r));for(var o=n===void 0?r.len:r.pos+n,a=new $root.Message.BlockPresence;r.pos<o;){var c=r.uint32();switch(c>>>3){case 1:{a.cid=r.bytes();break}case 2:{a.type=r.int32();break}default:r.skipType(c&7);break}}return a},e.fromObject=function(r){if(r instanceof $root.Message.BlockPresence)return r;var n=new $root.Message.BlockPresence;switch(r.cid!=null&&(typeof r.cid=="string"?$util.base64.decode(r.cid,n.cid=$util.newBuffer($util.base64.length(r.cid)),0):r.cid.length>=0&&(n.cid=r.cid)),r.type){case"Have":case 0:n.type=0;break;case"DontHave":case 1:n.type=1;break}return n},e.toObject=function(r,n){n||(n={});var o={};return n.defaults&&(n.bytes===String?o.cid="":(o.cid=[],n.bytes!==Array&&(o.cid=$util.newBuffer(o.cid))),o.type=n.enums===String?"Have":0),r.cid!=null&&r.hasOwnProperty("cid")&&(o.cid=n.bytes===String?$util.base64.encode(r.cid,0,r.cid.length):n.bytes===Array?Array.prototype.slice.call(r.cid):r.cid),r.type!=null&&r.hasOwnProperty("type")&&(o.type=n.enums===String?$root.Message.BlockPresenceType[r.type]:r.type),o},e.prototype.toJSON=function(){return this.constructor.toObject(this,$protobuf.util.toJSONOptions)},e.getTypeUrl=function(r){return r===void 0&&(r="type.googleapis.com"),r+"/Message.BlockPresence"},e}(),t})(),WantType$1={Block:Message.Wantlist.WantType.Block,Have:Message.Wantlist.WantType.Have},sortBy=(t,e)=>Array.prototype.slice.call(e,0).sort((r,n)=>{const o=t(r),a=t(n);return o<a?-1:o>a?1:0});class Wantlist{constructor(e,r){this.set=r?trackedMap({name:"ipfs_bitswap_wantlist",metrics:r.metrics}):new Map,this._stats=e}get length(){return this.set.size}add(e,r,n){const o=e.toString(base58btc),a=this.set.get(o);a?(a.inc(),a.priority=r,a.wantType===WantType$1.Have&&n===WantType$1.Block&&(a.wantType=n)):(this.set.set(o,new WantListEntry(e,r,n)),this._stats&&this._stats.push(null,"wantListSize",1))}remove(e){const r=e.toString(base58btc),n=this.set.get(r);n&&(n.dec(),!n.hasRefs()&&(this.set.delete(r),this._stats&&this._stats.push(null,"wantListSize",-1)))}removeForce(e){this.set.has(e)&&this.set.delete(e)}forEach(e){return this.set.forEach(e)}entries(){return this.set.entries()}sortedEntries(){return new Map(sortBy(e=>e[1].key,Array.from(this.set.entries())))}contains(e){const r=e.toString(base58btc);return this.set.has(r)}get(e){const r=e.toString(base58btc);return this.set.get(r)}}Wantlist.Entry=WantListEntry;const WantlistEntry=Wantlist.Entry;class BitswapMessageEntry{constructor(e,r,n,o,a){this.entry=new WantlistEntry(e,r,n),this.cancel=!!o,this.sendDontHave=!!a}get cid(){return this.entry.cid}set cid(e){this.entry.cid=e}get priority(){return this.entry.priority}set priority(e){this.entry.priority=e}get wantType(){return this.entry.wantType}set wantType(e){this.entry.wantType=e}get[Symbol.toStringTag](){return`BitswapMessageEntry ${this.cid.toString(base58btc)} <cancel: ${this.cancel}, priority: ${this.priority}>`}equals(e){return this.cancel===e.cancel&&this.sendDontHave===e.sendDontHave&&this.wantType===e.wantType&&this.entry.equals(e.entry)}}const logger=(t,e)=>{const r=["bitswap"];return e&&r.push(e),t&&r.push(`${t.toString().slice(0,8)}`),logger$3(r.join(":"))},isMapEqual=(t,e)=>{if(t.size!==e.size)return!1;for(const[r,n]of t){const o=e.get(r);if(o===void 0||n instanceof Uint8Array&&o instanceof Uint8Array&&!equals$R(n,o)||n instanceof BitswapMessageEntry&&o instanceof BitswapMessageEntry&&!n.equals(o))return!1}return!0};class BitswapMessage{constructor(e){this.full=e,this.wantlist=new Map,this.blocks=new Map,this.blockPresences=new Map,this.pendingBytes=0}get empty(){return this.blocks.size===0&&this.wantlist.size===0&&this.blockPresences.size===0}addEntry(e,r,n,o,a){n==null&&(n=BitswapMessage.WantType.Block);const c=e.toString(base58btc),u=this.wantlist.get(c);u?(u.wantType===n&&(u.priority=r),o&&(u.cancel=!!o),a&&(u.sendDontHave=!!a),n===BitswapMessage.WantType.Block&&u.wantType===BitswapMessage.WantType.Have&&(u.wantType=n)):this.wantlist.set(c,new BitswapMessageEntry(e,r,n,o,a))}addBlock(e,r){const n=e.toString(base58btc);this.blocks.set(n,r)}addHave(e){const r=e.toString(base58btc);this.blockPresences.has(r)||this.blockPresences.set(r,BitswapMessage.BlockPresenceType.Have)}addDontHave(e){const r=e.toString(base58btc);this.blockPresences.has(r)||this.blockPresences.set(r,BitswapMessage.BlockPresenceType.DontHave)}cancel(e){const r=e.toString(base58btc);this.wantlist.delete(r),this.addEntry(e,0,BitswapMessage.WantType.Block,!0,!1)}setPendingBytes(e){this.pendingBytes=e}serializeToBitswap100(){const e={wantlist:{entries:Array.from(this.wantlist.values()).map(r=>({block:r.cid.bytes,priority:Number(r.priority),cancel:!!r.cancel})),full:this.full?!0:void 0},blocks:Array.from(this.blocks.values())};return Message.encode(e).finish()}serializeToBitswap110(){const e={wantlist:{entries:Array.from(this.wantlist.values()).map(r=>({block:r.cid.bytes,priority:Number(r.priority),wantType:r.wantType,cancel:!!r.cancel,sendDontHave:!!r.sendDontHave})),full:this.full?!0:void 0},blockPresences:[],payload:[],pendingBytes:this.pendingBytes};for(const[r,n]of this.blocks.entries()){const o=CID.parse(r),a=o.version,c=o.code,u=o.multihash.code,l=o.multihash.digest.length,f=varintEncoder([a,c,u,l]);e.payload.push(new Message.Block({prefix:f,data:n}))}for(const[r,n]of this.blockPresences)e.blockPresences.push(new Message.BlockPresence({cid:CID.parse(r).bytes,type:n}));return this.pendingBytes>0&&(e.pendingBytes=this.pendingBytes),Message.encode(e).finish()}equals(e){return!(this.full!==e.full||this.pendingBytes!==e.pendingBytes||!isMapEqual(this.wantlist,e.wantlist)||!isMapEqual(this.blocks,e.blocks)||!isMapEqual(this.blockPresences,e.blockPresences))}get[Symbol.toStringTag](){const e=Array.from(this.wantlist.keys()),r=Array.from(this.blocks.keys());return`BitswapMessage <full: ${this.full}, list: ${e}, blocks: ${r}>`}}BitswapMessage.deserialize=async(t,e)=>{const r=Message.decode(t),n=r.wantlist&&r.wantlist.full||!1,o=new BitswapMessage(n);return r.wantlist&&r.wantlist.entries&&r.wantlist.entries.forEach(a=>{if(!a.block)return;const c=CID.decode(a.block);o.addEntry(c,a.priority||0,a.wantType,!!a.cancel,!!a.sendDontHave)}),r.blockPresences&&r.blockPresences.forEach(a=>{if(!a.cid)return;const c=CID.decode(a.cid);a.type===BitswapMessage.BlockPresenceType.Have?o.addHave(c):o.addDontHave(c)}),r.blocks.length>0?(await Promise.all(r.blocks.map(async a=>{const c=await sha256.digest(a),u=CID.createV0(c);o.addBlock(u,a)})),o):(r.payload.length>0&&(await Promise.all(r.payload.map(async a=>{if(!a.prefix||!a.data)return;const c=vd(a.prefix),u=c[0],l=c[1],f=c[2],p=f===sha256.code?sha256:e&&await e.getHasher(f);if(!p)throw new CodeError$4("Unknown hash algorithm","ERR_UNKNOWN_HASH_ALG");const g=await p.digest(a.data),$=CID.create(u,l,g);o.addBlock($,a.data)})),o.setPendingBytes(r.pendingBytes)),o)},BitswapMessage.blockPresenceSize=t=>t.bytes.length+1,BitswapMessage.Entry=BitswapMessageEntry,BitswapMessage.WantType={Block:Message.Wantlist.WantType.Block,Have:Message.Wantlist.WantType.Have},BitswapMessage.BlockPresenceType={Have:Message.BlockPresenceType.Have,DontHave:Message.BlockPresenceType.DontHave};const maxProvidersPerRequest=3,kMaxPriority=Math.pow(2,31)-1,maxListeners=1e3,wantlistSendDebounceMs=1;var functionDebounce=debounce;function debounce(t,e,r){var n=null,o=null,a=function(){n&&(clearTimeout(n),o=null,n=null)},c=function(){var l=o;a(),l&&l()},u=function(){if(!e)return t.apply(this,arguments);var l=this,f=arguments,p=r&&!n;if(a(),o=function(){t.apply(l,f)},n=setTimeout(function(){if(n=null,!p){var g=o;return o=null,g()}},e),p)return o()};return u.cancel=a,u.flush=c,u}class MsgQueue{constructor(e,r,n){this.peerId=r,this.network=n,this.refcnt=1,this._entries=[],this._log=logger(e,"msgqueue"),this.sendEntries=functionDebounce(this._sendEntries.bind(this),wantlistSendDebounceMs)}addMessage(e){e.empty||this.send(e)}addEntries(e){this._entries=this._entries.concat(e),this.sendEntries()}_sendEntries(){if(!this._entries.length)return;const e=new BitswapMessage(!1);this._entries.forEach(r=>{r.cancel?e.cancel(r.cid):e.addEntry(r.cid,r.priority)}),this._entries=[],this.addMessage(e)}async send(e){try{await this.network.connectTo(this.peerId)}catch(r){this._log.error("cant connect to peer %s: %s",this.peerId.toString(),r.message);return}this._log("sending message to peer %s",this.peerId.toString()),this.network.sendMessage(this.peerId,e).catch(r=>{this._log.error("send error: %s",r.message)})}}class WantManager{constructor(e,r,n,o){this.peers=trackedMap({name:"ipfs_bitswap_want_manager_peers",metrics:o.metrics}),this.wantlist=new Wantlist(n,o),this.network=r,this._stats=n,this._peerId=e,this._log=logger(e,"want")}_addEntries(e,r,n){const o=e.map((a,c)=>new BitswapMessage.Entry(a,kMaxPriority-c,BitswapMessage.WantType.Block,r));o.forEach(a=>{a.cancel?n?this.wantlist.removeForce(a.cid.toString(base58btc)):this.wantlist.remove(a.cid):(this._log("adding to wl"),this.wantlist.add(a.cid,a.priority))});for(const a of this.peers.values())a.addEntries(o)}_startPeerHandler(e){let r=this.peers.get(e.toString());if(r){r.refcnt++;return}r=new MsgQueue(this._peerId,e,this.network);const n=new BitswapMessage(!0);for(const o of this.wantlist.entries())n.addEntry(o[1].cid,o[1].priority);return r.addMessage(n),this.peers.set(e.toString(),r),r}_stopPeerHandler(e){const r=this.peers.get(e.toString());r&&(r.refcnt--,!(r.refcnt>0)&&this.peers.delete(e.toString()))}wantBlocks(e,r={}){this._addEntries(e,!1),r&&r.signal&&r.signal.addEventListener("abort",()=>{this.cancelWants(e)})}unwantBlocks(e){this._log("unwant blocks: %s",e.length),this._addEntries(e,!0,!0)}cancelWants(e){this._log("cancel wants: %s",e.length),this._addEntries(e,!0)}connectedPeers(){return Array.from(this.peers.keys())}connected(e){this._startPeerHandler(e)}disconnected(e){this._stopPeerHandler(e)}start(){}stop(){this.peers.forEach(e=>this.disconnected(e.peerId))}}function allocUnsafe(t){return globalThis?.Buffer?.allocUnsafe!=null?globalThis.Buffer.allocUnsafe(t):new Uint8Array(t)}const defaultEncoder=t=>{const e=unsigned.encodingLength(t),r=allocUnsafe(e);return unsigned.encode(t,r),defaultEncoder.bytes=e,r};defaultEncoder.bytes=0;function encode$1(t){t=t??{};const e=t.lengthEncoder??defaultEncoder;return async function*(r){for await(const n of r){const o=e(n.byteLength);o instanceof Uint8Array?yield o:yield*o,n instanceof Uint8Array?yield n:yield*n}}}encode$1.single=(t,e)=>{e=e??{};const r=e.lengthEncoder??defaultEncoder;return new Uint8ArrayList(r(t.byteLength),t)};const MAX_LENGTH_LENGTH=8,MAX_DATA_LENGTH=1024*1024*4;var ReadMode;(function(t){t[t.LENGTH=0]="LENGTH",t[t.DATA=1]="DATA"})(ReadMode||(ReadMode={}));const defaultDecoder=t=>{const e=unsigned.decode(t);return defaultDecoder.bytes=unsigned.encodingLength(e),e};defaultDecoder.bytes=0;function decode$1(t){return async function*(e){const r=new Uint8ArrayList;let n=ReadMode.LENGTH,o=-1;const a=t?.lengthDecoder??defaultDecoder,c=t?.maxLengthLength??MAX_LENGTH_LENGTH,u=t?.maxDataLength??MAX_DATA_LENGTH;for await(const l of e)for(r.append(l);r.byteLength>0;){if(n===ReadMode.LENGTH)try{if(o=a(r),o<0)throw errcode(new Error("invalid message length"),"ERR_INVALID_MSG_LENGTH");if(o>u)throw errcode(new Error("message length too long"),"ERR_MSG_DATA_TOO_LONG");const f=a.bytes;r.consume(f),t?.onLength!=null&&t.onLength(o),n=ReadMode.DATA}catch(f){if(f instanceof RangeError){if(r.byteLength>c)throw errcode(new Error("message length length too long"),"ERR_MSG_LENGTH_TOO_LONG");break}throw f}if(n===ReadMode.DATA){if(r.byteLength<o)break;const f=r.sublist(0,o);r.consume(o),t?.onData!=null&&t.onData(f),yield f,n=ReadMode.LENGTH}}if(r.byteLength>0)throw errcode(new Error("unexpected end of input"),"ERR_UNEXPECTED_EOF")}}decode$1.fromReader=(t,e)=>{let r=1;const n=async function*(){for(;;)try{const{done:o,value:a}=await t.next(r);if(o===!0)return;a!=null&&(yield a)}catch(o){if(o.code==="ERR_UNDER_READ")return{done:!0,value:null};throw o}finally{r=1}}();return decode$1({...e??{},onLength:o=>{r=o}})(n)};class AbortError extends Error{constructor(e,r){super(e??"The operation was aborted"),this.type="aborted",this.code=r??"ABORT_ERR"}}function abortableSource(t,e,r){const n=r??{},o=getIterator(t);async function*a(){let c;const u=()=>{c?.()};for(e.addEventListener("abort",u);;){let l;try{if(e.aborted){const{abortMessage:p,abortCode:g}=n;throw new AbortError(p,g)}const f=new Promise((p,g)=>{c=()=>{const{abortMessage:$,abortCode:_}=n;g(new AbortError($,_))}});l=await Promise.race([f,o.next()]),c=null}catch(f){e.removeEventListener("abort",u);const p=f.type==="aborted"&&e.aborted;if(p&&n.onAbort!=null&&await n.onAbort(t),typeof o.return=="function")try{const g=o.return();g instanceof Promise&&g.catch($=>{n.onReturnError!=null&&n.onReturnError($)})}catch(g){n.onReturnError!=null&&n.onReturnError(g)}if(p&&n.returnOnAbort===!0)return;throw f}if(l.done===!0)break;yield l.value}e.removeEventListener("abort",u)}return a()}const BITSWAP100="/ipfs/bitswap/1.0.0",BITSWAP110="/ipfs/bitswap/1.1.0",BITSWAP120="/ipfs/bitswap/1.2.0",DEFAULT_MAX_INBOUND_STREAMS=32,DEFAULT_MAX_OUTBOUND_STREAMS=128,DEFAULT_INCOMING_STREAM_TIMEOUT=3e4;let Network$1=class{constructor(t,e,r,n={}){this._log=logger(t.peerId,"network"),this._libp2p=t,this._bitswap=e,this._protocols=[BITSWAP100],n.b100Only||(this._protocols.unshift(BITSWAP110),this._protocols.unshift(BITSWAP120)),this._stats=r,this._running=!1,this._onPeerConnect=this._onPeerConnect.bind(this),this._onPeerDisconnect=this._onPeerDisconnect.bind(this),this._onConnection=this._onConnection.bind(this),this._hashLoader=n.hashLoader,this._maxInboundStreams=n.maxInboundStreams??DEFAULT_MAX_INBOUND_STREAMS,this._maxOutboundStreams=n.maxOutboundStreams??DEFAULT_MAX_OUTBOUND_STREAMS,this._incomingStreamTimeout=n.incomingStreamTimeout??DEFAULT_INCOMING_STREAM_TIMEOUT}async start(){this._running=!0,await this._libp2p.handle(this._protocols,this._onConnection,{maxInboundStreams:this._maxInboundStreams,maxOutboundStreams:this._maxOutboundStreams});const t=createTopology({onConnect:this._onPeerConnect,onDisconnect:this._onPeerDisconnect});this._registrarIds=[];for(const e of this._protocols)this._registrarIds.push(await this._libp2p.register(e,t));this._libp2p.getConnections().forEach(e=>{this._onPeerConnect(e.remotePeer)})}async stop(){if(this._running=!1,await this._libp2p.unhandle(this._protocols),this._registrarIds!=null){for(const t of this._registrarIds)this._libp2p.unregister(t);this._registrarIds=[]}}_onConnection({stream:t,connection:e}){if(!this._running)return;const r=new timeoutAbortController.TimeoutController(this._incomingStreamTimeout);Promise.resolve().then(async()=>{this._log("incoming new bitswap %s connection from %p",t.stat.protocol,e.remotePeer),await pipe$1(abortableSource(t.source,r.signal),decode$1(),async n=>{for await(const o of n){try{const a=await BitswapMessage.deserialize(o.subarray(),this._hashLoader);await this._bitswap._receiveMessage(e.remotePeer,a)}catch(a){this._bitswap._receiveError(a);break}r.reset()}})}).catch(n=>{this._log(n),t.abort(n)}).finally(()=>{r.clear(),t.close()})}_onPeerConnect(t){this._bitswap._onPeerConnected(t)}_onPeerDisconnect(t){this._bitswap._onPeerDisconnected(t)}findProviders(t,e={}){return this._libp2p.contentRouting.findProviders(t,e)}async findAndConnect(t,e){const r=[];let n=0;for await(const o of this.findProviders(t,e))if(this._log(`connecting to provider ${o.id}`),r.push(this.connectTo(o.id,e).catch(a=>{this._log.error(a)})),n++,n===maxProvidersPerRequest)break;await Promise.all(r)}async provide(t,e){await this._libp2p.contentRouting.provide(t,e)}async sendMessage(t,e){if(!this._running)throw new Error("network isn't running");const r=t.toString();this._log("sendMessage to %s",r,e);const n=await(await this._libp2p.dial(t)).newStream([BITSWAP120,BITSWAP110,BITSWAP100]);await writeMessage(n,e,this._log),this._updateSentStats(t,e.blocks)}async connectTo(t,e){if(!this._running)throw new Error("network isn't running");return this._libp2p.dial(t,e)}_updateSentStats(t,e){const r=t.toString();if(this._stats){for(const n of e.values())this._stats.push(r,"dataSent",n.length);this._stats.push(r,"blocksSent",e.size)}}};async function writeMessage(t,e,r){try{let n;switch(t.stat.protocol){case BITSWAP100:n=e.serializeToBitswap100();break;case BITSWAP110:case BITSWAP120:n=e.serializeToBitswap110();break;default:throw new Error("Unknown protocol: "+t.stat.protocol)}await pipe$1([n],encode$1(),t)}catch(n){r(n)}finally{t.close()}}class Ledger{constructor(e){this.partner=e,this.wantlist=new Wantlist,this.exchangeCount=0,this.sentToPeer=new Map,this.accounting={bytesSent:0,bytesRecv:0}}sentBytes(e){this.exchangeCount++,this.lastExchange=new Date().getTime(),this.accounting.bytesSent+=e}receivedBytes(e){this.exchangeCount++,this.lastExchange=new Date().getTime(),this.accounting.bytesRecv+=e}wants(e,r,n){this.wantlist.add(e,r,n)}cancelWant(e){this.wantlist.remove(e)}wantlistContains(e){return this.wantlist.get(e)}debtRatio(){return this.accounting.bytesSent/(this.accounting.bytesRecv+1)}}class SortedMap extends Map{constructor(e,r){super(),this._cmp=r||this._defaultSort,this._keys=[];for(const[n,o]of e||[])this.set(n,o)}update(e){if(e<0||e>=this._keys.length)return;const r=this._keys[e];this._keys.splice(e,1);const n=this._find(r);this._keys.splice(n,0,r)}set(e,r){if(this.has(e)){const o=this.indexOf(e);this._keys.splice(o,1)}super.set(e,r);const n=this._find(e);return this._keys.splice(n,0,e),this}clear(){super.clear(),this._keys=[]}delete(e){if(!this.has(e))return!1;const r=this.indexOf(e);return this._keys.splice(r,1),super.delete(e)}indexOf(e){if(!this.has(e))return-1;const r=this._find(e);if(this._keys[r]===e)return r;for(let n=1;n<this._keys.length;n++){if(this._keys[r+n]===e)return r+n;if(this._keys[r-n]===e)return r-n}return-1}_find(e){let r=0,n=this._keys.length;for(;r<n;){const o=r+n>>>1,a=this._kCmp(this._keys[o],e);if(a<0)r=o+1;else if(a>0)n=o;else return o}return r}*keys(){for(const e of this._keys)yield e}*values(){for(const e of this._keys)yield this.get(e)}*entries(){for(const e of this._keys)yield[e,this.get(e)]}*[Symbol.iterator](){yield*this.entries()}forEach(e,r){if(e)for(const n of this._keys)e.apply(r,[[n,this.get(n)]])}_defaultSort(e,r){return e[0]<r[0]?-1:r[0]<e[0]?1:0}_kCmp(e,r){return this._cmp([e,this.get(e)],[r,this.get(r)])}}const DefaultTaskMerger={hasNewInfo(){return!1},merge(){}};class RequestQueue{constructor(e=DefaultTaskMerger){this._taskMerger=e,this._byPeer=new SortedMap([],PeerTasks.compare)}pushTasks(e,r){let n=this._byPeer.get(e.toString());n||(n=new PeerTasks(e,this._taskMerger)),n.pushTasks(r),this._byPeer.set(e.toString(),n)}popTasks(e){const r=this._head();if(r===void 0)return{tasks:[],pendingSize:0};const{tasks:n,pendingSize:o}=r.popTasks(e);if(n.length===0)return{tasks:n,pendingSize:o};const a=r.peerId;return r.isIdle()?this._byPeer.delete(a.toString()):this._byPeer.update(0),{peerId:a,tasks:n,pendingSize:o}}_head(){if(this._byPeer.size!==0)for(const[,e]of this._byPeer)return e}remove(e,r){const n=this._byPeer.get(r.toString());n&&n.remove(e)}tasksDone(e,r){const n=this._byPeer.get(e.toString());if(!n)return;const o=this._byPeer.indexOf(e.toString());for(const a of r)n.taskDone(a);this._byPeer.update(o)}}class PeerTasks{constructor(e,r){this.peerId=e,this._taskMerger=r,this._activeTotalSize=0,this._pending=new PendingTasks,this._active=new Set}pushTasks(e){for(const r of e)this._pushTask(r)}_pushTask(e){if(!this._taskHasMoreInfoThanActiveTasks(e))return;const r=this._pending.get(e.topic);if(r){e.priority>r.priority&&this._pending.updatePriority(e.topic,e.priority),this._taskMerger.merge(e,r);return}this._pending.add(e)}_taskHasMoreInfoThanActiveTasks(e){const r=[];for(const n of this._active)n.topic===e.topic&&r.push(n);return r.length===0?!0:this._taskMerger.hasNewInfo(e,r)}popTasks(e){let r=0;const n=[],o=this._pending.tasks();for(let a=0;a<o.length&&r<e;a++){const c=o[a];n.push(c),r+=c.size,this._pending.delete(c.topic),this._activeTotalSize+=c.size,this._active.add(c)}return{tasks:n,pendingSize:this._pending.totalSize}}taskDone(e){this._active.has(e)&&(this._activeTotalSize-=e.size,this._active.delete(e))}remove(e){this._pending.delete(e)}isIdle(){return this._pending.length===0&&this._active.size===0}static compare(e,r){return e[1]._pending.length===0?1:r[1]._pending.length===0?-1:e[1]._activeTotalSize===r[1]._activeTotalSize?r[1]._pending.length-e[1]._pending.length:e[1]._activeTotalSize-r[1]._activeTotalSize}}class PendingTasks{constructor(){this._tasks=new SortedMap([],this._compare)}get length(){return this._tasks.size}get totalSize(){return[...this._tasks.values()].reduce((e,r)=>e+r.task.size,0)}get(e){return(this._tasks.get(e)||{}).task}add(e){this._tasks.set(e.topic,{created:Date.now(),task:e})}delete(e){this._tasks.delete(e)}tasks(){return[...this._tasks.values()].map(e=>e.task)}updatePriority(e,r){const n=this._tasks.get(e);if(!n)return;const o=this._tasks.indexOf(e);n.task.priority=r,this._tasks.update(o)}_compare(e,r){return e[1].task.priority===r[1].task.priority?e[1].created-r[1].created:r[1].task.priority-e[1].task.priority}}const TaskMerger={hasNewInfo(t,e){let r=!1,n=!1;for(const o of e)o.data.haveBlock&&(r=!0),o.data.isWantBlock&&(n=!0);return!!(!n&&t.data.isWantBlock||!r&&t.data.haveBlock)},merge(t,e){const r=t.data,n=e.data;!n.haveBlock&&r.haveBlock&&(n.haveBlock=r.haveBlock,n.blockSize=r.blockSize),!n.isWantBlock&&r.isWantBlock&&(n.isWantBlock=!0,(!n.haveBlock||r.haveBlock)&&(n.haveBlock=r.haveBlock,e.size=t.size)),n.isWantBlock&&n.haveBlock&&(e.size=n.blockSize)}},WantType=BitswapMessage.WantType,TARGET_MESSAGE_SIZE=16*1024,MAX_SIZE_REPLACE_HAS_WITH_BLOCK=1024;class DecisionEngine{constructor(e,r,n,o,a,c={}){this._log=logger(e,"engine"),this.blockstore=r,this.network=n,this._stats=o,this._opts=this._processOpts(c),this.ledgerMap=trackedMap({name:"ipfs_bitswap_ledger_map",metrics:a.metrics}),this._running=!1,this._requestQueue=new RequestQueue(TaskMerger)}_processOpts(e){return{maxSizeReplaceHasWithBlock:MAX_SIZE_REPLACE_HAS_WITH_BLOCK,targetMessageSize:TARGET_MESSAGE_SIZE,...e}}_scheduleProcessTasks(){setTimeout(()=>{this._processTasks()})}async _processTasks(){if(!this._running)return;const{peerId:e,tasks:r,pendingSize:n}=this._requestQueue.popTasks(this._opts.targetMessageSize);if(r.length===0)return;const o=new BitswapMessage(!1);o.setPendingBytes(n);const a=[],c=new Map;for(const l of r){const f=CID.parse(l.topic);l.data.haveBlock?l.data.isWantBlock?(a.push(f),c.set(l.topic,l.data)):o.addHave(f):o.addDontHave(f)}const u=await this._getBlocks(a);for(const[l,f]of c){const p=CID.parse(l),g=u.get(l);g?o.addBlock(p,g):f.sendDontHave&&o.addDontHave(p)}if(o.empty){e&&this._requestQueue.tasksDone(e,r),this._scheduleProcessTasks();return}try{e&&await this.network.sendMessage(e,o);for(const[l,f]of u.entries())e&&this.messageSent(e,CID.parse(l),f)}catch(l){this._log.error(l)}e&&this._requestQueue.tasksDone(e,r),this._scheduleProcessTasks()}wantlistForPeer(e){const r=e.toString(),n=this.ledgerMap.get(r);return n?n.wantlist.sortedEntries():new Map}ledgerForPeer(e){const r=e.toString(),n=this.ledgerMap.get(r);return n?{peer:n.partner,value:n.debtRatio(),sent:n.accounting.bytesSent,recv:n.accounting.bytesRecv,exchanged:n.exchangeCount}:null}peers(){return Array.from(this.ledgerMap.values()).map(e=>e.partner)}receivedBlocks(e){if(e.length){for(const r of this.ledgerMap.values())for(const n of e){const o=r.wantlistContains(n.cid);if(!o)continue;const a=n.data.length,c=this._sendAsBlock(o.wantType,a);let u=a;c||(u=BitswapMessage.blockPresenceSize(o.cid)),this._requestQueue.pushTasks(r.partner,[{topic:o.cid.toString(base58btc),priority:o.priority,size:u,data:{blockSize:a,isWantBlock:c,haveBlock:!0,sendDontHave:!1}}])}this._scheduleProcessTasks()}}async messageReceived(e,r){const n=this._findOrCreate(e);if(r.empty)return;if(r.full&&(n.wantlist=new Wantlist),this._updateBlockAccounting(r.blocks,n),r.wantlist.size===0){this._scheduleProcessTasks();return}const o=[],a=[];r.wantlist.forEach(c=>{c.cancel?(n.cancelWant(c.cid),o.push(c.cid)):(n.wants(c.cid,c.priority,c.wantType),a.push(c))}),this._cancelWants(e,o),await this._addWants(e,a),this._scheduleProcessTasks()}_cancelWants(e,r){for(const n of r)this._requestQueue.remove(n.toString(base58btc),e)}async _addWants(e,r){const n=await this._getBlockSizes(r.map(a=>a.cid)),o=[];for(const a of r){const c=a.cid.toString(base58btc),u=n.get(c);if(u==null)a.sendDontHave&&o.push({topic:c,priority:a.priority,size:BitswapMessage.blockPresenceSize(a.cid),data:{isWantBlock:a.wantType===WantType.Block,blockSize:0,haveBlock:!1,sendDontHave:a.sendDontHave}});else{const l=this._sendAsBlock(a.wantType,u);let f=u;l||(f=BitswapMessage.blockPresenceSize(a.cid)),o.push({topic:c,priority:a.priority,size:f,data:{isWantBlock:l,blockSize:u,haveBlock:!0,sendDontHave:a.sendDontHave}})}this._requestQueue.pushTasks(e,o)}}_sendAsBlock(e,r){return e===WantType.Block||r<=this._opts.maxSizeReplaceHasWithBlock}async _getBlockSizes(e){const r=await this._getBlocks(e);return new Map([...r].map(([n,o])=>[n,o.length]))}async _getBlocks(e){const r=new Map;return await Promise.all(e.map(async n=>{try{const o=await this.blockstore.get(n);r.set(n.toString(base58btc),o)}catch(o){o.code!=="ERR_NOT_FOUND"&&this._log.error("failed to query blockstore for %s: %s",n,o)}})),r}_updateBlockAccounting(e,r){for(const n of e.values())this._log("got block (%s bytes)",n.length),r.receivedBytes(n.length)}messageSent(e,r,n){const o=this._findOrCreate(e);o.sentBytes(n.length),o.wantlist.remove(r)}numBytesSentTo(e){return this._findOrCreate(e).accounting.bytesSent}numBytesReceivedFrom(e){return this._findOrCreate(e).accounting.bytesRecv}peerDisconnected(e){this.ledgerMap.delete(e.toString())}_findOrCreate(e){const r=e.toString(),n=this.ledgerMap.get(r);if(n)return n;const o=new Ledger(e);return this.ledgerMap.set(r,o),this._stats&&this._stats.push(r,"peerCount",1),o}start(){this._running=!0}stop(){this._running=!1}}const unwantEvent=t=>`unwant:${toString$D(t.multihash.bytes,"base64")}`,blockEvent=t=>`block:${toString$D(t.multihash.bytes,"base64")}`;class Notifications extends eventsExports.EventEmitter{constructor(e){super(),this.setMaxListeners(maxListeners),this._log=logger(e,"notif")}hasBlock(e,r){const n=blockEvent(e);this._log(n),this.emit(n,r)}wantBlock(e,r={}){if(!e)throw new Error("Not a valid cid");const n=blockEvent(e),o=unwantEvent(e);return this._log(`wantBlock:${e}`),new Promise((a,c)=>{const u=()=>{this.removeListener(n,l),c(new Error(`Block for ${e} unwanted`))},l=f=>{this.removeListener(o,u),a(f)};this.once(o,u),this.once(n,l),r&&r.signal&&r.signal.addEventListener("abort",()=>{this.removeListener(n,l),this.removeListener(o,u),c(new Error(`Want for ${e} aborted`))})})}unwantBlock(e){const r=unwantEvent(e);this._log(r),this.emit(r)}}var movingAverage={exports:{}};(function(t,e){const r=Math.exp;t.exports=function(n){if(typeof n!="number")throw new Error("must provide a timespan to the moving average constructor");if(n<=0)throw new Error("must provide a timespan > 0 to the moving average constructor");let o,a=0,c=0,u=0,l,f={};function p(g,$){return 1-r(-(g-$)/n)}return f.push=function(g,$){if(l){const _=p(g,l),b=$-o,D=_*b;o=_*$+(1-_)*o,a=(1-_)*(a+b*D),c=Math.sqrt(a),u=o+_*b}else o=$;l=g},f.movingAverage=function(){return o},f.variance=function(){return a},f.deviation=function(){return c},f.forecast=function(){return u},f}})(movingAverage);var movingAverageExports=movingAverage.exports;const MovingAverage=getDefaultExportFromCjs(movingAverageExports);class Stat extends eventsExports.EventEmitter{constructor(e,r){super(),this._options=r,this._queue=[],this._stats={},this._frequencyLastTime=Date.now(),this._frequencyAccumulators={},this._movingAverages={},this._update=this._update.bind(this),e.forEach(n=>{this._stats[n]=BigInt(0),this._movingAverages[n]={},this._options.movingAverageIntervals.forEach(o=>{(this._movingAverages[n][o]=MovingAverage(o)).push(this._frequencyLastTime,0)})}),this._enabled=this._options.enabled}enable(){this._enabled=!0}disable(){this._disabled=!0}stop(){this._timeout&&clearTimeout(this._timeout)}get snapshot(){return Object.assign({},this._stats)}get movingAverages(){return Object.assign({},this._movingAverages)}push(e,r){this._enabled&&(this._queue.push([e,r,Date.now()]),this._resetComputeTimeout())}_resetComputeTimeout(){this._timeout&&clearTimeout(this._timeout),this._timeout=setTimeout(this._update,this._nextTimeout())}_nextTimeout(){const e=this._queue.length/this._options.computeThrottleMaxQueueSize;return Math.max(this._options.computeThrottleTimeout*(1-e),0)}_update(){if(this._timeout=null,this._queue.length){let e;for(;this._queue.length;){const r=e=this._queue.shift();r&&this._applyOp(r)}e&&this._updateFrequency(e[2]),this.emit("update",this._stats)}}_updateFrequency(e){const r=e-this._frequencyLastTime;r&&Object.keys(this._stats).forEach(n=>{this._updateFrequencyFor(n,r,e)}),this._frequencyLastTime=e}_updateFrequencyFor(e,r,n){const o=this._frequencyAccumulators[e]||0;this._frequencyAccumulators[e]=0;const a=o/r*1e3;let c=this._movingAverages[e];c||(c=this._movingAverages[e]={}),this._options.movingAverageIntervals.forEach(u=>{let l=c[u];l||(l=c[u]=MovingAverage(u)),l.push(n,a)})}_applyOp(e){const r=e[0],n=e[1];if(typeof n!="number")throw new Error(`invalid increment number: ${n}`);Object.prototype.hasOwnProperty.call(this._stats,r)||(this._stats[r]=BigInt(0)),this._stats[r]=BigInt(this._stats[r])+BigInt(n),this._frequencyAccumulators[r]||(this._frequencyAccumulators[r]=0),this._frequencyAccumulators[r]+=n}}const defaultOptions$1={enabled:!1,computeThrottleTimeout:1e3,computeThrottleMaxQueueSize:1e3,movingAverageIntervals:[60*1e3,5*60*1e3,15*60*1e3]};class Stats extends eventsExports.EventEmitter{constructor(e,r=[],n=defaultOptions$1){super();const o=Object.assign({},defaultOptions$1,n);if(typeof o.computeThrottleTimeout!="number")throw new Error("need computeThrottleTimeout");if(typeof o.computeThrottleMaxQueueSize!="number")throw new Error("need computeThrottleMaxQueueSize");this._initialCounters=r,this._options=o,this._enabled=this._options.enabled,this._global=new Stat(r,o),this._global.on("update",a=>this.emit("update",a)),this._peers=trackedMap({name:"ipfs_bitswap_stats_peers",metrics:e.metrics})}enable(){this._enabled=!0,this._options.enabled=!0,this._global.enable()}disable(){this._enabled=!1,this._options.enabled=!1,this._global.disable()}stop(){this._enabled=!1,this._global.stop();for(const e of this._peers)e[1].stop()}get snapshot(){return this._global.snapshot}get movingAverages(){return this._global.movingAverages}forPeer(e){const r=typeof e!="string"&&e.toString?e.toString():`${e}`;return this._peers.get(r)}push(e,r,n){if(this._enabled&&(this._global.push(r,n),e)){let o=this._peers.get(e);o||(o=new Stat(this._initialCounters,this._options),this._peers.set(e,o)),o.push(r,n)}}disconnected(e){const r=e.toString(),n=this._peers.get(r);n&&(n.stop(),this._peers.delete(r))}}const defaultOptions={statsEnabled:!1,statsComputeThrottleTimeout:1e3,statsComputeThrottleMaxQueueSize:1e3},statsKeys=["blocksReceived","dataReceived","dupBlksReceived","dupDataReceived","blocksSent","dataSent","providesBufferLength","wantListLength","peerCount"];class Bitswap extends BaseBlockstore{constructor(e,r,n={}){super(),this._libp2p=e,this._log=logger(this.peerId),this._options=Object.assign({},defaultOptions,n),this._stats=new Stats(e,statsKeys,{enabled:this._options.statsEnabled,computeThrottleTimeout:this._options.statsComputeThrottleTimeout,computeThrottleMaxQueueSize:this._options.statsComputeThrottleMaxQueueSize}),this.network=new Network$1(e,this,this._stats,{hashLoader:n.hashLoader,maxInboundStreams:n.maxInboundStreams,maxOutboundStreams:n.maxOutboundStreams,incomingStreamTimeout:n.incomingStreamTimeout}),this.blockstore=r,this.engine=new DecisionEngine(this.peerId,r,this.network,this._stats,e),this.wm=new WantManager(this.peerId,this.network,this._stats,e),this.notifications=new Notifications(this.peerId),this.started=!1}isStarted(){return this.started}get peerId(){return this._libp2p.peerId}async _receiveMessage(e,r){try{await this.engine.messageReceived(e,r)}catch{this._log("failed to receive message",r)}if(r.blocks.size===0)return;const n=[];for(const[o,a]of r.blocks.entries()){const c=CID.parse(o);n.push({wasWanted:this.wm.wantlist.contains(c),cid:c,data:a})}this.wm.cancelWants(n.filter(({wasWanted:o})=>o).map(({cid:o})=>o)),await Promise.all(n.map(({cid:o,wasWanted:a,data:c})=>this._handleReceivedBlock(e,o,c,a)))}async _handleReceivedBlock(e,r,n,o){this._log("received block");const a=await this.blockstore.has(r);this._updateReceiveCounters(e.toString(),r,n,a),o&&await this.put(r,n)}_updateReceiveCounters(e,r,n,o){this._stats.push(e,"blocksReceived",1),this._stats.push(e,"dataReceived",n.length),o&&(this._stats.push(e,"dupBlksReceived",1),this._stats.push(e,"dupDataReceived",n.length))}_receiveError(e){this._log.error("ReceiveError: %s",e.message)}_onPeerConnected(e){this.wm.connected(e)}_onPeerDisconnected(e){this.wm.disconnected(e),this.engine.peerDisconnected(e),this._stats.disconnected(e)}enableStats(){this._stats.enable()}disableStats(){this._stats.disable()}wantlistForPeer(e,r){return this.engine.wantlistForPeer(e)}ledgerForPeer(e){return this.engine.ledgerForPeer(e)}async get(e,r={}){const n=(l,f)=>(this.wm.wantBlocks([l],f),this.notifications.wantBlock(l,f));let o=!1;const a=async(l,f)=>{try{return await this.blockstore.get(l,f)}catch(p){if(p.code!=="ERR_NOT_FOUND")throw p;return o||(o=!0,this.network.findAndConnect(l,f).catch(g=>this._log.error(g))),n(l,f)}},c=new AbortController,u=r.signal?anySignal_2([r.signal,c.signal]):c.signal;try{return await Promise.race([this.notifications.wantBlock(e,{signal:u}),a(e,{signal:u})])}finally{c.abort()}}async*getMany(e,r={}){for await(const n of e)yield this.get(n,r)}unwant(e){const r=Array.isArray(e)?e:[e];this.wm.unwantBlocks(r),r.forEach(n=>this.notifications.unwantBlock(n))}cancelWants(e){this.wm.cancelWants(Array.isArray(e)?e:[e])}async put(e,r,n){await this.blockstore.put(e,r),this._sendHaveBlockNotifications(e,r)}async*putMany(e,r){for await(const{key:n,value:o}of this.blockstore.putMany(e,r))this._sendHaveBlockNotifications(n,o),yield{key:n,value:o}}_sendHaveBlockNotifications(e,r){this.notifications.hasBlock(e,r),this.engine.receivedBlocks([{cid:e,data:r}]),this.network.provide(e).catch(n=>{this._log.error("Failed to provide: %s",n.message)})}getWantlist(){return this.wm.wantlist.entries()}peers(){return this.engine.peers()}stat(){return this._stats}async start(){this.wm.start(),await this.network.start(),this.engine.start(),this.started=!0}async stop(){this._stats.stop(),this.wm.stop(),await this.network.stop(),this.engine.stop(),this.started=!1}unwrap(){return this.blockstore}has(e){return this.blockstore.has(e)}}const createBitswap=(t,e,r={})=>new Bitswap(t,e,r);function base(t,e){if(t.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var o=0;o<t.length;o++){var a=t.charAt(o),c=a.charCodeAt(0);if(r[c]!==255)throw new TypeError(a+" is ambiguous");r[c]=o}var u=t.length,l=t.charAt(0),f=Math.log(u)/Math.log(256),p=Math.log(256)/Math.log(u);function g(b){if(b instanceof Uint8Array||(ArrayBuffer.isView(b)?b=new Uint8Array(b.buffer,b.byteOffset,b.byteLength):Array.isArray(b)&&(b=Uint8Array.from(b))),!(b instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(b.length===0)return"";for(var D=0,v=0,S=0,I=b.length;S!==I&&b[S]===0;)S++,D++;for(var R=(I-S)*p+1>>>0,C=new Uint8Array(R);S!==I;){for(var T=b[S],P=0,E=R-1;(T!==0||P<v)&&E!==-1;E--,P++)T+=256*C[E]>>>0,C[E]=T%u>>>0,T=T/u>>>0;if(T!==0)throw new Error("Non-zero carry");v=P,S++}for(var A=R-v;A!==R&&C[A]===0;)A++;for(var k=l.repeat(D);A<R;++A)k+=t.charAt(C[A]);return k}function $(b){if(typeof b!="string")throw new TypeError("Expected String");if(b.length===0)return new Uint8Array;var D=0;if(b[D]!==" "){for(var v=0,S=0;b[D]===l;)v++,D++;for(var I=(b.length-D)*f+1>>>0,R=new Uint8Array(I);b[D];){var C=r[b.charCodeAt(D)];if(C===255)return;for(var T=0,P=I-1;(C!==0||T<S)&&P!==-1;P--,T++)C+=u*R[P]>>>0,R[P]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");S=T,D++}if(b[D]!==" "){for(var E=I-S;E!==I&&R[E]===0;)E++;for(var A=new Uint8Array(v+(I-E)),k=v;E!==I;)A[k++]=R[E++];return A}}}function _(b){var D=$(b);if(D)return D;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:_}}var src=base,_brrp__multiformats_scope_baseX=src;const coerce=t=>{if(t instanceof Uint8Array&&t.constructor.name==="Uint8Array")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error("Unknown type, must be binary type")};class Encoder{constructor(e,r,n){this.name=e,this.prefix=r,this.baseEncode=n}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}}class Decoder{constructor(e,r,n){if(this.name=e,this.prefix=r,r.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=r.codePointAt(0),this.baseDecode=n}decode(e){if(typeof e=="string"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(e){return or(this,e)}}class ComposedDecoder{constructor(e){this.decoders=e}or(e){return or(this,e)}decode(e){const r=e[0],n=this.decoders[r];if(n)return n.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}}const or=(t,e)=>new ComposedDecoder({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});class Codec{constructor(e,r,n,o){this.name=e,this.prefix=r,this.baseEncode=n,this.baseDecode=o,this.encoder=new Encoder(e,r,n),this.decoder=new Decoder(e,r,o)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}}const from=({name:t,prefix:e,encode:r,decode:n})=>new Codec(t,e,r,n),baseX=({prefix:t,name:e,alphabet:r})=>{const{encode:n,decode:o}=_brrp__multiformats_scope_baseX(r,e);return from({prefix:t,name:e,encode:n,decode:a=>coerce(o(a))})},decode=(t,e,r,n)=>{const o={};for(let p=0;p<e.length;++p)o[e[p]]=p;let a=t.length;for(;t[a-1]==="=";)--a;const c=new Uint8Array(a*r/8|0);let u=0,l=0,f=0;for(let p=0;p<a;++p){const g=o[t[p]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<r|g,u+=r,u>=8&&(u-=8,c[f++]=255&l>>u)}if(u>=r||255&l<<8-u)throw new SyntaxError("Unexpected end of data");return c},encode=(t,e,r)=>{const n=e[e.length-1]==="=",o=(1<<r)-1;let a="",c=0,u=0;for(let l=0;l<t.length;++l)for(u=u<<8|t[l],c+=8;c>r;)c-=r,a+=e[o&u>>c];if(c&&(a+=e[o&u<<r-c]),n)for(;a.length*r&7;)a+="=";return a},rfc4648=({name:t,prefix:e,bitsPerChar:r,alphabet:n})=>from({prefix:e,name:t,encode(o){return encode(o,n,r)},decode(o){return decode(o,n,r,t)}});rfc4648({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),rfc4648({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),rfc4648({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),rfc4648({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),rfc4648({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),rfc4648({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),rfc4648({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),rfc4648({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),rfc4648({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),baseX({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),baseX({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});class BlockStorage extends BaseBlockstore{constructor(e,r){super(),this.child=e,this.bitswap=r}open(){return this.child.open()}close(){return this.child.close()}unwrap(){return this.child}async put(e,r,n={}){await this.has(e)||(this.bitswap.isStarted()?await this.bitswap.put(e,r,n):await this.child.put(e,r,n))}async*putMany(e,r={}){const n=filter$1(e,async({key:o})=>!await this.has(o));this.bitswap.isStarted()?yield*this.bitswap.putMany(n,r):yield*this.child.putMany(n,r)}async get(e,r={}){return!await this.has(e)&&this.bitswap.isStarted()?this.bitswap.get(e,r):this.child.get(e,r)}async*getMany(e,r={}){const n=pushable({objectMode:!0}),o=pushable({objectMode:!0});Promise.resolve().then(async()=>{for await(const a of e)!await this.has(a)&&this.bitswap.isStarted()?n.push(a):o.push(a);n.end(),o.end()}),yield*merge$2(this.bitswap.getMany(n,r),this.child.getMany(o,r))}async delete(e,r){await this.child.delete(e,r)}async*deleteMany(e,r){yield*this.child.deleteMany(e,r)}async has(e,r={}){return this.child.has(e,r)}async*query(e,r={}){yield*this.child.query(e,r)}async*queryKeys(e,r={}){yield*this.child.queryKeys(e,r)}}class Network{constructor(e,r,n,o,a){this.peerId=e,this.libp2p=r,this.bitswap=n,this.repo=o,this.blockstore=a}static async start({peerId:e,repo:r,print:n,hashers:o,options:a}){r.closed&&await r.open();const c=await r.config.getAll(),u=await createLibp2p({options:a,repo:r,peerId:e,multiaddrs:readAddrs(e,c),config:c,keychainConfig:void 0});await u.start();for(const p of u.getMultiaddrs())n(`Swarm listening on ${p.toString()}`);const l=createBitswap(u,r.blocks,{statsEnabled:!0,hashLoader:o,maxInboundStreams:1024,maxOutboundStreams:1024});await l.start();const f=new BlockStorage(r.blocks,l);return r.blocks=f,r.pins.blockstore=f,new Network(e,u,l,r,f)}static async stop(e){e.repo.blocks=e.blockstore.unwrap(),e.repo.pins.blockstore=e.blockstore.unwrap(),await e.bitswap.stop(),await e.libp2p.stop()}}const readAddrs=(t,e)=>{const r=t.toString(),n=[],o=e.Addresses&&e.Addresses.Swarm||[];for(const a of o){let c=multiaddr$a(a);if(c.protoCodes().includes(WEBSOCKET_STAR_PROTO_CODE))throw errcode(new Error("websocket-star swarm addresses are not supported. See https://github.com/ipfs/js-ipfs/issues/2779"),"ERR_WEBSOCKET_STAR_SWARM_ADDR_NOT_SUPPORTED");const u=c.getPeerId();u&&u!==r&&(c=c.encapsulate(`/p2p/${r}`)),n.push(c)}return n},WEBSOCKET_STAR_PROTO_CODE=479;function createAddrs({network:t}){async function e(r={}){const n=[],{libp2p:o}=await t.use(r);return await o.peerStore.forEach(a=>{n.push({id:a.id,addrs:a.addresses.map(c=>c.multiaddr)})}),n}return withTimeoutOption(e)}function createConnect({network:t}){async function e(r,n={}){const{libp2p:o}=await t.use(n);await o.dial(r,n)}return withTimeoutOption(e)}function createDisconnect({network:t}){async function e(r,n={}){const{libp2p:o}=await t.use(n);await o.hangUp(r)}return withTimeoutOption(e)}function createLocalAddrs({network:t}){async function e(r={}){const{libp2p:n}=await t.use(r);return n.getMultiaddrs()}return withTimeoutOption(e)}function createPeers({network:t}){async function e(r={}){const{libp2p:n}=await t.use(r);if(r.verbose){const a=[];for(const c of n.getConnections()){const u={addr:c.remoteAddr,peer:c.remotePeer};(r.verbose||r.direction)&&(u.direction=c.stat.direction),r.verbose&&(u.muxer=c.stat.multiplexer,u.latency="n/a",u.streams=[]),a.push(u)}return a}const o=new Map;for(const a of n.getConnections()){const c={addr:a.remoteAddr,peer:a.remotePeer};o.set(a.remotePeer.toString(),c)}return Array.from(o.values())}return withTimeoutOption(e)}class SwarmAPI{constructor({network:e}){this.addrs=createAddrs({network:e}),this.connect=createConnect({network:e}),this.disconnect=createDisconnect({network:e}),this.localAddrs=createLocalAddrs({network:e}),this.peers=createPeers({network:e})}}const basePacket={success:!0,time:0,text:""};function createPing({network:t}){async function*e(r,n={}){const{libp2p:o}=await t.use();n.count=n.count||10;const a=await o.peerStore.get(r);let c=a&&a.id;if(!c){yield{...basePacket,text:`Looking up peer ${r}`};const f=await o.peerRouting.findPeer(r);c=f&&f.id}if(!c)throw new Error("Peer was not found");yield{...basePacket,text:`PING ${c.toString()}`};let u=0,l=0;for(let f=0;f<n.count;f++)try{const p=await o.ping(c);l+=p,u++,yield{...basePacket,time:p}}catch(p){yield{...basePacket,success:!1,text:p.toString()}}if(u){const f=l/u;yield{...basePacket,text:`Average latency: ${f}ms`}}}return withTimeoutOption(e)}const IPNS_PREFIX="/ipns/";function toDHTKey(t){t.startsWith(IPNS_PREFIX)&&(t=t.substring(IPNS_PREFIX.length));let e;if((t[0]==="1"||t[0]==="Q")&&(t=`z${t}`),t[0]==="z"&&(e=base58btc$n.decode(t)),t[0]==="k"&&(e=base36$u.decode(t)),!e)throw new Error("Could not parse string");if(e[0]!==1&&e[1]!==114&&(e=concat$8([[1,114],e])),e.length!==40)throw new Error("Incorrect length "+e.length);return concat$8([fromString$y(IPNS_PREFIX),e.subarray(2)])}function createDht({network:t,repo:e,peerId:r}){const{get:n,put:o,findProvs:a,findPeer:c,provide:u,query:l}={async*get(f,p={}){const{libp2p:g}=await use(t,r,p),$=f instanceof Uint8Array?f:toDHTKey(f);if(g.dht==null)throw errcode(new Error("dht not configured"),"ERR_DHT_NOT_CONFIGURED");yield*g.dht.get($,p)},async*put(f,p,g){const{libp2p:$}=await use(t,r,g),_=f instanceof Uint8Array?f:toDHTKey(f);if($.dht==null)throw errcode(new Error("dht not configured"),"ERR_DHT_NOT_CONFIGURED");yield*$.dht.put(_,p,g)},async*findProvs(f,p={}){const{libp2p:g}=await use(t,r,p);if(g.dht==null)throw errcode(new Error("dht not configured"),"ERR_DHT_NOT_CONFIGURED");yield*g.dht.findProviders(f,{signal:p.signal})},async*findPeer(f,p={}){const{libp2p:g}=await use(t,r,p);if(g.dht==null)throw errcode(new Error("dht not configured"),"ERR_DHT_NOT_CONFIGURED");yield*g.dht.findPeer(f,{signal:p.signal})},async*provide(f,p={recursive:!1}){const{libp2p:g}=await use(t,r,p);if(!await e.blocks.has(f))throw errcode(new Error("block(s) not found locally, cannot provide"),"ERR_BLOCK_NOT_FOUND");if(p.recursive)throw errcode(new Error("not implemented yet"),"ERR_NOT_IMPLEMENTED_YET");if(g.dht==null)throw errcode(new Error("dht not configured"),"ERR_DHT_NOT_CONFIGURED");yield*g.dht.provide(f)},async*query(f,p={}){const{libp2p:g}=await use(t,r,p);let $;const _=CID$k.asCID(f);if(_!=null?$=_.multihash.bytes:$=peerIdFromString$1(f.toString()).toBytes(),g.dht==null)throw errcode(new Error("dht not configured"),"ERR_DHT_NOT_CONFIGURED");yield*g.dht.getClosestPeers($,p)}};return{get:withTimeoutOption(n),put:withTimeoutOption(o),findProvs:withTimeoutOption(a),findPeer:withTimeoutOption(c),provide:withTimeoutOption(u),query:withTimeoutOption(l)}}const use=async(t,e,r)=>{const n=await t.use(r);if(n.libp2p.dht!=null)return n;{const o=async function*(){yield{from:e,name:"QUERY_ERROR",type:3,error:new NotEnabledError("dht not enabled")}};return{libp2p:{dht:{get:o,put:o,findProviders:o,findPeer:o,provide:o,getClosestPeers:o}}}}};function createPubsub({network:t,config:e}){const r=get$3(e||{},"Pubsub.Enabled",!0),n={};let o;return{subscribe:r?withTimeoutOption(a):notEnabled,unsubscribe:r?withTimeoutOption(c):notEnabled,publish:r?withTimeoutOption(u):notEnabled,ls:r?withTimeoutOption(l):notEnabled,peers:r?withTimeoutOption(f):notEnabled};async function a(p,g,$={}){const{libp2p:_}=await t.use($);_.pubsub.subscribe(p),o==null&&(o=b=>{const D=b.detail;n[D.topic]&&n[D.topic].forEach(v=>{if(typeof v=="function"){v(D);return}v!=null&&v.handleEvent!=null&&v.handleEvent(D)})},_.pubsub.addEventListener("message",o)),g!=null&&(n[p]==null&&(n[p]=[]),n[p].push(g))}async function c(p,g,$={}){const{libp2p:_}=await t.use($);g!=null&&n[p]!=null&&(n[p]=n[p].filter(b=>b!==g),n[p].length===0&&delete n[p]),typeof g!="function"&&delete n[p],n[p]==null&&_.pubsub.unsubscribe(p),Object.keys(n).length===0&&(_.pubsub.removeEventListener("message",o),o=void 0)}async function u(p,g,$={}){const{libp2p:_}=await t.use($);if(!g)throw errcode(new Error('argument "data" is required'),"ERR_ARG_REQUIRED");await _.pubsub.publish(p,g)}async function l(p={}){const{libp2p:g}=await t.use(p);return g.pubsub.getTopics()}async function f(p,g={}){const{libp2p:$}=await t.use(g);return $.pubsub.getSubscribers(p)}}const notEnabled=async()=>{throw new NotEnabledError("pubsub not enabled")},mergeOptions=mergeOptions$h.bind({ignoreUndefined:!0}),log=logger$3("ipfs"),IPNS_INIT_KEYSPACE_TIMEOUT=3e4;class IPFS{constructor({print:e,storage:r,codecs:n,options:o}){const{peerId:a,repo:c,keychain:u}=r,l=Service.create(Network),f=createPreloader(o.preload),p=createDns$1(),g=createIsOnline$1({network:l}),$=new IPNSAPI(o),_=Object.values(hashes$1);(o.ipld&&o.ipld.hashers?o.ipld.hashers:[]).forEach(F=>_.push(F)),this.hashers=new Multihashes({hashers:_,loadHasher:o.ipld&&o.ipld.loadHasher});const b=Object.values(bases$f);(o.ipld&&o.ipld.bases?o.ipld.bases:[]).forEach(F=>b.push(F)),this.bases=new Multibases({bases:b,loadBase:o.ipld&&o.ipld.loadBase});const D=new PinAPI({repo:c,codecs:n}),v=new BlockAPI({codecs:n,hashers:this.hashers,preload:f,repo:c}),S=new NameAPI({dns:p,ipns:$,repo:c,codecs:n,peerId:a,isOnline:g,keychain:u,options:o}),I=createResolve$5({repo:c,codecs:n,bases:this.bases,name:S}),R=new DagAPI({repo:c,codecs:n,hashers:this.hashers,preload:f}),C=Object.assign(createRefs$1({repo:c,codecs:n,resolve:I,preload:f}),{local:createLocal$1({repo:r.repo})}),{add:T,addAll:P,cat:E,get:A,ls:k}=new RootAPI({preload:f,repo:c,options:o.EXPERIMENTAL,hashers:this.hashers}),O=createFiles$1({repo:c,preload:f,hashers:this.hashers,options:o}),M=createMfsPreloader({files:O,preload:f,options:o.preload});this.preload=f,this.name=S,this.ipns=$,this.pin=D,this.resolve=I,this.block=v,this.refs=C,this.start=createStart$1({network:l,peerId:a,repo:c,preload:f,ipns:$,mfsPreload:M,print:e,keychain:u,hashers:this.hashers,options:o}),this.stop=createStop$1({network:l,preload:f,mfsPreload:M,ipns:$,repo:c}),this.dht=createDht({network:l,repo:c,peerId:a}),this.pubsub=createPubsub({network:l,config:o.config}),this.dns=p,this.isOnline=g,this.id=createId$1({network:l,peerId:a}),this.version=createVersion$3({repo:c}),this.bitswap=new BitswapAPI({network:l}),this.bootstrap=new BootstrapAPI({repo:c}),this.config=createConfig$1({repo:c}),this.ping=createPing({network:l}),this.add=T,this.addAll=P,this.cat=E,this.get=A,this.ls=k,this.dag=R,this.files=O,this.key=new KeyAPI({keychain:u}),this.object=new ObjectAPI({preload:f,codecs:n,repo:c}),this.repo=new RepoAPI({repo:c,hashers:this.hashers}),this.stats=new StatsAPI({repo:c,network:l}),this.swarm=new SwarmAPI({network:l}),Object.defineProperty(this,"libp2p",{get(){const F=l.try();return F?F.libp2p:void 0}});const L=()=>Promise.reject(errcode(new Error("Not implemented"),"ERR_NOT_IMPLEMENTED")),U=async function*(){throw errcode(new Error("Not implemented"),"ERR_NOT_IMPLEMENTED")};this.commands=L,this.diag={cmds:L,net:L,sys:L},this.log={level:L,ls:L,tail:U},this.mount=L,this.codecs=n}async init(){throw new AlreadyInitializedError}}const addEmptyDir=async t=>{const e=encode$1L({Data:new UnixFS({type:"directory"}).marshal(),Links:[]}),r=await t.block.put(e,{mhtype:"sha2-256",format:"dag-pb"});return await t.pin.add(r),r},getDefaultOptions=()=>({start:!0,EXPERIMENTAL:{},preload:{enabled:!env.isTest,addresses:["/dns4/node0.preload.ipfs.io/https","/dns4/node1.preload.ipfs.io/https","/dns4/node2.preload.ipfs.io/https","/dns4/node3.preload.ipfs.io/https"]}});async function create$1(t={}){t=mergeOptions(getDefaultOptions(),t);const e=t.init||{},r={name:identity$o.name,code:identity$o.code,encode:f=>f,decode:f=>f},n=Object.values(codecs$1);[dagPB,dagCBOR,dagJSON,dagJOSE,r].concat(t.ipld&&t.ipld.codecs||[]).forEach(f=>n.push(f));const o=new Multicodecs({codecs:n,loadCodec:t.ipld&&t.ipld.loadCodec}),a=t.silent?log:console.log;log("creating repo");const c=await Storage.start(a,o,t);log("getting repo config");const u=await c.repo.config.getAll(),l=new IPFS({storage:c,print:a,codecs:o,options:{...t,config:u}});if(log("starting preload"),await l.preload.start(),log("starting storage"),l.ipns.startOffline(c),c.isNew&&!e.emptyRepo){const f=await addEmptyDir(l);if(log("adding default assets"),await(l.addAll,void 0),log("initializing IPNS keyspace"),c.peerId.publicKey==null)throw errcode(new Error("Public key missing"),"ERR_MISSING_PUBLIC_KEY");const p=new timeoutAbortController.TimeoutController(IPNS_INIT_KEYSPACE_TIMEOUT);try{await l.ipns.initializeKeyspace(c.peerId,fromString$y(`/ipfs/${f}`),{signal:p.signal})}finally{p.clear()}}return t.start!==!1&&(log("starting node"),await l.start()),l}let create;create=create$1,symbol=Symbol.for("@libp2p/transport");var FaultTolerance;(function(t){t[t.FATAL_ALL=0]="FATAL_ALL",t[t.NO_FATAL=1]="NO_FATAL"})(FaultTolerance||(FaultTolerance={}));const obtConfigPlateforme=async()=>{let t;return isBrowser$2||isElectronRenderer?t=(await __vitePreload(()=>import("./configNavigateur-kceL97tm.js").then(async e=>(await e.__tla,e)),__vite__mapDeps([0,1,2,3,4,5]),import.meta.url)).default:isWebWorker$1?t=(await __vitePreload(()=>import("./configTravailleur-splHMr9w.js").then(async e=>(await e.__tla,e)),__vite__mapDeps([6,4,2,3,5]),import.meta.url)).default:isElectronMain?t=(await __vitePreload(()=>import("./config\xC9lectronPrincipal-npdb_JP6.js").then(async e=>(await e.__tla,e)),__vite__mapDeps([7,1,2,3,8,4,9,5]),import.meta.url)).default:isNode?t=(await __vitePreload(()=>import("./configNode-z64OhfMz.js").then(async e=>(await e.__tla,e)),__vite__mapDeps([10,1,2,3,8,4,5]),import.meta.url)).default:(console.warn("Plateforme non reconnue. On utilisera la configuration navigateur."),t=(await __vitePreload(()=>import("./configNavigateur-kceL97tm.js").then(async e=>(await e.__tla,e)),__vite__mapDeps([0,1,2,3,4,5]),import.meta.url)).default),t},obtConfigCommun=()=>({libp2p:{streamMuxers:[mplex$1()],connectionEncryption:[noise()],transportManager:{faultTolerance:FaultTolerance.NO_FATAL}},relay:{enabled:!0,hop:{enabled:!0,active:!0}}});async function initSFIP(t="./constl/sfip"){const e=obtConfigCommun(),r=await obtConfigPlateforme();e.repo=t;const n=mergeOptions$h(e,r);return await create(n)}index=Object.freeze(Object.defineProperty({__proto__:null,default:initSFIP},Symbol.toStringTag,{value:"Module"}))});export{AbortError$b as A,CustomEvent as C,EventEmitter$1 as E,P2PWebRTCDirect as P,Uint8ArrayList as U,WebRTCInitiator as W,__tla,abortableSource$7 as a,getProtocol$9 as b,lookup as c,WebRTCReceiver as d,errcode as e,symbol as f,globalFetch as g,P2PWebRTCStar as h,isName$1 as i,symbol$6 as j,index as k,logger$3 as l,multiaddr$9 as m,noise as n,peerIdFromString$1 as p,randomBytes$2 as r,symbol$7 as s,webSockets as w};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["./configNavigateur-kceL97tm.js","./const-UkZJj0SE.js","./index-wr59-EDT.js","./index-faTbhQl0.css","./index-kjy263JT.js","./browser-PGHVSA1T.js","./configTravailleur-splHMr9w.js","./configÉlectronPrincipal-npdb_JP6.js","./index-pLHssmkz.js","./path-TnDa5oq_.js","./configNode-z64OhfMz.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
