import{l as $,a as D,A as T,W as z,P as k,g as M}from"./index-8z3DI95X.js";import{y as P,x as W}from"./index-KwedNMoD.js";function F(r,e){if(r.length>=255)throw new TypeError("Alphabet too long");for(var n=new Uint8Array(256),o=0;o<n.length;o++)n[o]=255;for(var s=0;s<r.length;s++){var f=r.charAt(s),v=f.charCodeAt(0);if(n[v]!==255)throw new TypeError(f+" is ambiguous");n[v]=s}var a=r.length,c=r.charAt(0),E=Math.log(a)/Math.log(256),S=Math.log(256)/Math.log(a);function C(t){if(t instanceof Uint8Array||(ArrayBuffer.isView(t)?t=new Uint8Array(t.buffer,t.byteOffset,t.byteLength):Array.isArray(t)&&(t=Uint8Array.from(t))),!(t instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(t.length===0)return"";for(var i=0,d=0,h=0,u=t.length;h!==u&&t[h]===0;)h++,i++;for(var b=(u-h)*S+1>>>0,l=new Uint8Array(b);h!==u;){for(var w=t[h],y=0,p=b-1;(w!==0||y<d)&&p!==-1;p--,y++)w+=256*l[p]>>>0,l[p]=w%a>>>0,w=w/a>>>0;if(w!==0)throw new Error("Non-zero carry");d=y,h++}for(var g=b-d;g!==b&&l[g]===0;)g++;for(var O=c.repeat(i);g<b;++g)O+=r.charAt(l[g]);return O}function A(t){if(typeof t!="string")throw new TypeError("Expected String");if(t.length===0)return new Uint8Array;var i=0;if(t[i]!==" "){for(var d=0,h=0;t[i]===c;)d++,i++;for(var u=(t.length-i)*E+1>>>0,b=new Uint8Array(u);t[i];){var l=n[t.charCodeAt(i)];if(l===255)return;for(var w=0,y=u-1;(l!==0||w<h)&&y!==-1;y--,w++)l+=a*b[y]>>>0,b[y]=l%256>>>0,l=l/256>>>0;if(l!==0)throw new Error("Non-zero carry");h=w,i++}if(t[i]!==" "){for(var p=u-h;p!==u&&b[p]===0;)p++;for(var g=new Uint8Array(d+(u-p)),O=d;p!==u;)g[O++]=b[p++];return g}}}function U(t){var i=A(t);if(i)return i;throw new Error(`Non-${e} character`)}return{encode:C,decodeUnsafe:A,decode:U}}var J=F,I=J;const B=r=>{if(r instanceof Uint8Array&&r.constructor.name==="Uint8Array")return r;if(r instanceof ArrayBuffer)return new Uint8Array(r);if(ArrayBuffer.isView(r))return new Uint8Array(r.buffer,r.byteOffset,r.byteLength);throw new Error("Unknown type, must be binary type")};class V{constructor(e,n,o){this.name=e,this.prefix=n,this.baseEncode=o}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}}class X{constructor(e,n,o){if(this.name=e,this.prefix=n,n.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=n.codePointAt(0),this.baseDecode=o}decode(e){if(typeof e=="string"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(e){return x(this,e)}}class Z{constructor(e){this.decoders=e}or(e){return x(this,e)}decode(e){const n=e[0],o=this.decoders[n];if(o)return o.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}}const x=(r,e)=>new Z({...r.decoders||{[r.prefix]:r},...e.decoders||{[e.prefix]:e}});class j{constructor(e,n,o,s){this.name=e,this.prefix=n,this.baseEncode=o,this.baseDecode=s,this.encoder=new V(e,n,o),this.decoder=new X(e,n,s)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}}const q=({name:r,prefix:e,encode:n,decode:o})=>new j(r,e,n,o),N=({prefix:r,name:e,alphabet:n})=>{const{encode:o,decode:s}=I(n,e);return q({prefix:r,name:e,encode:o,decode:f=>B(s(f))})},_=N({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"});N({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});const G=421,K=290,Q=2e3,L=$("libp2p:webrtc-direct:socket");function Y(r,e){const{sink:n,source:o}=r,s={remoteAddr:e.remoteAddr,async sink(f){e.signal!=null&&(f=D(f,e.signal));try{await n(f)}catch(v){v.type!=="aborted"&&L.error(v)}},source:e.signal!=null?D(o,e.signal):o,timeline:{open:Date.now()},async close(){if(r.closed)return;const f=Date.now(),v=setTimeout(()=>{if(s.remoteAddr!=null){const{host:a,port:c}=s.remoteAddr.toOptions();L("timeout closing socket to %s:%s after %dms, destroying it manually",a,c,Date.now()-f)}r.closed||r.close().catch(a=>{L.error("could not close socket",a)})},Q);try{await r.close()}finally{clearTimeout(v)}}};return r.addEventListener("close",()=>{s.timeline.close==null&&(s.timeline.close=Date.now())},{once:!0}),s}function H(){throw new Error("WebRTCDirect Servers can not be created in the browser!")}const ee=Symbol.for("@libp2p/transport");var R;(function(r){r[r.FATAL_ALL=0]="FATAL_ALL",r[r.NO_FATAL=1]="NO_FATAL"})(R||(R={}));const m=$("libp2p:webrtc-direct");class re{constructor(e){this.initiatorOptions=e?.initiatorOptions,this.recieverOptions=e?.recieverOptions,this.wrtc=e?.wrtc}get[ee](){return!0}get[Symbol.toStringTag](){return"@libp2p/webrtc-direct"}async dial(e,n){const o=await this._connect(e,n),s=Y(o,{remoteAddr:e,signal:n.signal});m("new outbound connection %s",s.remoteAddr);const f=await n.upgrader.upgradeOutbound(s);return m("outbound connection %s upgraded",s.remoteAddr),f}async _connect(e,n){if(n.signal?.aborted===!0)throw new T;const o={initiator:!0,trickle:!1,...this.initiatorOptions};return this.wrtc!=null&&(o.wrtc=this.wrtc),await new Promise((s,f)=>{let v;const a=e.toOptions();m("Dialing %s:%s",a.host,a.port);const c=new z(o),E=t=>{const i=t.detail;if(!v){const d=`connection error ${a.host}:${a.port}: ${i.message}`;m.error(d),i.message=d,A(i)}},S=()=>{v=!0,m("connection opened %s:%s",a.host,a.port),A()},C=()=>{m.error("connection aborted %s:%s",a.host,a.port),c.close().finally(()=>{A(new T)})},A=t=>{c.removeEventListener("error",E),c.removeEventListener("ready",S),n.signal?.removeEventListener("abort",C),t!=null?f(t):s(c)};c.addEventListener("error",E,{once:!0}),c.addEventListener("ready",S,{once:!0}),c.addEventListener("close",()=>{c.removeEventListener("error",E)}),n.signal?.addEventListener("abort",C);const U=async t=>{if(t.type!=="offer")return;const i=JSON.stringify(t);let d=a.host;a.family===6&&!d.startsWith("[")&&(d=`[${d}]`);const h=`http://${d}:${a.port}`,u=`/?signal=${_.encode(P(i))}`,b=h+u;try{const w=await(await M(b)).text();if(w.trim()==="")return;const y=_.decode(w),p=W(y),g=JSON.parse(p);c.handleSignal(g)}catch(l){await c.close(l),f(l)}};c.addEventListener("signal",t=>{const i=t.detail;U(i).catch(async d=>{await c.close(d)})})})}createListener(e){return H({...e,receiverOptions:this.recieverOptions,wrtc:this.wrtc})}filter(e){return e=Array.isArray(e)?e:[e],e.filter(n=>n.protoCodes().includes(K)?!1:k.matches(n.decapsulateCode(G)))}}function oe(r={}){return()=>new re(r)}const ie=["/dns4/serveurwebrtcstarconstellation1-julienmalard.b4a.run/tcp/443/wss/p2p-webrtc-star/","/dns4/arcane-springs-02799.herokuapp.com/tcp/443/wss/p2p-webrtc-star/"];export{ie as A,oe as w};
//# sourceMappingURL=const-q-voByQB.js.map
