{"version":3,"file":"PageAutomatisations-HNOUx5_3.js","sources":["../../src/components/importerExporter/ImporterOuExporter.vue","../../src/vues/PageAutomatisations.vue"],"sourcesContent":["<template>\n  <v-dialog v-model=\"dialogue\">\n    <template #activator=\"{props: propsActivateur}\">\n      <slot\n        name=\"activator\"\n        v-bind=\"{props: propsActivateur}\"\n      ></slot>\n    </template>\n    <v-card\n      class=\"mx-auto\"\n      :max-width=\"mdAndUp ? 500 : 300\"\n    >\n      <v-card-item>\n        <v-card-title class=\"d-flex\">\n          {{ t(titreCarte) }}\n          <v-spacer />\n          <v-btn\n            icon=\"mdi-close\"\n            size=\"small\"\n            variant=\"flat\"\n            @click=\"dialogue = false\"\n          />\n        </v-card-title>\n        <v-card-subtitle> {{ t(sousTitreCarte) }} </v-card-subtitle>\n      </v-card-item>\n      <v-card-text>\n        <v-window\n          v-model=\"étape\"\n          style=\"overflow-y: scroll\"\n        >\n          <v-window-item :value=\"0\">\n            <div class=\"text-center\">\n              <v-btn\n                class=\"ma-3\"\n                variant=\"outlined\"\n                append-icon=\"mdi-import\"\n                @click=\"suivreCheminementImportation\"\n              >\n                {{ t('communs.importerOuExporter.importer') }}\n              </v-btn>\n              <v-btn\n                class=\"ma-3\"\n                variant=\"outlined\"\n                append-icon=\"mdi-export\"\n                @click=\"suivreCheminementExportation\"\n              >\n                {{ t('communs.importerOuExporter.exporter') }}\n              </v-btn>\n            </div>\n          </v-window-item>\n          <v-window-item :value=\"3\">\n            <span v-if=\"formatImportation === 'tableau'\">\n              <v-select :items=\"colonnesImportation\" />\n              <v-select :items=\"idsColonnesTableauConstellation\" />\n              <v-combobox chips />\n            </span>\n            <span v-else-if=\"formatImportation === 'json'\">\n              <v-select\n                multiple\n                chips\n              />\n              <v-select\n                multiple\n                chips\n              />\n            </span>\n          </v-window-item>\n          <v-window-item :value=\"9\">\n            <div class=\"text-center\">\n              <v-btn\n                class=\"ma-3\"\n                variant=\"flat\"\n                color=\"primary\"\n                :disabled=\"\n                  surNavigateur &&\n                    (cheminement === 'exportation' || origineImportation === 'fichier')\n                \"\n              >\n                {{ t('communs.importerOuExporter.automatiser') }}\n              </v-btn>\n              <v-btn\n                class=\"ma-3\"\n                variant=\"outlined\"\n              >\n                {{ t('communs.importerOuExporter.nePasAutomatiser') }}\n              </v-btn>\n            </div>\n          </v-window-item>\n          <v-window-item :value=\"11\">\n            <div class=\"text-center\">\n              <h3 class=\"text-h6 font-weight-light mb-2\">\n                {{ t('communs.importerOuExporter.messageConfirmer') }}\n              </h3>\n              <p>\n                <v-btn\n                  class=\"mt-3\"\n                  variant=\"outlined\"\n                  :loading=\"enConfirmation\"\n                >\n                  {{ t('communs.importerOuExporter.confirmer') }}\n                </v-btn>\n              </p>\n            </div>\n          </v-window-item>\n        </v-window>\n      </v-card-text>\n      <v-divider></v-divider>\n\n      <v-card-actions>\n        <btn-retour\n          :visible=\"retourActif.visible\"\n          :actif=\"retourActif.actif\"\n          @retour=\"retour\"\n        />\n        <v-spacer></v-spacer>\n        <btn-suivant\n          :visible=\"suivantActif.visible\"\n          :actif=\"suivantActif.actif\"\n          @suivant=\"suivant\"\n        />\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n<script setup lang=\"ts\">\nimport type {automatisation} from '@constl/ipa';\nimport {suivre} from '@constl/vue';\n\nimport type {clefsExtraction} from '@constl/ipa/dist/importateur/json';\nimport {கிளிமூக்கை_பயன்படுத்து} from '@lassi-js/kilimukku-vue';\nimport {computed, ref} from 'vue';\nimport {useDisplay} from 'vuetify';\nimport {isElectronMain, isNode} from 'wherearewe';\nimport {utiliserConstellation} from '../utils';\nimport BtnRetour from '/@/components/communs/BtnRetour.vue';\nimport BtnSuivant from '/@/components/communs/BtnSuivant.vue';\n\nconst {மொழியாக்கம்_பயன்படுத்து} = கிளிமூக்கை_பயன்படுத்து();\nconst {$மொ: t} = மொழியாக்கம்_பயன்படுத்து();\n\nconst {mdAndUp} = useDisplay();\n\nconst constl = utiliserConstellation();\n\nconst props = defineProps<{\n  type?: 'importation' | 'exportation';\n  automatiser?: boolean;\n  infoObjet?: {id: string; typeObjet: 'bd' | 'tableau' | 'projet' | 'nuée'};\n}>();\n\nconst surNavigateur = !isNode && !isElectronMain;\n\n// Navigation générale\nconst dialogue = ref(false);\nconst listeÉtapes = [\n  'importerOuExporter',\n  'objetConstellation',\n\n  // Pour importations\n  'sourceImportation',\n  'correspondancesImportation',\n\n  // Pour exportations\n  'dossierExportation',\n  'inclureSFIPExportation',\n  'languesExportation',\n  'formatDocExportation',\n\n  // Pour automatisations\n  'voulezVousAutomatiser',\n  'fréquence',\n  'dispositif',\n\n  'confirmation',\n] as const;\n\nconst étape = ref(\n  listeÉtapes.indexOf(\n    props.type\n      ? props.infoObjet\n        ? props.type === 'exportation'\n          ? 'dossierExportation'\n          : 'sourceImportation'\n        : 'objetConstellation'\n      : 'importerOuExporter',\n  ),\n);\n\nconst cheminement = ref(props.type);\nconst cheminementAjouterAutomatisation = ref<boolean>();\n\nconst suivant = () => {\n  const é = listeÉtapes[étape.value];\n  switch (é) {\n    case 'importerOuExporter':\n      étape.value = listeÉtapes.indexOf(\n        props.infoObjet\n          ? cheminement.value === 'importation'\n            ? 'sourceImportation'\n            : 'dossierExportation'\n          : 'objetConstellation',\n      );\n      break;\n\n    case 'correspondancesImportation':\n    case 'formatDocExportation':\n      étape.value = listeÉtapes.indexOf(props.automatiser ? 'fréquence' : 'voulezVousAutomatiser');\n      break;\n\n    default:\n      étape.value++;\n      break;\n  }\n};\n\nconst retour = () => {\n  const é = listeÉtapes[étape.value];\n  switch (é) {\n    case 'confirmation':\n      étape.value = listeÉtapes.indexOf(\n        cheminementAjouterAutomatisation.value\n          ? 'dispositif'\n          : cheminement.value === 'importation'\n            ? 'correspondancesImportation'\n            : 'formatDocExportation',\n      );\n      break;\n\n    case 'voulezVousAutomatiser':\n      étape.value = listeÉtapes.indexOf(\n        cheminement.value === 'importation' ? 'correspondancesImportation' : 'formatDocExportation',\n      );\n      break;\n\n    case 'sourceImportation':\n    case 'dossierExportation':\n      étape.value = listeÉtapes.indexOf(\n        props.infoObjet ? (props.type ? é : 'importerOuExporter') : 'objetConstellation',\n      );\n      break;\n\n    default:\n      étape.value--;\n      break;\n  }\n};\n\nconst suivantActif = computed<{actif: boolean; visible: boolean}>(() => {\n  const é = listeÉtapes[étape.value];\n  switch (é) {\n    case 'importerOuExporter':\n      return {actif: false, visible: false};\n    case 'objetConstellation':\n      return {actif: !!(idObjet.value && typeObjet.value), visible: true};\n    case 'sourceImportation':\n      return {actif: !!sourceImportation.value, visible: true};\n    case 'correspondancesImportation':\n      return {actif: !!correspondancesImportationBienSpécifiées.value, visible: true};\n    case 'dossierExportation':\n      return {actif: !!dossierExportation.value, visible: true};\n    case 'inclureSFIPExportation':\n      return {actif: !!inclureSFIPExportation.value, visible: true};\n    case 'languesExportation':\n      return {actif: !!languesExportation.value, visible: true};\n    case 'formatDocExportation':\n      return {actif: !!formatDocExportation.value, visible: true};\n    case 'voulezVousAutomatiser':\n      return {actif: aussiAjouterAutomatisation.value !== undefined, visible: true};\n    case 'fréquence':\n      return {actif: !!fréquence.value, visible: true};\n    case 'dispositif':\n      return {actif: !!dispositifAutomatisation.value, visible: true};\n    case 'confirmation':\n      return {actif: false, visible: false};\n    default:\n      return {actif: true, visible: true};\n  }\n});\n\nconst retourActif = computed<{actif: boolean; visible: boolean}>(() => {\n  const é = listeÉtapes[étape.value];\n  switch (é) {\n    case 'importerOuExporter':\n      return {actif: false, visible: false};\n    case 'confirmation':\n      return {actif: !enConfirmation.value, visible: true};\n    default:\n      return {actif: true, visible: true};\n  }\n});\nconst suivreCheminementImportation = () => {\n  cheminement.value = 'importation';\n  étape.value = listeÉtapes.indexOf('sourceImportation');\n};\nconst suivreCheminementExportation = () => {\n  cheminement.value = 'exportation';\n  étape.value = listeÉtapes.indexOf('dossierExportation');\n};\n\nconst titreCarte = computed(() => {\n  const é = listeÉtapes[étape.value];\n  switch (é) {\n    case 'importerOuExporter':\n      return 'communs.importerOuExporter.titreImporterOuExporter';\n    case 'objetConstellation':\n      return 'communs.importerOuExporter.titreObjetConstellation';\n    case 'sourceImportation':\n      return 'communs.importerOuExporter.titreSourceImportation';\n    case 'correspondancesImportation':\n      return 'communs.importerOuExporter.titreCorrespondancesImportation';\n    case 'dossierExportation':\n      return 'communs.importerOuExporter.titreDossierExportation';\n    case 'inclureSFIPExportation':\n      return 'communs.importerOuExporter.titreInclureSFIPExportation';\n    case 'languesExportation':\n      return 'communs.importerOuExporter.titreLanguesExportation';\n    case 'formatDocExportation':\n      return 'communs.importerOuExporter.titreFormatDocExportation';\n    case 'voulezVousAutomatiser':\n      return 'communs.importerOuExporter.titreVoulezVousAutomatiser';\n    case 'fréquence':\n      return 'communs.importerOuExporter.titreFréquence';\n    case 'dispositif':\n      return 'communs.importerOuExporter.titreDispositif';\n    case 'confirmation':\n      return 'communs.importerOuExporter.titreconfirmation';\n    default:\n      return '';\n  }\n});\n\nconst sousTitreCarte = computed(() => {\n  const é = listeÉtapes[étape.value];\n  switch (é) {\n    case 'importerOuExporter':\n      return 'communs.importerOuExporter.sousTitreImporterOuExporter';\n    case 'objetConstellation':\n      return 'communs.importerOuExporter.sousTitreObjetConstellation';\n    case 'sourceImportation':\n      return 'communs.importerOuExporter.sousTitreSourceImportation';\n    case 'correspondancesImportation':\n      return 'communs.importerOuExporter.sousTitreCorrespondancesImportation';\n    case 'dossierExportation':\n      return 'communs.importerOuExporter.sousTitreDossierExportation';\n    case 'inclureSFIPExportation':\n      return 'communs.importerOuExporter.sousTitreInclureSFIPExportation';\n    case 'languesExportation':\n      return 'communs.importerOuExporter.sousTitreLanguesExportation';\n    case 'formatDocExportation':\n      return 'communs.importerOuExporter.sousTitreFormatDocExportation';\n    case 'voulezVousAutomatiser':\n      return 'communs.importerOuExporter.sousTitreVoulezVousAutomatiser';\n    case 'fréquence':\n      return 'communs.importerOuExporter.sousTitreFréquence';\n    case 'dispositif':\n      return 'communs.importerOuExporter.sousTitreDispositif';\n    case 'confirmation':\n      return 'communs.importerOuExporter.sousTitreconfirmation';\n    default:\n      return '';\n  }\n});\n\n// Objet Constellation\nconst idObjet = ref(props.infoObjet?.id);\nconst typeObjet = ref(props.infoObjet?.typeObjet);\n// Exportation\nconst dossierExportation = ref<string>();\nconst inclureSFIPExportation = ref<boolean>();\n\n// Importation\nconst fichierImportation = ref<string>();\nconst urlImportation = ref<string>();\nconst origineImportation = ref<'url' | 'fichier'>();\n\nconst colonnesTableauConstellation = suivre(constl.bds.suivreTableauxBd, {idBd: idObjet});\nconst idsColonnesTableauConstellation = computed(() => {\n  return colonnesTableauConstellation.value?.map(c => c.id);\n});\n\nconst colonnesImportation = ref<string[]>();\n\nconst formatFichierImportation = computed<'json' | 'tableau' | undefined>(() => {\n  const ext = fichierImportation.value?.split('.').pop();\n  if (!ext) return undefined;\n  return ext === 'json' ? ext : 'tableau';\n});\nconst formatURLImportation = ref<'json' | 'tableau'>();\nconst formatImportation = computed(() => {\n  const format =\n    origineImportation.value === 'fichier'\n      ? formatFichierImportation.value\n      : formatURLImportation.value;\n  return format;\n});\nconst correspondancesJSONClefRacine = ref<clefsExtraction>();\nconst correspondancesJSONClefsÉléments = ref<clefsExtraction>();\nconst correspondancesJSONCols = ref<{[key: string]: clefsExtraction}>();\n\nconst correspondancesFeuilleCalculNomTableau = ref<string>();\nconst correspondancesFeuilleCalculCols = ref<{[key: string]: string}>();\nconst correspondancesFeuilleCalculOptionsXLSX = ref<automatisation.XLSXParsingOptions>();\n\nconst générerInfoJSON = (): automatisation.infoImporterJSON => {\n  if (!correspondancesJSONClefRacine.value) throw new Error('Clefs racine JSON non définies.');\n  if (!correspondancesJSONClefsÉléments.value) throw new Error('Clefs éléments JSON non définies.');\n  if (!correspondancesJSONCols.value) throw new Error('Colonnes JSON non définies.');\n  return {\n    formatDonnées: 'json',\n    clefsRacine: correspondancesJSONClefRacine.value,\n    clefsÉléments: correspondancesJSONClefsÉléments.value,\n    cols: correspondancesJSONCols.value,\n  };\n};\nconst générerInfoTableau = (): automatisation.infoImporterFeuilleCalcul => {\n  if (!correspondancesFeuilleCalculNomTableau.value) throw new Error('Nom tableau non défini.');\n  if (!correspondancesFeuilleCalculCols.value)\n    throw new Error('Colonnes feuille calcul non définies.');\n\n  return {\n    formatDonnées: 'feuilleCalcul',\n    nomTableau: correspondancesFeuilleCalculNomTableau.value,\n    cols: correspondancesFeuilleCalculCols.value,\n    optionsXLSX: correspondancesFeuilleCalculOptionsXLSX.value,\n  };\n};\nconst sourceImportation = computed<\n  | automatisation.SourceDonnéesImportation<\n      automatisation.infoImporterJSON | automatisation.infoImporterFeuilleCalcul\n    >\n  | undefined\n>(() => {\n  if (!origineImportation.value) return undefined;\n\n  if (origineImportation.value === 'fichier') {\n    if (!fichierImportation.value) throw new Error('Fichier importation non défini.');\n    if (formatImportation.value === 'json') {\n      const source: automatisation.SourceDonnéesImportationFichier<automatisation.infoImporterJSON> =\n        {\n          typeSource: origineImportation.value,\n          adresseFichier: fichierImportation.value,\n          info: générerInfoJSON(),\n        };\n      return source;\n    } else {\n      const source: automatisation.SourceDonnéesImportationFichier<automatisation.infoImporterFeuilleCalcul> =\n        {\n          typeSource: origineImportation.value,\n          adresseFichier: fichierImportation.value,\n          info: générerInfoTableau(),\n        };\n      return source;\n    }\n  } else {\n    if (!urlImportation.value) throw new Error('URL importation non défini.');\n    if (formatImportation.value === 'json') {\n      const source: automatisation.SourceDonnéesImportationURL<automatisation.infoImporterJSON> = {\n        typeSource: origineImportation.value,\n        url: urlImportation.value,\n        info: générerInfoJSON(),\n      };\n      return source;\n    } else {\n      const urlRésolu = résoudreUrl(urlImportation.value);\n      const source: automatisation.SourceDonnéesImportationURL<automatisation.infoImporterFeuilleCalcul> =\n        {\n          typeSource: origineImportation.value,\n          url: urlRésolu,\n          info: générerInfoTableau(),\n        };\n      return source;\n    }\n  }\n});\n\nconst résoudreUrl = (url: string): string => {\n  // Convertir document google à url téléchargement CSV\n  const domaine = new URL(url);\n  const docGoogle = domaine.hostname === 'docs.google.com';\n  if (docGoogle && !domaine.href.includes('gviz')) {\n    try {\n      const nom_tableau = url.split('gid=')[1];\n      const clef = url.split('spreadsheets/d/')[1].split('/edit#')[0];\n      return `https://docs.google.com/spreadsheets/d/${clef}/gviz/tq?tqx=out:csv&sheet=${nom_tableau}`;\n    } catch {\n      return url;\n    }\n  }\n  return url;\n};\n\nconst correspondancesImportationBienSpécifiées = computed(() => {\n  switch (formatImportation.value) {\n    case 'json':\n      return !!(\n        correspondancesJSONClefRacine.value &&\n        correspondancesJSONClefsÉléments.value &&\n        correspondancesJSONCols.value\n      );\n\n    case 'tableau':\n      return !!(\n        correspondancesFeuilleCalculNomTableau.value &&\n        correspondancesFeuilleCalculCols.value &&\n        correspondancesFeuilleCalculOptionsXLSX.value\n      );\n\n    default:\n      return false;\n  }\n});\n\n// Options exportation\nconst languesExportation = ref<string[]>();\nconst formatDocExportation = ref<automatisation.formatTélécharger>();\n\n// Automatisation\nconst fréquence = ref<automatisation.fréquence>();\nconst dispositifAutomatisation = ref<string>();\n\nconst aussiAjouterAutomatisation = ref<boolean>();\n\n// Confirmer\nconst enConfirmation = ref(false);\n</script>\n","<template>\n  <v-container class=\"text-center\">\n    <TitrePage\n      :titre=\"t('pages.automatisations.titre')\"\n      :image=\"imgAutomatisations\"\n      :sous-titre=\"t('pages.automatisations.sousTitre')\"\n    />\n    <v-list class=\"text-start\">\n      <ImporterOuExporter automatiser>\n        <template #activator=\"{props}\">\n          <v-list-item\n            v-bind=\"props\"\n            prepend-icon=\"mdi-plus\"\n            :title=\"t('pages.automatisations.ajouterNouvelle.titre')\"\n            :subtitle=\"t('pages.automatisations.ajouterNouvelle.sousTitre')\"\n          />\n        </template>\n      </ImporterOuExporter>\n      <ItemAutomatisation\n        v-for=\"auto in automatisations\"\n        :key=\"auto.id\"\n        :spécification=\"auto\"\n      />\n    </v-list>\n  </v-container>\n</template>\n<script setup lang=\"ts\">\nimport {suivre} from '@constl/vue';\nimport {கிளிமூக்கை_பயன்படுத்து} from '@lassi-js/kilimukku-vue';\n\nimport {utiliserConstellation} from '../components/utils';\nimport ItemAutomatisation from '/@/components/automatisations/ItemAutomatisation.vue';\nimport TitrePage from '/@/components/communs/TitrePage.vue';\nimport ImporterOuExporter from '/@/components/importerExporter/ImporterOuExporter.vue';\nimport {utiliserImagesDéco} from '/@/composables/images';\n\nconst constl = utiliserConstellation();\n\nconst {மொழியாக்கம்_பயன்படுத்து} = கிளிமூக்கை_பயன்படுத்து();\nconst {$மொ: t} = மொழியாக்கம்_பயன்படுத்து();\nconst {obtImageDéco} = utiliserImagesDéco();\n\nconst imgAutomatisations = obtImageDéco('automatisation');\n\n// Automatisations\nconst automatisations = suivre(constl.automatisations.suivreAutomatisations);\n</script>\n"],"names":["மொழியாக்கம்_பயன்படுத்து","கிளிமூக்கை_பயன்படுத்து","t","mdAndUp","useDisplay","constl","utiliserConstellation","props","__props","surNavigateur","isNode","isElectronMain","dialogue","ref","listeÉtapes","étape","cheminement","cheminementAjouterAutomatisation","suivant","retour","é","suivantActif","computed","idObjet","typeObjet","sourceImportation","correspondancesImportationBienSpécifiées","dossierExportation","inclureSFIPExportation","languesExportation","formatDocExportation","aussiAjouterAutomatisation","fréquence","dispositifAutomatisation","retourActif","enConfirmation","suivreCheminementImportation","suivreCheminementExportation","titreCarte","sousTitreCarte","fichierImportation","urlImportation","origineImportation","colonnesTableauConstellation","suivre","idsColonnesTableauConstellation","c","colonnesImportation","formatFichierImportation","ext","formatURLImportation","formatImportation","correspondancesJSONClefRacine","correspondancesJSONClefsÉléments","correspondancesJSONCols","correspondancesFeuilleCalculNomTableau","correspondancesFeuilleCalculCols","correspondancesFeuilleCalculOptionsXLSX","générerInfoJSON","générerInfoTableau","urlRésolu","résoudreUrl","url","domaine","nom_tableau","obtImageDéco","utiliserImagesDéco","imgAutomatisations","automatisations"],"mappings":"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"}