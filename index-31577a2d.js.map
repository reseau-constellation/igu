{"version":3,"file":"index-31577a2d.js","sources":["../../../../node_modules/@multiformats/mafmt/dist/src/index.js","../../../../node_modules/@multiformats/multiaddr-to-uri/dist/src/index.js","../../../../node_modules/@libp2p/interfaces/dist/src/events.js","../../../../node_modules/abortable-iterator/dist/src/abort-error.js","../../../../node_modules/abortable-iterator/node_modules/get-iterator/dist/src/index.js","../../../../node_modules/abortable-iterator/dist/src/index.js","../../../../node_modules/@libp2p/webrtc-star/dist/src/constants.js","../../../../node_modules/engine.io-parser/build/esm/commons.js","../../../../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../../../../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../../../../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../../../../node_modules/engine.io-parser/build/esm/index.js","../../../../node_modules/@socket.io/component-emitter/index.mjs","../../../../node_modules/engine.io-client/build/esm/globalThis.browser.js","../../../../node_modules/engine.io-client/build/esm/util.js","../../../../node_modules/engine.io-client/build/esm/transport.js","../../../../node_modules/engine.io-client/build/esm/contrib/yeast.js","../../../../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../../../../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../../../../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../../../../node_modules/engine.io-client/build/esm/transports/polling.js","../../../../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../../../../node_modules/engine.io-client/build/esm/transports/websocket.js","../../../../node_modules/engine.io-client/build/esm/transports/index.js","../../../../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../../../../node_modules/engine.io-client/build/esm/socket.js","../../../../node_modules/socket.io-client/build/esm/url.js","../../../../node_modules/socket.io-parser/build/esm/is-binary.js","../../../../node_modules/socket.io-parser/build/esm/binary.js","../../../../node_modules/socket.io-parser/build/esm/index.js","../../../../node_modules/socket.io-client/build/esm/on.js","../../../../node_modules/socket.io-client/build/esm/socket.js","../../../../node_modules/socket.io-client/build/esm/contrib/backo2.js","../../../../node_modules/socket.io-client/build/esm/manager.js","../../../../node_modules/socket.io-client/build/esm/index.js","../../../../node_modules/iso-random-stream/src/random.browser.js","../../../../node_modules/@libp2p/webrtc-peer/dist/src/channel.js","../../../../node_modules/delay/index.js","../../../../node_modules/@libp2p/webrtc-peer/dist/src/peer.js","../../../../node_modules/@libp2p/webrtc-peer/dist/src/handshake.js","../../../../node_modules/@libp2p/webrtc-peer/dist/src/receiver.js","../../../../node_modules/p-event/index.js","../../../../node_modules/@libp2p/webrtc-peer/dist/src/initiator.js","../../../../node_modules/@libp2p/webrtc-star/dist/src/socket-to-conn.js","../../../../node_modules/@libp2p/webrtc-star/dist/src/utils.js","../../../../node_modules/@libp2p/webrtc-star/dist/src/listener.js","../../../../node_modules/@libp2p/interface-transport/dist/src/index.js","../../../../node_modules/@libp2p/interface-peer-discovery/dist/src/index.js","../../../../node_modules/@libp2p/webrtc-star/dist/src/transport.js","../../../../node_modules/@libp2p/webrtc-star/dist/src/index.js","../../../../node_modules/native-fetch/esm/src/index.js","../../../../node_modules/@libp2p/interfaces/dist/src/errors.js","../../../../node_modules/it-ws/dist/src/web-socket.browser.js","../../../../node_modules/event-iterator/lib/event-iterator.js","../../../../node_modules/event-iterator/lib/dom.js","../../../../node_modules/it-ws/dist/src/source.js","../../../../node_modules/it-ws/dist/src/ready.js","../../../../node_modules/it-ws/dist/src/sink.js","../../../../node_modules/it-ws/dist/src/duplex.js","../../../../node_modules/it-ws/dist/src/ws-url.js","../../../../node_modules/it-ws/dist/src/client.js","../../../../node_modules/@libp2p/websockets/dist/src/listener.browser.js","../../../../node_modules/@libp2p/websockets/dist/src/constants.js","../../../../node_modules/@libp2p/websockets/node_modules/p-timeout/index.js","../../../../node_modules/@libp2p/websockets/dist/src/socket-to-conn.js","../../../../node_modules/@libp2p/websockets/dist/src/filters.js","../../../../node_modules/@libp2p/websockets/dist/src/index.js"],"sourcesContent":["import { multiaddr } from '@multiformats/multiaddr';\n/*\n * Valid combinations\n */\nexport const DNS4 = base('dns4');\nexport const DNS6 = base('dns6');\nexport const DNSADDR = base('dnsaddr');\nexport const DNS = or(base('dns'), DNSADDR, DNS4, DNS6);\nexport const IP = or(base('ip4'), base('ip6'));\nexport const TCP = or(and(IP, base('tcp')), and(DNS, base('tcp')));\nexport const UDP = and(IP, base('udp'));\nexport const UTP = and(UDP, base('utp'));\nexport const QUIC = and(UDP, base('quic'));\nexport const WebSockets = or(and(TCP, base('ws')), and(DNS, base('ws')));\nexport const WebSocketsSecure = or(and(TCP, base('wss')), and(DNS, base('wss')));\nexport const HTTP = or(and(TCP, base('http')), and(IP, base('http')), and(DNS, base('http')));\nexport const HTTPS = or(and(TCP, base('https')), and(IP, base('https')), and(DNS, base('https')));\nexport const WebRTCStar = or(and(WebSockets, base('p2p-webrtc-star'), base('p2p')), and(WebSocketsSecure, base('p2p-webrtc-star'), base('p2p')), and(WebSockets, base('p2p-webrtc-star')), and(WebSocketsSecure, base('p2p-webrtc-star')));\nexport const WebSocketStar = or(and(WebSockets, base('p2p-websocket-star'), base('p2p')), and(WebSocketsSecure, base('p2p-websocket-star'), base('p2p')), and(WebSockets, base('p2p-websocket-star')), and(WebSocketsSecure, base('p2p-websocket-star')));\nexport const WebRTCDirect = or(and(HTTP, base('p2p-webrtc-direct'), base('p2p')), and(HTTPS, base('p2p-webrtc-direct'), base('p2p')), and(HTTP, base('p2p-webrtc-direct')), and(HTTPS, base('p2p-webrtc-direct')));\nexport const Reliable = or(WebSockets, WebSocketsSecure, HTTP, HTTPS, WebRTCStar, WebRTCDirect, TCP, UTP, QUIC, DNS);\n// Unlike ws-star, stardust can run over any transport thus removing the requirement for websockets (but don't even think about running a stardust server over webrtc-star ;) )\nexport const Stardust = or(and(Reliable, base('p2p-stardust'), base('p2p')), and(Reliable, base('p2p-stardust')));\nconst _P2P = or(and(Reliable, base('p2p')), WebRTCStar, WebRTCDirect, base('p2p'));\nconst _Circuit = or(and(_P2P, base('p2p-circuit'), _P2P), and(_P2P, base('p2p-circuit')), and(base('p2p-circuit'), _P2P), and(Reliable, base('p2p-circuit')), and(base('p2p-circuit'), Reliable), base('p2p-circuit'));\nconst CircuitRecursive = () => or(and(_Circuit, CircuitRecursive), _Circuit);\nexport const Circuit = CircuitRecursive();\nexport const P2P = or(and(Circuit, _P2P, Circuit), and(_P2P, Circuit), and(Circuit, _P2P), Circuit, _P2P);\nexport const IPFS = P2P;\n/*\n * Validation funcs\n */\nfunction makeMatchesFunction(partialMatch) {\n    function matches(a) {\n        let ma;\n        try {\n            ma = multiaddr(a);\n        }\n        catch (err) { // catch error\n            return false; // also if it's invalid it's probably not matching as well so return false\n        }\n        const out = partialMatch(ma.protoNames());\n        if (out === null) {\n            return false;\n        }\n        if (out === true || out === false) {\n            return out;\n        }\n        return out.length === 0;\n    }\n    return matches;\n}\nfunction and(...args) {\n    function partialMatch(a) {\n        if (a.length < args.length) {\n            return null;\n        }\n        let out = a;\n        args.some((arg) => {\n            out = typeof arg === 'function'\n                ? arg().partialMatch(a)\n                : arg.partialMatch(a);\n            if (Array.isArray(out)) {\n                a = out;\n            }\n            if (out === null) {\n                return true;\n            }\n            return false;\n        });\n        return out;\n    }\n    return {\n        toString: function () { return '{ ' + args.join(' ') + ' }'; },\n        input: args,\n        matches: makeMatchesFunction(partialMatch),\n        partialMatch: partialMatch\n    };\n}\nfunction or(...args) {\n    function partialMatch(a) {\n        let out = null;\n        args.some((arg) => {\n            const res = typeof arg === 'function'\n                ? arg().partialMatch(a)\n                : arg.partialMatch(a);\n            if (res != null) {\n                out = res;\n                return true;\n            }\n            return false;\n        });\n        return out;\n    }\n    const result = {\n        toString: function () { return '{ ' + args.join(' ') + ' }'; },\n        input: args,\n        matches: makeMatchesFunction(partialMatch),\n        partialMatch: partialMatch\n    };\n    return result;\n}\nfunction base(n) {\n    const name = n;\n    function matches(a) {\n        let ma;\n        try {\n            ma = multiaddr(a);\n        }\n        catch (err) { // catch error\n            return false; // also if it's invalid it's probably not matching as well so return false\n        }\n        const pnames = ma.protoNames();\n        if (pnames.length === 1 && pnames[0] === name) {\n            return true;\n        }\n        return false;\n    }\n    function partialMatch(protos) {\n        if (protos.length === 0) {\n            return null;\n        }\n        if (protos[0] === name) {\n            return protos.slice(1);\n        }\n        return null;\n    }\n    return {\n        toString: function () { return name; },\n        matches: matches,\n        partialMatch: partialMatch\n    };\n}\n//# sourceMappingURL=index.js.map","import { multiaddr } from '@multiformats/multiaddr';\nconst reduceValue = (_, v) => v;\nconst tcpUri = (str, port, parts, opts) => {\n    // return tcp when explicitly requested\n    if ((opts != null) && opts.assumeHttp === false)\n        return `tcp://${str}:${port}`;\n    // check if tcp is the last protocol in multiaddr\n    let protocol = 'tcp';\n    let explicitPort = `:${port}`;\n    const last = parts[parts.length - 1];\n    if (last.protocol === 'tcp') {\n        // assume http and produce clean urls\n        protocol = port === '443' ? 'https' : 'http';\n        explicitPort = port === '443' || port === '80' ? '' : explicitPort;\n    }\n    return `${protocol}://${str}${explicitPort}`;\n};\nconst Reducers = {\n    ip4: reduceValue,\n    ip6: (str, content, i, parts) => (parts.length === 1 && parts[0].protocol === 'ip6'\n        ? content\n        : `[${content}]`),\n    tcp: (str, content, i, parts, opts) => (parts.some(p => ['http', 'https', 'ws', 'wss'].includes(p.protocol))\n        ? `${str}:${content}`\n        : tcpUri(str, content, parts, opts)),\n    udp: (str, content) => `udp://${str}:${content}`,\n    dnsaddr: reduceValue,\n    dns4: reduceValue,\n    dns6: reduceValue,\n    ipfs: (str, content) => `${str}/ipfs/${content}`,\n    p2p: (str, content) => `${str}/p2p/${content}`,\n    http: str => `http://${str}`,\n    https: str => `https://${str}`,\n    ws: str => `ws://${str}`,\n    wss: str => `wss://${str}`,\n    'p2p-websocket-star': str => `${str}/p2p-websocket-star`,\n    'p2p-webrtc-star': str => `${str}/p2p-webrtc-star`,\n    'p2p-webrtc-direct': str => `${str}/p2p-webrtc-direct`\n};\nexport function multiaddrToUri(input, opts) {\n    const ma = multiaddr(input);\n    const parts = ma.toString().split('/').slice(1);\n    return ma\n        .tuples()\n        .map(tuple => ({\n        protocol: parts.shift() ?? '',\n        content: (tuple[1] != null) ? parts.shift() ?? '' : ''\n    }))\n        .reduce((str, part, i, parts) => {\n        const reduce = Reducers[part.protocol];\n        if (reduce == null) {\n            throw new Error(`Unsupported protocol ${part.protocol}`);\n        }\n        return reduce(str, part.content, i, parts, opts);\n    }, '');\n}\n//# sourceMappingURL=index.js.map","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _EventEmitter_listeners;\n/**\n * Adds types to the EventTarget class. Hopefully this won't be necessary forever.\n *\n * https://github.com/microsoft/TypeScript/issues/28357\n * https://github.com/microsoft/TypeScript/issues/43477\n * https://github.com/microsoft/TypeScript/issues/299\n * etc\n */\nexport class EventEmitter extends EventTarget {\n    constructor() {\n        super(...arguments);\n        _EventEmitter_listeners.set(this, new Map());\n    }\n    listenerCount(type) {\n        const listeners = __classPrivateFieldGet(this, _EventEmitter_listeners, \"f\").get(type);\n        if (listeners == null) {\n            return 0;\n        }\n        return listeners.length;\n    }\n    addEventListener(type, listener, options) {\n        super.addEventListener(type, listener, options);\n        let list = __classPrivateFieldGet(this, _EventEmitter_listeners, \"f\").get(type);\n        if (list == null) {\n            list = [];\n            __classPrivateFieldGet(this, _EventEmitter_listeners, \"f\").set(type, list);\n        }\n        list.push({\n            callback: listener,\n            once: (options !== true && options !== false && options?.once) ?? false\n        });\n    }\n    removeEventListener(type, listener, options) {\n        super.removeEventListener(type.toString(), listener ?? null, options);\n        let list = __classPrivateFieldGet(this, _EventEmitter_listeners, \"f\").get(type);\n        if (list == null) {\n            return;\n        }\n        list = list.filter(({ callback }) => callback !== listener);\n        __classPrivateFieldGet(this, _EventEmitter_listeners, \"f\").set(type, list);\n    }\n    dispatchEvent(event) {\n        const result = super.dispatchEvent(event);\n        let list = __classPrivateFieldGet(this, _EventEmitter_listeners, \"f\").get(event.type);\n        if (list == null) {\n            return result;\n        }\n        list = list.filter(({ once }) => !once);\n        __classPrivateFieldGet(this, _EventEmitter_listeners, \"f\").set(event.type, list);\n        return result;\n    }\n    safeDispatchEvent(type, detail) {\n        return this.dispatchEvent(new CustomEvent(type, detail));\n    }\n}\n_EventEmitter_listeners = new WeakMap();\n/**\n * CustomEvent is a standard event but it's not supported by node.\n *\n * Remove this when https://github.com/nodejs/node/issues/40678 is closed.\n *\n * Ref: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\n */\nclass CustomEventPolyfill extends Event {\n    constructor(message, data) {\n        super(message, data);\n        // @ts-expect-error could be undefined\n        this.detail = data?.detail;\n    }\n}\nexport const CustomEvent = globalThis.CustomEvent ?? CustomEventPolyfill;\n//# sourceMappingURL=events.js.map","export class AbortError extends Error {\n    constructor(message, code) {\n        super(message ?? 'The operation was aborted');\n        this.type = 'aborted';\n        this.code = code ?? 'ABORT_ERR';\n    }\n}\n//# sourceMappingURL=abort-error.js.map","export function getIterator(obj) {\n    if (obj != null) {\n        if (typeof obj[Symbol.iterator] === 'function') {\n            return obj[Symbol.iterator]();\n        }\n        if (typeof obj[Symbol.asyncIterator] === 'function') {\n            return obj[Symbol.asyncIterator]();\n        }\n        if (typeof obj.next === 'function') {\n            return obj; // probably an iterator\n        }\n    }\n    throw new Error('argument is not an iterator or iterable');\n}\n//# sourceMappingURL=index.js.map","import { AbortError } from './abort-error.js';\nimport { getIterator } from 'get-iterator';\n// Wrap an iterator to make it abortable, allow cleanup when aborted via onAbort\nexport function abortableSource(source, signal, options) {\n    const opts = options ?? {};\n    const iterator = getIterator(source);\n    async function* abortable() {\n        let nextAbortHandler;\n        const abortHandler = () => {\n            if (nextAbortHandler != null)\n                nextAbortHandler();\n        };\n        signal.addEventListener('abort', abortHandler);\n        while (true) {\n            let result;\n            try {\n                if (signal.aborted) {\n                    const { abortMessage, abortCode } = opts;\n                    throw new AbortError(abortMessage, abortCode);\n                }\n                const abort = new Promise((resolve, reject) => {\n                    nextAbortHandler = () => {\n                        const { abortMessage, abortCode } = opts;\n                        reject(new AbortError(abortMessage, abortCode));\n                    };\n                });\n                // Race the iterator and the abort signals\n                result = await Promise.race([abort, iterator.next()]);\n                nextAbortHandler = null;\n            }\n            catch (err) {\n                signal.removeEventListener('abort', abortHandler);\n                // Might not have been aborted by a known signal\n                const isKnownAborter = err.type === 'aborted' && signal.aborted;\n                if (isKnownAborter && (opts.onAbort != null)) {\n                    // Do any custom abort handling for the iterator\n                    await opts.onAbort(source);\n                }\n                // End the iterator if it is a generator\n                if (typeof iterator.return === 'function') {\n                    try {\n                        const p = iterator.return();\n                        if (p instanceof Promise) { // eslint-disable-line max-depth\n                            p.catch(err => {\n                                if (opts.onReturnError != null) {\n                                    opts.onReturnError(err);\n                                }\n                            });\n                        }\n                    }\n                    catch (err) {\n                        if (opts.onReturnError != null) { // eslint-disable-line max-depth\n                            opts.onReturnError(err);\n                        }\n                    }\n                }\n                if (isKnownAborter && opts.returnOnAbort === true) {\n                    return;\n                }\n                throw err;\n            }\n            if (result.done === true) {\n                break;\n            }\n            yield result.value;\n        }\n        signal.removeEventListener('abort', abortHandler);\n    }\n    return abortable();\n}\nexport function abortableSink(sink, signal, options) {\n    return (source) => sink(abortableSource(source, signal, options));\n}\nexport function abortableDuplex(duplex, signal, options) {\n    return {\n        sink: abortableSink(duplex.sink, signal, {\n            ...options,\n            onAbort: undefined\n        }),\n        source: abortableSource(duplex.source, signal, options)\n    };\n}\nexport { AbortError };\nexport { abortableSink as abortableTransform };\n//# sourceMappingURL=index.js.map","// p2p multi-address code\nexport const CODE_P2P = 421;\nexport const CODE_CIRCUIT = 290;\n// Time to wait for a connection to close gracefully before destroying it manually\nexport const CLOSE_TIMEOUT = 2000;\n//# sourceMappingURL=constants.js.map","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nconst MAX_BYTES = 65536\n\n/**\n * @param {number} size\n */\nfunction randomBytes(size) {\n  const bytes = new Uint8Array(size)\n  let generated = 0\n\n  if (size > 0) {\n    // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) {\n      while (generated < size) {\n        if (generated + MAX_BYTES > size) {\n          crypto.getRandomValues(\n            bytes.subarray(generated, generated + (size - generated))\n          )\n          generated += size - generated\n        } else {\n          crypto.getRandomValues(\n            bytes.subarray(generated, generated + MAX_BYTES)\n          )\n          generated += MAX_BYTES\n        }\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  return bytes\n}\n\nmodule.exports = randomBytes\n","import errCode from 'err-code';\nimport defer from 'p-defer';\nconst MAX_BUFFERED_AMOUNT = 64 * 1024;\nconst CHANNEL_CLOSING_TIMEOUT = 5 * 1000;\nexport class WebRTCDataChannel {\n    constructor(channel, opts) {\n        this.label = channel.label;\n        this.open = defer();\n        this.channel = channel;\n        this.channel.binaryType = 'arraybuffer';\n        this.log = opts.log;\n        if (typeof this.channel.bufferedAmountLowThreshold === 'number') {\n            this.channel.bufferedAmountLowThreshold = MAX_BUFFERED_AMOUNT;\n        }\n        channel.addEventListener('message', event => {\n            opts.onMessage(event);\n        });\n        channel.addEventListener('bufferedamountlow', () => {\n            this.log('stop backpressure: bufferedAmount %d', this.channel.bufferedAmount);\n            this.open.resolve();\n        });\n        channel.addEventListener('open', () => {\n            this.open.resolve();\n            opts.onOpen();\n        });\n        channel.addEventListener('close', () => {\n            opts.onClose();\n        });\n        channel.addEventListener('error', event => {\n            // @ts-expect-error ChannelErrorEvent is just an Event in the types?\n            if (event.error?.message === 'Transport channel closed') {\n                return this.close();\n            }\n            // @ts-expect-error ChannelErrorEvent is just an Event in the types?\n            opts.log.error('channel encounter an error in state \"%s\" message: \"%s\" detail: \"%s', channel.readyState, event.error?.message, event.error?.errorDetail); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n            // @ts-expect-error ChannelErrorEvent is just an Event in the types?\n            const err = event.error instanceof Error\n                // @ts-expect-error ChannelErrorEvent is just an Event in the types?\n                ? event.error\n                // @ts-expect-error ChannelErrorEvent is just an Event in the types?\n                : new Error(`datachannel error: ${event.error?.message} ${event.error?.errorDetail}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n            opts.onError(errCode(err, 'ERR_DATA_CHANNEL'));\n        });\n        // HACK: Chrome will sometimes get stuck in readyState \"closing\", let's check for this condition\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n        let isClosing = false;\n        this.closingInterval = setInterval(() => {\n            if (channel.readyState === 'closing') {\n                if (isClosing) {\n                    opts.onClose(); // closing timed out: equivalent to onclose firing\n                }\n                isClosing = true;\n            }\n            else {\n                isClosing = false;\n            }\n        }, CHANNEL_CLOSING_TIMEOUT);\n    }\n    async send(data) {\n        await this.open.promise;\n        this.channel.send(data);\n        if (this.channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n            this.log('start backpressure: bufferedAmount %d', this.channel.bufferedAmount);\n            this.open = defer();\n        }\n    }\n    close() {\n        clearInterval(this.closingInterval);\n        this.channel.close();\n    }\n    get bufferedAmount() {\n        return this.channel.bufferedAmount;\n    }\n}\n//# sourceMappingURL=channel.js.map","'use strict';\n\n// From https://github.com/sindresorhus/random-int/blob/c37741b56f76b9160b0b63dae4e9c64875128146/index.js#L13-L15\nconst randomInteger = (minimum, maximum) => Math.floor((Math.random() * (maximum - minimum + 1)) + minimum);\n\nconst createAbortError = () => {\n\tconst error = new Error('Delay aborted');\n\terror.name = 'AbortError';\n\treturn error;\n};\n\nconst createDelay = ({clearTimeout: defaultClear, setTimeout: set, willResolve}) => (ms, {value, signal} = {}) => {\n\tif (signal && signal.aborted) {\n\t\treturn Promise.reject(createAbortError());\n\t}\n\n\tlet timeoutId;\n\tlet settle;\n\tlet rejectFn;\n\tconst clear = defaultClear || clearTimeout;\n\n\tconst signalListener = () => {\n\t\tclear(timeoutId);\n\t\trejectFn(createAbortError());\n\t};\n\n\tconst cleanup = () => {\n\t\tif (signal) {\n\t\t\tsignal.removeEventListener('abort', signalListener);\n\t\t}\n\t};\n\n\tconst delayPromise = new Promise((resolve, reject) => {\n\t\tsettle = () => {\n\t\t\tcleanup();\n\t\t\tif (willResolve) {\n\t\t\t\tresolve(value);\n\t\t\t} else {\n\t\t\t\treject(value);\n\t\t\t}\n\t\t};\n\n\t\trejectFn = reject;\n\t\ttimeoutId = (set || setTimeout)(settle, ms);\n\t});\n\n\tif (signal) {\n\t\tsignal.addEventListener('abort', signalListener, {once: true});\n\t}\n\n\tdelayPromise.clear = () => {\n\t\tclear(timeoutId);\n\t\ttimeoutId = null;\n\t\tsettle();\n\t};\n\n\treturn delayPromise;\n};\n\nconst createWithTimers = clearAndSet => {\n\tconst delay = createDelay({...clearAndSet, willResolve: true});\n\tdelay.reject = createDelay({...clearAndSet, willResolve: false});\n\tdelay.range = (minimum, maximum, options) => delay(randomInteger(minimum, maximum), options);\n\treturn delay;\n};\n\nconst delay = createWithTimers();\ndelay.createWithTimers = createWithTimers;\n\nmodule.exports = delay;\n// TODO: Remove this for the next major release\nmodule.exports.default = delay;\n","import { logger } from '@libp2p/logger';\nimport { EventEmitter, CustomEvent } from '@libp2p/interfaces/events';\nimport errCode from 'err-code';\nimport randombytes from 'iso-random-stream/src/random.js';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { pushable } from 'it-pushable';\nimport defer from 'p-defer';\nimport { WebRTCDataChannel } from './channel.js';\nimport delay from 'delay';\n// const ICECOMPLETE_TIMEOUT = 5 * 1000\nconst DEFAULT_PEER_CONNECTION_CONFIG = {\n    iceServers: [{\n            urls: [\n                'stun:stun.l.google.com:19302',\n                'stun:global.stun.twilio.com:3478'\n            ]\n        }]\n};\nfunction getBrowserRTC() {\n    if (typeof globalThis === 'undefined') {\n        throw errCode(new Error('No WebRTC support detected'), 'ERR_WEBRTC_SUPPORT');\n    }\n    const wrtc = {\n        // @ts-expect-error browser-specific properties\n        RTCPeerConnection: globalThis.RTCPeerConnection ?? globalThis.mozRTCPeerConnection ?? globalThis.webkitRTCPeerConnection,\n        // @ts-expect-error browser-specific properties\n        RTCSessionDescription: globalThis.RTCSessionDescription ?? globalThis.mozRTCSessionDescription ?? globalThis.webkitRTCSessionDescription,\n        // @ts-expect-error browser-specific properties\n        RTCIceCandidate: globalThis.RTCIceCandidate ?? globalThis.mozRTCIceCandidate ?? globalThis.webkitRTCIceCandidate\n    };\n    if (wrtc.RTCPeerConnection == null) {\n        throw errCode(new Error('No WebRTC support detected'), 'ERR_WEBRTC_SUPPORT');\n    }\n    return wrtc;\n}\nexport class WebRTCPeer extends EventEmitter {\n    constructor(opts) {\n        super();\n        this.id = opts.id ?? uint8ArrayToString(randombytes(4), 'hex').slice(0, 7);\n        this.log = logger(`libp2p:webrtc-peer:${opts.logPrefix}:${this.id}`);\n        this.wrtc = opts.wrtc ?? getBrowserRTC();\n        this.peerConnection = new this.wrtc.RTCPeerConnection(Object.assign({}, DEFAULT_PEER_CONNECTION_CONFIG, opts.peerConnectionConfig));\n        this.closed = false;\n        this.connected = defer();\n        // duplex properties\n        this.source = pushable();\n        this.sink = async (source) => {\n            await this.connected.promise;\n            if (this.channel == null) {\n                throw errCode(new Error('Connected but no channel?!'), 'ERR_DATA_CHANNEL');\n            }\n            for await (const buf of source) {\n                await this.channel.send(buf);\n            }\n            await this.close();\n        };\n    }\n    handleDataChannelEvent(event) {\n        const dataChannel = event.channel;\n        if (dataChannel == null) {\n            // In some situations `pc.createDataChannel()` returns `undefined` (in wrtc),\n            // which is invalid behavior. Handle it gracefully.\n            // See: https://github.com/feross/simple-peer/issues/163\n            this.close(errCode(new Error('Data channel event is missing `channel` property'), 'ERR_DATA_CHANNEL'))\n                .catch(err => {\n                this.log('Error closing after event channel was found to be null', err);\n            });\n            return;\n        }\n        this.channel = new WebRTCDataChannel(dataChannel, {\n            log: this.log,\n            onMessage: (event) => {\n                this.source.push(new Uint8Array(event.data));\n            },\n            onOpen: () => {\n                this.connected.resolve();\n                this.dispatchEvent(new CustomEvent('ready'));\n            },\n            onClose: () => {\n                this.close().catch(err => {\n                    this.log('error closing connection after channel close', err);\n                });\n            },\n            onError: (err) => {\n                this.close(err).catch(err => {\n                    this.log('error closing connection after channel error', err);\n                });\n            }\n        });\n    }\n    async close(err) {\n        this.closed = true;\n        if (err == null && this.channel != null) {\n            // wait for the channel to flush all data before closing the channel\n            while (this.channel.bufferedAmount > 0) {\n                await delay(100);\n            }\n        }\n        this.channel?.close();\n        this.peerConnection.close();\n        this.source.end(err);\n        this.dispatchEvent(new CustomEvent('close'));\n    }\n}\n//# sourceMappingURL=peer.js.map","import { EventEmitter } from '@libp2p/interfaces/events';\nimport errCode from 'err-code';\nexport class WebRTCHandshake extends EventEmitter {\n    constructor(options) {\n        super();\n        this.log = options.log;\n        this.peerConnection = options.peerConnection;\n        this.wrtc = options.wrtc;\n        this.status = 'idle';\n        this.peerConnection.addEventListener('negotiationneeded', () => {\n            this.log('peer connection negotiation needed');\n            this.handleRenegotiate({ type: 'renegotiate' }).catch(err => {\n                this.log.error('could not renegotiate %o', err);\n            });\n        });\n    }\n    async handleSignal(signal) {\n        this.log('incoming signal \"%s\"', signal.type);\n        if (signal.type === 'offer') {\n            return await this.handleOffer(signal);\n        }\n        else if (signal.type === 'answer') {\n            return await this.handleAnswer(signal);\n        }\n        else if (signal.type === 'candidate') {\n            return await this.handleCandidate(signal);\n        }\n        else if (signal.type === 'renegotiate') {\n            return await this.handleRenegotiate(signal);\n        }\n        else if (signal.type === 'goodbye') {\n            return await this.handleGoodye(signal);\n        }\n        else {\n            // @ts-expect-error all types are handled above\n            this.log(`Unknown signal type ${signal.type}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n        }\n    }\n    async handleOffer(signal) { }\n    async handleAnswer(signal) { }\n    async handleRenegotiate(signal) { }\n    async handleGoodye(signal) {\n        this.peerConnection.close();\n    }\n    async handleCandidate(signal) {\n        const iceCandidate = new this.wrtc.RTCIceCandidate(signal.candidate);\n        try {\n            await this.peerConnection.addIceCandidate(iceCandidate);\n        }\n        catch (err) {\n            if (iceCandidate.address == null || iceCandidate.address.endsWith('.local')) {\n                this.log('ignoring unsupported ICE candidate.');\n            }\n            else {\n                throw errCode(err, 'ERR_ADD_ICE_CANDIDATE');\n            }\n        }\n    }\n}\n//# sourceMappingURL=handshake.js.map","import { WebRTCPeer } from './peer.js';\nimport { WebRTCHandshake } from './handshake.js';\nimport { CustomEvent } from '@libp2p/interfaces/events';\nimport { logger } from '@libp2p/logger';\nconst log = logger('libp2p:webrtc-peer:receiver');\nexport class WebRTCReceiver extends WebRTCPeer {\n    constructor(opts = {}) {\n        super({\n            ...opts,\n            logPrefix: 'receiver'\n        });\n        this.handshake = new WebRTCReceiverHandshake({\n            log: this.log,\n            peerConnection: this.peerConnection,\n            wrtc: this.wrtc,\n            answerOptions: opts.answerOptions\n        });\n        this.handshake.addEventListener('signal', event => this.dispatchEvent(new CustomEvent('signal', {\n            detail: event.detail\n        })));\n        this.peerConnection.addEventListener('datachannel', (event) => {\n            this.handleDataChannelEvent(event);\n        });\n    }\n    handleSignal(signal) {\n        this.handshake.handleSignal(signal).catch(err => {\n            this.log('error handling signal %o %o', signal, err);\n        });\n    }\n}\nclass WebRTCReceiverHandshake extends WebRTCHandshake {\n    constructor(options) {\n        super(options);\n        this.options = options;\n        this.status = 'idle';\n        this.iceCandidates = [];\n    }\n    async handleRenegotiate() {\n        log.trace('renegotiate');\n        this.dispatchEvent(new CustomEvent('signal', {\n            detail: {\n                type: 'renegotiate'\n            }\n        }));\n    }\n    async handleOffer(signal) {\n        await this.peerConnection.setRemoteDescription(new this.wrtc.RTCSessionDescription(signal));\n        // add any candidates we were sent before the offer arrived\n        for (const candidate of this.iceCandidates) {\n            await this.handleCandidate(candidate);\n        }\n        this.iceCandidates = [];\n        const answer = await this.peerConnection.createAnswer(this.options.answerOptions);\n        await this.peerConnection.setLocalDescription(answer);\n        log.trace('handle offer', this.peerConnection.localDescription);\n        this.dispatchEvent(new CustomEvent('signal', {\n            detail: this.peerConnection.localDescription ?? answer\n        }));\n    }\n    async handleCandidate(signal) {\n        if (this.peerConnection.remoteDescription == null || this.peerConnection.remoteDescription.type == null) {\n            // we haven't been sent an offer yet, cache the remote ICE candidates\n            this.iceCandidates.push(signal);\n            return;\n        }\n        await super.handleCandidate(signal);\n    }\n}\n//# sourceMappingURL=receiver.js.map","import pTimeout from 'p-timeout';\n\nconst normalizeEmitter = emitter => {\n\tconst addListener = emitter.on || emitter.addListener || emitter.addEventListener;\n\tconst removeListener = emitter.off || emitter.removeListener || emitter.removeEventListener;\n\n\tif (!addListener || !removeListener) {\n\t\tthrow new TypeError('Emitter is not compatible');\n\t}\n\n\treturn {\n\t\taddListener: addListener.bind(emitter),\n\t\tremoveListener: removeListener.bind(emitter),\n\t};\n};\n\nexport function pEventMultiple(emitter, event, options) {\n\tlet cancel;\n\tconst returnValue = new Promise((resolve, reject) => {\n\t\toptions = {\n\t\t\trejectionEvents: ['error'],\n\t\t\tmultiArgs: false,\n\t\t\tresolveImmediately: false,\n\t\t\t...options,\n\t\t};\n\n\t\tif (!(options.count >= 0 && (options.count === Number.POSITIVE_INFINITY || Number.isInteger(options.count)))) {\n\t\t\tthrow new TypeError('The `count` option should be at least 0 or more');\n\t\t}\n\n\t\t// Allow multiple events\n\t\tconst events = [event].flat();\n\n\t\tconst items = [];\n\t\tconst {addListener, removeListener} = normalizeEmitter(emitter);\n\n\t\tconst onItem = (...arguments_) => {\n\t\t\tconst value = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\t\t// eslint-disable-next-line unicorn/no-array-callback-reference\n\t\t\tif (options.filter && !options.filter(value)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\titems.push(value);\n\n\t\t\tif (options.count === items.length) {\n\t\t\t\tcancel();\n\t\t\t\tresolve(items);\n\t\t\t}\n\t\t};\n\n\t\tconst rejectHandler = error => {\n\t\t\tcancel();\n\t\t\treject(error);\n\t\t};\n\n\t\tcancel = () => {\n\t\t\tfor (const event of events) {\n\t\t\t\tremoveListener(event, onItem);\n\t\t\t}\n\n\t\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\t\tremoveListener(rejectionEvent, rejectHandler);\n\t\t\t}\n\t\t};\n\n\t\tfor (const event of events) {\n\t\t\taddListener(event, onItem);\n\t\t}\n\n\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\taddListener(rejectionEvent, rejectHandler);\n\t\t}\n\n\t\tif (options.resolveImmediately) {\n\t\t\tresolve(items);\n\t\t}\n\t});\n\n\treturnValue.cancel = cancel;\n\n\tif (typeof options.timeout === 'number') {\n\t\tconst timeout = pTimeout(returnValue, options.timeout);\n\t\ttimeout.cancel = cancel;\n\t\treturn timeout;\n\t}\n\n\treturn returnValue;\n}\n\nexport function pEvent(emitter, event, options) {\n\tif (typeof options === 'function') {\n\t\toptions = {filter: options};\n\t}\n\n\toptions = {\n\t\t...options,\n\t\tcount: 1,\n\t\tresolveImmediately: false,\n\t};\n\n\tconst arrayPromise = pEventMultiple(emitter, event, options);\n\tconst promise = arrayPromise.then(array => array[0]); // eslint-disable-line promise/prefer-await-to-then\n\tpromise.cancel = arrayPromise.cancel;\n\n\treturn promise;\n}\n\nexport function pEventIterator(emitter, event, options) {\n\tif (typeof options === 'function') {\n\t\toptions = {filter: options};\n\t}\n\n\t// Allow multiple events\n\tconst events = [event].flat();\n\n\toptions = {\n\t\trejectionEvents: ['error'],\n\t\tresolutionEvents: [],\n\t\tlimit: Number.POSITIVE_INFINITY,\n\t\tmultiArgs: false,\n\t\t...options,\n\t};\n\n\tconst {limit} = options;\n\tconst isValidLimit = limit >= 0 && (limit === Number.POSITIVE_INFINITY || Number.isInteger(limit));\n\tif (!isValidLimit) {\n\t\tthrow new TypeError('The `limit` option should be a non-negative integer or Infinity');\n\t}\n\n\tif (limit === 0) {\n\t\t// Return an empty async iterator to avoid any further cost\n\t\treturn {\n\t\t\t[Symbol.asyncIterator]() {\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tasync next() {\n\t\t\t\treturn {\n\t\t\t\t\tdone: true,\n\t\t\t\t\tvalue: undefined,\n\t\t\t\t};\n\t\t\t},\n\t\t};\n\t}\n\n\tconst {addListener, removeListener} = normalizeEmitter(emitter);\n\n\tlet isDone = false;\n\tlet error;\n\tlet hasPendingError = false;\n\tconst nextQueue = [];\n\tconst valueQueue = [];\n\tlet eventCount = 0;\n\tlet isLimitReached = false;\n\n\tconst valueHandler = (...arguments_) => {\n\t\teventCount++;\n\t\tisLimitReached = eventCount === limit;\n\n\t\tconst value = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\n\t\t\tresolve({done: false, value});\n\n\t\t\tif (isLimitReached) {\n\t\t\t\tcancel();\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueQueue.push(value);\n\n\t\tif (isLimitReached) {\n\t\t\tcancel();\n\t\t}\n\t};\n\n\tconst cancel = () => {\n\t\tisDone = true;\n\n\t\tfor (const event of events) {\n\t\t\tremoveListener(event, valueHandler);\n\t\t}\n\n\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\tremoveListener(rejectionEvent, rejectHandler);\n\t\t}\n\n\t\tfor (const resolutionEvent of options.resolutionEvents) {\n\t\t\tremoveListener(resolutionEvent, resolveHandler);\n\t\t}\n\n\t\twhile (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\t\t\tresolve({done: true, value: undefined});\n\t\t}\n\t};\n\n\tconst rejectHandler = (...arguments_) => {\n\t\terror = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {reject} = nextQueue.shift();\n\t\t\treject(error);\n\t\t} else {\n\t\t\thasPendingError = true;\n\t\t}\n\n\t\tcancel();\n\t};\n\n\tconst resolveHandler = (...arguments_) => {\n\t\tconst value = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\t// eslint-disable-next-line unicorn/no-array-callback-reference\n\t\tif (options.filter && !options.filter(value)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\t\t\tresolve({done: true, value});\n\t\t} else {\n\t\t\tvalueQueue.push(value);\n\t\t}\n\n\t\tcancel();\n\t};\n\n\tfor (const event of events) {\n\t\taddListener(event, valueHandler);\n\t}\n\n\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\taddListener(rejectionEvent, rejectHandler);\n\t}\n\n\tfor (const resolutionEvent of options.resolutionEvents) {\n\t\taddListener(resolutionEvent, resolveHandler);\n\t}\n\n\treturn {\n\t\t[Symbol.asyncIterator]() {\n\t\t\treturn this;\n\t\t},\n\t\tasync next() {\n\t\t\tif (valueQueue.length > 0) {\n\t\t\t\tconst value = valueQueue.shift();\n\t\t\t\treturn {\n\t\t\t\t\tdone: isDone && valueQueue.length === 0 && !isLimitReached,\n\t\t\t\t\tvalue,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (hasPendingError) {\n\t\t\t\thasPendingError = false;\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tif (isDone) {\n\t\t\t\treturn {\n\t\t\t\t\tdone: true,\n\t\t\t\t\tvalue: undefined,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tnextQueue.push({resolve, reject});\n\t\t\t});\n\t\t},\n\t\tasync return(value) {\n\t\t\tcancel();\n\t\t\treturn {\n\t\t\t\tdone: isDone,\n\t\t\t\tvalue,\n\t\t\t};\n\t\t},\n\t};\n}\n\nexport {TimeoutError} from 'p-timeout';\n","import { WebRTCPeer } from './peer.js';\nimport { WebRTCHandshake } from './handshake.js';\nimport randombytes from 'iso-random-stream/src/random.js';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { pEvent } from 'p-event';\nimport delay from 'delay';\nimport { CustomEvent } from '@libp2p/interfaces/events';\nimport { logger } from '@libp2p/logger';\nconst log = logger('libp2p:webrtc-peer:initator');\nconst ICECOMPLETE_TIMEOUT = 1000;\nexport class WebRTCInitiator extends WebRTCPeer {\n    constructor(opts = {}) {\n        super({\n            ...opts,\n            logPrefix: 'initiator'\n        });\n        this.handleDataChannelEvent({\n            channel: this.peerConnection.createDataChannel(opts.dataChannelLabel ?? uint8ArrayToString(randombytes(20), 'hex').slice(0, 7), opts.dataChannelInit)\n        });\n        this.handshake = new WebRTCInitiatorHandshake({\n            log: this.log,\n            peerConnection: this.peerConnection,\n            wrtc: this.wrtc,\n            offerOptions: opts.offerOptions\n        });\n        this.handshake.addEventListener('signal', event => {\n            this.dispatchEvent(new CustomEvent('signal', { detail: event.detail }));\n        });\n    }\n    handleSignal(signal) {\n        this.handshake.handleSignal(signal).catch(err => {\n            this.log('error handling signal %o %o', signal, err);\n        });\n    }\n}\nclass WebRTCInitiatorHandshake extends WebRTCHandshake {\n    constructor(options) {\n        super(options);\n        this.options = options;\n        this.status = 'idle';\n        this.peerConnection.addEventListener('icecandidate', (event) => {\n            if (event.candidate == null) {\n                return;\n            }\n            const signal = {\n                type: 'candidate',\n                candidate: {\n                    candidate: event.candidate.candidate,\n                    sdpMLineIndex: event.candidate.sdpMLineIndex,\n                    sdpMid: event.candidate.sdpMid\n                }\n            };\n            log.trace('create candidate', signal);\n            this.dispatchEvent(new CustomEvent('signal', {\n                detail: signal\n            }));\n            this.dispatchEvent(new CustomEvent('ice-candidate'));\n        });\n    }\n    async handleRenegotiate() {\n        if (this.status === 'negotiating') {\n            this.log('already negotiating, queueing');\n            return;\n        }\n        this.status = 'negotiating';\n        const offer = await this.peerConnection.createOffer(this.options.offerOptions);\n        await this.peerConnection.setLocalDescription(offer);\n        // wait for at least one candidate before sending the offer\n        await pEvent(this, 'ice-candidate');\n        await delay(ICECOMPLETE_TIMEOUT);\n        log.trace('renegotiate', this.peerConnection.localDescription);\n        this.dispatchEvent(new CustomEvent('signal', {\n            detail: this.peerConnection.localDescription ?? offer\n        }));\n    }\n    async handleAnswer(signal) {\n        log.trace('handle answer', signal);\n        await this.peerConnection.setRemoteDescription(new this.wrtc.RTCSessionDescription(signal));\n        this.status = 'idle';\n    }\n}\n//# sourceMappingURL=initiator.js.map","import { abortableSource } from 'abortable-iterator';\nimport { CLOSE_TIMEOUT } from './constants.js';\nimport { logger } from '@libp2p/logger';\nconst log = logger('libp2p:webrtc-star:socket');\n/**\n * Convert a socket into a MultiaddrConnection\n * https://github.com/libp2p/js-libp2p-interfaces/tree/master/src/transport#multiaddrconnection\n */\nexport function toMultiaddrConnection(socket, options) {\n    const { sink, source } = socket;\n    const maConn = {\n        remoteAddr: options.remoteAddr,\n        async sink(source) {\n            if (options.signal != null) {\n                source = abortableSource(source, options.signal);\n            }\n            try {\n                await sink(source);\n            }\n            catch (err) {\n                // If aborted we can safely ignore\n                if (err.type !== 'aborted') {\n                    // If the source errored the socket will already have been destroyed by\n                    // toIterable.duplex(). If the socket errored it will already be\n                    // destroyed. There's nothing to do here except log the error & return.\n                    log.error(err);\n                }\n            }\n        },\n        source: (options.signal != null) ? abortableSource(source, options.signal) : source,\n        timeline: { open: Date.now() },\n        async close() {\n            if (socket.closed) {\n                return;\n            }\n            const start = Date.now();\n            // Attempt to end the socket. If it takes longer to close than the\n            // timeout, destroy it manually.\n            const timeout = setTimeout(() => {\n                if (maConn.remoteAddr != null) {\n                    const { host, port } = maConn.remoteAddr.toOptions();\n                    log('timeout closing socket to %s:%s after %dms, destroying it manually', host, port, Date.now() - start);\n                }\n                if (!socket.closed) {\n                    socket.close().catch(err => {\n                        log.error('could not close socket', err);\n                    });\n                }\n            }, CLOSE_TIMEOUT);\n            try {\n                await socket.close();\n            }\n            finally {\n                clearTimeout(timeout);\n            }\n        }\n    };\n    socket.addEventListener('close', () => {\n        // In instances where `close` was not explicitly called,\n        // such as an iterable stream ending, ensure we have set the close\n        // timeline\n        if (maConn.timeline.close == null) {\n            maConn.timeline.close = Date.now();\n        }\n    }, {\n        once: true\n    });\n    return maConn;\n}\n//# sourceMappingURL=socket-to-conn.js.map","import { multiaddr, isName } from '@multiformats/multiaddr';\nexport function cleanUrlSIO(ma) {\n    const maStrSplit = ma.toString().split('/');\n    const tcpProto = ma.protos()[1].name;\n    const wsProto = ma.protos()[2].name;\n    const tcpPort = ma.stringTuples()[1][1];\n    if (tcpProto !== 'tcp' || (wsProto !== 'ws' && wsProto !== 'wss')) {\n        throw new Error(`invalid multiaddr: ${ma.toString()}`);\n    }\n    if (!isName(ma)) {\n        return `http://${maStrSplit[2]}:${maStrSplit[4]}`;\n    }\n    if (wsProto === 'ws') {\n        return `http://${maStrSplit[2]}${tcpPort == null || tcpPort === '80' ? '' : `:${tcpPort}`}`;\n    }\n    if (wsProto === 'wss') {\n        return `https://${maStrSplit[2]}${tcpPort == null || tcpPort === '443' ? '' : `:${tcpPort}`}`;\n    }\n    throw new Error('invalid multiaddr: ' + ma.toString());\n}\nexport function cleanMultiaddr(maStr) {\n    const legacy = '/libp2p-webrtc-star';\n    if (maStr.startsWith(legacy)) {\n        maStr = maStr.substring(legacy.length, maStr.length);\n        let ma = multiaddr(maStr);\n        const tuppleIPFS = ma.stringTuples().filter((tupple) => {\n            return tupple[0] === 421; // ipfs code\n        })[0];\n        if (tuppleIPFS[1] == null) {\n            throw new Error('invalid multiaddr: ' + maStr);\n        }\n        ma = ma.decapsulate('p2p');\n        ma = ma.encapsulate('/p2p-webrtc-star');\n        ma = ma.encapsulate(`/p2p/${tuppleIPFS[1]}`);\n        maStr = ma.toString();\n    }\n    return maStr;\n}\n//# sourceMappingURL=utils.js.map","import { logger } from '@libp2p/logger';\nimport errCode from 'err-code';\nimport { connect } from 'socket.io-client';\nimport pDefer from 'p-defer';\nimport { WebRTCReceiver } from '@libp2p/webrtc-peer';\nimport { toMultiaddrConnection } from './socket-to-conn.js';\nimport { cleanUrlSIO } from './utils.js';\nimport { CODE_P2P } from './constants.js';\nimport { EventEmitter, CustomEvent } from '@libp2p/interfaces/events';\nconst log = logger('libp2p:webrtc-star:listener');\nconst sioOptions = {\n    transports: ['websocket'],\n    path: '/socket.io-next/' // This should be removed when socket.io@2 support is removed\n};\nclass SigServer extends EventEmitter {\n    constructor(signallingUrl, signallingAddr, upgrader, handler, channelOptions) {\n        super();\n        this.signallingAddr = signallingAddr;\n        this.socket = connect(signallingUrl, sioOptions);\n        this.connections = [];\n        this.channels = new Map();\n        this.pendingSignals = new Map();\n        this.upgrader = upgrader;\n        this.handler = handler;\n        this.channelOptions = channelOptions;\n        this.handleWsHandshake = this.handleWsHandshake.bind(this);\n        let previouslyConnected = false;\n        this.socket.on('connect_error', err => {\n            // @ts-expect-error `.type` is missing from the types\n            if (previouslyConnected && err.type === 'TransportError') {\n                // if we've had an open connection before, and this is a\n                // transport error, let socket.io's reconnect logic take over\n                return;\n            }\n            this.dispatchEvent(new CustomEvent('error', {\n                detail: err\n            }));\n        });\n        this.socket.on('error', (err) => {\n            this.dispatchEvent(new CustomEvent('error', {\n                detail: err\n            }));\n        });\n        this.socket.on('ws-handshake', this.handleWsHandshake);\n        this.socket.on('ws-peer', (maStr) => {\n            this.dispatchEvent(new CustomEvent('peer', {\n                detail: maStr\n            }));\n        });\n        this.socket.on('connect', () => {\n            this.socket.emit('ss-join', this.signallingAddr.toString());\n            if (previouslyConnected) {\n                this.dispatchEvent(new CustomEvent('reconnect'));\n            }\n        });\n        this.socket.once('connect', () => {\n            // make sure we can reconnect in future\n            previouslyConnected = true;\n            this.dispatchEvent(new CustomEvent('listening'));\n        });\n        this.socket.on('disconnect', () => {\n            this.dispatchEvent(new CustomEvent('disconnect'));\n        });\n    }\n    _createChannel(intentId, srcMultiaddr, dstMultiaddr) {\n        const channelOptions = {\n            ...this.channelOptions\n        };\n        const channel = new WebRTCReceiver(channelOptions);\n        const onError = (evt) => {\n            const err = evt.detail;\n            log.error('incoming connection errored', err);\n        };\n        channel.addEventListener('error', onError);\n        channel.addEventListener('close', () => {\n            channel.removeEventListener('error', onError);\n        }, {\n            once: true\n        });\n        channel.addEventListener('signal', (evt) => {\n            const signal = evt.detail;\n            this.socket.emit('ss-handshake', {\n                intentId,\n                srcMultiaddr,\n                dstMultiaddr,\n                answer: true,\n                signal\n            });\n        });\n        channel.addEventListener('ready', () => {\n            const maConn = toMultiaddrConnection(channel, { remoteAddr: this.signallingAddr });\n            log('new inbound connection %s', maConn.remoteAddr);\n            try {\n                this.upgrader.upgradeInbound(maConn)\n                    .then(conn => {\n                    log('inbound connection %s upgraded', maConn.remoteAddr);\n                    this.connections.push(maConn);\n                    const untrackConn = () => {\n                        this.connections = this.connections.filter(c => c !== maConn);\n                        this.channels.delete(intentId);\n                        this.pendingSignals.delete(intentId);\n                    };\n                    channel.addEventListener('close', untrackConn, {\n                        once: true\n                    });\n                    this.dispatchEvent(new CustomEvent('connection', {\n                        detail: conn\n                    }));\n                    this.handler(conn);\n                })\n                    .catch(err => {\n                    log.error('inbound connection failed to upgrade', err);\n                    maConn.close().catch(err => {\n                        log.error('inbound connection failed to close after failing to upgrade', err);\n                    });\n                });\n            }\n            catch (err) {\n                log.error('inbound connection failed to upgrade', err);\n                maConn.close().catch(err => {\n                    log.error('inbound connection failed to close after failing to upgrade', err);\n                });\n            }\n        }, {\n            once: true\n        });\n        return channel;\n    }\n    handleWsHandshake(offer) {\n        log('incoming handshake. signal type \"%s\" is answer %s', offer.signal.type, offer.answer);\n        if (offer.answer === true || offer.err != null || offer.intentId == null) {\n            return;\n        }\n        const intentId = offer.intentId;\n        let pendingSignals = this.pendingSignals.get(intentId);\n        if (pendingSignals == null) {\n            pendingSignals = [];\n            this.pendingSignals.set(intentId, pendingSignals);\n        }\n        pendingSignals.push(offer);\n        let channel = this.channels.get(intentId);\n        if (channel == null) {\n            if (offer.signal.type !== 'offer') {\n                log('handshake is not an offer and channel does not exist, buffering until we receive an offer');\n                return;\n            }\n            log('creating new channel to handle offer handshake');\n            channel = this._createChannel(offer.intentId, offer.srcMultiaddr, offer.dstMultiaddr);\n            this.channels.set(intentId, channel);\n        }\n        else {\n            log('channel already exists, using it to handle handshake');\n        }\n        while (pendingSignals.length > 0) {\n            const handshake = pendingSignals.shift();\n            if (handshake?.signal != null) {\n                channel.handleSignal(handshake.signal);\n            }\n        }\n    }\n    async close() {\n        // Close listener\n        this.socket.emit('ss-leave', this.signallingAddr.toString());\n        this.socket.removeAllListeners();\n        this.socket.close();\n        await Promise.all([\n            ...this.connections.map(async (maConn) => await maConn.close()),\n            ...Array.from(this.channels.values()).map(async (channel) => await channel.close())\n        ]);\n        this.dispatchEvent(new CustomEvent('close'));\n    }\n}\nclass WebRTCListener extends EventEmitter {\n    constructor(upgrader, handler, peerId, transport, options) {\n        super();\n        this.upgrader = upgrader;\n        this.handler = handler;\n        this.peerId = peerId;\n        this.transport = transport;\n        this.options = options;\n    }\n    async listen(ma) {\n        // Should only be used if not already listening\n        if (this.listeningAddr != null) {\n            throw errCode(new Error('listener already in use'), 'ERR_ALREADY_LISTENING');\n        }\n        const defer = pDefer(); // eslint-disable-line @typescript-eslint/no-invalid-void-type\n        // Should be kept unmodified\n        this.listeningAddr = ma;\n        let signallingAddr;\n        if (!ma.protoCodes().includes(CODE_P2P)) {\n            signallingAddr = ma.encapsulate(`/p2p/${this.peerId.toString()}`);\n        }\n        else {\n            signallingAddr = ma;\n        }\n        const signallingUrl = this.signallingUrl = cleanUrlSIO(ma);\n        log('connecting to signalling server on: %s', this.signallingUrl);\n        const server = new SigServer(this.signallingUrl, signallingAddr, this.upgrader, this.handler, this.options.channelOptions);\n        server.addEventListener('error', (evt) => {\n            const err = evt.detail;\n            log('error connecting to signalling server %o', err);\n            server.close().catch(err => {\n                log.error('error closing server after error', err);\n            });\n            defer.reject(err);\n        });\n        server.addEventListener('listening', () => {\n            log('connected to signalling server');\n            this.dispatchEvent(new CustomEvent('listening'));\n            defer.resolve();\n        });\n        server.addEventListener('peer', (evt) => {\n            this.transport.peerDiscovered(evt.detail);\n        });\n        server.addEventListener('connection', (evt) => {\n            const conn = evt.detail;\n            if (conn.remoteAddr == null) {\n                try {\n                    conn.remoteAddr = ma.decapsulateCode(CODE_P2P).encapsulate(`/p2p/${conn.remotePeer.toString()}`);\n                }\n                catch (err) {\n                    log.error('could not determine remote address', err);\n                }\n            }\n            this.dispatchEvent(new CustomEvent('connection', {\n                detail: conn\n            }));\n        });\n        server.addEventListener('disconnect', () => {\n            // Ensure we error if we try to dial while we are disconnected from\n            // the signalling server\n            this.transport.sigServers.delete(signallingUrl);\n        });\n        server.addEventListener('reconnect', () => {\n            // We can dial via the signalling server again\n            this.transport.sigServers.set(signallingUrl, server);\n        });\n        // Store listen and signal reference addresses\n        this.transport.sigServers.set(this.signallingUrl, server);\n        return await defer.promise;\n    }\n    async close() {\n        if (this.signallingUrl != null) {\n            const server = this.transport.sigServers.get(this.signallingUrl);\n            if (server != null) {\n                await server.close();\n                this.transport.sigServers.delete(this.signallingUrl);\n            }\n        }\n        this.dispatchEvent(new CustomEvent('close'));\n        // Reset state\n        this.listeningAddr = undefined;\n    }\n    getAddrs() {\n        if (this.listeningAddr != null) {\n            return [\n                this.listeningAddr\n            ];\n        }\n        return [];\n    }\n}\nexport function createListener(upgrader, handler, peerId, transport, options) {\n    return new WebRTCListener(upgrader, handler, peerId, transport, options);\n}\n//# sourceMappingURL=listener.js.map","export const symbol = Symbol.for('@libp2p/transport');\nexport function isTransport(other) {\n    return other != null && Boolean(other[symbol]);\n}\n/**\n * Enum Transport Manager Fault Tolerance values\n */\nexport var FaultTolerance;\n(function (FaultTolerance) {\n    /**\n     * should be used for failing in any listen circumstance\n     */\n    FaultTolerance[FaultTolerance[\"FATAL_ALL\"] = 0] = \"FATAL_ALL\";\n    /**\n     * should be used for not failing when not listening\n     */\n    FaultTolerance[FaultTolerance[\"NO_FATAL\"] = 1] = \"NO_FATAL\";\n})(FaultTolerance || (FaultTolerance = {}));\n//# sourceMappingURL=index.js.map","export const symbol = Symbol.for('@libp2p/peer-discovery');\nexport function isPeerDiscovery(other) {\n    return other != null && Boolean(other[symbol]);\n}\n//# sourceMappingURL=index.js.map","import { logger } from '@libp2p/logger';\nimport errcode from 'err-code';\nimport { AbortError } from 'abortable-iterator';\nimport { multiaddr } from '@multiformats/multiaddr';\nimport * as mafmt from '@multiformats/mafmt';\nimport { CODE_CIRCUIT } from './constants.js';\nimport { createListener } from './listener.js';\nimport { toMultiaddrConnection } from './socket-to-conn.js';\nimport { cleanMultiaddr, cleanUrlSIO } from './utils.js';\nimport { WebRTCInitiator } from '@libp2p/webrtc-peer';\nimport randomBytes from 'iso-random-stream/src/random.js';\nimport { toString as uint8ArrayToString } from 'uint8arrays';\nimport { EventEmitter, CustomEvent } from '@libp2p/interfaces/events';\nimport { peerIdFromString } from '@libp2p/peer-id';\nimport { symbol } from '@libp2p/interface-transport';\nimport { symbol as peerDiscoverySymbol } from '@libp2p/interface-peer-discovery';\nconst webrtcSupport = 'RTCPeerConnection' in globalThis;\nconst log = logger('libp2p:webrtc-star');\nconst noop = () => { };\nexport class WebRTCStarDiscovery extends EventEmitter {\n    constructor() {\n        super(...arguments);\n        this.started = false;\n    }\n    get [peerDiscoverySymbol]() {\n        return true;\n    }\n    get [Symbol.toStringTag]() {\n        return '@libp2p/webrtc-star-discovery';\n    }\n    isStarted() {\n        return this.started;\n    }\n    async start() {\n        this.started = true;\n    }\n    async stop() {\n        this.started = false;\n    }\n    dispatchEvent(event) {\n        if (!this.isStarted()) {\n            return false;\n        }\n        return super.dispatchEvent(event);\n    }\n}\n/**\n * @class WebRTCStar\n */\nexport class WebRTCStar {\n    constructor(init) {\n        if (init?.wrtc != null) {\n            this.wrtc = init.wrtc;\n        }\n        // Keep Signalling references\n        this.sigServers = new Map();\n        // Discovery\n        this._discovery = new WebRTCStarDiscovery();\n        this.discovery = () => this._discovery;\n        this.peerDiscovered = this.peerDiscovered.bind(this);\n    }\n    get [symbol]() {\n        return true;\n    }\n    get [Symbol.toStringTag]() {\n        return '@libp2p/webrtc-star';\n    }\n    async dial(ma, options) {\n        const rawConn = await this._connect(ma, options);\n        const maConn = toMultiaddrConnection(rawConn, { remoteAddr: ma, signal: options.signal });\n        log('new outbound connection %s', maConn.remoteAddr);\n        const conn = await options.upgrader.upgradeOutbound(maConn);\n        log('outbound connection %s upgraded', maConn.remoteAddr);\n        return conn;\n    }\n    async _connect(ma, options) {\n        if (options.signal?.aborted === true) {\n            throw new AbortError();\n        }\n        const channelOptions = {\n            ...(options.channelOptions ?? {})\n        };\n        // Use custom WebRTC implementation\n        if (this.wrtc != null) {\n            channelOptions.wrtc = this.wrtc;\n        }\n        const cOpts = ma.toOptions();\n        const intentId = uint8ArrayToString(randomBytes(36), 'hex');\n        return await new Promise((resolve, reject) => {\n            const sio = this.sigServers.get(cleanUrlSIO(ma));\n            if (sio?.socket == null) {\n                return reject(errcode(new Error('unknown signal server to use'), 'ERR_UNKNOWN_SIGNAL_SERVER'));\n            }\n            let connected = false;\n            log('dialing %s:%s', cOpts.host, cOpts.port);\n            const channel = new WebRTCInitiator(channelOptions);\n            const onError = (evt) => {\n                const err = evt.detail;\n                if (!connected) {\n                    const msg = `connection error ${cOpts.host}:${cOpts.port}: ${err.message}`;\n                    log.error(msg);\n                    done(err);\n                }\n            };\n            const onReady = () => {\n                connected = true;\n                log('connection opened %s:%s', cOpts.host, cOpts.port);\n                done();\n            };\n            const onAbort = () => {\n                log.error('connection aborted %s:%s', cOpts.host, cOpts.port);\n                channel.close().finally(() => {\n                    done(new AbortError());\n                });\n            };\n            const done = (err) => {\n                channel.removeEventListener('ready', onReady);\n                options.signal?.removeEventListener('abort', onAbort);\n                if (err == null) {\n                    resolve(channel);\n                }\n                else {\n                    reject(err);\n                }\n            };\n            channel.addEventListener('ready', onReady, {\n                once: true\n            });\n            channel.addEventListener('close', () => {\n                channel.removeEventListener('error', onError);\n            });\n            options.signal?.addEventListener('abort', onAbort);\n            channel.addEventListener('signal', (evt) => {\n                const signal = evt.detail;\n                sio.socket.emit('ss-handshake', {\n                    intentId: intentId,\n                    srcMultiaddr: sio.signallingAddr.toString(),\n                    dstMultiaddr: ma.toString(),\n                    signal: signal\n                });\n            });\n            sio.socket.on('ws-handshake', (offer) => {\n                if (offer.intentId === intentId && offer.err != null) {\n                    channel.close().finally(() => {\n                        reject(errcode(new Error(offer.err), 'ERR_SIGNALLING_FAILED'));\n                    });\n                }\n                if (offer.intentId !== intentId || offer.answer == null || channel.closed) {\n                    return;\n                }\n                channel.handleSignal(offer.signal);\n            });\n        });\n    }\n    /**\n     * Creates a WebrtcStar listener. The provided `handler` function will be called\n     * anytime a new incoming Connection has been successfully upgraded via\n     * `upgrader.upgradeInbound`.\n     */\n    createListener(options) {\n        if (!webrtcSupport && this.wrtc == null) {\n            throw errcode(new Error('no WebRTC support'), 'ERR_NO_WEBRTC_SUPPORT');\n        }\n        options.channelOptions = options.channelOptions ?? {};\n        if (this.wrtc != null) {\n            options.channelOptions.wrtc = this.wrtc;\n        }\n        if (this.peerId == null) {\n            throw errcode(new Error('PeerId not set'), 'ERR_MISSING_PEER_ID');\n        }\n        return createListener(options.upgrader, options.handler ?? noop, this.peerId, this, options);\n    }\n    /**\n     * Takes a list of `Multiaddr`s and returns only valid TCP addresses\n     */\n    filter(multiaddrs) {\n        multiaddrs = Array.isArray(multiaddrs) ? multiaddrs : [multiaddrs];\n        return multiaddrs.filter((ma) => {\n            if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n                return false;\n            }\n            return mafmt.WebRTCStar.matches(ma);\n        });\n    }\n    peerDiscovered(maStr) {\n        log('peer discovered: %s', maStr);\n        maStr = cleanMultiaddr(maStr);\n        const ma = multiaddr(maStr);\n        const peerIdStr = ma.getPeerId();\n        if (peerIdStr == null) {\n            return;\n        }\n        const peerId = peerIdFromString(peerIdStr);\n        this._discovery.dispatchEvent(new CustomEvent('peer', {\n            detail: {\n                id: peerId,\n                multiaddrs: [ma],\n                protocols: []\n            }\n        }));\n    }\n}\n//# sourceMappingURL=transport.js.map","import { WebRTCStar } from './transport.js';\nexport function webRTCStar(init = {}) {\n    const transport = new WebRTCStar(init);\n    return {\n        transport: (components) => {\n            transport.peerId = components.peerId;\n            return transport;\n        },\n        discovery: transport.discovery\n    };\n}\n//# sourceMappingURL=index.js.map","const globalFetch = globalThis.fetch;\nconst globalHeaders = globalThis.Headers;\nconst globalRequest = globalThis.Request;\nconst globalResponse = globalThis.Response;\nexport {\n  globalFetch as fetch\n};\nexport {\n  globalHeaders as Headers\n};\nexport {\n  globalRequest as Request\n};\nexport {\n  globalResponse as Response\n};","/**\n * When this error is thrown it means an operation was aborted,\n * usually in response to the `abort` event being emitted by an\n * AbortSignal.\n */\nexport class AbortError extends Error {\n    constructor(message = 'The operation was aborted') {\n        super(message);\n        this.code = AbortError.code;\n        this.type = AbortError.type;\n    }\n    static get code() {\n        return 'ABORT_ERR';\n    }\n    static get type() {\n        return 'aborted';\n    }\n}\nexport class CodeError extends Error {\n    constructor(message, code, props) {\n        super(message);\n        this.code = code;\n        this.name = props?.name ?? 'CodeError';\n        this.props = props ?? {}; // eslint-disable-line @typescript-eslint/consistent-type-assertions\n    }\n}\n//# sourceMappingURL=errors.js.map","/* eslint-env browser */\nexport default WebSocket;\n//# sourceMappingURL=web-socket.browser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass EventQueue {\n    constructor() {\n        this.pullQueue = [];\n        this.pushQueue = [];\n        this.eventHandlers = {};\n        this.isPaused = false;\n        this.isStopped = false;\n    }\n    push(value) {\n        if (this.isStopped)\n            return;\n        const resolution = { value, done: false };\n        if (this.pullQueue.length) {\n            const placeholder = this.pullQueue.shift();\n            if (placeholder)\n                placeholder.resolve(resolution);\n        }\n        else {\n            this.pushQueue.push(Promise.resolve(resolution));\n            if (this.highWaterMark !== undefined &&\n                this.pushQueue.length >= this.highWaterMark &&\n                !this.isPaused) {\n                this.isPaused = true;\n                if (this.eventHandlers.highWater) {\n                    this.eventHandlers.highWater();\n                }\n                else if (console) {\n                    console.warn(`EventIterator queue reached ${this.pushQueue.length} items`);\n                }\n            }\n        }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        this.remove();\n        for (const placeholder of this.pullQueue) {\n            placeholder.resolve({ value: undefined, done: true });\n        }\n        this.pullQueue.length = 0;\n    }\n    fail(error) {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        this.remove();\n        if (this.pullQueue.length) {\n            for (const placeholder of this.pullQueue) {\n                placeholder.reject(error);\n            }\n            this.pullQueue.length = 0;\n        }\n        else {\n            const rejection = Promise.reject(error);\n            /* Attach error handler to avoid leaking an unhandled promise rejection. */\n            rejection.catch(() => { });\n            this.pushQueue.push(rejection);\n        }\n    }\n    remove() {\n        Promise.resolve().then(() => {\n            if (this.removeCallback)\n                this.removeCallback();\n        });\n    }\n    [Symbol.asyncIterator]() {\n        return {\n            next: (value) => {\n                const result = this.pushQueue.shift();\n                if (result) {\n                    if (this.lowWaterMark !== undefined &&\n                        this.pushQueue.length <= this.lowWaterMark &&\n                        this.isPaused) {\n                        this.isPaused = false;\n                        if (this.eventHandlers.lowWater) {\n                            this.eventHandlers.lowWater();\n                        }\n                    }\n                    return result;\n                }\n                else if (this.isStopped) {\n                    return Promise.resolve({ value: undefined, done: true });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        this.pullQueue.push({ resolve, reject });\n                    });\n                }\n            },\n            return: () => {\n                this.isStopped = true;\n                this.pushQueue.length = 0;\n                this.remove();\n                return Promise.resolve({ value: undefined, done: true });\n            },\n        };\n    }\n}\nclass EventIterator {\n    constructor(listen, { highWaterMark = 100, lowWaterMark = 1 } = {}) {\n        const queue = new EventQueue();\n        queue.highWaterMark = highWaterMark;\n        queue.lowWaterMark = lowWaterMark;\n        queue.removeCallback =\n            listen({\n                push: value => queue.push(value),\n                stop: () => queue.stop(),\n                fail: error => queue.fail(error),\n                on: (event, fn) => {\n                    queue.eventHandlers[event] = fn;\n                },\n            }) || (() => { });\n        this[Symbol.asyncIterator] = () => queue[Symbol.asyncIterator]();\n        Object.freeze(this);\n    }\n}\nexports.EventIterator = EventIterator;\nexports.default = EventIterator;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst event_iterator_1 = require(\"./event-iterator\");\nexports.EventIterator = event_iterator_1.EventIterator;\nfunction subscribe(event, options, evOptions) {\n    return new event_iterator_1.EventIterator(({ push }) => {\n        this.addEventListener(event, push, options);\n        return () => this.removeEventListener(event, push, options);\n    }, evOptions);\n}\nexports.subscribe = subscribe;\nexports.default = event_iterator_1.EventIterator;\n","import { EventIterator } from 'event-iterator';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\n// copied from github.com/feross/buffer\n// Some ArrayBuffers are not passing the instanceof check, so we need to do a bit more work :(\nfunction isArrayBuffer(obj) {\n    return (obj instanceof ArrayBuffer) ||\n        (obj?.constructor?.name === 'ArrayBuffer' && typeof obj?.byteLength === 'number');\n}\nexport default (socket) => {\n    socket.binaryType = 'arraybuffer';\n    const connected = async () => await new Promise((resolve, reject) => {\n        if (isConnected) {\n            return resolve();\n        }\n        if (connError != null) {\n            return reject(connError);\n        }\n        const cleanUp = (cont) => {\n            socket.removeEventListener('open', onOpen);\n            socket.removeEventListener('error', onError);\n            cont();\n        };\n        const onOpen = () => cleanUp(resolve);\n        const onError = (event) => {\n            cleanUp(() => reject(event.error ?? new Error(`connect ECONNREFUSED ${socket.url}`)));\n        };\n        socket.addEventListener('open', onOpen);\n        socket.addEventListener('error', onError);\n    });\n    const source = (async function* () {\n        const messages = new EventIterator(({ push, stop, fail }) => {\n            const onMessage = (event) => {\n                let data = null;\n                if (typeof event.data === 'string') {\n                    data = uint8ArrayFromString(event.data);\n                }\n                if (isArrayBuffer(event.data)) {\n                    data = new Uint8Array(event.data);\n                }\n                if (event.data instanceof Uint8Array) {\n                    data = event.data;\n                }\n                if (data == null) {\n                    return;\n                }\n                push(data);\n            };\n            const onError = (event) => fail(event.error ?? new Error('Socket error'));\n            socket.addEventListener('message', onMessage);\n            socket.addEventListener('error', onError);\n            socket.addEventListener('close', stop);\n            return () => {\n                socket.removeEventListener('message', onMessage);\n                socket.removeEventListener('error', onError);\n                socket.removeEventListener('close', stop);\n            };\n        }, { highWaterMark: Infinity });\n        await connected();\n        for await (const chunk of messages) {\n            yield isArrayBuffer(chunk) ? new Uint8Array(chunk) : chunk;\n        }\n    }());\n    let isConnected = socket.readyState === 1;\n    let connError;\n    socket.addEventListener('open', () => {\n        isConnected = true;\n        connError = null;\n    });\n    socket.addEventListener('close', () => {\n        isConnected = false;\n        connError = null;\n    });\n    socket.addEventListener('error', event => {\n        if (!isConnected) {\n            connError = event.error ?? new Error(`connect ECONNREFUSED ${socket.url}`);\n        }\n    });\n    return Object.assign(source, {\n        connected\n    });\n};\n//# sourceMappingURL=source.js.map","export default (socket) => {\n    // if the socket is closing or closed, return end\n    if (socket.readyState >= 2) {\n        throw new Error('socket closed');\n    }\n    // if open, return\n    if (socket.readyState === 1) {\n        return;\n    }\n    return new Promise((resolve, reject) => {\n        function cleanup() {\n            socket.removeEventListener('open', handleOpen);\n            socket.removeEventListener('error', handleErr);\n        }\n        function handleOpen() {\n            cleanup();\n            resolve();\n        }\n        function handleErr(event) {\n            cleanup();\n            reject(event.error ?? new Error(`connect ECONNREFUSED ${socket.url}`));\n        }\n        socket.addEventListener('open', handleOpen);\n        socket.addEventListener('error', handleErr);\n    });\n};\n//# sourceMappingURL=ready.js.map","import ready from './ready.js';\nexport default (socket, options) => {\n    options = options ?? {};\n    options.closeOnEnd = options.closeOnEnd !== false;\n    const sink = async (source) => {\n        for await (const data of source) {\n            try {\n                await ready(socket);\n            }\n            catch (err) {\n                if (err.message === 'socket closed')\n                    break;\n                throw err;\n            }\n            socket.send(data);\n        }\n        if (options.closeOnEnd != null && socket.readyState <= 1) {\n            return await new Promise((resolve, reject) => {\n                socket.addEventListener('close', event => {\n                    if (event.wasClean || event.code === 1006) {\n                        resolve();\n                    }\n                    else {\n                        const err = Object.assign(new Error('ws error'), { event });\n                        reject(err);\n                    }\n                });\n                setTimeout(() => socket.close());\n            });\n        }\n    };\n    return sink;\n};\n//# sourceMappingURL=sink.js.map","import source from './source.js';\nimport sink from './sink.js';\nexport default (socket, options) => {\n    options = options ?? {};\n    const connectedSource = source(socket);\n    let remoteAddress = options.remoteAddress;\n    let remotePort = options.remotePort;\n    if (socket.url != null) {\n        // only client->server sockets have urls, server->client connections do not\n        try {\n            const url = new URL(socket.url);\n            remoteAddress = url.hostname;\n            remotePort = parseInt(url.port, 10);\n        }\n        catch { }\n    }\n    if (remoteAddress == null || remotePort == null) {\n        throw new Error('Remote connection did not have address and/or port');\n    }\n    const duplex = {\n        sink: sink(socket, options),\n        source: connectedSource,\n        connected: async () => await connectedSource.connected(),\n        close: async () => {\n            if (socket.readyState === socket.CONNECTING || socket.readyState === socket.OPEN) {\n                await new Promise((resolve) => {\n                    socket.addEventListener('close', () => {\n                        resolve();\n                    });\n                    socket.close();\n                });\n            }\n        },\n        destroy: () => {\n            if (socket.terminate != null) {\n                socket.terminate();\n            }\n            else {\n                socket.close();\n            }\n        },\n        remoteAddress,\n        remotePort,\n        socket\n    };\n    return duplex;\n};\n//# sourceMappingURL=duplex.js.map","import { relative } from 'iso-url';\nconst map = { http: 'ws', https: 'wss' };\nconst def = 'ws';\nexport default (url, location) => relative(url, location, map, def);\n//# sourceMappingURL=ws-url.js.map","// load websocket library if we are not in the browser\nimport WebSocket from './web-socket.js';\nimport duplex from './duplex.js';\nimport wsurl from './ws-url.js';\nexport function connect(addr, opts) {\n    const location = typeof window === 'undefined' ? '' : window.location;\n    opts = opts ?? {};\n    const url = wsurl(addr, location.toString());\n    const socket = new WebSocket(url, opts.websocket);\n    return duplex(socket, opts);\n}\n//# sourceMappingURL=client.js.map","export function createListener() {\n    throw new Error('WebSocket Servers can not be created in the browser!');\n}\n//# sourceMappingURL=listener.browser.js.map","// p2p multi-address code\nexport const CODE_P2P = 421;\nexport const CODE_CIRCUIT = 290;\nexport const CODE_TCP = 6;\nexport const CODE_WS = 477;\nexport const CODE_WSS = 478;\n// Time to wait for a connection to close gracefully before destroying it manually\nexport const CLOSE_TIMEOUT = 2000;\n//# sourceMappingURL=constants.js.map","export class TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\n/**\nAn error to be thrown when the request is aborted by AbortController.\nDOMException is thrown instead of this Error when DOMException is available.\n*/\nexport class AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\n/**\nTODO: Remove AbortError and just throw DOMException when targeting Node 18.\n*/\nconst getDOMException = errorMessage => globalThis.DOMException === undefined\n\t? new AbortError(errorMessage)\n\t: new DOMException(errorMessage);\n\n/**\nTODO: Remove below function and just 'reject(signal.reason)' when targeting Node 18.\n*/\nconst getAbortedReason = signal => {\n\tconst reason = signal.reason === undefined\n\t\t? getDOMException('This operation was aborted.')\n\t\t: signal.reason;\n\n\treturn reason instanceof Error ? reason : getDOMException(reason);\n};\n\nexport default function pTimeout(promise, options) {\n\tconst {\n\t\tmilliseconds,\n\t\tfallback,\n\t\tmessage,\n\t\tcustomTimers = {setTimeout, clearTimeout},\n\t} = options;\n\n\tlet timer;\n\n\tconst cancelablePromise = new Promise((resolve, reject) => {\n\t\tif (typeof milliseconds !== 'number' || Math.sign(milliseconds) !== 1) {\n\t\t\tthrow new TypeError(`Expected \\`milliseconds\\` to be a positive number, got \\`${milliseconds}\\``);\n\t\t}\n\n\t\tif (milliseconds === Number.POSITIVE_INFINITY) {\n\t\t\tresolve(promise);\n\t\t\treturn;\n\t\t}\n\n\t\tif (options.signal) {\n\t\t\tconst {signal} = options;\n\t\t\tif (signal.aborted) {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t}\n\n\t\t\tsignal.addEventListener('abort', () => {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t});\n\t\t}\n\n\t\ttimer = customTimers.setTimeout.call(undefined, () => {\n\t\t\tif (fallback) {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(fallback());\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof promise.cancel === 'function') {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\n\t\t\tif (message === false) {\n\t\t\t\tresolve();\n\t\t\t} else if (message instanceof Error) {\n\t\t\t\treject(message);\n\t\t\t} else {\n\t\t\t\tconst errorMessage = message ?? `Promise timed out after ${milliseconds} milliseconds`;\n\t\t\t\treject(new TimeoutError(errorMessage));\n\t\t\t}\n\t\t}, milliseconds);\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tresolve(await promise);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t} finally {\n\t\t\t\tcustomTimers.clearTimeout.call(undefined, timer);\n\t\t\t}\n\t\t})();\n\t});\n\n\tcancelablePromise.clear = () => {\n\t\tcustomTimers.clearTimeout.call(undefined, timer);\n\t\ttimer = undefined;\n\t};\n\n\treturn cancelablePromise;\n}\n","import { abortableSource } from 'abortable-iterator';\nimport { CLOSE_TIMEOUT } from './constants.js';\nimport pTimeout from 'p-timeout';\nimport { logger } from '@libp2p/logger';\nconst log = logger('libp2p:websockets:socket');\n// Convert a stream into a MultiaddrConnection\n// https://github.com/libp2p/interface-transport#multiaddrconnection\nexport function socketToMaConn(stream, remoteAddr, options) {\n    options = options ?? {};\n    const maConn = {\n        async sink(source) {\n            if ((options?.signal) != null) {\n                source = abortableSource(source, options.signal);\n            }\n            try {\n                await stream.sink(source);\n            }\n            catch (err) {\n                if (err.type !== 'aborted') {\n                    log.error(err);\n                }\n            }\n        },\n        source: (options.signal != null) ? abortableSource(stream.source, options.signal) : stream.source,\n        remoteAddr,\n        timeline: { open: Date.now() },\n        async close() {\n            const start = Date.now();\n            try {\n                await pTimeout(stream.close(), {\n                    milliseconds: CLOSE_TIMEOUT\n                });\n            }\n            catch (err) {\n                const { host, port } = maConn.remoteAddr.toOptions();\n                log('timeout closing stream to %s:%s after %dms, destroying it manually', host, port, Date.now() - start);\n                stream.destroy();\n            }\n            finally {\n                maConn.timeline.close = Date.now();\n            }\n        }\n    };\n    stream.socket.addEventListener('close', () => {\n        // In instances where `close` was not explicitly called,\n        // such as an iterable stream ending, ensure we have set the close\n        // timeline\n        if (maConn.timeline.close == null) {\n            maConn.timeline.close = Date.now();\n        }\n    }, { once: true });\n    return maConn;\n}\n//# sourceMappingURL=socket-to-conn.js.map","import * as mafmt from '@multiformats/mafmt';\nimport { CODE_CIRCUIT, CODE_P2P, CODE_TCP, CODE_WS, CODE_WSS } from './constants.js';\nexport function all(multiaddrs) {\n    return multiaddrs.filter((ma) => {\n        if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n            return false;\n        }\n        const testMa = ma.decapsulateCode(CODE_P2P);\n        return mafmt.WebSockets.matches(testMa) ||\n            mafmt.WebSocketsSecure.matches(testMa);\n    });\n}\nexport function dnsWss(multiaddrs) {\n    return multiaddrs.filter((ma) => {\n        if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n            return false;\n        }\n        const testMa = ma.decapsulateCode(CODE_P2P);\n        return mafmt.WebSocketsSecure.matches(testMa) &&\n            mafmt.DNS.matches(testMa.decapsulateCode(CODE_TCP).decapsulateCode(CODE_WSS));\n    });\n}\nexport function dnsWsOrWss(multiaddrs) {\n    return multiaddrs.filter((ma) => {\n        if (ma.protoCodes().includes(CODE_CIRCUIT)) {\n            return false;\n        }\n        const testMa = ma.decapsulateCode(CODE_P2P);\n        // WS\n        if (mafmt.WebSockets.matches(testMa)) {\n            return mafmt.DNS.matches(testMa.decapsulateCode(CODE_TCP).decapsulateCode(CODE_WS));\n        }\n        // WSS\n        return mafmt.WebSocketsSecure.matches(testMa) &&\n            mafmt.DNS.matches(testMa.decapsulateCode(CODE_TCP).decapsulateCode(CODE_WSS));\n    });\n}\n//# sourceMappingURL=filters.js.map","import { connect } from 'it-ws/client';\nimport { multiaddrToUri as toUri } from '@multiformats/multiaddr-to-uri';\nimport { AbortError } from '@libp2p/interfaces/errors';\nimport pDefer from 'p-defer';\nimport { logger } from '@libp2p/logger';\nimport { isBrowser, isWebWorker } from 'wherearewe';\nimport { createListener } from './listener.js';\nimport { socketToMaConn } from './socket-to-conn.js';\nimport * as filters from './filters.js';\nimport { symbol } from '@libp2p/interface-transport';\nconst log = logger('libp2p:websockets');\nclass WebSockets {\n    constructor(init) {\n        this.init = init;\n    }\n    get [Symbol.toStringTag]() {\n        return '@libp2p/websockets';\n    }\n    get [symbol]() {\n        return true;\n    }\n    async dial(ma, options) {\n        log('dialing %s', ma);\n        options = options ?? {};\n        const socket = await this._connect(ma, options);\n        const maConn = socketToMaConn(socket, ma);\n        log('new outbound connection %s', maConn.remoteAddr);\n        const conn = await options.upgrader.upgradeOutbound(maConn);\n        log('outbound connection %s upgraded', maConn.remoteAddr);\n        return conn;\n    }\n    async _connect(ma, options) {\n        if (options?.signal?.aborted === true) {\n            throw new AbortError();\n        }\n        const cOpts = ma.toOptions();\n        log('dialing %s:%s', cOpts.host, cOpts.port);\n        const errorPromise = pDefer();\n        const errfn = (err) => {\n            log.error('connection error:', err);\n            errorPromise.reject(err);\n        };\n        const rawSocket = connect(toUri(ma), this.init);\n        if (rawSocket.socket.on != null) {\n            rawSocket.socket.on('error', errfn);\n        }\n        else {\n            rawSocket.socket.onerror = errfn;\n        }\n        if (options.signal == null) {\n            await Promise.race([rawSocket.connected(), errorPromise.promise]);\n            log('connected %s', ma);\n            return rawSocket;\n        }\n        // Allow abort via signal during connect\n        let onAbort;\n        const abort = new Promise((resolve, reject) => {\n            onAbort = () => {\n                reject(new AbortError());\n                rawSocket.close().catch(err => {\n                    log.error('error closing raw socket', err);\n                });\n            };\n            // Already aborted?\n            if (options?.signal?.aborted === true) {\n                return onAbort();\n            }\n            options?.signal?.addEventListener('abort', onAbort);\n        });\n        try {\n            await Promise.race([abort, errorPromise.promise, rawSocket.connected()]);\n        }\n        finally {\n            if (onAbort != null) {\n                options?.signal?.removeEventListener('abort', onAbort);\n            }\n        }\n        log('connected %s', ma);\n        return rawSocket;\n    }\n    /**\n     * Creates a Websockets listener. The provided `handler` function will be called\n     * anytime a new incoming Connection has been successfully upgraded via\n     * `upgrader.upgradeInbound`\n     */\n    createListener(options) {\n        return createListener({ ...this.init, ...options });\n    }\n    /**\n     * Takes a list of `Multiaddr`s and returns only valid Websockets addresses.\n     * By default, in a browser environment only DNS+WSS multiaddr is accepted,\n     * while in a Node.js environment DNS+{WS, WSS} multiaddrs are accepted.\n     */\n    filter(multiaddrs) {\n        multiaddrs = Array.isArray(multiaddrs) ? multiaddrs : [multiaddrs];\n        if (this.init?.filter != null) {\n            return this.init?.filter(multiaddrs);\n        }\n        // Browser\n        if (isBrowser || isWebWorker) {\n            return filters.dnsWss(multiaddrs);\n        }\n        return filters.all(multiaddrs);\n    }\n}\nexport function webSockets(init = {}) {\n    return () => {\n        return new WebSockets(init);\n    };\n}\n//# sourceMappingURL=index.js.map"],"names":["DNS4","base","DNS6","DNSADDR","DNS","or","IP","TCP","and","UDP","UTP","QUIC","WebSockets","WebSocketsSecure","HTTP","HTTPS","WebRTCStar","WebRTCDirect","Reliable","_P2P","_Circuit","CircuitRecursive","Circuit","P2P","IPFS","makeMatchesFunction","partialMatch","matches","a","ma","multiaddr","out","args","arg","res","name","pnames","protos","reduceValue","_","v","tcpUri","str","port","parts","opts","protocol","explicitPort","Reducers","content","i","p","multiaddrToUri","input","tuple","part","reduce","__classPrivateFieldGet","this","receiver","state","kind","f","_EventEmitter_listeners","EventEmitter","type","listeners","listener","options","list","callback","event","result","once","detail","CustomEvent","CustomEventPolyfill","message","data","code","getIterator","obj","abortableSource","source","signal","iterator","abortable","nextAbortHandler","abortHandler","abortMessage","abortCode","AbortError","abort","resolve","reject","err","isKnownAborter","abortableSink","sink","abortableDuplex","duplex","CODE_P2P","CODE_CIRCUIT","CLOSE_TIMEOUT","PACKET_TYPES","PACKET_TYPES_REVERSE","key","ERROR_PACKET","withNativeBlob","withNativeArrayBuffer","isView","encodePacket","supportsBinary","encodeBlobAsBase64","fileReader","chars","lookup","decode","base64","bufferLength","len","encoded1","encoded2","encoded3","encoded4","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","decodeBase64Packet","decoded","SEPARATOR","encodePayload","packets","length","encodedPackets","count","packet","decodePayload","encodedPayload","decodedPacket","Emitter","mixin","fn","on","callbacks","cb","globalThisShim","pick","attr","acc","k","NATIVE_SET_TIMEOUT","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","globalThis","BASE64_OVERHEAD","byteLength","utf8Length","c","l","TransportError","reason","description","context","Transport","details","alphabet","map","seed","prev","encode","num","encoded","yeast","now","qs","qry","pairs","pair","value","hasCORS","XHR","xdomain","empty","hasXHR2","XMLHttpRequest","Polling","isSSL","forceBase64","onPause","pause","total","close","query","schema","encodedQuery","ipv6","Request","req","xhrStatus","uri","xhr","e","fromError","unloadHandler","terminationEvent","nextTick","setTimeoutFn","WebSocket","usingBrowserWebSocket","defaultBinaryType","isReactNative","WS","protocols","closeEvent","ev","lastPacket","transports","re","parse","src","b","m","pathNames","queryKey","path","regx","names","$0","$1","$2","transport","Socket","failed","onTransportOpen","msg","cleanup","freezeTransport","onerror","error","onTransportClose","onclose","onupgrade","to","payloadSize","cleanupAndClose","waitForUpgrade","upgrades","filteredUpgrades","j","url","loc","host","toString","withNativeFile","isBinary","hasBinary","toJSON","deconstructPacket","buffers","packetData","pack","_deconstructPacket","placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","replacer","deconstruction","Decoder","reviver","isBinaryEvent","BinaryReconstructor","start","buf","next","payload","binData","RESERVED_EVENTS","io","nsp","id","ack","isTransportWritable","timeout","timer","self","sent","subDestroy","compress","Backoff","ms","rand","deviation","min","max","jitter","Manager","_a","_parser","parser","Engine","socket","openSubDestroy","errorSub","nsps","delay","attempt","cache","parsed","sameNamespace","newConnection","MAX_BYTES","randomBytes","size","generated","random_browser","MAX_BUFFERED_AMOUNT","CHANNEL_CLOSING_TIMEOUT","WebRTCDataChannel","channel","defer","errCode","isClosing","randomInteger","minimum","maximum","createAbortError","createDelay","defaultClear","set","willResolve","timeoutId","settle","rejectFn","clear","signalListener","delayPromise","createWithTimers","clearAndSet","delayModule","delay_1","DEFAULT_PEER_CONNECTION_CONFIG","getBrowserRTC","wrtc","WebRTCPeer","uint8ArrayToString","randombytes","logger","pushable","dataChannel","WebRTCHandshake","iceCandidate","log","WebRTCReceiver","WebRTCReceiverHandshake","candidate","answer","normalizeEmitter","emitter","addListener","removeListener","pEventMultiple","cancel","returnValue","events","items","onItem","arguments_","rejectHandler","rejectionEvent","pTimeout","pEvent","arrayPromise","promise","array","ICECOMPLETE_TIMEOUT","WebRTCInitiator","WebRTCInitiatorHandshake","offer","toMultiaddrConnection","maConn","cleanUrlSIO","maStrSplit","tcpProto","wsProto","tcpPort","isName","cleanMultiaddr","maStr","legacy","tuppleIPFS","tupple","sioOptions","SigServer","signallingUrl","signallingAddr","upgrader","handler","channelOptions","connect","previouslyConnected","intentId","srcMultiaddr","dstMultiaddr","onError","evt","conn","untrackConn","pendingSignals","handshake","WebRTCListener","peerId","pDefer","server","createListener","symbol","FaultTolerance","webrtcSupport","noop","WebRTCStarDiscovery","peerDiscoverySymbol","init","rawConn","cOpts","sio","errcode","connected","done","onReady","onAbort","multiaddrs","mafmt.WebRTCStar","peerIdStr","peerIdFromString","webRTCStar","components","globalFetch","globalHeaders","WebSocket$1","eventIterator","EventQueue","resolution","rejection","EventIterator$1","listen","highWaterMark","lowWaterMark","queue","EventIterator","dom","event_iterator_1","require$$0","subscribe","evOptions","push","isArrayBuffer","isConnected","connError","cleanUp","cont","onOpen","messages","stop","fail","onMessage","uint8ArrayFromString","chunk","ready","handleOpen","handleErr","connectedSource","remoteAddress","remotePort","def","wsurl","location","relative","addr","CODE_TCP","CODE_WSS","TimeoutError","getDOMException","errorMessage","getAbortedReason","milliseconds","fallback","customTimers","cancelablePromise","socketToMaConn","stream","remoteAddr","all","testMa","mafmt.WebSockets","mafmt.WebSocketsSecure","dnsWss","mafmt.DNS","errorPromise","errfn","rawSocket","toUri","isBrowser","isWebWorker","filters.dnsWss","filters.all","webSockets"],"mappings":"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"}