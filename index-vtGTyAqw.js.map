{"version":3,"file":"index-vtGTyAqw.js","sources":["../../../../node_modules/env-paths/index.js"],"sourcesContent":["import path from 'node:path';\nimport os from 'node:os';\nimport process from 'node:process';\n\nconst homedir = os.homedir();\nconst tmpdir = os.tmpdir();\nconst {env} = process;\n\nconst macos = name => {\n\tconst library = path.join(homedir, 'Library');\n\n\treturn {\n\t\tdata: path.join(library, 'Application Support', name),\n\t\tconfig: path.join(library, 'Preferences', name),\n\t\tcache: path.join(library, 'Caches', name),\n\t\tlog: path.join(library, 'Logs', name),\n\t\ttemp: path.join(tmpdir, name),\n\t};\n};\n\nconst windows = name => {\n\tconst appData = env.APPDATA || path.join(homedir, 'AppData', 'Roaming');\n\tconst localAppData = env.LOCALAPPDATA || path.join(homedir, 'AppData', 'Local');\n\n\treturn {\n\t\t// Data/config/cache/log are invented by me as Windows isn't opinionated about this\n\t\tdata: path.join(localAppData, name, 'Data'),\n\t\tconfig: path.join(appData, name, 'Config'),\n\t\tcache: path.join(localAppData, name, 'Cache'),\n\t\tlog: path.join(localAppData, name, 'Log'),\n\t\ttemp: path.join(tmpdir, name),\n\t};\n};\n\n// https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html\nconst linux = name => {\n\tconst username = path.basename(homedir);\n\n\treturn {\n\t\tdata: path.join(env.XDG_DATA_HOME || path.join(homedir, '.local', 'share'), name),\n\t\tconfig: path.join(env.XDG_CONFIG_HOME || path.join(homedir, '.config'), name),\n\t\tcache: path.join(env.XDG_CACHE_HOME || path.join(homedir, '.cache'), name),\n\t\t// https://wiki.debian.org/XDGBaseDirectorySpecification#state\n\t\tlog: path.join(env.XDG_STATE_HOME || path.join(homedir, '.local', 'state'), name),\n\t\ttemp: path.join(tmpdir, username, name),\n\t};\n};\n\nexport default function envPaths(name, {suffix = 'nodejs'} = {}) {\n\tif (typeof name !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got ${typeof name}`);\n\t}\n\n\tif (suffix) {\n\t\t// Add suffix to prevent possible conflict with native apps\n\t\tname += `-${suffix}`;\n\t}\n\n\tif (process.platform === 'darwin') {\n\t\treturn macos(name);\n\t}\n\n\tif (process.platform === 'win32') {\n\t\treturn windows(name);\n\t}\n\n\treturn linux(name);\n}\n"],"names":["homedir","os","tmpdir","env","process","macos","name","library","path","windows","appData","localAppData","linux","username","envPaths","suffix"],"mappings":"wCAIA,MAAMA,EAAUC,EAAG,UACbC,EAASD,EAAG,SACZ,CAAC,IAAAE,CAAG,EAAIC,EAERC,EAAQC,GAAQ,CACrB,MAAMC,EAAUC,EAAK,KAAKR,EAAS,SAAS,EAE5C,MAAO,CACN,KAAMQ,EAAK,KAAKD,EAAS,sBAAuBD,CAAI,EACpD,OAAQE,EAAK,KAAKD,EAAS,cAAeD,CAAI,EAC9C,MAAOE,EAAK,KAAKD,EAAS,SAAUD,CAAI,EACxC,IAAKE,EAAK,KAAKD,EAAS,OAAQD,CAAI,EACpC,KAAME,EAAK,KAAKN,EAAQI,CAAI,CAC9B,CACA,EAEMG,EAAUH,GAAQ,CACvB,MAAMI,EAAUP,EAAI,SAAWK,EAAK,KAAKR,EAAS,UAAW,SAAS,EAChEW,EAAeR,EAAI,cAAgBK,EAAK,KAAKR,EAAS,UAAW,OAAO,EAE9E,MAAO,CAEN,KAAMQ,EAAK,KAAKG,EAAcL,EAAM,MAAM,EAC1C,OAAQE,EAAK,KAAKE,EAASJ,EAAM,QAAQ,EACzC,MAAOE,EAAK,KAAKG,EAAcL,EAAM,OAAO,EAC5C,IAAKE,EAAK,KAAKG,EAAcL,EAAM,KAAK,EACxC,KAAME,EAAK,KAAKN,EAAQI,CAAI,CAC9B,CACA,EAGMM,EAAQN,GAAQ,CACrB,MAAMO,EAAWL,EAAK,SAASR,CAAO,EAEtC,MAAO,CACN,KAAMQ,EAAK,KAAKL,EAAI,eAAiBK,EAAK,KAAKR,EAAS,SAAU,OAAO,EAAGM,CAAI,EAChF,OAAQE,EAAK,KAAKL,EAAI,iBAAmBK,EAAK,KAAKR,EAAS,SAAS,EAAGM,CAAI,EAC5E,MAAOE,EAAK,KAAKL,EAAI,gBAAkBK,EAAK,KAAKR,EAAS,QAAQ,EAAGM,CAAI,EAEzE,IAAKE,EAAK,KAAKL,EAAI,gBAAkBK,EAAK,KAAKR,EAAS,SAAU,OAAO,EAAGM,CAAI,EAChF,KAAME,EAAK,KAAKN,EAAQW,EAAUP,CAAI,CACxC,CACA,EAEe,SAASQ,EAASR,EAAM,CAAC,OAAAS,EAAS,QAAQ,EAAI,CAAA,EAAI,CAChE,GAAI,OAAOT,GAAS,SACnB,MAAM,IAAI,UAAU,0BAA0B,OAAOA,CAAI,EAAE,EAQ5D,OALIS,IAEHT,GAAQ,IAAIS,CAAM,IAGfX,EAAQ,WAAa,SACjBC,EAAMC,CAAI,EAGdF,EAAQ,WAAa,QACjBK,EAAQH,CAAI,EAGbM,EAAMN,CAAI,CAClB","x_google_ignoreList":[0]}