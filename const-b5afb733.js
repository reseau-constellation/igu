import{au as x,av as $,aw as z,ax as R,ay as k,az as M,aA as N,aB as W,aC as J}from"./index-f71c8db3.js";function P(r,e){if(r.length>=255)throw new TypeError("Alphabet too long");for(var n=new Uint8Array(256),o=0;o<n.length;o++)n[o]=255;for(var s=0;s<r.length;s++){var h=r.charAt(s),v=h.charCodeAt(0);if(n[v]!==255)throw new TypeError(h+" is ambiguous");n[v]=s}var a=r.length,c=r.charAt(0),E=Math.log(a)/Math.log(256),C=Math.log(256)/Math.log(a);function S(t){if(t instanceof Uint8Array||(ArrayBuffer.isView(t)?t=new Uint8Array(t.buffer,t.byteOffset,t.byteLength):Array.isArray(t)&&(t=Uint8Array.from(t))),!(t instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(t.length===0)return"";for(var i=0,d=0,f=0,p=t.length;f!==p&&t[f]===0;)f++,i++;for(var b=(p-f)*C+1>>>0,l=new Uint8Array(b);f!==p;){for(var w=t[f],y=0,u=b-1;(w!==0||y<d)&&u!==-1;u--,y++)w+=256*l[u]>>>0,l[u]=w%a>>>0,w=w/a>>>0;if(w!==0)throw new Error("Non-zero carry");d=y,f++}for(var g=b-d;g!==b&&l[g]===0;)g++;for(var O=c.repeat(i);g<b;++g)O+=r.charAt(l[g]);return O}function m(t){if(typeof t!="string")throw new TypeError("Expected String");if(t.length===0)return new Uint8Array;var i=0;if(t[i]!==" "){for(var d=0,f=0;t[i]===c;)d++,i++;for(var p=(t.length-i)*E+1>>>0,b=new Uint8Array(p);t[i];){var l=n[t.charCodeAt(i)];if(l===255)return;for(var w=0,y=p-1;(l!==0||w<f)&&y!==-1;y--,w++)l+=a*b[y]>>>0,b[y]=l%256>>>0,l=l/256>>>0;if(l!==0)throw new Error("Non-zero carry");f=w,i++}if(t[i]!==" "){for(var u=p-f;u!==p&&b[u]===0;)u++;for(var g=new Uint8Array(d+(p-u)),O=d;u!==p;)g[O++]=b[u++];return g}}}function U(t){var i=m(t);if(i)return i;throw new Error(`Non-${e} character`)}return{encode:S,decodeUnsafe:m,decode:U}}var B=P,F=B;const I=r=>{if(r instanceof Uint8Array&&r.constructor.name==="Uint8Array")return r;if(r instanceof ArrayBuffer)return new Uint8Array(r);if(ArrayBuffer.isView(r))return new Uint8Array(r.buffer,r.byteOffset,r.byteLength);throw new Error("Unknown type, must be binary type")};class V{constructor(e,n,o){this.name=e,this.prefix=n,this.baseEncode=o}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}}class X{constructor(e,n,o){if(this.name=e,this.prefix=n,n.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=n.codePointAt(0),this.baseDecode=o}decode(e){if(typeof e=="string"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(e){return L(this,e)}}class Z{constructor(e){this.decoders=e}or(e){return L(this,e)}decode(e){const n=e[0],o=this.decoders[n];if(o)return o.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}}const L=(r,e)=>new Z({...r.decoders||{[r.prefix]:r},...e.decoders||{[e.prefix]:e}});class q{constructor(e,n,o,s){this.name=e,this.prefix=n,this.baseEncode=o,this.baseDecode=s,this.encoder=new V(e,n,o),this.decoder=new X(e,n,s)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}}const G=({name:r,prefix:e,encode:n,decode:o})=>new q(r,e,n,o),_=({prefix:r,name:e,alphabet:n})=>{const{encode:o,decode:s}=F(n,e);return G({prefix:r,name:e,encode:o,decode:h=>I(s(h))})},T=_({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"});_({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});const K=421,Q=290,Y=2e3,D=x("libp2p:webrtc-direct:socket");function j(r,e){const{sink:n,source:o}=r,s={remoteAddr:e.remoteAddr,async sink(h){e.signal!=null&&(h=$(h,e.signal));try{await n(h)}catch(v){v.type!=="aborted"&&D.error(v)}},source:e.signal!=null?$(o,e.signal):o,timeline:{open:Date.now()},async close(){if(r.closed)return;const h=Date.now(),v=setTimeout(()=>{if(s.remoteAddr!=null){const{host:a,port:c}=s.remoteAddr.toOptions();D("timeout closing socket to %s:%s after %dms, destroying it manually",a,c,Date.now()-h)}r.closed||r.close().catch(a=>{D.error("could not close socket",a)})},Y);try{await r.close()}finally{clearTimeout(v)}}};return r.addEventListener("close",()=>{s.timeline.close==null&&(s.timeline.close=Date.now())},{once:!0}),s}function H(){throw new Error("WebRTCDirect Servers can not be created in the browser!")}const A=x("libp2p:webrtc-direct");class ee{constructor(e){this.initiatorOptions=e?.initiatorOptions,this.recieverOptions=e?.recieverOptions,this.wrtc=e?.wrtc}get[z](){return!0}get[Symbol.toStringTag](){return"@libp2p/webrtc-direct"}async dial(e,n){const o=await this._connect(e,n),s=j(o,{remoteAddr:e,signal:n.signal});A("new outbound connection %s",s.remoteAddr);const h=await n.upgrader.upgradeOutbound(s);return A("outbound connection %s upgraded",s.remoteAddr),h}async _connect(e,n){if(n.signal?.aborted===!0)throw new R;const o={initiator:!0,trickle:!1,...this.initiatorOptions};return this.wrtc!=null&&(o.wrtc=this.wrtc),await new Promise((s,h)=>{let v;const a=e.toOptions();A("Dialing %s:%s",a.host,a.port);const c=new k(o),E=t=>{const i=t.detail;if(!v){const d=`connection error ${a.host}:${a.port}: ${i.message}`;A.error(d),i.message=d,m(i)}},C=()=>{v=!0,A("connection opened %s:%s",a.host,a.port),m()},S=()=>{A.error("connection aborted %s:%s",a.host,a.port),c.close().finally(()=>{m(new R)})},m=t=>{c.removeEventListener("error",E),c.removeEventListener("ready",C),n.signal?.removeEventListener("abort",S),t!=null?h(t):s(c)};c.addEventListener("error",E,{once:!0}),c.addEventListener("ready",C,{once:!0}),c.addEventListener("close",()=>{c.removeEventListener("error",E)}),n.signal?.addEventListener("abort",S);const U=async t=>{if(t.type!=="offer")return;const i=JSON.stringify(t);let d=a.host;a.family===6&&!d.startsWith("[")&&(d=`[${d}]`);const f=`http://${d}:${a.port}`,p=`/?signal=${T.encode(N(i))}`,b=f+p;try{const w=await(await W(b)).text();if(w.trim()==="")return;const y=T.decode(w),u=J(y),g=JSON.parse(u);c.handleSignal(g)}catch(l){await c.close(l),h(l)}};c.addEventListener("signal",t=>{const i=t.detail;U(i).catch(async d=>{await c.close(d)})})})}createListener(e){return H({...e,receiverOptions:this.recieverOptions,wrtc:this.wrtc})}filter(e){return e=Array.isArray(e)?e:[e],e.filter(n=>n.protoCodes().includes(Q)?!1:M.matches(n.decapsulateCode(K)))}}function te(r={}){return()=>new ee(r)}const ne=["/dns4/arcane-springs-02799.herokuapp.com/tcp/443/wss/p2p-webrtc-star/"];export{ne as A,te as w};
//# sourceMappingURL=const-b5afb733.js.map
