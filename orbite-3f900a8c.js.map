{"version":3,"mappings":"oEAGe,eAAeA,EAAW,CAAE,KAAAC,EAAM,cAAAC,GAAkB,CAC/D,IAAIC,EAAqBD,EACzB,GAAIE,EAAgB,CAChB,MAAMC,EAAW,MAAKC,EAAA,IAAC,OAAO,qBAAU,OAAAC,KAAA,mEAClCC,EAAO,YAAM,OAAO,qBAAM,2DAChCL,EACID,GACIM,EAAK,KAAKH,EAAS,QAAQ,IAAI,QAAQ,UAAU,EAAG,QAAQ,UAE/DI,EAAQ,CACb,MAAMD,EAAO,YAAM,OAAO,qBAAM,2DAChCL,EAAqBD,GAAiBM,EAAK,KAAK,IAAK,QAAQ,EAEjE,OAAO,MAAME,EAAQ,eAAeT,EAAM,CACtC,UAAWE,EACX,kBAAAQ,CACR,CAAK,CACL","names":["initOrbite","sfip","dossierOrbite","dossierOrbiteFinal","isElectronMain","electron","__vitePreload","n","path","isNode","OrbitDB","AccessControllers"],"sources":["../../../../node_modules/@constl/ipa/dist/src/orbite.js"],"sourcesContent":["import OrbitDB from \"orbit-db\";\nimport AccessControllers from \"./acc\\u00E8s/index.js\";\nimport { isElectronMain, isNode } from \"wherearewe\";\nexport default async function initOrbite({ sfip, dossierOrbite, }) {\n    let dossierOrbiteFinal = dossierOrbite;\n    if (isElectronMain) {\n        const electron = await import(\"electron\");\n        const path = await import(\"path\");\n        dossierOrbiteFinal =\n            dossierOrbite ||\n                path.join(electron.default.app.getPath(\"userData\"), \"orbite\");\n    }\n    else if (isNode) {\n        const path = await import(\"path\");\n        dossierOrbiteFinal = dossierOrbite || path.join(\".\", \"orbite\");\n    }\n    return await OrbitDB.createInstance(sfip, {\n        directory: dossierOrbiteFinal,\n        AccessControllers,\n    });\n}\n//# sourceMappingURL=orbite.js.map"],"file":"orbite-3f900a8c.js"}