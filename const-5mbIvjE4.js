import{l as C,a as D,A as N,W as I,P as ee,g as re,__tla as te}from"./index-uM_bU_dM.js";import{v as ne,u as oe,__tla as ie}from"./index-aicZefrG.js";let P,F,se=Promise.all([(()=>{try{return te}catch{}})(),(()=>{try{return ie}catch{}})()]).then(async()=>{function J(r,e){if(r.length>=255)throw new TypeError("Alphabet too long");for(var n=new Uint8Array(256),o=0;o<n.length;o++)n[o]=255;for(var s=0;s<r.length;s++){var f=r.charAt(s),m=f.charCodeAt(0);if(n[m]!==255)throw new TypeError(f+" is ambiguous");n[m]=s}var a=r.length,d=r.charAt(0),E=Math.log(a)/Math.log(256),x=Math.log(256)/Math.log(a);function L(t){if(t instanceof Uint8Array||(ArrayBuffer.isView(t)?t=new Uint8Array(t.buffer,t.byteOffset,t.byteLength):Array.isArray(t)&&(t=Uint8Array.from(t))),!(t instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(t.length===0)return"";for(var i=0,l=0,h=0,p=t.length;h!==p&&t[h]===0;)h++,i++;for(var w=(p-h)*x+1>>>0,c=new Uint8Array(w);h!==p;){for(var y=t[h],A=0,u=w-1;(y!==0||A<l)&&u!==-1;u--,A++)y+=256*c[u]>>>0,c[u]=y%a>>>0,y=y/a>>>0;if(y!==0)throw new Error("Non-zero carry");l=A,h++}for(var b=w-l;b!==w&&c[b]===0;)b++;for(var U=d.repeat(i);b<w;++b)U+=r.charAt(c[b]);return U}function v(t){if(typeof t!="string")throw new TypeError("Expected String");if(t.length===0)return new Uint8Array;var i=0;if(t[i]!==" "){for(var l=0,h=0;t[i]===d;)l++,i++;for(var p=(t.length-i)*E+1>>>0,w=new Uint8Array(p);t[i];){var c=n[t.charCodeAt(i)];if(c===255)return;for(var y=0,A=p-1;(c!==0||y<h)&&A!==-1;A--,y++)c+=a*w[A]>>>0,w[A]=c%256>>>0,c=c/256>>>0;if(c!==0)throw new Error("Non-zero carry");h=y,i++}if(t[i]!==" "){for(var u=p-h;u!==p&&w[u]===0;)u++;for(var b=new Uint8Array(l+(p-u)),U=l;u!==p;)b[U++]=w[u++];return b}}}function O(t){var i=v(t);if(i)return i;throw new Error(`Non-${e} character`)}return{encode:L,decodeUnsafe:v,decode:O}}var M=J,z=M;const B=r=>{if(r instanceof Uint8Array&&r.constructor.name==="Uint8Array")return r;if(r instanceof ArrayBuffer)return new Uint8Array(r);if(ArrayBuffer.isView(r))return new Uint8Array(r.buffer,r.byteOffset,r.byteLength);throw new Error("Unknown type, must be binary type")};class W{constructor(e,n,o){this.name=e,this.prefix=n,this.baseEncode=o}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}}class j{constructor(e,n,o){if(this.name=e,this.prefix=n,n.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=n.codePointAt(0),this.baseDecode=o}decode(e){if(typeof e=="string"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(e){return $(this,e)}}class R{constructor(e){this.decoders=e}or(e){return $(this,e)}decode(e){const n=e[0],o=this.decoders[n];if(o)return o.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}}const $=(r,e)=>new R({...r.decoders||{[r.prefix]:r},...e.decoders||{[e.prefix]:e}});class V{constructor(e,n,o,s){this.name=e,this.prefix=n,this.baseEncode=o,this.baseDecode=s,this.encoder=new W(e,n,o),this.decoder=new j(e,n,s)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}}const Z=({name:r,prefix:e,encode:n,decode:o})=>new V(r,e,n,o),T=({prefix:r,name:e,alphabet:n})=>{const{encode:o,decode:s}=z(n,e);return Z({prefix:r,name:e,encode:o,decode:f=>B(s(f))})},k=T({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"});T({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});const q=421,G=290,H=2e3,_=C("libp2p:webrtc-direct:socket");function K(r,e){const{sink:n,source:o}=r,s={remoteAddr:e.remoteAddr,async sink(f){e.signal!=null&&(f=D(f,e.signal));try{await n(f)}catch(m){m.type!=="aborted"&&_.error(m)}},source:e.signal!=null?D(o,e.signal):o,timeline:{open:Date.now()},async close(){if(r.closed)return;const f=Date.now(),m=setTimeout(()=>{if(s.remoteAddr!=null){const{host:a,port:d}=s.remoteAddr.toOptions();_("timeout closing socket to %s:%s after %dms, destroying it manually",a,d,Date.now()-f)}r.closed||r.close().catch(a=>{_.error("could not close socket",a)})},H);try{await r.close()}finally{clearTimeout(m)}}};return r.addEventListener("close",()=>{s.timeline.close==null&&(s.timeline.close=Date.now())},{once:!0}),s}function Q(){throw new Error("WebRTCDirect Servers can not be created in the browser!")}const X=Symbol.for("@libp2p/transport");var S;(function(r){r[r.FATAL_ALL=0]="FATAL_ALL",r[r.NO_FATAL=1]="NO_FATAL"})(S||(S={}));const g=C("libp2p:webrtc-direct");class Y{constructor(e){this.initiatorOptions=e?.initiatorOptions,this.recieverOptions=e?.recieverOptions,this.wrtc=e?.wrtc}get[X](){return!0}get[Symbol.toStringTag](){return"@libp2p/webrtc-direct"}async dial(e,n){const o=await this._connect(e,n),s=K(o,{remoteAddr:e,signal:n.signal});g("new outbound connection %s",s.remoteAddr);const f=await n.upgrader.upgradeOutbound(s);return g("outbound connection %s upgraded",s.remoteAddr),f}async _connect(e,n){if(n.signal?.aborted===!0)throw new N;const o={initiator:!0,trickle:!1,...this.initiatorOptions};return this.wrtc!=null&&(o.wrtc=this.wrtc),await new Promise((s,f)=>{let m;const a=e.toOptions();g("Dialing %s:%s",a.host,a.port);const d=new I(o),E=t=>{const i=t.detail;if(!m){const l=`connection error ${a.host}:${a.port}: ${i.message}`;g.error(l),i.message=l,v(i)}},x=()=>{m=!0,g("connection opened %s:%s",a.host,a.port),v()},L=()=>{g.error("connection aborted %s:%s",a.host,a.port),d.close().finally(()=>{v(new N)})},v=t=>{d.removeEventListener("error",E),d.removeEventListener("ready",x),n.signal?.removeEventListener("abort",L),t!=null?f(t):s(d)};d.addEventListener("error",E,{once:!0}),d.addEventListener("ready",x,{once:!0}),d.addEventListener("close",()=>{d.removeEventListener("error",E)}),n.signal?.addEventListener("abort",L);const O=async t=>{if(t.type!=="offer")return;const i=JSON.stringify(t);let l=a.host;a.family===6&&!l.startsWith("[")&&(l=`[${l}]`);const h=`http://${l}:${a.port}`,p=`/?signal=${k.encode(ne(i))}`,w=h+p;try{const c=await(await re(w)).text();if(c.trim()==="")return;const y=k.decode(c),A=oe(y),u=JSON.parse(A);d.handleSignal(u)}catch(c){await d.close(c),f(c)}};d.addEventListener("signal",t=>{const i=t.detail;O(i).catch(async l=>{await d.close(l)})})})}createListener(e){return Q({...e,receiverOptions:this.recieverOptions,wrtc:this.wrtc})}filter(e){return e=Array.isArray(e)?e:[e],e.filter(n=>n.protoCodes().includes(G)?!1:ee.matches(n.decapsulateCode(q)))}}F=function(r={}){return()=>new Y(r)},P=["/dns4/serveurwebrtcstarconstellation1-julienmalard.b4a.run/tcp/443/wss/p2p-webrtc-star/","/dns4/arcane-springs-02799.herokuapp.com/tcp/443/wss/p2p-webrtc-star/"]});export{P as A,se as __tla,F as w};
